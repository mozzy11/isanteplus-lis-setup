{"version":3,"file":"415.js","mappings":"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","sources":["webpack://@openmrs/esm-active-visits-app/./src/visits-summary/visit-detail-overview.scss?9ee9","webpack://@openmrs/esm-active-visits-app/./src/visits-summary/visits-components/encounter-observations.component.tsx","webpack://@openmrs/esm-active-visits-app/./src/visits-summary/visits-components/encounter-list.component.tsx","webpack://@openmrs/esm-active-visits-app/./src/visits-summary/visits-components/medications-summary.component.tsx","webpack://@openmrs/esm-active-visits-app/./src/visits-summary/visit.resource.ts","webpack://@openmrs/esm-active-visits-app/./src/visits-summary/visits-components/notes-summary.component.tsx","webpack://@openmrs/esm-active-visits-app/./src/visits-summary/visits-components/tests-summary.component.tsx","webpack://@openmrs/esm-active-visits-app/./src/visits-summary/visits-components/visit-summary.component.tsx","webpack://@openmrs/esm-active-visits-app/./src/visits-summary/visit-detail.component.tsx","webpack://@openmrs/esm-active-visits-app/./src/visits-summary/visit-detail-overview.scss"],"sourcesContent":["\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./visit-detail-overview.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./visit-detail-overview.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SkeletonText } from 'carbon-components-react';\nimport { Observation } from '../visit.resource';\nimport styles from '../visit-detail-overview.scss';\n\ninterface EncounterObservationsProps {\n  observations: Array<Observation>;\n}\n\nconst EncounterObservations: React.FC<EncounterObservationsProps> = ({ observations }) => {\n  const { t } = useTranslation();\n\n  const observationsList = useMemo(() => {\n    return (\n      observations &&\n      observations.map((obs: Observation) => {\n        const [question, answer] = obs.display.split(':');\n        return { question, answer };\n      })\n    );\n  }, [observations]);\n\n  return observationsList ? (\n    observationsList.length > 0 ? (\n      <div className={styles.observation}>\n        {observationsList.map((obs, ind) => (\n          <React.Fragment key={ind}>\n            <span className={styles.caption01}>{obs.question}: </span>\n            <span className={`${styles.bodyShort02} ${styles.text01}`}>{obs.answer}</span>\n          </React.Fragment>\n        ))}\n      </div>\n    ) : (\n      <p className={styles.caption01}>{t('noObservationsFound', 'No observations found')}</p>\n    )\n  ) : (\n    <SkeletonText />\n  );\n};\n\nexport default EncounterObservations;\n","import React, { useEffect, useState, useMemo, useRef } from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableExpandHeader,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableExpandRow,\n  TableCell,\n  TableExpandedRow,\n} from 'carbon-components-react';\nimport EncounterObservations from './encounter-observations.component';\nimport styles from '../visit-detail-overview.scss';\nimport { Observation } from '../visit.resource';\nimport { useTranslation } from 'react-i18next';\nimport { useLayoutType } from '@openmrs/esm-framework';\n\ninterface EncounterListProps {\n  encounters: Array<{\n    id: any;\n    time: any;\n    encounterType: string;\n    provider: string;\n    obs: Array<Observation>;\n  }>;\n  visitUuid: string;\n}\n\nconst EncounterListDataTable: React.FC<EncounterListProps> = ({ encounters, visitUuid }) => {\n  const { t } = useTranslation();\n  const layout = useLayoutType();\n  const isDesktop = layout === 'desktop';\n  const [headerWidth, setHeaderWidth] = useState(0);\n  const headerRef = useRef(null);\n\n  const headerData = useMemo(\n    () => [\n      {\n        id: 1,\n        header: t('time', 'Time'),\n        key: 'time',\n      },\n      {\n        id: 2,\n        header: t('encounterType', 'Encounter Type'),\n        key: 'encounterType',\n      },\n      {\n        id: 3,\n        header: t('provider', 'Provider'),\n        key: 'provider',\n      },\n    ],\n    [t],\n  );\n\n  useEffect(() => {\n    setHeaderWidth(headerRef?.current?.clientWidth);\n    const handler = () => setHeaderWidth(headerRef?.current?.clientWidth);\n    window.addEventListener('resize', handler);\n    return () => window.removeEventListener('resize', handler);\n  }, []);\n\n  return encounters.length !== 0 ? (\n    <DataTable rows={encounters} headers={headerData}>\n      {({ rows, headers, getHeaderProps, getRowProps, getTableProps }) => {\n        return (\n          <TableContainer>\n            <Table className={styles.customTable} {...getTableProps()} size={!isDesktop ? 'normal' : 'short'}>\n              <TableHead>\n                <TableRow>\n                  <TableExpandHeader />\n                  {headers.map((header, ind) =>\n                    ind === 0 ? (\n                      <TableHeader id={`header_${visitUuid}_${ind}`} ref={headerRef} {...getHeaderProps({ header })}>\n                        {header.header}\n                      </TableHeader>\n                    ) : (\n                      <TableHeader id={`header_${visitUuid}_${ind}`} {...getHeaderProps({ header })}>\n                        {header.header}\n                      </TableHeader>\n                    ),\n                  )}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row, ind) => (\n                  <React.Fragment key={row.id}>\n                    <TableExpandRow {...getRowProps({ row })}>\n                      {row.cells.map((cell) => (\n                        <TableCell key={cell.id}>{cell.value}</TableCell>\n                      ))}\n                    </TableExpandRow>\n                    {row.isExpanded && (\n                      <TableExpandedRow\n                        className={styles.expandedRow}\n                        style={{ paddingLeft: isDesktop ? '3rem' : '4rem' }}\n                        colSpan={headers.length + 2}>\n                        <div style={{ marginLeft: headerWidth }}>\n                          <EncounterObservations observations={encounters[ind].obs} />\n                        </div>\n                      </TableExpandedRow>\n                    )}\n                  </React.Fragment>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        );\n      }}\n    </DataTable>\n  ) : (\n    <div className={styles.encounterEmptyState}>\n      <h4 className={styles.productiveHeading02}>{t('noEncountersFound', 'No encounters found')}</h4>\n      <p className={`${styles.bodyLong01} ${styles.text02}`}>\n        {t('thereIsNoInformationToDisplayHere', 'There is no information to display here')}\n      </p>\n    </div>\n  );\n};\n\nexport default EncounterListDataTable;\n","import React from 'react';\nimport capitalize from 'lodash-es/capitalize';\nimport { useTranslation } from 'react-i18next';\nimport { formatTime, parseDate } from '@openmrs/esm-framework';\nimport { OrderItem, getDosage } from '../visit.resource';\nimport styles from '../visit-detail-overview.scss';\n\ninterface MedicationSummaryProps {\n  medications: Array<OrderItem>;\n}\n\nconst MedicationSummary: React.FC<MedicationSummaryProps> = ({ medications }) => {\n  const { t } = useTranslation();\n\n  return (\n    <React.Fragment>\n      {medications.length > 0 ? (\n        medications.map(\n          (medication: OrderItem, ind) =>\n            medication.order?.dose &&\n            medication.order?.orderType?.display === 'Drug Order' && (\n              <React.Fragment key={ind}>\n                <p className={`${styles.bodyLong01} ${styles.medicationBlock}`}>\n                  <strong>{capitalize(medication.order.drug?.name)}</strong> &mdash;{' '}\n                  {medication.order.doseUnits?.display} &mdash; {medication.order.route?.display}\n                  <br />\n                  <span className={styles.label01}>{t('dose', 'Dose').toUpperCase()}</span>{' '}\n                  <strong>{getDosage(medication.order.drug?.strength, medication.order.dose).toLowerCase()}</strong>{' '}\n                  &mdash; {medication.order.frequency?.display} &mdash;{' '}\n                  {!medication.order.duration\n                    ? t('orderIndefiniteDuration', 'Indefinite duration')\n                    : t('orderDurationAndUnit', 'for {duration} {durationUnit}', {\n                        duration: medication.order.duration,\n                        durationUnit: medication.order.durationUnits?.display,\n                      })}\n                  <br />\n                  <span className={styles.label01}>{t('refills', 'Refills').toUpperCase()}</span>{' '}\n                  {medication.order.numRefills}\n                </p>\n                <p className={styles.caption01} style={{ color: '#525252' }}>\n                  {formatTime(parseDate(medication.order.dateActivated))} &middot;{' '}\n                  {medication.provider && medication.provider.name} &middot;{' '}\n                  {medication.provider && medication.provider.role}\n                </p>\n              </React.Fragment>\n            ),\n        )\n      ) : (\n        <p className={`${styles.bodyLong01} ${styles.text02}`}>{t('noMedicationsFound', 'No medications found')}</p>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default MedicationSummary;\n","import { openmrsFetch, Visit } from '@openmrs/esm-framework';\nimport useSWR from 'swr';\n\nexport interface Encounter {\n  uuid: string;\n  encounterDateTime: string;\n  encounterProviders: Array<{\n    uuid: string;\n    display: string;\n    encounterRole: {\n      uuid: string;\n      display: string;\n    };\n    provider: {\n      uuid: string;\n      person: {\n        uuid: string;\n        display: string;\n      };\n    };\n  }>;\n  encounterType: {\n    uuid: string;\n    display: string;\n  };\n  obs: Array<Observation>;\n  orders: Array<Order>;\n}\n\nexport interface EncounterProvider {\n  uuid: string;\n  display: string;\n  encounterRole: {\n    uuid: string;\n    display: string;\n  };\n  provider: {\n    uuid: string;\n    person: {\n      uuid: string;\n      display: string;\n    };\n  };\n}\n\nexport interface Observation {\n  uuid: string;\n  concept: {\n    uuid: string;\n    display: string;\n    conceptClass: {\n      uuid: string;\n      display: string;\n    };\n  };\n  display: string;\n  groupMembers: null | Array<{\n    uuid: string;\n    concept: {\n      uuid: string;\n      display: string;\n    };\n    value: {\n      uuid: string;\n      display: string;\n    };\n  }>;\n  value: any;\n  obsDatetime: string;\n}\n\nexport interface Order {\n  uuid: string;\n  dateActivated: string;\n  dose: number;\n  doseUnits: {\n    uuid: string;\n    display: string;\n  };\n  drug: {\n    uuid: string;\n    name: string;\n    strength: string;\n  };\n  duration: number;\n  durationUnits: {\n    uuid: string;\n    display: string;\n  };\n  frequency: {\n    uuid: string;\n    display: string;\n  };\n  numRefills: number;\n  orderer: {\n    uuid: string;\n    person: {\n      uuid: string;\n      display: string;\n    };\n  };\n  orderType: {\n    uuid: string;\n    display: string;\n  };\n  route: {\n    uuid: string;\n    display: string;\n  };\n}\n\nexport interface Note {\n  note: string;\n  provider: {\n    name: string;\n    role: string;\n  };\n  time: string;\n}\n\nexport interface OrderItem {\n  order: Order;\n  provider: {\n    name: string;\n    role: string;\n  };\n}\n\nexport function useVisit(visitUuid: string) {\n  const customRepresentation =\n    'custom:(uuid,encounters:(uuid,encounterDatetime,' +\n    'orders:(uuid,dateActivated,' +\n    'drug:(uuid,name,strength),doseUnits:(uuid,display),' +\n    'dose,route:(uuid,display),frequency:(uuid,display),' +\n    'duration,durationUnits:(uuid,display),numRefills,' +\n    'orderType:(uuid,display),orderer:(uuid,person:(uuid,display))),' +\n    'obs:(uuid,concept:(uuid,display,conceptClass:(uuid,display)),' +\n    'display,groupMembers:(uuid,concept:(uuid,display),' +\n    'value:(uuid,display)),value),encounterType:(uuid,display),' +\n    'encounterProviders:(uuid,display,encounterRole:(uuid,display),' +\n    'provider:(uuid,person:(uuid,display)))),visitType:(uuid,name,display),startDatetime';\n\n  const { data, error, isValidating } = useSWR<{ data: Visit }, Error>(\n    `/ws/rest/v1/visit/${visitUuid}?v=${customRepresentation}`,\n    openmrsFetch,\n  );\n\n  return {\n    visit: data ? data.data : null,\n    isError: error,\n    isLoading: !data && !error,\n    isValidating,\n  };\n}\n\nexport function getDosage(strength: string, doseNumber: number) {\n  if (!strength || !doseNumber) {\n    return '';\n  }\n\n  const i = strength.search(/\\D/);\n  const strengthQuantity = parseInt(strength.substring(0, i));\n\n  const concentrationStartIndex = strength.search(/\\//);\n\n  let strengthUnits = strength.substring(i);\n\n  if (concentrationStartIndex >= 0) {\n    strengthUnits = strength.substring(i, concentrationStartIndex);\n    const j = strength.substring(concentrationStartIndex + 1).search(/\\D/);\n    const concentrationQuantity = parseInt(strength.substr(concentrationStartIndex + 1, j));\n    const concentrationUnits = strength.substring(concentrationStartIndex + 1 + j);\n    return `${doseNumber} ${strengthUnits} (${\n      (doseNumber / strengthQuantity) * concentrationQuantity\n    } ${concentrationUnits})`;\n  } else {\n    return `${strengthQuantity * doseNumber} ${strengthUnits}`;\n  }\n}\n","import React from 'react';\nimport styles from '../visit-detail-overview.scss';\nimport { Note } from '../visit.resource';\nimport { useTranslation } from 'react-i18next';\n\ninterface NotesSummaryProps {\n  notes: Array<Note>;\n}\n\nconst NotesSummary: React.FC<NotesSummaryProps> = ({ notes }) => {\n  const { t } = useTranslation();\n\n  return (\n    <React.Fragment>\n      {notes.length > 0 ? (\n        notes.map((note, ind) => (\n          <React.Fragment key={ind}>\n            <p className={`${styles.medicationBlock} ${styles.bodyLong01}`}>{note.note}</p>\n            <p className={styles.caption01} style={{ color: '#525252' }}>\n              {note.time} &middot; {note.provider.name} &middot; {note.provider.role}\n            </p>\n          </React.Fragment>\n        ))\n      ) : (\n        <p className={`${styles.bodyLong01} ${styles.text02}`}>{t('noNotesFound', 'No notes found')}</p>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default NotesSummary;\n","import React, { useMemo } from 'react';\nimport { ExtensionSlot } from '@openmrs/esm-framework';\nimport { Encounter } from '../visit.resource';\nimport styles from '../visit-detail-overview.scss';\n\nconst TestsSummary = ({ patientUuid, encounters }: { patientUuid: string; encounters: Array<Encounter> }) => {\n  const filter = useMemo(() => {\n    const encounterIds = encounters.map((e) => `Encounter/${e.uuid}`);\n    return ([entry]) => {\n      return encounterIds.includes(entry.encounter.reference);\n    };\n  }, [encounters]);\n\n  return (\n    <div className={`${styles.bodyLong01} ${styles.testSummaryExtension}`}>\n      <ExtensionSlot extensionSlotName=\"test-results-filtered-overview\" state={{ filter, patientUuid }} />\n    </div>\n  );\n};\n\nexport default TestsSummary;\n","import React, { useState, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Tab, Tabs } from 'carbon-components-react';\nimport { Order, Encounter, Note, Observation, OrderItem } from '../visit.resource';\nimport styles from '../visit-detail-overview.scss';\nimport MedicationSummary from './medications-summary.component';\nimport NotesSummary from './notes-summary.component';\nimport TestsSummary from './tests-summary.component';\nimport { OpenmrsResource, formatTime, parseDate } from '@openmrs/esm-framework';\n\ninterface DiagnosisItem {\n  diagnosis: string;\n  order: string;\n}\n\ninterface VisitSummaryProps {\n  encounters: Array<Encounter | OpenmrsResource>;\n  patientUuid: string;\n}\n\nconst VisitSummary: React.FC<VisitSummaryProps> = ({ encounters, patientUuid }) => {\n  const { t } = useTranslation();\n  const [tabSelected, setSelectedTab] = useState(0);\n\n  const [diagnoses, notes, medications]: [Array<DiagnosisItem>, Array<Note>, Array<OrderItem>] = useMemo(() => {\n    // Medication Tab\n    const medications: Array<OrderItem> = [];\n    // Diagnoses in a Visit\n    const diagnoses: Array<DiagnosisItem> = [];\n    // Notes Tab\n    const notes: Array<Note> = [];\n\n    // Iterating through every Encounter\n    encounters.forEach((enc: Encounter) => {\n      // Orders of every encounter put in a single array.\n      medications.push(\n        ...enc.orders.map((order: Order) => ({\n          order,\n          provider: {\n            name: enc.encounterProviders.length ? enc.encounterProviders[0].provider.person.display : '',\n            role: enc.encounterProviders.length ? enc.encounterProviders[0].encounterRole.display : '',\n          },\n        })),\n      );\n\n      // Check for Visit Diagnoses and Notes\n      if (enc.encounterType.display === 'Visit Note') {\n        enc.obs.forEach((obs: Observation) => {\n          if (obs.concept.display === 'Visit Diagnoses') {\n            // Putting all the diagnoses in a single array.\n            diagnoses.push({\n              diagnosis: obs.groupMembers.find((mem) => mem.concept.display === 'PROBLEM LIST').value.display,\n              order: obs.groupMembers.find((mem) => mem.concept.display === 'Diagnosis order').value.display,\n            });\n          } else if (obs.concept.display === 'Text of encounter note') {\n            // Putting all notes in a single array.\n            notes.push({\n              note: obs.value,\n              provider: {\n                name: enc.encounterProviders.length ? enc.encounterProviders[0].provider.person.display : '',\n                role: enc.encounterProviders.length ? enc.encounterProviders[0].encounterRole.display : '',\n              },\n              time: formatTime(parseDate(obs.obsDatetime)),\n            });\n          }\n        });\n      }\n    });\n    return [diagnoses, notes, medications];\n  }, [encounters]);\n\n  return (\n    <div className={styles.summaryContainer}>\n      <p className={styles.productiveHeading01}>{t('diagnoses', 'Diagnoses')}</p>\n      <div className={`${styles.caption01} ${styles.diagnosesList}`}>\n        {diagnoses.length > 0 ? (\n          diagnoses.map((d: DiagnosisItem, ind) => (\n            <span\n              key={ind}\n              className={`${styles.diagnosis} ${\n                d.order === 'Primary' ? styles.primaryDiagnose : styles.secondaryDiagnose\n              }`}>\n              {d.diagnosis}\n            </span>\n          ))\n        ) : (\n          <span className={`${styles.bodyLong01} ${styles.text02}`} style={{ marginBottom: '0.5rem' }}>\n            {t('noDiagnosesFound', 'No diagnoses found')}\n          </span>\n        )}\n      </div>\n      <Tabs className={styles.verticalTabs}>\n        <Tab\n          className={`${styles.tab} ${styles.bodyLong01} ${tabSelected === 0 && styles.selectedTab}`}\n          onClick={() => setSelectedTab(0)}\n          id=\"notes-tab\"\n          label={t('notes', 'Notes')}>\n          <NotesSummary notes={notes} />\n        </Tab>\n        <Tab\n          className={`${styles.tab} ${tabSelected === 1 && styles.selectedTab}`}\n          onClick={() => setSelectedTab(1)}\n          id=\"tests-tab\"\n          label={t('tests', 'Tests')}>\n          <TestsSummary patientUuid={patientUuid} encounters={encounters as Array<Encounter>} />\n        </Tab>\n        <Tab\n          className={`${styles.tab} ${tabSelected === 2 && styles.selectedTab}`}\n          onClick={() => setSelectedTab(2)}\n          id=\"tab-3\"\n          label={t('medications', 'Medications')}>\n          <MedicationSummary medications={medications} />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default VisitSummary;\n","import React, { useState, useMemo } from 'react';\nimport { Button, DataTableSkeleton } from 'carbon-components-react';\nimport { useTranslation } from 'react-i18next';\nimport { Encounter, useVisit } from './visit.resource';\nimport styles from './visit-detail-overview.scss';\nimport EncounterList from './visits-components/encounter-list.component';\nimport VisitSummary from './visits-components/visit-summary.component';\nimport { formatTime, formatDatetime, parseDate } from '@openmrs/esm-framework';\n\ninterface VisitDetailComponentProps {\n  visitUuid: string;\n  patientUuid: string;\n}\n\nconst VisitDetailComponent: React.FC<VisitDetailComponentProps> = ({ visitUuid, patientUuid }) => {\n  const { t } = useTranslation();\n  const [listView, setView] = useState(true);\n  const { visit, isError, isLoading, isValidating } = useVisit(visitUuid);\n\n  const encounters = useMemo(\n    () =>\n      visit\n        ? visit?.encounters?.map((encounter: Encounter) => ({\n            id: encounter.uuid,\n            time: formatTime(parseDate(encounter.encounterDateTime)),\n            encounterType: encounter.encounterType.display,\n            provider: encounter.encounterProviders.length > 0 ? encounter.encounterProviders[0].display : '',\n            obs: encounter.obs,\n          }))\n        : [],\n    [visit],\n  );\n\n  if (isLoading) {\n    return <DataTableSkeleton role=\"progressbar\" />;\n  }\n  if (visit) {\n    return (\n      <div className={styles.visitsDetailWidgetContainer}>\n        <div className={styles.visitsDetailHeaderContainer}>\n          <h4 className={styles.productiveHeading02}>\n            {visit?.visitType?.display}\n            <br />\n            <p className={`${styles.bodyLong01} ${styles.text02}`}>{formatDatetime(parseDate(visit?.startDatetime))}</p>\n          </h4>\n          <div className={styles.toggleButtons}>\n            <Button\n              className={`${styles.toggle} ${listView ? styles.toggleActive : ''}`}\n              size=\"small\"\n              kind=\"ghost\"\n              onClick={() => setView(true)}>\n              {t('allEncounters', 'All Encounters')}\n            </Button>\n            <Button\n              className={`${styles.toggle} ${!listView ? styles.toggleActive : ''}`}\n              size=\"small\"\n              kind=\"ghost\"\n              onClick={() => setView(false)}>\n              {t('visitSummary', 'Visit Summary')}\n            </Button>\n          </div>\n        </div>\n        {listView && visit?.encounters && <EncounterList visitUuid={visit.uuid} encounters={encounters} />}\n        {!listView && <VisitSummary encounters={visit.encounters} patientUuid={patientUuid} />}\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default VisitDetailComponent;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;font:inherit;font-size:100%;vertical-align:baseline;border:0}button,select,input,textarea{font-family:inherit;border-radius:0}input[type=text]::-ms-clear{display:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}body{line-height:1}sup{vertical-align:super}sub{vertical-align:sub}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:\\\"\\\"}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}button{margin:0}html{font-size:100%}body{font-weight:400;font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}code{font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace}strong{font-weight:600}@media screen and (-ms-high-contrast: active){svg{fill:ButtonText}}h1{font-size:2.625rem;font-weight:300;line-height:1.199;letter-spacing:0}h2{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}h3{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}h4{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}h5{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}h6{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}p{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}a{color:#0f62fe}em{font-style:italic}@keyframes -esm-active-visits__visit-detail-overview__skeleton___vjxGq{0%{transform:scaleX(0);transform-origin:left;opacity:.3}20%{transform:scaleX(1);transform-origin:left;opacity:1}28%{transform:scaleX(1);transform-origin:right}51%{transform:scaleX(0);transform-origin:right}58%{transform:scaleX(0);transform-origin:right}82%{transform:scaleX(1);transform-origin:right}83%{transform:scaleX(1);transform-origin:left}96%{transform:scaleX(0);transform-origin:left}100%{transform:scaleX(0);transform-origin:left;opacity:.3}}:root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-active-visits__visit-detail-overview__productiveHeading01___7mAw1{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.-esm-active-visits__visit-detail-overview__productiveHeading02___5-t\\\\+w{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-active-visits__visit-detail-overview__bodyLong01___3DCLv{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-active-visits__visit-detail-overview__caption01___yCfJc{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-active-visits__visit-detail-overview__bodyShort02___fuXhU{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.-esm-active-visits__visit-detail-overview__text02___hhPqo{color:#525252}.-esm-active-visits__visit-detail-overview__text01___8ug6t{color:#161616}.-esm-active-visits__visit-detail-overview__container___mkGcD{display:flex;flex-direction:column;align-items:center;justify-content:flex-start}.-esm-active-visits__visit-detail-overview__encounterHeading___2xolA{text-align:left;width:100%;margin:0 1rem 1.3125rem 1rem;color:#161616}.-esm-active-visits__visit-detail-overview__visitsDetailWidgetContainer___ZvlEp{background-color:#fff;width:100%;border:1px solid #e0e0e0}.-esm-active-visits__visit-detail-overview__visitsDetailHeaderContainer___fRjET{display:flex;justify-content:space-between;align-items:center;padding:.75rem 0 .75rem 1rem;background-color:#fff}.-esm-active-visits__visit-detail-overview__visitsDetailHeaderContainer___fRjET>h4:after{content:\\\"\\\";display:block;width:2rem;padding-top:.188rem;border-bottom:.375rem solid #007d79}.-esm-active-visits__visit-detail-overview__toggleButtons___6i420{margin:0 1rem;height:2.5rem}.-esm-active-visits__visit-detail-overview__toggle___1CMPj{border:1px solid #a6c8ff}.-esm-active-visits__visit-detail-overview__toggle___1CMPj:hover{background-color:#edf5ff}.-esm-active-visits__visit-detail-overview__toggle___1CMPj:active,.-esm-active-visits__visit-detail-overview__toggle___1CMPj:focus{box-shadow:none;background-color:#edf5ff}.-esm-active-visits__visit-detail-overview__toggleActive___Z\\\\+gk6{background-color:#edf5ff;border:1px solid #0f62fe}.-esm-active-visits__visit-detail-overview__toggleActive___Z\\\\+gk6:active,.-esm-active-visits__visit-detail-overview__toggleActive___Z\\\\+gk6:focus{box-shadow:none;border:1px solid #0f62fe;background-color:#edf5ff}.-esm-active-visits__visit-detail-overview__toggle___1CMPj:first-of-type{border-radius:.25rem 0 0 .25rem}.-esm-active-visits__visit-detail-overview__toggle___1CMPj:last-of-type{border-radius:0 .25rem .25rem 0}.-esm-active-visits__visit-detail-overview__customTable___8OnwU tr[data-parent-row]:nth-child(odd) td{background-color:#fff}.-esm-active-visits__visit-detail-overview__customTable___8OnwU tbody tr[data-parent-row]:nth-child(even) td{background-color:#f4f4f4}.-esm-active-visits__visit-detail-overview__encounterEmptyState___QNHmv{text-align:center;margin:0 1rem 1rem 1rem}.-esm-active-visits__visit-detail-overview__expandedRow___o7vyJ>td{padding:inherit !important}.-esm-active-visits__visit-detail-overview__expandedRow___o7vyJ>td>div{max-height:max-content !important}.-esm-active-visits__visit-detail-overview__observation___Eku\\\\+V{display:grid;grid-template-columns:max-content auto;grid-gap:.5rem;margin:.5rem 0}.-esm-active-visits__visit-detail-overview__observation___Eku\\\\+V>span{align-self:center}.-esm-active-visits__visit-detail-overview__summaryContainer___6ueAF{margin-left:1rem;display:grid;grid-template-columns:max-content auto}.-esm-active-visits__visit-detail-overview__flexSections___K3zUQ{display:flex}.-esm-active-visits__visit-detail-overview__verticalTabs___8bwHK{margin:1rem 0}.-esm-active-visits__visit-detail-overview__verticalTabs___8bwHK>ul{flex-direction:column !important}.-esm-active-visits__visit-detail-overview__tab___ZEwef{margin-left:0 !important}.-esm-active-visits__visit-detail-overview__tab___ZEwef>button{border-bottom:0 !important;border-left:3px solid #e0e0e0 !important}.-esm-active-visits__visit-detail-overview__tab___ZEwef>button,.-esm-active-visits__visit-detail-overview__tab___ZEwef>button:focus,.-esm-active-visits__visit-detail-overview__tab___ZEwef>button:active{outline:0 !important;outline-offset:0 !important}.-esm-active-visits__visit-detail-overview__selectedTab___RoUbN>button{border-left:3px solid #007d79 !important;border-bottom:0 !important;font-weight:600 !important}.-esm-active-visits__visit-detail-overview__tabContent___U1Tpl{border-top:1px solid #e0e0e0;padding:1rem 0;width:70%}.-esm-active-visits__visit-detail-overview__medicationBlock___4eXwy{background-color:#f4f4f4;padding:.625rem 6.75rem .75rem 1.063rem;margin-top:1.5rem;width:100% !important}.-esm-active-visits__visit-detail-overview__medicationBlock___4eXwy:first-child{margin-top:0}.-esm-active-visits__visit-detail-overview__diagnosesList___Q28KT{display:flex;padding-bottom:.5rem;margin:0 1rem;border-bottom:1px solid #e0e0e0}.-esm-active-visits__visit-detail-overview__diagnosis___Mlep4{border-radius:12px;height:1.5rem;display:flex;align-items:center;padding:0 .5rem;margin:0 .5rem .5rem 0}.-esm-active-visits__visit-detail-overview__primaryDiagnose___lmzUT{background-color:#d0e2ff;color:#0043ce}.-esm-active-visits__visit-detail-overview__secondaryDiagnose___a7ihp{background-color:#ffd7d9;color:#a2191f}.-esm-active-visits__visit-detail-overview__testSummaryExtension___y9BEk p{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px;color:#525252}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_css--reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_font-family.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/icons/mixins.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_helper-mixins.scss\",\"webpack://./src/root.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./src/visits-summary/visit-detail-overview.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n@import './vendor/@carbon/elements/scss/type/reset';\\n@import './vendor/@carbon/elements/scss/icons/mixins';\\n\\n/// Resets default browser styling\\n/// @access public\\n/// @group global-reset\\n@mixin reset {\\n  @if variable-exists(css--reset) == false or $css--reset == false {\\n    box-sizing: border-box;\\n    margin: 0;\\n    padding: 0;\\n    font-size: 100%;\\n    font-family: inherit;\\n    vertical-align: baseline;\\n    border: 0;\\n\\n    *,\\n    *::before,\\n    *::after {\\n      box-sizing: inherit;\\n    }\\n  }\\n}\\n\\n@include exports('css--reset') {\\n  @if variable-exists(css--reset) == false or $css--reset == true {\\n    // http://cssreset.com/scripts/eric-meyer-reset-css/\\n    html,\\n    body,\\n    div,\\n    span,\\n    applet,\\n    object,\\n    iframe,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p,\\n    blockquote,\\n    pre,\\n    a,\\n    abbr,\\n    acronym,\\n    address,\\n    big,\\n    cite,\\n    code,\\n    del,\\n    dfn,\\n    em,\\n    img,\\n    ins,\\n    kbd,\\n    q,\\n    s,\\n    samp,\\n    small,\\n    strike,\\n    strong,\\n    sub,\\n    sup,\\n    tt,\\n    var,\\n    b,\\n    u,\\n    i,\\n    center,\\n    dl,\\n    dt,\\n    dd,\\n    ol,\\n    ul,\\n    li,\\n    fieldset,\\n    form,\\n    label,\\n    legend,\\n    table,\\n    caption,\\n    tbody,\\n    tfoot,\\n    thead,\\n    tr,\\n    th,\\n    td,\\n    article,\\n    aside,\\n    canvas,\\n    details,\\n    embed,\\n    figure,\\n    figcaption,\\n    footer,\\n    header,\\n    hgroup,\\n    menu,\\n    nav,\\n    output,\\n    ruby,\\n    section,\\n    summary,\\n    time,\\n    mark,\\n    audio,\\n    video {\\n      margin: 0;\\n      padding: 0;\\n      font: inherit;\\n      font-size: 100%;\\n      vertical-align: baseline;\\n      border: 0;\\n    }\\n\\n    // Chrome 62 fix\\n    button,\\n    select,\\n    input,\\n    textarea {\\n      font-family: inherit;\\n      border-radius: 0;\\n    }\\n\\n    input[type='text']::-ms-clear {\\n      display: none;\\n    }\\n\\n    /* HTML5 display-role reset for older browsers */\\n    article,\\n    aside,\\n    details,\\n    figcaption,\\n    figure,\\n    footer,\\n    header,\\n    hgroup,\\n    main,\\n    menu,\\n    nav,\\n    section {\\n      display: block;\\n    }\\n\\n    body {\\n      line-height: 1;\\n    }\\n\\n    sup {\\n      vertical-align: super;\\n    }\\n\\n    sub {\\n      vertical-align: sub;\\n    }\\n\\n    ol,\\n    ul {\\n      list-style: none;\\n    }\\n\\n    blockquote,\\n    q {\\n      quotes: none;\\n    }\\n\\n    blockquote::before,\\n    blockquote::after,\\n    q::before,\\n    q::after {\\n      content: '';\\n    }\\n\\n    table {\\n      border-collapse: collapse;\\n      border-spacing: 0;\\n    }\\n\\n    * {\\n      box-sizing: border-box;\\n    }\\n\\n    // Fix to remove added margins on buttons in safari (see #5155)\\n    button {\\n      margin: 0;\\n    }\\n\\n    @include carbon--type-reset;\\n    @include carbon--icons;\\n  }\\n}\\n\\n@include exports('css--default-type') {\\n  @if variable-exists(css--default-type) == false or $css--default-type == true\\n  {\\n    @include carbon--default-type;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/convert';\\n@import 'font-family';\\n@import 'styles';\\n\\n/// Include a type reset for a given body and mono font family\\n/// @param {String} $body-font-family [carbon--font-family('sans')] - The font family used on the `<body>` element\\n/// @param {String} $mono-font-family [carbon--font-family('mono')] - The font family used on elements that require mono fonts, like the `<code>` element\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-reset(\\n  // TODO: remove in next major release. This has been replaced with 100%\\n  $base-font-size: $carbon--base-font-size,\\n  $body-font-family: carbon--font-family('sans'),\\n  $mono-font-family: carbon--font-family('mono')\\n) {\\n  html {\\n    font-size: 100%;\\n  }\\n\\n  body {\\n    @include carbon--font-weight('regular');\\n\\n    font-family: $body-font-family;\\n    text-rendering: optimizeLegibility;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n  }\\n\\n  code {\\n    font-family: $mono-font-family;\\n  }\\n\\n  strong {\\n    @include carbon--font-weight('semibold');\\n  }\\n}\\n\\n/// Include default type styles\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--default-type {\\n  h1 {\\n    @include carbon--type-style('productive-heading-06');\\n  }\\n\\n  h2 {\\n    @include carbon--type-style('productive-heading-05');\\n  }\\n\\n  h3 {\\n    @include carbon--type-style('productive-heading-04');\\n  }\\n\\n  h4 {\\n    @include carbon--type-style('productive-heading-03');\\n  }\\n\\n  h5 {\\n    @include carbon--type-style('productive-heading-02');\\n  }\\n\\n  h6 {\\n    @include carbon--type-style('productive-heading-01');\\n  }\\n\\n  p {\\n    @include carbon--type-style('body-long-02');\\n  }\\n\\n  a {\\n    @if global-variable-exists('carbon--theme') and\\n      map-has-key($carbon--theme, 'link-01')\\n    {\\n      color: map-get($carbon--theme, 'link-01');\\n    } @else {\\n      color: #0062fe;\\n    }\\n  }\\n\\n  em {\\n    font-style: italic;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\\n/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-families: (\\n  'mono':\\n    unquote(\\n      \\\"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\\\"\\n    ),\\n  'sans': unquote(\\\"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-condensed':\\n    unquote(\\\"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-hebrew':\\n    unquote(\\n      \\\"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\\\"\\n    ),\\n  'serif': unquote(\\\"'IBM Plex Serif', 'Georgia', Times, serif\\\"),\\n) !default;\\n\\n/// Get the font-family for an IBM Plex font\\n/// @param {String} $name\\n/// @return {String}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-family($name) {\\n  @return map-get($carbon--font-families, $name);\\n}\\n\\n/// Include the `font-family` definition for the given name in your selector\\n/// @param {String} $name\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-family($name) {\\n  font-family: carbon--font-family($name);\\n}\\n\\n/// Suggested font weights to be used in product\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-weights: (\\n  'light': 300,\\n  'regular': 400,\\n  'semibold': 600,\\n) !default;\\n\\n/// Retrieve the font-weight value for a given name\\n/// @param {String} $weight\\n/// @return {Number}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-weight($weight) {\\n  @return map-get($carbon--font-weights, $weight);\\n}\\n\\n/// Set the `font-weight` property with the value for a given name\\n/// @param {String} $weight\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-weight($weight) {\\n  font-weight: carbon--font-weight($weight);\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Makes SVGs accessible in high contrast mode\\n/// @link https://github.com/IBM/carbon-elements/issues/345#issuecomment-466577293 Carbon-elements #345\\n/// @access public\\n/// @group @carbon/icons\\n@mixin carbon--icons {\\n  @media screen and (-ms-high-contrast: active) {\\n    svg {\\n      fill: ButtonText;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n//----------------------------------------------\\n// Mixins\\n// ---------------------------------------------\\n//\\n//   Category             ||  Description\\n//   ===========================================\\n//   Misc                 ||  General helper @mixins\\n//   Deprecated           ||  Not used anymore\\n//   ===========================================\\n\\n//----------------------------------------------\\n// Misc\\n// ---------------------------------------------\\n\\n@import 'vars';\\n@import 'css--reset';\\n@import 'typography';\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n\\n/// Adds text overflow styling\\n/// @access public\\n/// @param {Number} $width [false] - Value of width if you want to set width, else nothing\\n/// @example @include text-overflow(300px);\\n/// @group global-helpers\\n@mixin text-overflow($width: false) {\\n  display: block;\\n  overflow-x: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n\\n  // apply a width if width parameter exists\\n  @if ($width) {\\n    width: $width;\\n  }\\n}\\n\\n/// Adds placeholder text color\\n/// @access public\\n/// @example @include placeholder-colors;\\n/// @group global-helpers\\n@mixin placeholder-colors {\\n  color: $text-05;\\n  opacity: 1;\\n}\\n\\n/// Adds box shadow\\n/// @access public\\n/// @example @include box-shadow;\\n/// @group global-helpers\\n@mixin box-shadow {\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\\n}\\n\\n/// Adds outline styles depending on specific type\\n/// @access public\\n/// @param {String} $type ['border'] - Type of outline from: `border`, `blurred`, `outline`, `invalid`, `reset`\\n/// @example @include focus-outline('outline');\\n/// @group global-helpers\\n@mixin focus-outline($type: 'border') {\\n  @if ($type == 'border') {\\n    outline: 1px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'blurred') {\\n    outline: 1px solid transparent;\\n    box-shadow: 0 0 0 3px $focus;\\n  }\\n\\n  @if ($type == 'outline') {\\n    outline: 2px solid $focus;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'outline-compat') {\\n    box-sizing: border-box;\\n    border: 2px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      border-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'invalid') {\\n    outline: 2px solid $support-01;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'reset') {\\n    outline: 2px solid transparent;\\n    outline-offset: -2px;\\n  }\\n}\\n\\n/// Adds rotational transformation\\n/// @access public\\n/// @param {Number} $deg - How many degrees to rotate\\n/// @param {Number} $speed - Speed of rotation\\n/// @param {Value} $origin [center] - `transform-origin`\\n/// @example @include rotate(90deg, 300ms);\\n/// @group global-helpers\\n@mixin rotate($deg, $speed, $origin: center) {\\n  transform: rotate($deg);\\n  transform-origin: $origin;\\n  transition: transform $speed;\\n}\\n\\n/// Adds styles to hide content\\n/// @access public\\n/// @group global-helpers\\n@mixin hidden {\\n  position: absolute;\\n  width: 1px;\\n  height: 1px;\\n  margin: -1px;\\n  padding: 0;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  border: 0;\\n  visibility: inherit;\\n  clip: rect(0, 0, 0, 0);\\n}\\n\\n/// Resets button styles\\n/// @access public\\n/// @param {Bool} $width [true] - Sets width to 100% if true\\n/// @example @include button-reset($width: false);\\n/// @group global-helpers\\n@mixin button-reset($width: true) {\\n  @include reset;\\n\\n  display: inline-block;\\n  padding: 0;\\n  background: none;\\n  border: 0;\\n  cursor: pointer;\\n  appearance: none;\\n\\n  @if ($width == true) {\\n    width: 100%;\\n  }\\n\\n  &::-moz-focus-inner {\\n    border: 0;\\n  }\\n}\\n\\n/// Skeleton loading animation\\n/// @access public\\n/// @example @include skeleton;\\n/// @group global-helpers\\n@mixin skeleton {\\n  position: relative;\\n  padding: 0;\\n  background: $skeleton-01;\\n  border: none;\\n  box-shadow: none;\\n  pointer-events: none;\\n\\n  &:hover,\\n  &:focus,\\n  &:active {\\n    border: none;\\n    outline: none;\\n    cursor: default;\\n  }\\n\\n  &::before {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    background: $skeleton-02;\\n    animation: 3000ms ease-in-out skeleton infinite;\\n    content: '';\\n    will-change: transform-origin, transform, opacity;\\n\\n    @media (prefers-reduced-motion: reduce) {\\n      animation: none;\\n    }\\n  }\\n}\\n\\n@include exports('skeleton') {\\n  @keyframes skeleton {\\n    0% {\\n      transform: scaleX(0);\\n      transform-origin: left;\\n      opacity: 0.3;\\n    }\\n    20% {\\n      transform: scaleX(1);\\n      transform-origin: left;\\n      opacity: 1;\\n    }\\n    28% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    51% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    58% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    82% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    83% {\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    96% {\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    100% {\\n      transform: scaleX(0);\\n      transform-origin: left;\\n      opacity: 0.3;\\n    }\\n  }\\n}\\n\",\"@import \\\"carbon-components/scss/globals/scss/typography.scss\\\";\\n@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n\\n.productiveHeading01 {\\n  @include carbon--type-style(\\\"productive-heading-01\\\");\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\\n.caption01 {\\n  @include carbon--type-style(\\\"caption-01\\\");\\n}\\n\\n.bodyShort02 {\\n  @include carbon--type-style(\\\"body-short-02\\\");\\n}\\n\\n.text02 {\\n  color: #525252;\\n}\\n\\n.text01 {\\n  color: #161616;\\n}\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/mixins\\\";\\n@import \\\"../root.scss\\\";\\n\\n.container  {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: flex-start;\\n}\\n\\n.encounterHeading {\\n  text-align: left;\\n  width: 100%;\\n  margin: 0 1rem 1.3125rem 1rem;\\n  color: #161616;\\n}\\n\\n.visitsDetailWidgetContainer {\\n  background-color: $ui-background;\\n  width: 100%;\\n  border: 1px solid #e0e0e0;\\n}\\n\\n.visitsDetailHeaderContainer {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: $spacing-04 0 $spacing-04 $spacing-05;\\n  background-color: $ui-background;\\n}\\n\\n.visitsDetailHeaderContainer > h4:after {\\n  content: \\\"\\\";\\n  display: block;\\n  width: 2rem;\\n  padding-top: 0.188rem;\\n  border-bottom: 0.375rem solid $brand-teal-01;\\n}\\n\\n.toggleButtons {\\n  margin: 0 1rem;\\n  height: 2.5rem;\\n}\\n\\n.toggle{\\n  border: 1px solid #A6C8FF;\\n}\\n\\n.toggle:hover {\\n  background-color: #EDF5FF;\\n}\\n\\n.toggle:active, .toggle:focus {\\n  box-shadow: none;\\n  background-color: #EDF5FF;\\n}\\n\\n.toggleActive{\\n  background-color: #EDF5FF;\\n  border: 1px solid $link-01;\\n}\\n\\n.toggleActive:active, .toggleActive:focus {\\n  box-shadow: none;\\n  border: 1px solid $link-01;\\n  background-color: #EDF5FF;\\n}\\n\\n.toggle:first-of-type {\\n  border-radius: $spacing-02 0 0 $spacing-02;\\n}\\n\\n.toggle:last-of-type {\\n  border-radius: 0 $spacing-02 $spacing-02 0;\\n}\\n\\n.customTable tr[data-parent-row]:nth-child(odd) td {\\n  background-color: #fff;\\n}\\n\\n.customTable  tbody  tr[data-parent-row]:nth-child(even)  td {\\n  background-color: #f4f4f4;\\n}\\n\\n.encounterEmptyState {\\n  text-align: center;\\n  margin: 0 1rem 1rem 1rem; \\n}\\n\\n.expandedRow > td {\\n  padding: inherit !important\\n}\\n\\n.expandedRow > td > div {\\n  max-height: max-content !important;\\n}\\n\\n.observation {\\n  display: grid;\\n  grid-template-columns: max-content auto;\\n  grid-gap: 0.5rem;\\n  margin: 0.5rem 0;\\n}\\n\\n.observation > span {\\n  align-self: center;\\n}\\n\\n.summaryContainer {\\n  margin-left: 1rem;\\n  display: grid;\\n  grid-template-columns: max-content auto;\\n}\\n\\n.flexSections {\\n  display: flex;\\n}\\n\\n.verticalTabs {\\n  margin: 1rem 0;\\n}\\n\\n.verticalTabs > ul {\\n  flex-direction: column !important;\\n}\\n\\n.tab {\\n  margin-left: 0 !important;\\n}\\n\\n.tab > button {\\n  border-bottom: 0 !important;\\n  border-left: 3px solid #e0e0e0 !important;\\n}\\n\\n.tab > button, .tab > button:focus, .tab > button:active {\\n  outline: 0 !important;\\n  outline-offset: 0 !important;\\n}\\n\\n.selectedTab > button {\\n  border-left: 3px solid #007d79 !important;\\n  border-bottom: 0 !important;\\n  font-weight: 600 !important;\\n}\\n\\n.tabContent {\\n  border-top: 1px solid #e0e0e0;\\n  padding: 1rem 0;\\n  width: 70%;\\n}\\n\\n.medicationBlock {\\n  background-color: #f4f4f4;\\n  padding: 0.625rem 6.75rem 0.75rem 1.063rem;\\n  margin-top: 1.5rem;\\n  width: 100% !important;\\n}\\n\\n.medicationBlock:first-child {\\n  margin-top: 0;\\n}\\n\\n.diagnosesList {\\n  display: flex;\\n  padding-bottom: 0.5rem;\\n  margin: 0 1rem;\\n  border-bottom: 1px solid #e0e0e0;\\n}\\n\\n.diagnosis {\\n  border-radius: 12px;\\n  height: 1.5rem;\\n  display: flex;\\n  align-items: center;\\n  padding: 0 0.5rem;\\n  margin: 0 0.5rem 0.5rem 0;\\n}\\n\\n.primaryDiagnose {\\n  background-color: #d0e2ff;\\n  color: #0043ce;\\n}\\n\\n.secondaryDiagnose {\\n  background-color: #ffd7d9;\\n  color:#a2191f;\\n}\\n\\n.testSummaryExtension p {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n  color: #525252\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"productiveHeading01\": \"-esm-active-visits__visit-detail-overview__productiveHeading01___7mAw1\",\n\t\"productiveHeading02\": \"-esm-active-visits__visit-detail-overview__productiveHeading02___5-t+w\",\n\t\"bodyLong01\": \"-esm-active-visits__visit-detail-overview__bodyLong01___3DCLv\",\n\t\"caption01\": \"-esm-active-visits__visit-detail-overview__caption01___yCfJc\",\n\t\"bodyShort02\": \"-esm-active-visits__visit-detail-overview__bodyShort02___fuXhU\",\n\t\"text02\": \"-esm-active-visits__visit-detail-overview__text02___hhPqo\",\n\t\"text01\": \"-esm-active-visits__visit-detail-overview__text01___8ug6t\",\n\t\"container\": \"-esm-active-visits__visit-detail-overview__container___mkGcD\",\n\t\"encounterHeading\": \"-esm-active-visits__visit-detail-overview__encounterHeading___2xolA\",\n\t\"visitsDetailWidgetContainer\": \"-esm-active-visits__visit-detail-overview__visitsDetailWidgetContainer___ZvlEp\",\n\t\"visitsDetailHeaderContainer\": \"-esm-active-visits__visit-detail-overview__visitsDetailHeaderContainer___fRjET\",\n\t\"toggleButtons\": \"-esm-active-visits__visit-detail-overview__toggleButtons___6i420\",\n\t\"toggle\": \"-esm-active-visits__visit-detail-overview__toggle___1CMPj\",\n\t\"toggleActive\": \"-esm-active-visits__visit-detail-overview__toggleActive___Z+gk6\",\n\t\"customTable\": \"-esm-active-visits__visit-detail-overview__customTable___8OnwU\",\n\t\"encounterEmptyState\": \"-esm-active-visits__visit-detail-overview__encounterEmptyState___QNHmv\",\n\t\"expandedRow\": \"-esm-active-visits__visit-detail-overview__expandedRow___o7vyJ\",\n\t\"observation\": \"-esm-active-visits__visit-detail-overview__observation___Eku+V\",\n\t\"summaryContainer\": \"-esm-active-visits__visit-detail-overview__summaryContainer___6ueAF\",\n\t\"flexSections\": \"-esm-active-visits__visit-detail-overview__flexSections___K3zUQ\",\n\t\"verticalTabs\": \"-esm-active-visits__visit-detail-overview__verticalTabs___8bwHK\",\n\t\"tab\": \"-esm-active-visits__visit-detail-overview__tab___ZEwef\",\n\t\"selectedTab\": \"-esm-active-visits__visit-detail-overview__selectedTab___RoUbN\",\n\t\"tabContent\": \"-esm-active-visits__visit-detail-overview__tabContent___U1Tpl\",\n\t\"medicationBlock\": \"-esm-active-visits__visit-detail-overview__medicationBlock___4eXwy\",\n\t\"diagnosesList\": \"-esm-active-visits__visit-detail-overview__diagnosesList___Q28KT\",\n\t\"diagnosis\": \"-esm-active-visits__visit-detail-overview__diagnosis___Mlep4\",\n\t\"primaryDiagnose\": \"-esm-active-visits__visit-detail-overview__primaryDiagnose___lmzUT\",\n\t\"secondaryDiagnose\": \"-esm-active-visits__visit-detail-overview__secondaryDiagnose___a7ihp\",\n\t\"testSummaryExtension\": \"-esm-active-visits__visit-detail-overview__testSummaryExtension___y9BEk\",\n\t\"skeleton\": \"-esm-active-visits__visit-detail-overview__skeleton___vjxGq\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","observations","useTranslation","observationsList","useMemo","map","obs","question","answer","display","split","length","className","styles","ind","key","t","SkeletonText","encounters","visitUuid","isDesktop","useLayoutType","headerWidth","setHeaderWidth","useState","headerRef","useRef","headerData","id","header","useEffect","current","clientWidth","handler","window","addEventListener","removeEventListener","DataTable","rows","headers","getHeaderProps","getRowProps","getTableProps","TableContainer","Table","size","TableHead","TableRow","TableExpandHeader","TableHeader","ref","TableBody","row","TableExpandRow","cells","cell","TableCell","value","isExpanded","TableExpandedRow","style","paddingLeft","colSpan","marginLeft","medications","medication","order","dose","orderType","capitalize","drug","name","doseUnits","route","toUpperCase","strength","doseNumber","i","search","strengthQuantity","parseInt","substring","concentrationStartIndex","strengthUnits","j","substr","getDosage","toLowerCase","frequency","duration","durationUnit","durationUnits","numRefills","color","formatTime","parseDate","dateActivated","provider","role","notes","note","time","patientUuid","filter","encounterIds","e","uuid","entry","includes","encounter","reference","ExtensionSlot","extensionSlotName","state","tabSelected","setSelectedTab","diagnoses","forEach","enc","push","orders","encounterProviders","person","encounterRole","encounterType","concept","diagnosis","groupMembers","find","mem","obsDatetime","d","marginBottom","Tabs","Tab","onClick","label","listView","setView","visit","isError","isLoading","isValidating","data","error","useSWR","openmrsFetch","useVisit","encounterDateTime","DataTableSkeleton","visitType","formatDatetime","startDatetime","Button","kind","___CSS_LOADER_EXPORT___","module","locals"],"sourceRoot":""}