{"version":3,"file":"54.js","mappings":"wQAkBA,MAAMA,EAAyBC,IAC7B,MAAMC,EAAuBD,GAAyBE,SAChDC,EAAsBF,GAAsBG,GAC5CC,EAAeJ,GAAsBI,cAAcC,QACnDC,EAAYN,GAAsBM,UAClCC,EAAkBP,GAAsBO,iBAAiBC,OAAS,GAAKR,GAAsBO,gBAAgB,GAC7GE,EAAgBF,GAAiBG,OACjCC,EAAiBJ,GAAiBK,sBAIxC,MAAO,CACLV,oBAAAA,EACAE,aAAAA,EACAE,UAAAA,EACAG,cAAAA,EACAE,eAAAA,EACAE,mBATyBC,GAAAA,CAAMd,GAAsBa,oBAAoBE,OAAO,cAUhFC,eATqBF,GAAAA,CAAMd,GAAsBgB,gBAAgBD,OAAO,gBAatEE,EAAwB,SAAUjB,GAEtC,OAAOkB,EAAAA,EAAAA,GAAKlB,GAAsBmB,aAAaC,QAAQ,SAAUC,GAC/D,OAAOC,EAAAA,EAAAA,GAAYD,EAAKE,YAIfC,EAAiCC,IAC5C,MAAMC,GAAsBC,EAAAA,EAAAA,GAAQF,EAAmBG,OAAQC,GACtDZ,EAAsBY,EAA0B5B,WAAWoB,OAEpE,OAAOS,EAAAA,EAAAA,GAAIJ,GAAsBK,IAC/B,MAAMC,GAA6CF,EAAAA,EAAAA,GAAIC,EAA4BjC,GAC7EmC,EAAoBhB,EAAsBc,EAA2B,IAAI9B,UAE/E,MAAO,CACLiC,YAAaD,GAAmB5B,QAChC8B,YAAaF,GAAmBZ,KAChCW,eAAeI,EAAAA,EAAAA,GAAQJ,EAAe,CAAEK,IAASC,EAAAA,EAAAA,GAAID,EAAM,uBAAwB,CAAC,cAK1F,SAASE,EAAkBC,EAAcC,GAEvC,MAAO,CAAED,KAAAA,EAAME,UADI,GAAEF,KAAQC,KAIxB,MAAME,EAAgC,CAC3CC,EACAC,EACAC,EACAC,KAEO,CACLC,aAAc,eACdC,OAAQ,YACR9C,GAAIyC,EAAqB1C,oBACzBiB,YAAa,CACXC,OAAQ,CACN,CACEC,KAAMuB,EAAqBT,YAC3B9B,QAASuC,EAAqBV,eAIpCgB,QAASX,EAAkB,UAAWK,EAAqBO,aAC3DC,UAAWb,EAAkB,YAAaM,GAC1ChC,mBAAoBC,GAAAA,CAAM8B,EAAqBS,iBAAiBC,SAChEtC,eAAgBF,GAAAA,CAAM8B,EAAqB5B,gBAAgBsC,SAC3DC,SAAUhB,EAAkB,WAAYO,GACxCU,UAAW,CAAC,CAAEC,MAAOlB,EAAkB,eAAgBQ,KACvD3C,aAAc,CAAEC,QAASuC,EAAqBxC,cAC9CE,UAAWsC,EAAqBtC,UAChCC,gBAAiB,CACf,CACEK,sBAAuBgC,EAAqBc,YAAY/C,eACxDD,OAAQkC,EAAqBc,YAAYjD,mB,+BCjF1C,MAAMkD,EAAsB,I,QAAIC,iBAAiD,O,gMCLpFC,EAAU,GAEdA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKnB,QAAe,KAAW,WAAiB,gBAAiBM,E,oICcnE,MA6LA,EA7L4D,IAAqB,IAApB,YAAEhB,GAAkB,EAC/E,MAYOiB,EAAWC,IAAgBC,EAAAA,EAAAA,UAZU,CAC1CpC,YAAa,GACbC,YAAa,GACbjC,oBAAqB,GACrBmD,gBAAiB,KACjBkB,UAAW,GACXb,YAAa,GACb1C,eAAgB,KAChBV,UAAW,GACXF,aAAc,GACdoE,aAAa,IAGTC,EAAe,CAAwCC,EAASC,IACpEN,GAAcO,IAAD,IAAiBA,EAAO,CAACF,GAAOC,OAEzC,EAAEE,IAAMC,EAAAA,EAAAA,kBACRC,GAAcC,EAAAA,EAAAA,mBACd,aAAEC,IAAiBC,EAAAA,EAAAA,UAAS/B,GAC5BgC,EAA+B,YAApBC,EAAAA,EAAAA,iBAEXC,IAAmBjB,EAAUlE,oBAC7BoF,GAAuBD,KAAoBjB,EAAUf,gBACrDkC,EAAoBF,GAAkBjB,EAAUI,YAChDgB,EAAiBC,IAAAA,aACrB,KAAMC,EAAAA,EAAAA,QAAO,+BAAgC,gCAC7C,KAGFC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAMjC,EAAAA,EAAAA,WAA+BkC,GAAUA,GAASxB,EAAawB,KAC3E,MAAO,IAAMD,EAAIE,gBAChB,IAEH,MAAMC,EAAmBN,IAAAA,aACtBO,IACCA,EAAMC,iBACN,MAAMC,EAAmBjB,GAAckB,KACjCC,EAAsBrB,GAAasB,iBAAiBF,KACpDG,EAAsBvB,GAAawB,iBAAiBJ,KAEpDK,EAAqC,CACzCrD,YAAAA,KACGiB,GAGCqC,EAAkB,IAAIC,gBAwB5B,OAtBAC,EAAAA,EAAAA,KACEhE,EAAAA,EAAAA,GAA8B6D,EAAcN,EAAkBE,EAAqBE,GACnFnD,EACAiB,EAAUlE,oBACVuG,GACAG,MACCC,IACqB,MAApBA,EAAS5D,QAAkBuC,KAC3BsB,EAAAA,EAAAA,WAAU,CACRC,KAAM,UACNC,YAAanC,EAAE,mBAAoB,uCAGtCoC,KACCC,EAAAA,EAAAA,kBAAiB,CACfC,MAAOtC,EAAE,cAAe,4BACxBkC,KAAM,QACNK,UAAU,EACVJ,YAAaC,GAAKI,aAIjB,IAAMZ,EAAgBa,UAE/B,CAAC9B,EAAgBpB,EAAWjB,IAgB9B,OACE,kBAACoE,EAAA,EAAD,CAAMC,UAAWC,EAAAA,KAAaC,SAAU3B,EAAkB,cAAY,qBACpE,6BACE,wBAAIyB,UAAWC,EAAAA,4BACX,GAAE5C,EAAE,UAAW,gBAAgBT,GAAWlC,cAAe,MAlH5CqC,EAoHHH,EAAUG,YAnHVA,GAAW/D,OAAS,GAoHhC,yBAAKgH,UAAWC,EAAAA,4BACd,kBAACE,EAAA,EAAD,CACExH,GAAG,WACHuE,KAAK,WACLC,MAAOP,EAAUV,YAAY/C,eAC7BiH,SArBU5B,IACpB,MACMtC,EACJU,EAAUG,UAAUrD,MACjB2G,IAAMC,OARKnD,EAQIqB,EAAM+B,OAAOpD,OAPzBqD,MAAMrD,IAO6BkD,EAAElH,iBAAmBsH,SAASjC,EAAM+B,OAAOpD,OARxF,IAAkBA,MAKI,GAKpBF,EAAa,cAAef,IAgBlB8D,UAAU,6BACVU,UAAWrD,EAAE,WAAY,aAEzB,kBAACsD,EAAA,EAAD,CAAYC,KAAMvD,EAAE,eAAgB,iBAAkBF,MAAM,WACzDE,EAAE,eAAgB,kBAEpBT,EAAUG,UAAUzC,KAAK+F,GAEtB,kBAACM,EAAA,EAAD,CAAYE,IAAKR,EAAElH,eAAgByH,KAAMP,EAAEpH,cAAekE,MAAOkD,EAAElH,gBAChEkE,EAAEgD,EAAEpH,cAAeoH,EAAEpH,oBAOlC,yBAAK+G,UAAWC,EAAAA,4BACd,kBAACa,EAAA,EAAD,CACEnI,GAAG,kBACHqH,UAAU,kBACVe,SAAS,IAAIC,MAAOC,cACpBC,WAAW,QACXC,eAAe,SACfhE,MAAOP,EAAUf,gBACjBuE,SAAU,QAAEgB,GAAF,SAAYnE,EAAa,kBAAmBmE,EAAKH,iBAE3D,kBAACI,EAAA,EAAD,CACE1I,GAAG,0BACH2I,YAAY,aACZZ,UAAWrD,EAAE,kBAAmB,oBAChCrC,KAAK,WAIX,yBAAKgF,UAAWC,EAAAA,4BACd,kBAACa,EAAA,EAAD,CACEnI,GAAG,wBACHqH,UAAU,wBACVuB,SAAS,IAAIP,MAAOC,cACpBC,WAAW,QACXC,eAAe,SACfhE,MAAOP,EAAUpD,eACjB4G,SAAU,QAAEgB,GAAF,SAAYnE,EAAa,iBAAkBmE,EAAKH,iBAE1D,kBAACI,EAAA,EAAD,CACE1I,GAAG,0BACH2I,YAAY,aACZZ,UAAWrD,EAAE,iBAAkB,mBAC/BrC,KAAK,WAIX,yBAAKgF,UAAWC,EAAAA,4BACd,kBAACuB,EAAA,EAAD,CACExG,KAAK,OACLrC,GAAG,YACH+H,UAAWrD,EAAE,YAAa,cAC1BF,MAAOP,EAAU9D,UACjBsH,SAAWqB,GAAQxE,EAAa,YAAawE,EAAIlB,OAAOpD,UAG5D,yBAAK6C,UAAWC,EAAAA,4BACd,kBAACuB,EAAA,EAAD,CACExG,KAAK,OACLrC,GAAG,eACH+H,UAAWrD,EAAE,eAAgB,gBAC7BF,MAAOP,EAAUhE,aACjBwH,SAAWqB,GAAQxE,EAAa,eAAgBwE,EAAIlB,OAAOpD,WAIjE,kBAACuE,EAAA,EAAD,CAAW1B,UAAWrC,EAAWsC,EAAAA,OAAgBA,EAAAA,SAC/C,kBAAC0B,EAAA,EAAD,CAAQ3B,UAAWC,EAAAA,OAAeV,KAAK,YAAYqC,QAAS5D,GACzDX,EAAE,SAAU,WAEf,kBAACsE,EAAA,EAAD,CACE3B,UAAWC,EAAAA,OACXV,KAAK,UACLsC,SAAUhE,GAAkBE,GAAqBD,GAEhDT,EAAE,OAAQ,WA3MrB,IAAyBN,I,+FC0BlB,SAAS+E,IACd,MAAM,oBAAEC,IAAwBC,EAAAA,EAAAA,aAC1BC,EAAuBF,GAAqBG,oBAC3CC,EAAQtI,GAAQoI,EAAqBG,MAAM,KAE5CC,EAAwB,8BAA6BF,UAAetI,WACpEyI,EAAqB,uBAAsBL,YAE3C,KAAEM,EAAF,MAAQC,IAAUC,EAAAA,EAAAA,KArCAC,EAsCLT,GArCZU,EAAAA,EAAAA,GAASD,EAAY,KAqCeL,EAAuBC,GAChEM,EAAAA,cAvCJ,IAA0BF,EA0CxB,MAAO,CACLH,KAAMA,EAAOA,EAAKA,KAAKM,QAAQ,GAAK,KACpCC,QAASN,EACTO,WAAYR,IAASC,GAIlB,SAASQ,EAAiBrH,GAC/B,MAAMsH,EAAoB,GAAEC,EAAAA,oCAAoCvH,KAE1D,KAAE4G,EAAF,MAAQC,EAAR,aAAeW,IAAiBV,EAAAA,EAAAA,IAAgDQ,EAAkBL,EAAAA,cAElGQ,EAAwBb,GAAOvI,EAAAA,EAAAA,GAA8BuI,EAAKA,MAAQ,KAEhF,MAAO,CACLA,KAAMA,EAAOa,EAAwB,KACrCN,QAASN,EACTO,WAAYR,IAASC,EACrBW,aAAAA,GAIG,SAAShE,EACdkE,EACA1H,EACAjD,EACAuG,GAEA,IAAIqE,EAAwB,GAAEJ,EAAAA,2BAI9B,OAHIxK,IACF4K,EAAwB,GAAEA,KAAwB5K,MAE7CkK,EAAAA,EAAAA,cAAaU,EAAsB,CACxCC,QAAS,CACP,eAAgB,oBAElBC,OAAQ,OACRC,KAAMJ,EACNK,OAAQzE,EAAgByE,W,iEC7FxBC,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOlL,GAAI,guGAAiuG,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,qFAAqF,kHAAkH,wHAAwH,mHAAmH,mHAAmH,wFAAwF,wEAAwE,yDAAyD,MAAQ,GAAG,SAAW,u5CAAu5C,eAAiB,CAAC,4sGAA4sG,6mEAA6mE,uiEAAuiE,igBAAigB,srnBAAsrnB,0mMAA0mM,8xCAA8xC,4wBAAkxB,WAAa,MAEhqyCgL,EAAwBG,OAAS,CAChC,2BAA8B,qFAC9B,KAAQ,+DACR,OAAU,iEACV,OAAU,iEACV,QAAW,kEACX,SAAY,oEAEb","sources":["webpack://@openmrs/esm-patient-immunizations-app/./src/immunizations/immunization-mapper.ts","webpack://@openmrs/esm-patient-immunizations-app/./src/immunizations/immunization-utils.ts","webpack://@openmrs/esm-patient-immunizations-app/./src/immunizations/immunizations-form.scss?91ec","webpack://@openmrs/esm-patient-immunizations-app/./src/immunizations/immunizations-form.component.tsx","webpack://@openmrs/esm-patient-immunizations-app/./src/immunizations/immunizations.resource.tsx","webpack://@openmrs/esm-patient-immunizations-app/./src/immunizations/immunizations-form.scss"],"sourcesContent":["import find from 'lodash-es/find';\nimport get from 'lodash-es/get';\nimport groupBy from 'lodash-es/groupBy';\nimport isUndefined from 'lodash-es/isUndefined';\nimport map from 'lodash-es/map';\nimport orderBy from 'lodash-es/orderBy';\nimport dayjs from 'dayjs';\nimport {\n  Code,\n  FHIRImmunizationBundle,\n  FHIRImmunizationBundleEntry,\n  FHIRImmunizationResource,\n  ImmunizationData,\n  ImmunizationDoseData,\n  ImmunizationFormData,\n  Reference,\n} from './immunization-domain';\n\nconst mapToImmunizationDose = (immunizationBundleEntry: FHIRImmunizationBundleEntry): ImmunizationDoseData => {\n  const immunizationResource = immunizationBundleEntry?.resource;\n  const immunizationObsUuid = immunizationResource?.id;\n  const manufacturer = immunizationResource?.manufacturer?.display;\n  const lotNumber = immunizationResource?.lotNumber;\n  const protocolApplied = immunizationResource?.protocolApplied?.length > 0 && immunizationResource?.protocolApplied[0];\n  const sequenceLabel = protocolApplied?.series;\n  const sequenceNumber = protocolApplied?.doseNumberPositiveInt;\n  const occurrenceDateTime = dayjs(immunizationResource?.occurrenceDateTime).format('YYYY-MM-DD');\n  const expirationDate = dayjs(immunizationResource?.expirationDate).format('YYYY-MM-DD');\n\n  return {\n    immunizationObsUuid,\n    manufacturer,\n    lotNumber,\n    sequenceLabel,\n    sequenceNumber,\n    occurrenceDateTime,\n    expirationDate,\n  };\n};\n\nconst findCodeWithoutSystem = function (immunizationResource: FHIRImmunizationResource) {\n  //Code without system represents internal code using uuid\n  return find(immunizationResource?.vaccineCode?.coding, function (code: Code) {\n    return isUndefined(code.system);\n  });\n};\n\nexport const mapFromFHIRImmunizationBundle = (immunizationBundle: FHIRImmunizationBundle): Array<ImmunizationData> => {\n  const groupByImmunization = groupBy(immunizationBundle.entry, (immunizationResourceEntry) => {\n    return findCodeWithoutSystem(immunizationResourceEntry.resource)?.code;\n  });\n  return map(groupByImmunization, (immunizationsForOneVaccine: Array<FHIRImmunizationBundleEntry>) => {\n    const existingDoses: Array<ImmunizationDoseData> = map(immunizationsForOneVaccine, mapToImmunizationDose);\n    const codeWithoutSystem = findCodeWithoutSystem(immunizationsForOneVaccine[0]?.resource);\n\n    return {\n      vaccineName: codeWithoutSystem?.display,\n      vaccineUuid: codeWithoutSystem?.code,\n      existingDoses: orderBy(existingDoses, [(dose) => get(dose, 'occurrenceDateTime')], ['desc']),\n    };\n  });\n};\n\nfunction toReferenceOfType(type: string, referenceValue: string): Reference {\n  const reference = `${type}/${referenceValue}`;\n  return { type, reference };\n}\n\nexport const mapToFHIRImmunizationResource = (\n  immunizationFormData: ImmunizationFormData,\n  visitUuid,\n  locationUuid,\n  providerUuid,\n): FHIRImmunizationResource => {\n  return {\n    resourceType: 'Immunization',\n    status: 'completed',\n    id: immunizationFormData.immunizationObsUuid,\n    vaccineCode: {\n      coding: [\n        {\n          code: immunizationFormData.vaccineUuid,\n          display: immunizationFormData.vaccineName,\n        },\n      ],\n    },\n    patient: toReferenceOfType('Patient', immunizationFormData.patientUuid),\n    encounter: toReferenceOfType('Encounter', visitUuid), //Reference of visit instead of encounter\n    occurrenceDateTime: dayjs(immunizationFormData.vaccinationDate).toDate(),\n    expirationDate: dayjs(immunizationFormData.expirationDate).toDate(),\n    location: toReferenceOfType('Location', locationUuid),\n    performer: [{ actor: toReferenceOfType('Practitioner', providerUuid) }],\n    manufacturer: { display: immunizationFormData.manufacturer },\n    lotNumber: immunizationFormData.lotNumber,\n    protocolApplied: [\n      {\n        doseNumberPositiveInt: immunizationFormData.currentDose.sequenceNumber,\n        series: immunizationFormData.currentDose.sequenceLabel,\n      },\n    ],\n  };\n};\n","import { BehaviorSubject } from 'rxjs';\n\n//This is a work around until attach function is re-worked to enable passing of props\ninterface ImmunizationFormSubProps {\n  immunizationObsUuid: string;\n  vaccineName: string;\n  vaccineUuid: string;\n  manufacturer: string;\n  expirationDate: string;\n  vaccinationDate: string;\n  sequences: any;\n  lotNumber: string;\n  currentDose: any;\n  existingDoses: any;\n  formChanged: any;\n}\nexport const immunizationFormSub = new BehaviorSubject<ImmunizationFormSubProps | null>(null);\n","\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./immunizations-form.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./immunizations-form.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { SyntheticEvent, useEffect, useState } from 'react';\nimport styles from './immunizations-form.scss';\nimport { showNotification, showToast, detach, useSessionUser, useVisit, useLayoutType } from '@openmrs/esm-framework';\nimport { useTranslation } from 'react-i18next';\nimport { savePatientImmunization } from './immunizations.resource';\nimport { mapToFHIRImmunizationResource } from './immunization-mapper';\nimport { ImmunizationFormData, ImmunizationSequence } from './immunization-domain';\nimport {\n  Button,\n  ButtonSet,\n  DatePicker,\n  DatePickerInput,\n  Form,\n  Select,\n  SelectItem,\n  TextInput,\n} from 'carbon-components-react';\nimport { immunizationFormSub } from './immunization-utils';\n\nfunction hasSequences<T>(sequences: Array<T>) {\n  return sequences && sequences?.length > 0;\n}\n\ntype ImmunizationsFormProps = {\n  patientUuid: string;\n};\n\ninterface ImmunizationFormState {\n  vaccineName: string;\n  vaccineUuid: string;\n  immunizationObsUuid: string;\n  vaccinationDate: string;\n  currentDose: ImmunizationSequence;\n  sequences: Array<ImmunizationSequence>;\n  expirationDate: string;\n  lotNumber: string;\n  manufacturer: string;\n  formChanged: boolean;\n}\n\nconst ImmunizationsForm: React.FC<ImmunizationsFormProps> = ({ patientUuid }) => {\n  const initialState: ImmunizationFormState = {\n    vaccineName: '',\n    vaccineUuid: '',\n    immunizationObsUuid: '',\n    vaccinationDate: null,\n    sequences: [],\n    currentDose: {} as ImmunizationSequence,\n    expirationDate: null,\n    lotNumber: '',\n    manufacturer: '',\n    formChanged: false,\n  };\n  const [formState, setFormState] = useState(initialState);\n  const updateSingle = <T extends keyof ImmunizationFormState>(name: T, value: typeof formState[T]) =>\n    setFormState((state) => ({ ...state, [name]: value }));\n\n  const { t } = useTranslation();\n  const currentUser = useSessionUser();\n  const { currentVisit } = useVisit(patientUuid);\n  const isTablet = useLayoutType() === 'tablet';\n\n  const isViewEditMode = !!formState.immunizationObsUuid;\n  const enableCreateButtons = !isViewEditMode && !!formState.vaccinationDate;\n  const enableEditButtons = isViewEditMode && formState.formChanged;\n  const closeWorkspace = React.useCallback(\n    () => detach('patient-chart-workspace-slot', 'immunization-form-workspace'),\n    [],\n  );\n\n  useEffect(() => {\n    const sub = immunizationFormSub.subscribe((props) => props && setFormState(props));\n    return () => sub.unsubscribe();\n  }, []);\n\n  const handleFormSubmit = React.useCallback(\n    (event: SyntheticEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      const currentVisitUuid = currentVisit?.uuid;\n      const currentLocationUuid = currentUser?.sessionLocation?.uuid;\n      const currentProviderUuid = currentUser?.currentProvider?.uuid;\n\n      const immunization: ImmunizationFormData = {\n        patientUuid,\n        ...formState,\n      };\n\n      const abortController = new AbortController();\n\n      savePatientImmunization(\n        mapToFHIRImmunizationResource(immunization, currentVisitUuid, currentLocationUuid, currentProviderUuid),\n        patientUuid,\n        formState.immunizationObsUuid,\n        abortController,\n      ).then(\n        (response) => {\n          response.status === 201 && closeWorkspace();\n          showToast({\n            kind: 'success',\n            description: t('vaccinationSaved', 'Vaccination saved successfully'),\n          });\n        },\n        (err) => {\n          showNotification({\n            title: t('errorSaving', 'Error saving vaccination'),\n            kind: 'error',\n            critical: true,\n            description: err?.message,\n          });\n        },\n      );\n      return () => abortController.abort();\n    },\n    [closeWorkspace, formState, patientUuid],\n  );\n\n  function isNumber(value) {\n    return !isNaN(value);\n  }\n\n  const onDoseSelect = (event) => {\n    const defaultDose = {} as ImmunizationSequence;\n    const currentDose: ImmunizationSequence =\n      formState.sequences.find(\n        (s) => isNumber(event.target.value) && s.sequenceNumber === parseInt(event.target.value),\n      ) || defaultDose;\n    updateSingle('currentDose', currentDose);\n  };\n\n  return (\n    <Form className={styles.form} onSubmit={handleFormSubmit} data-testid=\"immunization-form\">\n      <div>\n        <h4 className={styles.immunizationSequenceSelect}>\n          {`${t('vaccine', 'Vaccine')} : ${formState?.vaccineName}`}{' '}\n        </h4>\n        {hasSequences(formState.sequences) && (\n          <div className={styles.immunizationSequenceSelect}>\n            <Select\n              id=\"sequence\"\n              name=\"sequence\"\n              value={formState.currentDose.sequenceNumber}\n              onChange={onDoseSelect}\n              className=\"immunizationSequenceSelect\"\n              labelText={t('sequence', 'Sequence')}\n            >\n              <SelectItem text={t('pleaseSelect', 'Please select')} value=\"DEFAULT\">\n                {t('pleaseSelect', 'Please select')}\n              </SelectItem>\n              {formState.sequences.map((s) => {\n                return (\n                  <SelectItem key={s.sequenceNumber} text={s.sequenceLabel} value={s.sequenceNumber}>\n                    {t(s.sequenceLabel, s.sequenceLabel)}\n                  </SelectItem>\n                );\n              })}\n            </Select>\n          </div>\n        )}\n        <div className={styles.immunizationSequenceSelect}>\n          <DatePicker\n            id=\"vaccinationDate\"\n            className=\"vaccinationDate\"\n            maxDate={new Date().toISOString()}\n            dateFormat=\"d/m/Y\"\n            datePickerType=\"single\"\n            value={formState.vaccinationDate}\n            onChange={([date]) => updateSingle('vaccinationDate', date.toISOString())}\n          >\n            <DatePickerInput\n              id=\"date-picker-calendar-id\"\n              placeholder=\"dd/mm/yyyy\"\n              labelText={t('vaccinationDate', 'Vaccination Date')}\n              type=\"text\"\n            />\n          </DatePicker>\n        </div>\n        <div className={styles.immunizationSequenceSelect}>\n          <DatePicker\n            id=\"vaccinationExpiration\"\n            className=\"vaccinationExpiration\"\n            minDate={new Date().toISOString()}\n            dateFormat=\"d/m/Y\"\n            datePickerType=\"single\"\n            value={formState.expirationDate}\n            onChange={([date]) => updateSingle('expirationDate', date.toISOString())}\n          >\n            <DatePickerInput\n              id=\"date-picker-calendar-id\"\n              placeholder=\"dd/mm/yyyy\"\n              labelText={t('expirationDate', 'Expiration Date')}\n              type=\"text\"\n            />\n          </DatePicker>\n        </div>\n        <div className={styles.immunizationSequenceSelect}>\n          <TextInput\n            type=\"text\"\n            id=\"lotNumber\"\n            labelText={t('lotNumber', 'Lot Number')}\n            value={formState.lotNumber}\n            onChange={(evt) => updateSingle('lotNumber', evt.target.value)}\n          />\n        </div>\n        <div className={styles.immunizationSequenceSelect}>\n          <TextInput\n            type=\"text\"\n            id=\"manufacturer\"\n            labelText={t('manufacturer', 'Manufacturer')}\n            value={formState.manufacturer}\n            onChange={(evt) => updateSingle('manufacturer', evt.target.value)}\n          />\n        </div>\n      </div>\n      <ButtonSet className={isTablet ? styles.tablet : styles.desktop}>\n        <Button className={styles.button} kind=\"secondary\" onClick={closeWorkspace}>\n          {t('cancel', 'Cancel')}\n        </Button>\n        <Button\n          className={styles.button}\n          kind=\"primary\"\n          disabled={isViewEditMode ? !enableEditButtons : !enableCreateButtons}\n        >\n          {t('save', 'Save')}\n        </Button>\n      </ButtonSet>\n    </Form>\n  );\n};\n\nexport default ImmunizationsForm;\n","import useSWR from 'swr';\nimport { openmrsFetch, fhirBaseUrl, useConfig } from '@openmrs/esm-framework';\nimport includes from 'lodash-es/includes';\nimport split from 'lodash-es/split';\nimport { FHIRImmunizationBundle, FHIRImmunizationResource, OpenmrsConcept } from './immunization-domain';\nimport { mapFromFHIRImmunizationBundle } from './immunization-mapper';\n\nfunction getImmunizationsConceptSetByUuid(\n  immunizationsConceptSetSearchText: string,\n  abortController: AbortController,\n): Promise<OpenmrsConcept> {\n  return openmrsFetch(`/ws/rest/v1/concept/${immunizationsConceptSetSearchText}?v=full`, {\n    signal: abortController.signal,\n  }).then((response) => response.data);\n}\n\nfunction isConceptMapping(searchText: string) {\n  return includes(searchText, ':');\n}\n\nfunction searchImmunizationsConceptSetByMapping(\n  immunizationsConceptSetSearchText: string,\n  abortController: AbortController,\n): Promise<OpenmrsConcept> {\n  const [source, code] = split(immunizationsConceptSetSearchText, ':');\n  return openmrsFetch(`/ws/rest/v1/concept?source=${source}&code=${code}&v=full`, {\n    signal: abortController.signal,\n  }).then((response) => {\n    return response.data.results[0];\n  });\n}\n\nexport async function getImmunizationsConceptSet(\n  immunizationsConceptSetSearchText: string,\n  abortController: AbortController,\n): Promise<OpenmrsConcept> {\n  const result = isConceptMapping(immunizationsConceptSetSearchText)\n    ? await searchImmunizationsConceptSetByMapping(immunizationsConceptSetSearchText, abortController)\n    : await getImmunizationsConceptSetByUuid(immunizationsConceptSetSearchText, abortController);\n  if (!result) {\n    throw new Error(`No concept found identified by '${immunizationsConceptSetSearchText}'`);\n  }\n  return result;\n}\n\nexport function useImmunizationsConceptSet() {\n  const { immunizationsConfig } = useConfig();\n  const conceptSetSearchTerm = immunizationsConfig?.vaccinesConceptSet;\n  const [source, code] = conceptSetSearchTerm.split(':');\n\n  const conceptSetMappingUrl = `/ws/rest/v1/concept?source=${source}&code=${code}&v=full`;\n  const conceptSetUuidUrl = `/ws/rest/v1/concept/${conceptSetSearchTerm}?v=full`;\n\n  const { data, error } = useSWR<{ data: { results: Array<OpenmrsConcept> } }, Error>(\n    isConceptMapping(conceptSetSearchTerm) ? conceptSetMappingUrl : conceptSetUuidUrl,\n    openmrsFetch,\n  );\n\n  return {\n    data: data ? data.data.results[0] : null,\n    isError: error,\n    isLoading: !data && !error,\n  };\n}\n\nexport function useImmunizations(patientUuid: string) {\n  const immunizationsUrl = `${fhirBaseUrl}/Immunization?patient=${patientUuid}`;\n\n  const { data, error, isValidating } = useSWR<{ data: FHIRImmunizationBundle }, Error>(immunizationsUrl, openmrsFetch);\n\n  const existingImmunizations = data ? mapFromFHIRImmunizationBundle(data.data) : null;\n\n  return {\n    data: data ? existingImmunizations : null,\n    isError: error,\n    isLoading: !data && !error,\n    isValidating,\n  };\n}\n\nexport function savePatientImmunization(\n  patientImmunization: FHIRImmunizationResource,\n  patientUuid: string,\n  immunizationObsUuid: string,\n  abortController: AbortController,\n) {\n  let immunizationEndpoint = `${fhirBaseUrl}/Immunization`;\n  if (immunizationObsUuid) {\n    immunizationEndpoint = `${immunizationEndpoint}/${immunizationObsUuid}`;\n  }\n  return openmrsFetch(immunizationEndpoint, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    body: patientImmunization,\n    signal: abortController.signal,\n  });\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{padding:0;border:0;margin:0;font:inherit;font-size:100%;vertical-align:baseline}button,select,input,textarea{border-radius:0;font-family:inherit}input[type=text]::-ms-clear{display:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}body{line-height:1}sup{vertical-align:super}sub{vertical-align:sub}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:\\\"\\\"}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}button{margin:0}html{font-size:100%}body{font-weight:400;font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility}code{font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace}strong{font-weight:600}@media screen and (-ms-high-contrast: active){svg{fill:ButtonText}}h1{font-size:2.625rem;font-weight:300;line-height:1.199;letter-spacing:0}h2{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}h3{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}h4{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}h5{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}h6{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}p{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}a{color:#0f62fe}em{font-style:italic}@keyframes -esm-patient-immunizations__immunizations-form__skeleton___Kp1Qp{0%{opacity:.3;transform:scaleX(0);transform-origin:left}20%{opacity:1;transform:scaleX(1);transform-origin:left}28%{transform:scaleX(1);transform-origin:right}51%{transform:scaleX(0);transform-origin:right}58%{transform:scaleX(0);transform-origin:right}82%{transform:scaleX(1);transform-origin:right}83%{transform:scaleX(1);transform-origin:left}96%{transform:scaleX(0);transform-origin:left}100%{opacity:.3;transform:scaleX(0);transform-origin:left}}:root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-immunizations__immunizations-form__immunizationSequenceSelect___7qH26{margin:1rem 2rem 1rem}.-esm-patient-immunizations__immunizations-form__form___0QVLq{display:flex;flex-direction:column;justify-content:space-between}.-esm-patient-immunizations__immunizations-form__button___RclnW{height:4rem;display:flex;align-content:flex-start;align-items:baseline;min-width:50%}.-esm-patient-immunizations__immunizations-form__tablet___kmjCS{padding:1.5rem 1rem;background-color:#fff}.-esm-patient-immunizations__immunizations-form__desktop___AOAM6{padding:0rem}.omrs-breakpoint-gt-tablet .-esm-patient-immunizations__immunizations-form__form___0QVLq{height:calc(100vh - 6rem)}.omrs-breakpoint-lt-desktop .-esm-patient-immunizations__immunizations-form__form___0QVLq{height:calc(100vh - 3rem)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/carbon-components/src/globals/scss/_css--reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_font-family.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/icons/mixins.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_helper-mixins.scss\",\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/immunizations/immunizations-form.scss\"],\"names\":[],\"mappings\":\"AAmCI,2ZAiFE,SAAA,CACA,QAAA,CACA,QAAA,CACA,YAAA,CACA,cAAA,CACA,uBAAA,CAIF,6BAIE,eAAA,CACA,mBAAA,CAGF,4BACE,YAAA,CAIF,mFAYE,aAAA,CAGF,KACE,aAAA,CAGF,IACE,oBAAA,CAGF,IACE,kBAAA,CAGF,MAEE,eAAA,CAGF,aAEE,WAAA,CAGF,wDAIE,UAAA,CAGF,MACE,wBAAA,CACA,gBAAA,CAGF,EACE,qBAAA,CAIF,OACE,QAAA,CC3KJ,KACE,cAAA,CAGF,KC0CA,eAAA,CDvCE,gEAViB,CAWjB,iCAAA,CACA,kCAAA,CACA,iCAAA,CAGF,KACE,wGAhBiB,CAmBnB,OC6BA,eAAA,CCxDA,8CACE,IACE,eAAA,CAAA,CFkCJ,GGggBE,kBAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlrBxB,GG4fE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH9qBxB,GGwfE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH1qBxB,GGofE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CHtqBxB,GGgfE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlqBxB,GG4eE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CH9pBxB,EGweE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CH1pBxB,EAII,aAAA,CAMJ,GACE,iBAAA,CIkHF,4EACE,GACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,SAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,KACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAAA,CCtMN,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,oFACE,qBAAA,CAGF,8DACE,YAAA,CACA,qBAAA,CACA,6BAAA,CAGF,gEACE,WAAA,CACA,YAAA,CACA,wBAAA,CACA,oBAAA,CACA,aAAA,CAGF,gEACE,mBAAA,CACA,qBDvBM,CC0BR,iEACE,YAAA,CAKA,yFACE,yBAAA,CAMF,0FACE,yBAAA\",\"sourcesContent\":[\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n@import './vendor/@carbon/elements/scss/type/reset';\\n@import './vendor/@carbon/elements/scss/icons/mixins';\\n\\n/// Resets default browser styling\\n/// @access public\\n/// @group global-reset\\n@mixin reset {\\n  @if variable-exists(css--reset) == false or $css--reset == false {\\n    box-sizing: border-box;\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    font-family: inherit;\\n    font-size: 100%;\\n    vertical-align: baseline;\\n\\n    *,\\n    *::before,\\n    *::after {\\n      box-sizing: inherit;\\n    }\\n  }\\n}\\n\\n@include exports('css--reset') {\\n  @if variable-exists(css--reset) == false or $css--reset == true {\\n    // http://cssreset.com/scripts/eric-meyer-reset-css/\\n    html,\\n    body,\\n    div,\\n    span,\\n    applet,\\n    object,\\n    iframe,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p,\\n    blockquote,\\n    pre,\\n    a,\\n    abbr,\\n    acronym,\\n    address,\\n    big,\\n    cite,\\n    code,\\n    del,\\n    dfn,\\n    em,\\n    img,\\n    ins,\\n    kbd,\\n    q,\\n    s,\\n    samp,\\n    small,\\n    strike,\\n    strong,\\n    sub,\\n    sup,\\n    tt,\\n    var,\\n    b,\\n    u,\\n    i,\\n    center,\\n    dl,\\n    dt,\\n    dd,\\n    ol,\\n    ul,\\n    li,\\n    fieldset,\\n    form,\\n    label,\\n    legend,\\n    table,\\n    caption,\\n    tbody,\\n    tfoot,\\n    thead,\\n    tr,\\n    th,\\n    td,\\n    article,\\n    aside,\\n    canvas,\\n    details,\\n    embed,\\n    figure,\\n    figcaption,\\n    footer,\\n    header,\\n    hgroup,\\n    menu,\\n    nav,\\n    output,\\n    ruby,\\n    section,\\n    summary,\\n    time,\\n    mark,\\n    audio,\\n    video {\\n      padding: 0;\\n      border: 0;\\n      margin: 0;\\n      font: inherit;\\n      font-size: 100%;\\n      vertical-align: baseline;\\n    }\\n\\n    // Chrome 62 fix\\n    button,\\n    select,\\n    input,\\n    textarea {\\n      border-radius: 0;\\n      font-family: inherit;\\n    }\\n\\n    input[type='text']::-ms-clear {\\n      display: none;\\n    }\\n\\n    /* HTML5 display-role reset for older browsers */\\n    article,\\n    aside,\\n    details,\\n    figcaption,\\n    figure,\\n    footer,\\n    header,\\n    hgroup,\\n    main,\\n    menu,\\n    nav,\\n    section {\\n      display: block;\\n    }\\n\\n    body {\\n      line-height: 1;\\n    }\\n\\n    sup {\\n      vertical-align: super;\\n    }\\n\\n    sub {\\n      vertical-align: sub;\\n    }\\n\\n    ol,\\n    ul {\\n      list-style: none;\\n    }\\n\\n    blockquote,\\n    q {\\n      quotes: none;\\n    }\\n\\n    blockquote::before,\\n    blockquote::after,\\n    q::before,\\n    q::after {\\n      content: '';\\n    }\\n\\n    table {\\n      border-collapse: collapse;\\n      border-spacing: 0;\\n    }\\n\\n    * {\\n      box-sizing: border-box;\\n    }\\n\\n    // Fix to remove added margins on buttons in safari (see #5155)\\n    button {\\n      margin: 0;\\n    }\\n\\n    @include carbon--type-reset;\\n    @include carbon--icons;\\n  }\\n}\\n\\n@include exports('css--default-type') {\\n  @if variable-exists(css--default-type) == false or $css--default-type == true\\n  {\\n    @include carbon--default-type;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/convert';\\n@import 'font-family';\\n@import 'styles';\\n\\n/// Include a type reset for a given body and mono font family\\n/// @param {String} $body-font-family [carbon--font-family('sans')] - The font family used on the `<body>` element\\n/// @param {String} $mono-font-family [carbon--font-family('mono')] - The font family used on elements that require mono fonts, like the `<code>` element\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-reset(\\n  // TODO: remove in next major release. This has been replaced with 100%\\n  $base-font-size: $carbon--base-font-size,\\n  $body-font-family: carbon--font-family('sans'),\\n  $mono-font-family: carbon--font-family('mono')\\n) {\\n  html {\\n    font-size: 100%;\\n  }\\n\\n  body {\\n    @include carbon--font-weight('regular');\\n\\n    font-family: $body-font-family;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-font-smoothing: antialiased;\\n    text-rendering: optimizeLegibility;\\n  }\\n\\n  code {\\n    font-family: $mono-font-family;\\n  }\\n\\n  strong {\\n    @include carbon--font-weight('semibold');\\n  }\\n}\\n\\n/// Include default type styles\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--default-type {\\n  h1 {\\n    @include carbon--type-style('productive-heading-06');\\n  }\\n\\n  h2 {\\n    @include carbon--type-style('productive-heading-05');\\n  }\\n\\n  h3 {\\n    @include carbon--type-style('productive-heading-04');\\n  }\\n\\n  h4 {\\n    @include carbon--type-style('productive-heading-03');\\n  }\\n\\n  h5 {\\n    @include carbon--type-style('productive-heading-02');\\n  }\\n\\n  h6 {\\n    @include carbon--type-style('productive-heading-01');\\n  }\\n\\n  p {\\n    @include carbon--type-style('body-long-02');\\n  }\\n\\n  a {\\n    @if global-variable-exists('carbon--theme') and\\n      map-has-key($carbon--theme, 'link-01')\\n    {\\n      color: map-get($carbon--theme, 'link-01');\\n    } @else {\\n      color: #0062fe;\\n    }\\n  }\\n\\n  em {\\n    font-style: italic;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\\n/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-families: (\\n  'mono':\\n    unquote(\\n      \\\"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\\\"\\n    ),\\n  'sans': unquote(\\\"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-condensed':\\n    unquote(\\\"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-hebrew':\\n    unquote(\\n      \\\"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\\\"\\n    ),\\n  'serif': unquote(\\\"'IBM Plex Serif', 'Georgia', Times, serif\\\"),\\n) !default;\\n\\n/// Get the font-family for an IBM Plex font\\n/// @param {String} $name\\n/// @return {String}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-family($name) {\\n  @return map-get($carbon--font-families, $name);\\n}\\n\\n/// Include the `font-family` definition for the given name in your selector\\n/// @param {String} $name\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-family($name) {\\n  font-family: carbon--font-family($name);\\n}\\n\\n/// Suggested font weights to be used in product\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-weights: (\\n  'light': 300,\\n  'regular': 400,\\n  'semibold': 600,\\n) !default;\\n\\n/// Retrieve the font-weight value for a given name\\n/// @param {String} $weight\\n/// @return {Number}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-weight($weight) {\\n  @return map-get($carbon--font-weights, $weight);\\n}\\n\\n/// Set the `font-weight` property with the value for a given name\\n/// @param {String} $weight\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-weight($weight) {\\n  font-weight: carbon--font-weight($weight);\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Makes SVGs accessible in high contrast mode\\n/// @link https://github.com/IBM/carbon-elements/issues/345#issuecomment-466577293 Carbon-elements #345\\n/// @access public\\n/// @group @carbon/icons\\n@mixin carbon--icons {\\n  @media screen and (-ms-high-contrast: active) {\\n    svg {\\n      fill: ButtonText;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n//----------------------------------------------\\n// Mixins\\n// ---------------------------------------------\\n//\\n//   Category             ||  Description\\n//   ===========================================\\n//   Misc                 ||  General helper @mixins\\n//   Deprecated           ||  Not used anymore\\n//   ===========================================\\n\\n//----------------------------------------------\\n// Misc\\n// ---------------------------------------------\\n\\n@import 'vars';\\n@import 'css--reset';\\n@import 'typography';\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n\\n/// Adds text overflow styling\\n/// @access public\\n/// @param {Number} $width [false] - Value of width if you want to set width, else nothing\\n/// @example @include text-overflow(300px);\\n/// @group global-helpers\\n@mixin text-overflow($width: false) {\\n  display: block;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n\\n  // apply a width if width parameter exists\\n  @if ($width) {\\n    width: $width;\\n  }\\n}\\n\\n/// Adds placeholder text color\\n/// @access public\\n/// @example @include placeholder-colors;\\n/// @group global-helpers\\n@mixin placeholder-colors {\\n  color: $text-05;\\n  opacity: 1;\\n}\\n\\n/// Adds box shadow\\n/// @access public\\n/// @example @include box-shadow;\\n/// @group global-helpers\\n@mixin box-shadow {\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\\n}\\n\\n/// Adds outline styles depending on specific type\\n/// @access public\\n/// @param {String} $type ['border'] - Type of outline from: `border`, `blurred`, `outline`, `invalid`, `reset`\\n/// @example @include focus-outline('outline');\\n/// @group global-helpers\\n@mixin focus-outline($type: 'border') {\\n  @if ($type == 'border') {\\n    outline: 1px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'blurred') {\\n    box-shadow: 0 0 0 3px $focus;\\n    outline: 1px solid transparent;\\n  }\\n\\n  @if ($type == 'outline') {\\n    outline: 2px solid $focus;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'outline-compat') {\\n    box-sizing: border-box;\\n    border: 2px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      border-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'invalid') {\\n    outline: 2px solid $support-01;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'reset') {\\n    outline: 2px solid transparent;\\n    outline-offset: -2px;\\n  }\\n}\\n\\n/// Adds rotational transformation\\n/// @access public\\n/// @param {Number} $deg - How many degrees to rotate\\n/// @param {Number} $speed - Speed of rotation\\n/// @param {Value} $origin [center] - `transform-origin`\\n/// @example @include rotate(90deg, 300ms);\\n/// @group global-helpers\\n@mixin rotate($deg, $speed, $origin: center) {\\n  transform: rotate($deg);\\n  transform-origin: $origin;\\n  transition: transform $speed;\\n}\\n\\n/// Adds styles to hide content\\n/// @access public\\n/// @group global-helpers\\n@mixin hidden {\\n  position: absolute;\\n  overflow: hidden;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  border: 0;\\n  margin: -1px;\\n  clip: rect(0, 0, 0, 0);\\n  visibility: inherit;\\n  white-space: nowrap;\\n}\\n\\n/// Resets button styles\\n/// @access public\\n/// @param {Bool} $width [true] - Sets width to 100% if true\\n/// @example @include button-reset($width: false);\\n/// @group global-helpers\\n@mixin button-reset($width: true) {\\n  @include reset;\\n\\n  display: inline-block;\\n  padding: 0;\\n  border: 0;\\n  appearance: none;\\n  background: none;\\n  cursor: pointer;\\n\\n  @if ($width == true) {\\n    width: 100%;\\n  }\\n\\n  &::-moz-focus-inner {\\n    border: 0;\\n  }\\n}\\n\\n/// Skeleton loading animation\\n/// @access public\\n/// @example @include skeleton;\\n/// @group global-helpers\\n@mixin skeleton {\\n  position: relative;\\n  padding: 0;\\n  border: none;\\n  background: $skeleton-01;\\n  box-shadow: none;\\n  pointer-events: none;\\n\\n  &:hover,\\n  &:focus,\\n  &:active {\\n    border: none;\\n    cursor: default;\\n    outline: none;\\n  }\\n\\n  &::before {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    animation: 3000ms ease-in-out skeleton infinite;\\n    background: $skeleton-02;\\n    content: '';\\n    will-change: transform-origin, transform, opacity;\\n\\n    @media (prefers-reduced-motion: reduce) {\\n      animation: none;\\n    }\\n  }\\n}\\n\\n@include exports('skeleton') {\\n  @keyframes skeleton {\\n    0% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    20% {\\n      opacity: 1;\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    28% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    51% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    58% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    82% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    83% {\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    96% {\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    100% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n  }\\n}\\n\\n/// Windows HCM Mixin\\n/// @access public\\n/// @example @include high-contrast-mode;\\n/// @group global-helpers\\n/// We should set HCM styles at the end of each file to ensure they are not overridden\\n@mixin high-contrast-mode($type: '') {\\n  @media screen and (-ms-high-contrast: active),\\n    (forced-colors: active),\\n    (prefers-contrast) {\\n    @if ($type == 'icon-fill') {\\n      fill: ButtonText;\\n    }\\n\\n    @if ($type == 'focus') {\\n      color: Highlight;\\n      outline: 1px solid Highlight;\\n    }\\n\\n    @if ($type == 'outline') {\\n      outline: 1px solid transparent;\\n    }\\n\\n    @if ($type == 'disabled') {\\n      color: GrayText;\\n      fill: GrayText;\\n    }\\n\\n    @content;\\n  }\\n}\\n\",\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import \\\"~carbon-components/src/globals/scss/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/mixins\\\";\\n@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n\\n.immunizationSequenceSelect{\\n  margin: $spacing-05 $spacing-07 $spacing-05;\\n}\\n\\n.form {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n}\\n\\n.button {\\n  height: 4rem;\\n  display: flex;\\n  align-content: flex-start;\\n  align-items: baseline;\\n  min-width: 50%;\\n}\\n\\n.tablet {\\n  padding: 1.5rem 1rem;\\n  background-color: $ui-02;\\n}\\n\\n.desktop {\\n  padding: 0rem;\\n}\\n\\n/* Desktop */\\n:global(.omrs-breakpoint-gt-tablet) {\\n  .form {\\n    height: calc(100vh - 6rem);\\n  }\\n}\\n\\n/* Tablet */\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .form {\\n    height: calc(100vh - 3rem);\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"immunizationSequenceSelect\": \"-esm-patient-immunizations__immunizations-form__immunizationSequenceSelect___7qH26\",\n\t\"form\": \"-esm-patient-immunizations__immunizations-form__form___0QVLq\",\n\t\"button\": \"-esm-patient-immunizations__immunizations-form__button___RclnW\",\n\t\"tablet\": \"-esm-patient-immunizations__immunizations-form__tablet___kmjCS\",\n\t\"desktop\": \"-esm-patient-immunizations__immunizations-form__desktop___AOAM6\",\n\t\"skeleton\": \"-esm-patient-immunizations__immunizations-form__skeleton___Kp1Qp\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["mapToImmunizationDose","immunizationBundleEntry","immunizationResource","resource","immunizationObsUuid","id","manufacturer","display","lotNumber","protocolApplied","length","sequenceLabel","series","sequenceNumber","doseNumberPositiveInt","occurrenceDateTime","dayjs","format","expirationDate","findCodeWithoutSystem","find","vaccineCode","coding","code","isUndefined","system","mapFromFHIRImmunizationBundle","immunizationBundle","groupByImmunization","groupBy","entry","immunizationResourceEntry","map","immunizationsForOneVaccine","existingDoses","codeWithoutSystem","vaccineName","vaccineUuid","orderBy","dose","get","toReferenceOfType","type","referenceValue","reference","mapToFHIRImmunizationResource","immunizationFormData","visitUuid","locationUuid","providerUuid","resourceType","status","patient","patientUuid","encounter","vaccinationDate","toDate","location","performer","actor","currentDose","immunizationFormSub","BehaviorSubject","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","formState","setFormState","useState","sequences","formChanged","updateSingle","name","value","state","t","useTranslation","currentUser","useSessionUser","currentVisit","useVisit","isTablet","useLayoutType","isViewEditMode","enableCreateButtons","enableEditButtons","closeWorkspace","React","detach","useEffect","sub","props","unsubscribe","handleFormSubmit","event","preventDefault","currentVisitUuid","uuid","currentLocationUuid","sessionLocation","currentProviderUuid","currentProvider","immunization","abortController","AbortController","savePatientImmunization","then","response","showToast","kind","description","err","showNotification","title","critical","message","abort","Form","className","styles","onSubmit","Select","onChange","s","isNumber","target","isNaN","parseInt","labelText","SelectItem","text","key","DatePicker","maxDate","Date","toISOString","dateFormat","datePickerType","date","DatePickerInput","placeholder","minDate","TextInput","evt","ButtonSet","Button","onClick","disabled","useImmunizationsConceptSet","immunizationsConfig","useConfig","conceptSetSearchTerm","vaccinesConceptSet","source","split","conceptSetMappingUrl","conceptSetUuidUrl","data","error","useSWR","searchText","includes","openmrsFetch","results","isError","isLoading","useImmunizations","immunizationsUrl","fhirBaseUrl","isValidating","existingImmunizations","patientImmunization","immunizationEndpoint","headers","method","body","signal","___CSS_LOADER_EXPORT___","push","module","locals"],"sourceRoot":""}