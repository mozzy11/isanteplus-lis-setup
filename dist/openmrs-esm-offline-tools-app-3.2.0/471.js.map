{"version":3,"file":"471.js","mappings":"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","sources":["webpack://@openmrs/esm-offline-tools-app/../../../node_modules/@carbon/icon-helpers/es/index.js","webpack://@openmrs/esm-offline-tools-app/../../../node_modules/@carbon/icons-react/es/Icon-63ed8f4f.js","webpack://@openmrs/esm-offline-tools-app/./src/hooks/offline-patient-data-hooks.ts","webpack://@openmrs/esm-offline-tools-app/./src/offline-patients/offline-patients.styles.scss?0c91","webpack://@openmrs/esm-offline-tools-app/../../../node_modules/@carbon/icons-react/es/checkmark--filled/16.js","webpack://@openmrs/esm-offline-tools-app/../../../node_modules/@carbon/icons-react/es/warning--filled/16.js","webpack://@openmrs/esm-offline-tools-app/./src/offline-patients/offline-patient-sync-details.styles.scss?ff9a","webpack://@openmrs/esm-offline-tools-app/./src/offline-patients/offline-patient-sync-details.component.tsx","webpack://@openmrs/esm-offline-tools-app/./src/offline-patients/offline-patients.component.tsx","webpack://@openmrs/esm-offline-tools-app/./src/offline-patients/offline-patient-sync-details.styles.scss","webpack://@openmrs/esm-offline-tools-app/./src/offline-patients/offline-patients.styles.scss","webpack://@openmrs/esm-offline-tools-app/../../../node_modules/prop-types/factoryWithThrowingShims.js","webpack://@openmrs/esm-offline-tools-app/../../../node_modules/prop-types/index.js","webpack://@openmrs/esm-offline-tools-app/../../../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar _excluded = [\"width\", \"height\", \"viewBox\"],\n    _excluded2 = [\"tabindex\"];\n\n/**\n * Copyright IBM Corp. 2018, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar defaultAttributes = {\n  // Reference:\n  // https://github.com/IBM/carbon-components-react/issues/1392\n  // https://github.com/PolymerElements/iron-iconset-svg/pull/47\n  // `focusable` is a string attribute which is why we do not use a boolean here\n  focusable: 'false',\n  preserveAspectRatio: 'xMidYMid meet'\n};\n/**\n * Get supplementary HTML attributes for a given <svg> element based on existing\n * attributes.\n */\n\nfunction getAttributes() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      width = _ref.width,\n      height = _ref.height,\n      _ref$viewBox = _ref.viewBox,\n      viewBox = _ref$viewBox === void 0 ? \"0 0 \".concat(width, \" \").concat(height) : _ref$viewBox,\n      attributes = _objectWithoutProperties(_ref, _excluded);\n\n  var tabindex = attributes.tabindex,\n      rest = _objectWithoutProperties(attributes, _excluded2);\n\n  var iconAttributes = _objectSpread2(_objectSpread2(_objectSpread2({}, defaultAttributes), rest), {}, {\n    width: width,\n    height: height,\n    viewBox: viewBox\n  }); // TODO: attributes.title assumes that the consumer will implement <title> and\n  // correctly set `aria-labelledby`.\n\n\n  if (iconAttributes['aria-label'] || iconAttributes['aria-labelledby'] || iconAttributes.title) {\n    iconAttributes.role = 'img'; // Reference:\n    // https://allyjs.io/tutorials/focusing-in-svg.html\n\n    if (tabindex !== undefined && tabindex !== null) {\n      iconAttributes.focusable = 'true';\n      iconAttributes.tabindex = tabindex;\n    }\n  } else {\n    iconAttributes['aria-hidden'] = true;\n  }\n\n  return iconAttributes;\n}\n\n/**\n * Copyright IBM Corp. 2018, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * Convert an icon descriptor to a String\n */\n\nfunction toString(descriptor) {\n  var _descriptor$elem = descriptor.elem,\n      elem = _descriptor$elem === void 0 ? 'svg' : _descriptor$elem,\n      _descriptor$attrs = descriptor.attrs,\n      attrs = _descriptor$attrs === void 0 ? {} : _descriptor$attrs,\n      _descriptor$content = descriptor.content,\n      content = _descriptor$content === void 0 ? [] : _descriptor$content;\n  var children = content.map(toString).join('');\n\n  if (elem !== 'svg') {\n    return \"<\".concat(elem, \" \").concat(formatAttributes(attrs), \">\").concat(children, \"</\").concat(elem, \">\");\n  }\n\n  return \"<\".concat(elem, \" \").concat(formatAttributes(getAttributes(attrs)), \">\").concat(children, \"</\").concat(elem, \">\");\n}\nfunction formatAttributes(attrs) {\n  return Object.keys(attrs).reduce(function (acc, key, index) {\n    var attribute = \"\".concat(key, \"=\\\"\").concat(attrs[key], \"\\\"\");\n\n    if (index === 0) {\n      return attribute;\n    }\n\n    return acc + ' ' + attribute;\n  }, '');\n}\n\n/**\n * Copyright IBM Corp. 2018, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * Convert an icon descriptor to a DOM node.\n */\n\nfunction toSVG(descriptor) {\n  var _descriptor$elem = descriptor.elem,\n      elem = _descriptor$elem === void 0 ? 'svg' : _descriptor$elem,\n      _descriptor$attrs = descriptor.attrs,\n      attrs = _descriptor$attrs === void 0 ? {} : _descriptor$attrs,\n      _descriptor$content = descriptor.content,\n      content = _descriptor$content === void 0 ? [] : _descriptor$content;\n  var node = document.createElementNS('http://www.w3.org/2000/svg', elem);\n  var attributes = elem !== 'svg' ? attrs : getAttributes(attrs);\n  Object.keys(attributes).forEach(function (key) {\n    node.setAttribute(key, attrs[key]);\n  });\n\n  for (var i = 0; i < content.length; i++) {\n    node.appendChild(toSVG(content[i]));\n  }\n\n  return node;\n}\n\nexport { defaultAttributes, formatAttributes, getAttributes, toSVG, toString };\n","/**\n * Copyright IBM Corp. 2019, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Code generated by @carbon/icon-build-helpers. DO NOT EDIT.\n */\nimport { getAttributes } from '@carbon/icon-helpers';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar Icon = /*#__PURE__*/React.forwardRef(function Icon(_ref, ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      tabIndex = _ref.tabIndex,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"children\", \"tabIndex\"]);\n\n  var _getAttributes = getAttributes(_objectSpread2(_objectSpread2({}, rest), {}, {\n    tabindex: tabIndex\n  })),\n      tabindex = _getAttributes.tabindex,\n      props = _objectWithoutProperties(_getAttributes, [\"tabindex\"]);\n\n  if (className) {\n    props.className = className;\n  }\n\n  if (tabindex !== undefined && tabindex !== null) {\n    props.tabIndex = tabindex;\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  return /*#__PURE__*/React.createElement('svg', props, children);\n});\nIcon.displayName = 'Icon';\nIcon.propTypes = {\n  'aria-hidden': PropTypes.string,\n  'aria-label': PropTypes.string,\n  'aria-labelledby': PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  height: PropTypes.number,\n  preserveAspectRatio: PropTypes.string,\n  tabIndex: PropTypes.string,\n  viewBox: PropTypes.string,\n  width: PropTypes.number,\n  xmlns: PropTypes.string\n};\nIcon.defaultProps = {\n  xmlns: 'http://www.w3.org/2000/svg',\n  preserveAspectRatio: 'xMidYMid meet'\n};\n\nexport { Icon as I, _objectWithoutProperties as _, _extends as a };\n","import { getOfflinePatientDataStore, useStore } from \"@openmrs/esm-framework\";\n\nexport function useOfflinePatientDataStore() {\n  const store = getOfflinePatientDataStore();\n  return useStore(store);\n}\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./offline-patients.styles.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./offline-patients.styles.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * Copyright IBM Corp. 2019, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Code generated by @carbon/icon-build-helpers. DO NOT EDIT.\n */\nimport { _ as _objectWithoutProperties, I as Icon, a as _extends } from '../Icon-63ed8f4f.js';\nimport React from 'react';\nimport '@carbon/icon-helpers';\nimport 'prop-types';\n\nvar _ref2 =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M8,1C4.1,1,1,4.1,1,8c0,3.9,3.1,7,7,7s7-3.1,7-7C15,4.1,11.9,1,8,1z M7,11L4.3,8.3l0.9-0.8L7,9.3l4-3.9l0.9,0.8L7,11z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M7,11L4.3,8.3l0.9-0.8L7,9.3l4-3.9l0.9,0.8L7,11z\",\n  \"data-icon-path\": \"inner-path\",\n  opacity: \"0\"\n});\n\nvar CheckmarkFilled16 = /*#__PURE__*/React.forwardRef(function CheckmarkFilled16(_ref, ref) {\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"currentColor\",\n    ref: ref\n  }, rest), _ref2, _ref3, children);\n});\n\nexport default CheckmarkFilled16;\n","/**\n * Copyright IBM Corp. 2019, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Code generated by @carbon/icon-build-helpers. DO NOT EDIT.\n */\nimport { _ as _objectWithoutProperties, I as Icon, a as _extends } from '../Icon-63ed8f4f.js';\nimport React from 'react';\nimport '@carbon/icon-helpers';\nimport 'prop-types';\n\nvar _ref2 =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M8,1C4.2,1,1,4.2,1,8s3.2,7,7,7s7-3.1,7-7S11.9,1,8,1z M7.5,4h1v5h-1C7.5,9,7.5,4,7.5,4z M8,12.2\\tc-0.4,0-0.8-0.4-0.8-0.8s0.3-0.8,0.8-0.8c0.4,0,0.8,0.4,0.8,0.8S8.4,12.2,8,12.2z\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\n\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M7.5,4h1v5h-1C7.5,9,7.5,4,7.5,4z M8,12.2c-0.4,0-0.8-0.4-0.8-0.8s0.3-0.8,0.8-0.8\\tc0.4,0,0.8,0.4,0.8,0.8S8.4,12.2,8,12.2z\",\n  \"data-icon-path\": \"inner-path\",\n  opacity: \"0\"\n});\n\nvar WarningFilled16 = /*#__PURE__*/React.forwardRef(function WarningFilled16(_ref, ref) {\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"currentColor\",\n    ref: ref\n  }, rest), _ref2, _ref3, children);\n});\n\nexport default WarningFilled16;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./offline-patient-sync-details.styles.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/sass-loader/dist/cjs.js!./offline-patient-sync-details.styles.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { OfflinePatientDataSyncStore } from \"@openmrs/esm-framework\";\nimport { Tile } from \"carbon-components-react\";\nimport { useOfflinePatientDataStore } from \"../hooks/offline-patient-data-hooks\";\nimport CheckmarkFilled16 from \"@carbon/icons-react/es/checkmark--filled/16\";\nimport WarningFilled16 from \"@carbon/icons-react/es/warning--filled/16\";\nimport styles from \"./offline-patient-sync-details.styles.scss\";\nimport SharedPageLayout from \"../components/shared-page-layout.component\";\n\ninterface OfflinePatientSyncDetailsParams {\n  patientUuid: string;\n}\n\nconst OfflinePatientSyncDetails: React.FC<\n  RouteComponentProps<OfflinePatientSyncDetailsParams>\n> = ({ match }) => {\n  const { t } = useTranslation();\n  const store = useOfflinePatientDataStore();\n  const patientUuid: string = match.params.patientUuid;\n  const syncedHandlers = getHandlersForDisplay(\n    store.offlinePatientDataSyncState[patientUuid]?.syncedHandlers ?? [],\n    store\n  );\n  const failedHandlers = getHandlersForDisplay(\n    store.offlinePatientDataSyncState[patientUuid]?.failedHandlers ?? [],\n    store\n  );\n\n  return (\n    <SharedPageLayout\n      header={t(\"offlinePatientSyncDetailsHeader\", \"Offline patient details\")}\n    >\n      <div className={styles.contentContainer}>\n        {syncedHandlers.length > 0 && (\n          <section className={styles.headeredTileSection}>\n            <h2 className={styles.productiveHeading02}>\n              {t(\n                \"offlinePatientSyncDetailsDownloadedHeader\",\n                \"Downloaded to this device\"\n              )}\n            </h2>\n            {syncedHandlers.map(({ handler }) => (\n              <Tile className={styles.syncedTile} light>\n                <span className={styles.bodyShort01}>\n                  {handler.displayName}\n                </span>\n                <CheckmarkFilled16 className={styles.syncedTileIcon} />\n              </Tile>\n            ))}\n          </section>\n        )}\n        {failedHandlers.length > 0 && (\n          <section className={styles.headeredTileSection}>\n            <h2 className={styles.productiveHeading02}>\n              {t(\n                \"offlinePatientSyncDetailsFailedHeader\",\n                \"There was an error downloading the following items\"\n              )}\n            </h2>\n            {failedHandlers.map(({ identifier, handler }) => (\n              <Tile className={styles.failedTile} light>\n                <span className={styles.bodyShort01}>\n                  {handler.displayName}\n                </span>\n                <WarningFilled16 className={styles.failedTileIcon} />\n                <span\n                  className={`${styles.failedTileErrorMessage} ${styles.label01}`}\n                >\n                  {store.offlinePatientDataSyncState[patientUuid]?.errors[\n                    identifier\n                  ] ??\n                    t(\n                      \"offlinePatientSyncDetailsFallbackErrorMessage\",\n                      \"Unknown error.\"\n                    )}\n                </span>\n              </Tile>\n            ))}\n          </section>\n        )}\n      </div>\n    </SharedPageLayout>\n  );\n};\n\nfunction getHandlersForDisplay(\n  identifiers: Array<string>,\n  store: OfflinePatientDataSyncStore\n) {\n  const displayableHandlers = getHandlerIdentifiersForDisplay(store);\n  return identifiers\n    .filter((identifier) => displayableHandlers.includes(identifier))\n    .map((identifier) => ({ identifier, handler: store.handlers[identifier] }));\n}\n\nfunction getHandlerIdentifiersForDisplay(store: OfflinePatientDataSyncStore) {\n  return Object.entries(store.handlers)\n    .filter(([_, handler]) => !!handler.displayName?.trim())\n    .map(([identifier]) => identifier);\n}\n\nexport default OfflinePatientSyncDetails;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ExtensionSlot } from \"@openmrs/esm-framework\";\nimport SharedPageLayout from \"../components/shared-page-layout.component\";\nimport styles from \"./offline-patients.styles.scss\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport OfflinePatientSyncDetails from \"./offline-patient-sync-details.component\";\n\nexport interface OfflinePatientsProps {\n  basePath: string;\n}\n\nconst OfflinePatients: React.FC<OfflinePatientsProps> = ({ basePath }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BrowserRouter basename={basePath}>\n      <Switch>\n        <Route\n          exact\n          path=\"/:patientUuid/offline-data\"\n          component={OfflinePatientSyncDetails}\n        />\n        <Route exact>\n          <SharedPageLayout\n            header={t(\"offlinePatientsHeader\", \"Offline patients\")}\n          >\n            <div className={styles.contentContainer}>\n              <ExtensionSlot extensionSlotName=\"offline-tools-offline-patients-slot\" />\n            </div>\n          </SharedPageLayout>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default OfflinePatients;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-offline-tools__offline-patient-sync-details-styles__productiveHeading01___B9ezF{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.-esm-offline-tools__offline-patient-sync-details-styles__productiveHeading02___1dXH-{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-offline-tools__offline-patient-sync-details-styles__productiveHeading03___1aVXX{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-offline-tools__offline-patient-sync-details-styles__productiveHeading04___3AlQP{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-offline-tools__offline-patient-sync-details-styles__bodyShort01___1f3as{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.-esm-offline-tools__offline-patient-sync-details-styles__bodyLong01___KcDc4{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-offline-tools__offline-patient-sync-details-styles__label01___2SGBg{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-offline-tools__offline-patient-sync-details-styles__contentContainer___2XwZ7{padding:0 1rem;max-width:800px}.-esm-offline-tools__offline-patient-sync-details-styles__headeredTileSection___1Qpzw{margin-bottom:3rem}.-esm-offline-tools__offline-patient-sync-details-styles__headeredTileSection___1Qpzw .-esm-offline-tools__offline-patient-sync-details-styles__productiveHeading02___1dXH-{margin-bottom:.5rem}.-esm-offline-tools__offline-patient-sync-details-styles__syncedTile___PMw68{display:flex;justify-content:space-between;align-items:center;margin-bottom:.5rem}.-esm-offline-tools__offline-patient-sync-details-styles__failedTile___1UOfj{margin-bottom:.5rem;display:grid;grid-template-rows:1fr 1fr;grid-template-columns:1fr auto;align-items:center;row-gap:1rem}.-esm-offline-tools__offline-patient-sync-details-styles__failedTileErrorMessage___3uQmW{color:#da1e28}.-esm-offline-tools__offline-patient-sync-details-styles__syncedTileIcon___1Vhxw{color:#24a148}.-esm-offline-tools__offline-patient-sync-details-styles__failedTileIcon___7b_4q{color:#da1e28}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../framework/esm-styleguide/src/_vars.scss\",\"webpack://./src/root.scss\",\"webpack://./../../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./src/offline-patients/offline-patient-sync-details.styles.scss\",\"webpack://./../../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCzCF,sFC4gBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD7rB1B,sFCwgBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CDzrB1B,sFCogBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CDrrB1B,sFCggBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,gBAqLsB,CDjrB1B,8EC4fI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD7qB1B,6ECwfI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDzqB1B,0ECofI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CClsB1B,mFACE,cAAA,CACA,eAAA,CAGF,sFACE,kBC+Ia,CD7Ib,4KACE,mBCsIW,CDlIf,6EACE,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,mBC8Ha,CD3Hf,6EACE,mBC0Ha,CDzHb,YAAA,CACA,0BAAA,CACA,8BAAA,CACA,kBAAA,CACA,YCuHa,CDpHf,yFACE,aCkCa,CD/Bf,iFACE,aC+Ba,CD5Bf,iFACE,aC0Ba\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"carbon-components/scss/globals/scss/typography.scss\\\";\\n\\n.productiveHeading01 {\\n  @include carbon--type-style(\\\"productive-heading-01\\\");\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n}\\n\\n.productiveHeading03 {\\n  @include carbon--type-style(\\\"productive-heading-03\\\");\\n}\\n\\n.productiveHeading04 {\\n  @include carbon--type-style(\\\"productive-heading-04\\\");\\n}\\n\\n.bodyShort01 {\\n  @include carbon--type-style(\\\"body-short-01\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\\n.label01 {\\n  @include carbon--type-style(\\\"label-01\\\");\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"@import \\\"../root.scss\\\";\\n\\n.contentContainer {\\n  padding: 0 $spacing-05;\\n  max-width: 800px;\\n}\\n\\n.headeredTileSection {\\n  margin-bottom: $spacing-09;\\n\\n  .productiveHeading02 {\\n    margin-bottom: $spacing-03;\\n  }\\n}\\n\\n.syncedTile {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: $spacing-03;\\n}\\n\\n.failedTile {\\n  margin-bottom: $spacing-03;\\n  display: grid;\\n  grid-template-rows: 1fr 1fr;\\n  grid-template-columns: 1fr auto;\\n  align-items: center;\\n  row-gap: $spacing-05;\\n}\\n\\n.failedTileErrorMessage {\\n  color: $support-01;\\n}\\n\\n.syncedTileIcon {\\n  color: $support-02;\\n}\\n\\n.failedTileIcon {\\n  color: $support-01;\\n}\\n\",\"// Code generated by @carbon/themes. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './themes';\\n\\n/// Define theme variables from a map of tokens\\n/// @access public\\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\\n///\\n/// @example scss\\n///   // Default usage\\n///   @include carbon--theme();\\n///\\n///   // Alternate styling (not white theme)\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     // declarations...\\n///   }\\n///\\n///   // Inline styling\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     .my-dark-theme {\\n///       // declarations...\\n///     }\\n///   }\\n///\\n/// @group @carbon/themes\\n@mixin carbon--theme(\\n  $theme: $carbon--theme,\\n  $emit-custom-properties: false,\\n  $emit-difference: false\\n) {\\n  $parent-carbon-theme: $carbon--theme;\\n  $carbon--theme: $theme !global;\\n  $interactive-01: map-get($theme, 'interactive-01') !global;\\n  $interactive-02: map-get($theme, 'interactive-02') !global;\\n  $interactive-03: map-get($theme, 'interactive-03') !global;\\n  $interactive-04: map-get($theme, 'interactive-04') !global;\\n  $ui-background: map-get($theme, 'ui-background') !global;\\n  $ui-01: map-get($theme, 'ui-01') !global;\\n  $ui-02: map-get($theme, 'ui-02') !global;\\n  $ui-03: map-get($theme, 'ui-03') !global;\\n  $ui-04: map-get($theme, 'ui-04') !global;\\n  $ui-05: map-get($theme, 'ui-05') !global;\\n  $text-01: map-get($theme, 'text-01') !global;\\n  $text-02: map-get($theme, 'text-02') !global;\\n  $text-03: map-get($theme, 'text-03') !global;\\n  $text-04: map-get($theme, 'text-04') !global;\\n  $text-05: map-get($theme, 'text-05') !global;\\n  $text-error: map-get($theme, 'text-error') !global;\\n  $icon-01: map-get($theme, 'icon-01') !global;\\n  $icon-02: map-get($theme, 'icon-02') !global;\\n  $icon-03: map-get($theme, 'icon-03') !global;\\n  $link-01: map-get($theme, 'link-01') !global;\\n  $link-02: map-get($theme, 'link-02') !global;\\n  $inverse-link: map-get($theme, 'inverse-link') !global;\\n  $field-01: map-get($theme, 'field-01') !global;\\n  $field-02: map-get($theme, 'field-02') !global;\\n  $inverse-01: map-get($theme, 'inverse-01') !global;\\n  $inverse-02: map-get($theme, 'inverse-02') !global;\\n  $support-01: map-get($theme, 'support-01') !global;\\n  $support-02: map-get($theme, 'support-02') !global;\\n  $support-03: map-get($theme, 'support-03') !global;\\n  $support-04: map-get($theme, 'support-04') !global;\\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\\n  $overlay-01: map-get($theme, 'overlay-01') !global;\\n  $danger-01: map-get($theme, 'danger-01') !global;\\n  $danger-02: map-get($theme, 'danger-02') !global;\\n  $focus: map-get($theme, 'focus') !global;\\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\\n  $hover-primary: map-get($theme, 'hover-primary') !global;\\n  $active-primary: map-get($theme, 'active-primary') !global;\\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\\n  $active-secondary: map-get($theme, 'active-secondary') !global;\\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\\n  $hover-ui: map-get($theme, 'hover-ui') !global;\\n  $hover-light-ui: map-get($theme, 'hover-light-ui') !global;\\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\\n  $active-ui: map-get($theme, 'active-ui') !global;\\n  $active-light-ui: map-get($theme, 'active-light-ui') !global;\\n  $selected-ui: map-get($theme, 'selected-ui') !global;\\n  $selected-light-ui: map-get($theme, 'selected-light-ui') !global;\\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\\n  $hover-danger: map-get($theme, 'hover-danger') !global;\\n  $active-danger: map-get($theme, 'active-danger') !global;\\n  $hover-row: map-get($theme, 'hover-row') !global;\\n  $visited-link: map-get($theme, 'visited-link') !global;\\n  $disabled-01: map-get($theme, 'disabled-01') !global;\\n  $disabled-02: map-get($theme, 'disabled-02') !global;\\n  $disabled-03: map-get($theme, 'disabled-03') !global;\\n  $highlight: map-get($theme, 'highlight') !global;\\n  $decorative-01: map-get($theme, 'decorative-01') !global;\\n  $button-separator: map-get($theme, 'button-separator') !global;\\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\\n  $brand-01: map-get($theme, 'brand-01') !global;\\n  $brand-02: map-get($theme, 'brand-02') !global;\\n  $brand-03: map-get($theme, 'brand-03') !global;\\n  $active-01: map-get($theme, 'active-01') !global;\\n  $hover-field: map-get($theme, 'hover-field') !global;\\n  $danger: map-get($theme, 'danger') !global;\\n  $caption-01: map-get($theme, 'caption-01') !global;\\n  $label-01: map-get($theme, 'label-01') !global;\\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\\n  $body-short-01: map-get($theme, 'body-short-01') !global;\\n  $body-long-01: map-get($theme, 'body-long-01') !global;\\n  $body-short-02: map-get($theme, 'body-short-02') !global;\\n  $body-long-02: map-get($theme, 'body-long-02') !global;\\n  $code-01: map-get($theme, 'code-01') !global;\\n  $code-02: map-get($theme, 'code-02') !global;\\n  $heading-01: map-get($theme, 'heading-01') !global;\\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\\n  $heading-02: map-get($theme, 'heading-02') !global;\\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\\n  $quotation-01: map-get($theme, 'quotation-01') !global;\\n  $quotation-02: map-get($theme, 'quotation-02') !global;\\n  $display-01: map-get($theme, 'display-01') !global;\\n  $display-02: map-get($theme, 'display-02') !global;\\n  $display-03: map-get($theme, 'display-03') !global;\\n  $display-04: map-get($theme, 'display-04') !global;\\n  $spacing-01: map-get($theme, 'spacing-01') !global;\\n  $spacing-02: map-get($theme, 'spacing-02') !global;\\n  $spacing-03: map-get($theme, 'spacing-03') !global;\\n  $spacing-04: map-get($theme, 'spacing-04') !global;\\n  $spacing-05: map-get($theme, 'spacing-05') !global;\\n  $spacing-06: map-get($theme, 'spacing-06') !global;\\n  $spacing-07: map-get($theme, 'spacing-07') !global;\\n  $spacing-08: map-get($theme, 'spacing-08') !global;\\n  $spacing-09: map-get($theme, 'spacing-09') !global;\\n  $spacing-10: map-get($theme, 'spacing-10') !global;\\n  $spacing-11: map-get($theme, 'spacing-11') !global;\\n  $spacing-12: map-get($theme, 'spacing-12') !global;\\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\\n  $layout-01: map-get($theme, 'layout-01') !global;\\n  $layout-02: map-get($theme, 'layout-02') !global;\\n  $layout-03: map-get($theme, 'layout-03') !global;\\n  $layout-04: map-get($theme, 'layout-04') !global;\\n  $layout-05: map-get($theme, 'layout-05') !global;\\n  $layout-06: map-get($theme, 'layout-06') !global;\\n  $layout-07: map-get($theme, 'layout-07') !global;\\n  $container-01: map-get($theme, 'container-01') !global;\\n  $container-02: map-get($theme, 'container-02') !global;\\n  $container-03: map-get($theme, 'container-03') !global;\\n  $container-04: map-get($theme, 'container-04') !global;\\n  $container-05: map-get($theme, 'container-05') !global;\\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\\n\\n  @if global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-css-custom-properties')\\n  {\\n    $interactive-01: var(\\n      --#{$custom-property-prefix}-interactive-01,\\n      map-get($theme, 'interactive-01')\\n    ) !global;\\n    $interactive-02: var(\\n      --#{$custom-property-prefix}-interactive-02,\\n      map-get($theme, 'interactive-02')\\n    ) !global;\\n    $interactive-03: var(\\n      --#{$custom-property-prefix}-interactive-03,\\n      map-get($theme, 'interactive-03')\\n    ) !global;\\n    $interactive-04: var(\\n      --#{$custom-property-prefix}-interactive-04,\\n      map-get($theme, 'interactive-04')\\n    ) !global;\\n    $ui-background: var(\\n      --#{$custom-property-prefix}-ui-background,\\n      map-get($theme, 'ui-background')\\n    ) !global;\\n    $ui-01: var(\\n      --#{$custom-property-prefix}-ui-01,\\n      map-get($theme, 'ui-01')\\n    ) !global;\\n    $ui-02: var(\\n      --#{$custom-property-prefix}-ui-02,\\n      map-get($theme, 'ui-02')\\n    ) !global;\\n    $ui-03: var(\\n      --#{$custom-property-prefix}-ui-03,\\n      map-get($theme, 'ui-03')\\n    ) !global;\\n    $ui-04: var(\\n      --#{$custom-property-prefix}-ui-04,\\n      map-get($theme, 'ui-04')\\n    ) !global;\\n    $ui-05: var(\\n      --#{$custom-property-prefix}-ui-05,\\n      map-get($theme, 'ui-05')\\n    ) !global;\\n    $text-01: var(\\n      --#{$custom-property-prefix}-text-01,\\n      map-get($theme, 'text-01')\\n    ) !global;\\n    $text-02: var(\\n      --#{$custom-property-prefix}-text-02,\\n      map-get($theme, 'text-02')\\n    ) !global;\\n    $text-03: var(\\n      --#{$custom-property-prefix}-text-03,\\n      map-get($theme, 'text-03')\\n    ) !global;\\n    $text-04: var(\\n      --#{$custom-property-prefix}-text-04,\\n      map-get($theme, 'text-04')\\n    ) !global;\\n    $text-05: var(\\n      --#{$custom-property-prefix}-text-05,\\n      map-get($theme, 'text-05')\\n    ) !global;\\n    $text-error: var(\\n      --#{$custom-property-prefix}-text-error,\\n      map-get($theme, 'text-error')\\n    ) !global;\\n    $icon-01: var(\\n      --#{$custom-property-prefix}-icon-01,\\n      map-get($theme, 'icon-01')\\n    ) !global;\\n    $icon-02: var(\\n      --#{$custom-property-prefix}-icon-02,\\n      map-get($theme, 'icon-02')\\n    ) !global;\\n    $icon-03: var(\\n      --#{$custom-property-prefix}-icon-03,\\n      map-get($theme, 'icon-03')\\n    ) !global;\\n    $link-01: var(\\n      --#{$custom-property-prefix}-link-01,\\n      map-get($theme, 'link-01')\\n    ) !global;\\n    $link-02: var(\\n      --#{$custom-property-prefix}-link-02,\\n      map-get($theme, 'link-02')\\n    ) !global;\\n    $inverse-link: var(\\n      --#{$custom-property-prefix}-inverse-link,\\n      map-get($theme, 'inverse-link')\\n    ) !global;\\n    $field-01: var(\\n      --#{$custom-property-prefix}-field-01,\\n      map-get($theme, 'field-01')\\n    ) !global;\\n    $field-02: var(\\n      --#{$custom-property-prefix}-field-02,\\n      map-get($theme, 'field-02')\\n    ) !global;\\n    $inverse-01: var(\\n      --#{$custom-property-prefix}-inverse-01,\\n      map-get($theme, 'inverse-01')\\n    ) !global;\\n    $inverse-02: var(\\n      --#{$custom-property-prefix}-inverse-02,\\n      map-get($theme, 'inverse-02')\\n    ) !global;\\n    $support-01: var(\\n      --#{$custom-property-prefix}-support-01,\\n      map-get($theme, 'support-01')\\n    ) !global;\\n    $support-02: var(\\n      --#{$custom-property-prefix}-support-02,\\n      map-get($theme, 'support-02')\\n    ) !global;\\n    $support-03: var(\\n      --#{$custom-property-prefix}-support-03,\\n      map-get($theme, 'support-03')\\n    ) !global;\\n    $support-04: var(\\n      --#{$custom-property-prefix}-support-04,\\n      map-get($theme, 'support-04')\\n    ) !global;\\n    $inverse-support-01: var(\\n      --#{$custom-property-prefix}-inverse-support-01,\\n      map-get($theme, 'inverse-support-01')\\n    ) !global;\\n    $inverse-support-02: var(\\n      --#{$custom-property-prefix}-inverse-support-02,\\n      map-get($theme, 'inverse-support-02')\\n    ) !global;\\n    $inverse-support-03: var(\\n      --#{$custom-property-prefix}-inverse-support-03,\\n      map-get($theme, 'inverse-support-03')\\n    ) !global;\\n    $inverse-support-04: var(\\n      --#{$custom-property-prefix}-inverse-support-04,\\n      map-get($theme, 'inverse-support-04')\\n    ) !global;\\n    $overlay-01: var(\\n      --#{$custom-property-prefix}-overlay-01,\\n      map-get($theme, 'overlay-01')\\n    ) !global;\\n    $danger-01: var(\\n      --#{$custom-property-prefix}-danger-01,\\n      map-get($theme, 'danger-01')\\n    ) !global;\\n    $danger-02: var(\\n      --#{$custom-property-prefix}-danger-02,\\n      map-get($theme, 'danger-02')\\n    ) !global;\\n    $focus: var(\\n      --#{$custom-property-prefix}-focus,\\n      map-get($theme, 'focus')\\n    ) !global;\\n    $inverse-focus-ui: var(\\n      --#{$custom-property-prefix}-inverse-focus-ui,\\n      map-get($theme, 'inverse-focus-ui')\\n    ) !global;\\n    $hover-primary: var(\\n      --#{$custom-property-prefix}-hover-primary,\\n      map-get($theme, 'hover-primary')\\n    ) !global;\\n    $active-primary: var(\\n      --#{$custom-property-prefix}-active-primary,\\n      map-get($theme, 'active-primary')\\n    ) !global;\\n    $hover-primary-text: var(\\n      --#{$custom-property-prefix}-hover-primary-text,\\n      map-get($theme, 'hover-primary-text')\\n    ) !global;\\n    $hover-secondary: var(\\n      --#{$custom-property-prefix}-hover-secondary,\\n      map-get($theme, 'hover-secondary')\\n    ) !global;\\n    $active-secondary: var(\\n      --#{$custom-property-prefix}-active-secondary,\\n      map-get($theme, 'active-secondary')\\n    ) !global;\\n    $hover-tertiary: var(\\n      --#{$custom-property-prefix}-hover-tertiary,\\n      map-get($theme, 'hover-tertiary')\\n    ) !global;\\n    $active-tertiary: var(\\n      --#{$custom-property-prefix}-active-tertiary,\\n      map-get($theme, 'active-tertiary')\\n    ) !global;\\n    $hover-ui: var(\\n      --#{$custom-property-prefix}-hover-ui,\\n      map-get($theme, 'hover-ui')\\n    ) !global;\\n    $hover-light-ui: var(\\n      --#{$custom-property-prefix}-hover-light-ui,\\n      map-get($theme, 'hover-light-ui')\\n    ) !global;\\n    $hover-selected-ui: var(\\n      --#{$custom-property-prefix}-hover-selected-ui,\\n      map-get($theme, 'hover-selected-ui')\\n    ) !global;\\n    $active-ui: var(\\n      --#{$custom-property-prefix}-active-ui,\\n      map-get($theme, 'active-ui')\\n    ) !global;\\n    $active-light-ui: var(\\n      --#{$custom-property-prefix}-active-light-ui,\\n      map-get($theme, 'active-light-ui')\\n    ) !global;\\n    $selected-ui: var(\\n      --#{$custom-property-prefix}-selected-ui,\\n      map-get($theme, 'selected-ui')\\n    ) !global;\\n    $selected-light-ui: var(\\n      --#{$custom-property-prefix}-selected-light-ui,\\n      map-get($theme, 'selected-light-ui')\\n    ) !global;\\n    $inverse-hover-ui: var(\\n      --#{$custom-property-prefix}-inverse-hover-ui,\\n      map-get($theme, 'inverse-hover-ui')\\n    ) !global;\\n    $hover-danger: var(\\n      --#{$custom-property-prefix}-hover-danger,\\n      map-get($theme, 'hover-danger')\\n    ) !global;\\n    $active-danger: var(\\n      --#{$custom-property-prefix}-active-danger,\\n      map-get($theme, 'active-danger')\\n    ) !global;\\n    $hover-row: var(\\n      --#{$custom-property-prefix}-hover-row,\\n      map-get($theme, 'hover-row')\\n    ) !global;\\n    $visited-link: var(\\n      --#{$custom-property-prefix}-visited-link,\\n      map-get($theme, 'visited-link')\\n    ) !global;\\n    $disabled-01: var(\\n      --#{$custom-property-prefix}-disabled-01,\\n      map-get($theme, 'disabled-01')\\n    ) !global;\\n    $disabled-02: var(\\n      --#{$custom-property-prefix}-disabled-02,\\n      map-get($theme, 'disabled-02')\\n    ) !global;\\n    $disabled-03: var(\\n      --#{$custom-property-prefix}-disabled-03,\\n      map-get($theme, 'disabled-03')\\n    ) !global;\\n    $highlight: var(\\n      --#{$custom-property-prefix}-highlight,\\n      map-get($theme, 'highlight')\\n    ) !global;\\n    $decorative-01: var(\\n      --#{$custom-property-prefix}-decorative-01,\\n      map-get($theme, 'decorative-01')\\n    ) !global;\\n    $button-separator: var(\\n      --#{$custom-property-prefix}-button-separator,\\n      map-get($theme, 'button-separator')\\n    ) !global;\\n    $skeleton-01: var(\\n      --#{$custom-property-prefix}-skeleton-01,\\n      map-get($theme, 'skeleton-01')\\n    ) !global;\\n    $skeleton-02: var(\\n      --#{$custom-property-prefix}-skeleton-02,\\n      map-get($theme, 'skeleton-02')\\n    ) !global;\\n    $brand-01: var(\\n      --#{$custom-property-prefix}-brand-01,\\n      map-get($theme, 'brand-01')\\n    ) !global;\\n    $brand-02: var(\\n      --#{$custom-property-prefix}-brand-02,\\n      map-get($theme, 'brand-02')\\n    ) !global;\\n    $brand-03: var(\\n      --#{$custom-property-prefix}-brand-03,\\n      map-get($theme, 'brand-03')\\n    ) !global;\\n    $active-01: var(\\n      --#{$custom-property-prefix}-active-01,\\n      map-get($theme, 'active-01')\\n    ) !global;\\n    $hover-field: var(\\n      --#{$custom-property-prefix}-hover-field,\\n      map-get($theme, 'hover-field')\\n    ) !global;\\n    $danger: var(\\n      --#{$custom-property-prefix}-danger,\\n      map-get($theme, 'danger')\\n    ) !global;\\n    $spacing-01: var(\\n      --#{$custom-property-prefix}-spacing-01,\\n      map-get($theme, 'spacing-01')\\n    ) !global;\\n    $spacing-02: var(\\n      --#{$custom-property-prefix}-spacing-02,\\n      map-get($theme, 'spacing-02')\\n    ) !global;\\n    $spacing-03: var(\\n      --#{$custom-property-prefix}-spacing-03,\\n      map-get($theme, 'spacing-03')\\n    ) !global;\\n    $spacing-04: var(\\n      --#{$custom-property-prefix}-spacing-04,\\n      map-get($theme, 'spacing-04')\\n    ) !global;\\n    $spacing-05: var(\\n      --#{$custom-property-prefix}-spacing-05,\\n      map-get($theme, 'spacing-05')\\n    ) !global;\\n    $spacing-06: var(\\n      --#{$custom-property-prefix}-spacing-06,\\n      map-get($theme, 'spacing-06')\\n    ) !global;\\n    $spacing-07: var(\\n      --#{$custom-property-prefix}-spacing-07,\\n      map-get($theme, 'spacing-07')\\n    ) !global;\\n    $spacing-08: var(\\n      --#{$custom-property-prefix}-spacing-08,\\n      map-get($theme, 'spacing-08')\\n    ) !global;\\n    $spacing-09: var(\\n      --#{$custom-property-prefix}-spacing-09,\\n      map-get($theme, 'spacing-09')\\n    ) !global;\\n    $spacing-10: var(\\n      --#{$custom-property-prefix}-spacing-10,\\n      map-get($theme, 'spacing-10')\\n    ) !global;\\n    $spacing-11: var(\\n      --#{$custom-property-prefix}-spacing-11,\\n      map-get($theme, 'spacing-11')\\n    ) !global;\\n    $spacing-12: var(\\n      --#{$custom-property-prefix}-spacing-12,\\n      map-get($theme, 'spacing-12')\\n    ) !global;\\n    $fluid-spacing-01: var(\\n      --#{$custom-property-prefix}-fluid-spacing-01,\\n      map-get($theme, 'fluid-spacing-01')\\n    ) !global;\\n    $fluid-spacing-02: var(\\n      --#{$custom-property-prefix}-fluid-spacing-02,\\n      map-get($theme, 'fluid-spacing-02')\\n    ) !global;\\n    $fluid-spacing-03: var(\\n      --#{$custom-property-prefix}-fluid-spacing-03,\\n      map-get($theme, 'fluid-spacing-03')\\n    ) !global;\\n    $fluid-spacing-04: var(\\n      --#{$custom-property-prefix}-fluid-spacing-04,\\n      map-get($theme, 'fluid-spacing-04')\\n    ) !global;\\n    $layout-01: var(\\n      --#{$custom-property-prefix}-layout-01,\\n      map-get($theme, 'layout-01')\\n    ) !global;\\n    $layout-02: var(\\n      --#{$custom-property-prefix}-layout-02,\\n      map-get($theme, 'layout-02')\\n    ) !global;\\n    $layout-03: var(\\n      --#{$custom-property-prefix}-layout-03,\\n      map-get($theme, 'layout-03')\\n    ) !global;\\n    $layout-04: var(\\n      --#{$custom-property-prefix}-layout-04,\\n      map-get($theme, 'layout-04')\\n    ) !global;\\n    $layout-05: var(\\n      --#{$custom-property-prefix}-layout-05,\\n      map-get($theme, 'layout-05')\\n    ) !global;\\n    $layout-06: var(\\n      --#{$custom-property-prefix}-layout-06,\\n      map-get($theme, 'layout-06')\\n    ) !global;\\n    $layout-07: var(\\n      --#{$custom-property-prefix}-layout-07,\\n      map-get($theme, 'layout-07')\\n    ) !global;\\n    $container-01: var(\\n      --#{$custom-property-prefix}-container-01,\\n      map-get($theme, 'container-01')\\n    ) !global;\\n    $container-02: var(\\n      --#{$custom-property-prefix}-container-02,\\n      map-get($theme, 'container-02')\\n    ) !global;\\n    $container-03: var(\\n      --#{$custom-property-prefix}-container-03,\\n      map-get($theme, 'container-03')\\n    ) !global;\\n    $container-04: var(\\n      --#{$custom-property-prefix}-container-04,\\n      map-get($theme, 'container-04')\\n    ) !global;\\n    $container-05: var(\\n      --#{$custom-property-prefix}-container-05,\\n      map-get($theme, 'container-05')\\n    ) !global;\\n    $icon-size-01: var(\\n      --#{$custom-property-prefix}-icon-size-01,\\n      map-get($theme, 'icon-size-01')\\n    ) !global;\\n    $icon-size-02: var(\\n      --#{$custom-property-prefix}-icon-size-02,\\n      map-get($theme, 'icon-size-02')\\n    ) !global;\\n  }\\n  @if $emit-custom-properties == true {\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-01',\\n        map-get($theme, 'interactive-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-02',\\n        map-get($theme, 'interactive-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-03',\\n        map-get($theme, 'interactive-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-04',\\n        map-get($theme, 'interactive-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'ui-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'ui-background',\\n        map-get($theme, 'ui-background')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-01', $emit-difference) {\\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-02', $emit-difference) {\\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-03', $emit-difference) {\\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-04', $emit-difference) {\\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-05', $emit-difference) {\\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-01', $emit-difference) {\\n      @include custom-property('text-01', map-get($theme, 'text-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-02', $emit-difference) {\\n      @include custom-property('text-02', map-get($theme, 'text-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-03', $emit-difference) {\\n      @include custom-property('text-03', map-get($theme, 'text-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-04', $emit-difference) {\\n      @include custom-property('text-04', map-get($theme, 'text-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-05', $emit-difference) {\\n      @include custom-property('text-05', map-get($theme, 'text-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-error', map-get($theme, 'text-error'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-01', $emit-difference) {\\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-02', $emit-difference) {\\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-03', $emit-difference) {\\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-01', $emit-difference) {\\n      @include custom-property('link-01', map-get($theme, 'link-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-02', $emit-difference) {\\n      @include custom-property('link-02', map-get($theme, 'link-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-01', $emit-difference)\\n    {\\n      @include custom-property('field-01', map-get($theme, 'field-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-02', $emit-difference)\\n    {\\n      @include custom-property('field-02', map-get($theme, 'field-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-01', map-get($theme, 'support-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-02', map-get($theme, 'support-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-03', map-get($theme, 'support-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-04', map-get($theme, 'support-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-01',\\n        map-get($theme, 'inverse-support-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-02',\\n        map-get($theme, 'inverse-support-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-03',\\n        map-get($theme, 'inverse-support-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-04',\\n        map-get($theme, 'inverse-support-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'overlay-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-01', $emit-difference)\\n    {\\n      @include custom-property('danger-01', map-get($theme, 'danger-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-02', $emit-difference)\\n    {\\n      @include custom-property('danger-02', map-get($theme, 'danger-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'focus', $emit-difference) {\\n      @include custom-property('focus', map-get($theme, 'focus'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-focus-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-focus-ui',\\n        map-get($theme, 'inverse-focus-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary',\\n        map-get($theme, 'hover-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-primary',\\n        map-get($theme, 'active-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary-text',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary-text',\\n        map-get($theme, 'hover-primary-text')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-secondary',\\n        map-get($theme, 'hover-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-secondary',\\n        map-get($theme, 'active-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-tertiary',\\n        map-get($theme, 'hover-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-tertiary',\\n        map-get($theme, 'active-tertiary')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-ui', $emit-difference)\\n    {\\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-light-ui',\\n        map-get($theme, 'hover-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-selected-ui',\\n        map-get($theme, 'hover-selected-ui')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-ui', $emit-difference)\\n    {\\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-light-ui',\\n        map-get($theme, 'active-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'selected-light-ui',\\n        map-get($theme, 'selected-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-hover-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-hover-ui',\\n        map-get($theme, 'inverse-hover-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-danger',\\n        map-get($theme, 'active-danger')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-row', $emit-difference)\\n    {\\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'visited-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'highlight', $emit-difference)\\n    {\\n      @include custom-property('highlight', map-get($theme, 'highlight'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'decorative-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'decorative-01',\\n        map-get($theme, 'decorative-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-separator',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-separator',\\n        map-get($theme, 'button-separator')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-01', $emit-difference)\\n    {\\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-02', $emit-difference)\\n    {\\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-03', $emit-difference)\\n    {\\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-01', $emit-difference)\\n    {\\n      @include custom-property('active-01', map-get($theme, 'active-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-field',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger', $emit-difference) {\\n      @include custom-property('danger', map-get($theme, 'danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-01', $emit-difference)\\n    {\\n      @include custom-property('label-01', map-get($theme, 'label-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-01',\\n        map-get($theme, 'helper-text-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-01',\\n        map-get($theme, 'body-short-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-02',\\n        map-get($theme, 'body-short-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-01', $emit-difference) {\\n      @include custom-property('code-01', map-get($theme, 'code-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-02', $emit-difference) {\\n      @include custom-property('code-02', map-get($theme, 'code-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-01',\\n        map-get($theme, 'productive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-02',\\n        map-get($theme, 'productive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-03',\\n        map-get($theme, 'productive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-04',\\n        map-get($theme, 'productive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-05',\\n        map-get($theme, 'productive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-06',\\n        map-get($theme, 'productive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-07',\\n        map-get($theme, 'productive-heading-07')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-01',\\n        map-get($theme, 'expressive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-02',\\n        map-get($theme, 'expressive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-03',\\n        map-get($theme, 'expressive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-04',\\n        map-get($theme, 'expressive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-05',\\n        map-get($theme, 'expressive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-06',\\n        map-get($theme, 'expressive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-paragraph-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-paragraph-01',\\n        map-get($theme, 'expressive-paragraph-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-01', map-get($theme, 'display-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-02', map-get($theme, 'display-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-03', map-get($theme, 'display-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-04', map-get($theme, 'display-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-08',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-09',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-10',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-11',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-12',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-01',\\n        map-get($theme, 'fluid-spacing-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-02',\\n        map-get($theme, 'fluid-spacing-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-03',\\n        map-get($theme, 'fluid-spacing-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-04',\\n        map-get($theme, 'fluid-spacing-04')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-01', $emit-difference)\\n    {\\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-02', $emit-difference)\\n    {\\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-03', $emit-difference)\\n    {\\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-04', $emit-difference)\\n    {\\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-05', $emit-difference)\\n    {\\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-06', $emit-difference)\\n    {\\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-07', $emit-difference)\\n    {\\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-01', map-get($theme, 'container-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-02', map-get($theme, 'container-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-03', map-get($theme, 'container-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-04', map-get($theme, 'container-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-05', map-get($theme, 'container-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\\n    }\\n  }\\n\\n  @content;\\n\\n  // Reset to default theme after apply in content\\n  @if $carbon--theme != $parent-carbon-theme {\\n    $carbon--theme: $parent-carbon-theme !global;\\n\\n    @include carbon--theme();\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"productiveHeading01\": \"-esm-offline-tools__offline-patient-sync-details-styles__productiveHeading01___B9ezF\",\n\t\"productiveHeading02\": \"-esm-offline-tools__offline-patient-sync-details-styles__productiveHeading02___1dXH-\",\n\t\"productiveHeading03\": \"-esm-offline-tools__offline-patient-sync-details-styles__productiveHeading03___1aVXX\",\n\t\"productiveHeading04\": \"-esm-offline-tools__offline-patient-sync-details-styles__productiveHeading04___3AlQP\",\n\t\"bodyShort01\": \"-esm-offline-tools__offline-patient-sync-details-styles__bodyShort01___1f3as\",\n\t\"bodyLong01\": \"-esm-offline-tools__offline-patient-sync-details-styles__bodyLong01___KcDc4\",\n\t\"label01\": \"-esm-offline-tools__offline-patient-sync-details-styles__label01___2SGBg\",\n\t\"contentContainer\": \"-esm-offline-tools__offline-patient-sync-details-styles__contentContainer___2XwZ7\",\n\t\"headeredTileSection\": \"-esm-offline-tools__offline-patient-sync-details-styles__headeredTileSection___1Qpzw\",\n\t\"syncedTile\": \"-esm-offline-tools__offline-patient-sync-details-styles__syncedTile___PMw68\",\n\t\"failedTile\": \"-esm-offline-tools__offline-patient-sync-details-styles__failedTile___1UOfj\",\n\t\"failedTileErrorMessage\": \"-esm-offline-tools__offline-patient-sync-details-styles__failedTileErrorMessage___3uQmW\",\n\t\"syncedTileIcon\": \"-esm-offline-tools__offline-patient-sync-details-styles__syncedTileIcon___1Vhxw\",\n\t\"failedTileIcon\": \"-esm-offline-tools__offline-patient-sync-details-styles__failedTileIcon___7b_4q\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-offline-tools__offline-patients-styles__productiveHeading01___3s9JE{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.-esm-offline-tools__offline-patients-styles__productiveHeading02___2ldxf{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-offline-tools__offline-patients-styles__productiveHeading03___2ECzw{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-offline-tools__offline-patients-styles__productiveHeading04___16-g7{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-offline-tools__offline-patients-styles__bodyShort01___1gyG3{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.-esm-offline-tools__offline-patients-styles__bodyLong01___1hmfu{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-offline-tools__offline-patients-styles__label01___rPz0d{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-offline-tools__offline-patients-styles__contentContainer___2Mido{padding:0 1rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../framework/esm-styleguide/src/_vars.scss\",\"webpack://./src/root.scss\",\"webpack://./../../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./src/offline-patients/offline-patients.styles.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCzCF,0EC4gBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD7rB1B,0ECwgBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CDzrB1B,0ECogBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CDrrB1B,0ECggBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,gBAqLsB,CDjrB1B,kEC4fI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD7qB1B,iECwfI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDzqB1B,8DCofI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CClsB1B,uEACE,cAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"carbon-components/scss/globals/scss/typography.scss\\\";\\n\\n.productiveHeading01 {\\n  @include carbon--type-style(\\\"productive-heading-01\\\");\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n}\\n\\n.productiveHeading03 {\\n  @include carbon--type-style(\\\"productive-heading-03\\\");\\n}\\n\\n.productiveHeading04 {\\n  @include carbon--type-style(\\\"productive-heading-04\\\");\\n}\\n\\n.bodyShort01 {\\n  @include carbon--type-style(\\\"body-short-01\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\\n.label01 {\\n  @include carbon--type-style(\\\"label-01\\\");\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"@import \\\"../root.scss\\\";\\n\\n.contentContainer {\\n  padding: 0 $spacing-05;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"productiveHeading01\": \"-esm-offline-tools__offline-patients-styles__productiveHeading01___3s9JE\",\n\t\"productiveHeading02\": \"-esm-offline-tools__offline-patients-styles__productiveHeading02___2ldxf\",\n\t\"productiveHeading03\": \"-esm-offline-tools__offline-patients-styles__productiveHeading03___2ECzw\",\n\t\"productiveHeading04\": \"-esm-offline-tools__offline-patients-styles__productiveHeading04___16-g7\",\n\t\"bodyShort01\": \"-esm-offline-tools__offline-patients-styles__bodyShort01___1gyG3\",\n\t\"bodyLong01\": \"-esm-offline-tools__offline-patients-styles__bodyLong01___1hmfu\",\n\t\"label01\": \"-esm-offline-tools__offline-patients-styles__label01___rPz0d\",\n\t\"contentContainer\": \"-esm-offline-tools__offline-patients-styles__contentContainer___2Mido\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_excluded","_excluded2","defaultAttributes","focusable","preserveAspectRatio","getAttributes","_ref","undefined","width","height","_ref$viewBox","viewBox","concat","attributes","tabindex","rest","iconAttributes","title","role","_extends","assign","hasOwnProperty","this","Icon","ref","className","children","tabIndex","_getAttributes","props","displayName","propTypes","xmlns","defaultProps","useOfflinePatientDataStore","store","getOfflinePatientDataStore","useStore","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","_ref2","d","_ref3","opacity","_","I","fill","getHandlersForDisplay","identifiers","displayableHandlers","entries","handlers","handler","trim","map","identifier","getHandlerIdentifiersForDisplay","includes","match","t","useTranslation","patientUuid","params","syncedHandlers","offlinePatientDataSyncState","failedHandlers","header","styles","Tile","light","errors","basePath","BrowserRouter","basename","Switch","Route","exact","path","component","OfflinePatientSyncDetails","ExtensionSlot","extensionSlotName","___CSS_LOADER_EXPORT___","module","id","locals","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","exports","shim","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","checkPropTypes","PropTypes"],"sourceRoot":""}