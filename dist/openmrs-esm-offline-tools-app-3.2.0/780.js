"use strict";(self.webpackChunk_openmrs_esm_offline_tools_app=self.webpackChunk_openmrs_esm_offline_tools_app||[]).push([[780],{8780:(e,n,t)=>{t.r(n),t.d(n,{default:()=>oe});var i=t(6983),a=t.n(i),r=t(2268),o=t(7657),p=t(2680),s=t(8113),l=t(487),m=t.n(l),c=t(631),h=t.n(c),g=t(2052),$=t.n(g),d=t(4010),u=t.n(d),f=t(1469),b=t.n(f),y=t(9329),v=t.n(y),x=t(4602),k={};k.styleTagTransform=v(),k.setAttributes=u(),k.insert=$().bind(null,"head"),k.domAPI=h(),k.insertStyleElement=b(),m()(x.Z,k);const w=x.Z&&x.Z.locals?x.Z.locals:void 0,_=()=>a().createElement(o.ExtensionSlot,{extensionSlotName:"offline-tools-dashboard-cards",className:w.overviewCardContainer});var z=t(4083),B={};B.styleTagTransform=v(),B.setAttributes=u(),B.insert=$().bind(null,"head"),B.domAPI=h(),B.insertStyleElement=b(),m()(z.Z,B);const A=z.Z&&z.Z.locals?z.Z.locals:void 0,C=()=>{const{t:e}=(0,p.useTranslation)();return a().createElement(s.Z,{header:e("homeHeader","Offline home")},a().createElement(_,null),a().createElement("div",{className:A.offlinePatientsTableContainer},a().createElement(o.ExtensionSlot,{extensionSlotName:"offline-tools-home-overview-slot"})))};var L=t(9784),q=t(5485),M={};M.styleTagTransform=v(),M.setAttributes=u(),M.insert=$().bind(null,"head"),M.domAPI=h(),M.insertStyleElement=b(),m()(q.Z,M);const I=q.Z&&q.Z.locals?q.Z.locals:void 0,S=()=>{const e=(0,o.useLayoutType)();return(0,i.useEffect)((()=>((0,o.attach)("nav-menu-slot","offline-tools-nav-items"),()=>(0,o.detach)("nav-menu-slot","offline-tools-nav-items"))),[]),"desktop"===e&&a().createElement(L.SideNav,{expanded:!0,"aria-label":"Menu",className:I.link},a().createElement(o.ExtensionSlot,{extensionSlotName:"nav-menu-slot"}))};var E=t(1341),T={};T.styleTagTransform=v(),T.setAttributes=u(),T.insert=$().bind(null,"head"),T.domAPI=h(),T.insertStyleElement=b(),m()(E.Z,T);const H=E.Z&&E.Z.locals?E.Z.locals:void 0;var D=t(7851);const O=Array.isArray;var j=t(963);var N=D.Z?D.Z.prototype:void 0,F=N?N.toString:void 0;const Z=function e(n){if("string"==typeof n)return n;if(O(n))return function(e,n){for(var t=-1,i=null==e?0:e.length,a=Array(i);++t<i;)a[t]=n(e[t],t,e);return a}(n,e)+"";if(function(e){return"symbol"==typeof e||function(e){return null!=e&&"object"==typeof e}(e)&&"[object Symbol]"==(0,j.Z)(e)}(n))return F?F.call(n):"";var t=n+"";return"0"==t&&1/n==-1/0?"-0":t},P=function(e,n,t){var i=e.length;return t=void 0===t?i:t,!n&&t>=i?e:function(e,n,t){var i=-1,a=e.length;n<0&&(n=-n>a?0:a+n),(t=t>a?a:t)<0&&(t+=a),a=n>t?0:t-n>>>0,n>>>=0;for(var r=Array(a);++i<a;)r[i]=e[i+n];return r}(e,n,t)};var R=t(60);var G=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");var W="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",U="\\ud83c[\\udffb-\\udfff]",Q="[^\\ud800-\\udfff]",X="(?:\\ud83c[\\udde6-\\uddff]){2}",J="[\\ud800-\\udbff][\\udc00-\\udfff]",K="(?:"+W+"|"+U+")?",Y="[\\ufe0e\\ufe0f]?",V=Y+K+"(?:\\u200d(?:"+[Q,X,J].join("|")+")"+Y+K+")*",ee="(?:"+[Q+W+"?",W,X,J,"[\\ud800-\\udfff]"].join("|")+")",ne=RegExp(U+"(?="+U+")|"+ee+V,"g");const te=function(e){return function(e){return G.test(e)}(e)?function(e){return e.match(ne)||[]}(e):function(e){return e.split("")}(e)};var ie=/\s/;const ae=function(e,n,t){if((e=null==(i=e)?"":Z(i))&&(t||void 0===n))return e.slice(0,function(e){for(var n=e.length;n--&&ie.test(e.charAt(n)););return n}(e)+1);var i;if(!e||!(n=Z(n)))return e;var a=te(e),r=function(e,n){for(var t=e.length;t--&&(0,R.Z)(n,e[t],0)>-1;);return t}(a,te(n))+1;return P(a,0,r).join("")},re=({match:e})=>{const n=ae(window.getOpenmrsSpaBase(),"/")+e.url,t=e.params.page,i=(0,o.useExtensionSlotMeta)("offline-tools-page-slot"),r=Object.values(i).find((e=>e.name===t));return r?a().createElement(a().Fragment,null,a().createElement(o.ExtensionSlot,{extensionSlotName:"breadcrumbs-slot"}),a().createElement(o.ExtensionSlot,{key:r.slot,extensionSlotName:r.slot,state:{basePath:n}})):null},oe=()=>((0,i.useEffect)((()=>{(0,o.loadPersistedPatientDataSyncState)()}),[]),a().createElement(r.BrowserRouter,{basename:window.spaBase},a().createElement(S,null),a().createElement("div",{className:`omrs-main-content ${H.mainContentContainer}`},a().createElement(r.Route,{path:"/offline-tools",exact:!0,component:C}),a().createElement(r.Route,{path:"/offline-tools/:page",component:re}))))},4602:(e,n,t)=>{t.d(n,{Z:()=>p});var i=t(9233),a=t.n(i),r=t(361),o=t.n(r)()(a());o.push([e.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-offline-tools__cards-container-styles__productiveHeading01____9F6f{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.-esm-offline-tools__cards-container-styles__productiveHeading02___2v7Gn{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-offline-tools__cards-container-styles__productiveHeading03___1wHjy{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-offline-tools__cards-container-styles__productiveHeading04___3lmhl{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-offline-tools__cards-container-styles__bodyShort01___Ciq4d{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.-esm-offline-tools__cards-container-styles__bodyLong01___2NeLc{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-offline-tools__cards-container-styles__label01___5wMvd{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-offline-tools__cards-container-styles__overviewCardContainer___3XOSe{display:grid;grid-template-columns:1fr 1fr;grid-template-rows:1fr 1fr;gap:1rem;margin:0 1rem 1rem 1rem}.omrs-breakpoint-gt-tablet .-esm-offline-tools__cards-container-styles__overviewCardContainer___3XOSe{grid-template-columns:1fr 1fr 1fr 1fr;grid-template-rows:1fr}","",{version:3,sources:["webpack://./../../framework/esm-styleguide/src/_vars.scss","webpack://./src/root.scss","webpack://./../../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./src/home/cards-container.styles.scss","webpack://./../../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCzCF,yEC4gBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD7rB1B,yECwgBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CDzrB1B,yECogBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CDrrB1B,yECggBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,gBAqLsB,CDjrB1B,iEC4fI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD7qB1B,gECwfI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDzqB1B,6DCofI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CClsB1B,2EACE,YAAA,CACA,6BAAA,CACA,0BAAA,CACA,QC6Ia,CD5Ib,uBAAA,CAGF,sGACE,qCAAA,CACA,sBAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n",'@import "~@openmrs/esm-styleguide/src/vars";\n@import "carbon-components/scss/globals/scss/typography.scss";\n\n.productiveHeading01 {\n  @include carbon--type-style("productive-heading-01");\n}\n\n.productiveHeading02 {\n  @include carbon--type-style("productive-heading-02");\n}\n\n.productiveHeading03 {\n  @include carbon--type-style("productive-heading-03");\n}\n\n.productiveHeading04 {\n  @include carbon--type-style("productive-heading-04");\n}\n\n.bodyShort01 {\n  @include carbon--type-style("body-short-01");\n}\n\n.bodyLong01 {\n  @include carbon--type-style("body-long-01");\n}\n\n.label01 {\n  @include carbon--type-style("label-01");\n}\n',"//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n",'@import "../root.scss";\n\n.overviewCardContainer {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  gap: $spacing-05;\n  margin: 0 $spacing-05 $spacing-05 $spacing-05;\n}\n\n:global(.omrs-breakpoint-gt-tablet) .overviewCardContainer {\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-template-rows: 1fr;\n}\n',"// Code generated by @carbon/themes. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import './themes';\n\n/// Define theme variables from a map of tokens\n/// @access public\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\n///\n/// @example scss\n///   // Default usage\n///   @include carbon--theme();\n///\n///   // Alternate styling (not white theme)\n///   @include carbon--theme($carbon--theme--g90) {\n///     // declarations...\n///   }\n///\n///   // Inline styling\n///   @include carbon--theme($carbon--theme--g90) {\n///     .my-dark-theme {\n///       // declarations...\n///     }\n///   }\n///\n/// @group @carbon/themes\n@mixin carbon--theme(\n  $theme: $carbon--theme,\n  $emit-custom-properties: false,\n  $emit-difference: false\n) {\n  $parent-carbon-theme: $carbon--theme;\n  $carbon--theme: $theme !global;\n  $interactive-01: map-get($theme, 'interactive-01') !global;\n  $interactive-02: map-get($theme, 'interactive-02') !global;\n  $interactive-03: map-get($theme, 'interactive-03') !global;\n  $interactive-04: map-get($theme, 'interactive-04') !global;\n  $ui-background: map-get($theme, 'ui-background') !global;\n  $ui-01: map-get($theme, 'ui-01') !global;\n  $ui-02: map-get($theme, 'ui-02') !global;\n  $ui-03: map-get($theme, 'ui-03') !global;\n  $ui-04: map-get($theme, 'ui-04') !global;\n  $ui-05: map-get($theme, 'ui-05') !global;\n  $text-01: map-get($theme, 'text-01') !global;\n  $text-02: map-get($theme, 'text-02') !global;\n  $text-03: map-get($theme, 'text-03') !global;\n  $text-04: map-get($theme, 'text-04') !global;\n  $text-05: map-get($theme, 'text-05') !global;\n  $text-error: map-get($theme, 'text-error') !global;\n  $icon-01: map-get($theme, 'icon-01') !global;\n  $icon-02: map-get($theme, 'icon-02') !global;\n  $icon-03: map-get($theme, 'icon-03') !global;\n  $link-01: map-get($theme, 'link-01') !global;\n  $link-02: map-get($theme, 'link-02') !global;\n  $inverse-link: map-get($theme, 'inverse-link') !global;\n  $field-01: map-get($theme, 'field-01') !global;\n  $field-02: map-get($theme, 'field-02') !global;\n  $inverse-01: map-get($theme, 'inverse-01') !global;\n  $inverse-02: map-get($theme, 'inverse-02') !global;\n  $support-01: map-get($theme, 'support-01') !global;\n  $support-02: map-get($theme, 'support-02') !global;\n  $support-03: map-get($theme, 'support-03') !global;\n  $support-04: map-get($theme, 'support-04') !global;\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\n  $overlay-01: map-get($theme, 'overlay-01') !global;\n  $danger-01: map-get($theme, 'danger-01') !global;\n  $danger-02: map-get($theme, 'danger-02') !global;\n  $focus: map-get($theme, 'focus') !global;\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\n  $hover-primary: map-get($theme, 'hover-primary') !global;\n  $active-primary: map-get($theme, 'active-primary') !global;\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\n  $active-secondary: map-get($theme, 'active-secondary') !global;\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\n  $hover-ui: map-get($theme, 'hover-ui') !global;\n  $hover-light-ui: map-get($theme, 'hover-light-ui') !global;\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\n  $active-ui: map-get($theme, 'active-ui') !global;\n  $active-light-ui: map-get($theme, 'active-light-ui') !global;\n  $selected-ui: map-get($theme, 'selected-ui') !global;\n  $selected-light-ui: map-get($theme, 'selected-light-ui') !global;\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\n  $hover-danger: map-get($theme, 'hover-danger') !global;\n  $active-danger: map-get($theme, 'active-danger') !global;\n  $hover-row: map-get($theme, 'hover-row') !global;\n  $visited-link: map-get($theme, 'visited-link') !global;\n  $disabled-01: map-get($theme, 'disabled-01') !global;\n  $disabled-02: map-get($theme, 'disabled-02') !global;\n  $disabled-03: map-get($theme, 'disabled-03') !global;\n  $highlight: map-get($theme, 'highlight') !global;\n  $decorative-01: map-get($theme, 'decorative-01') !global;\n  $button-separator: map-get($theme, 'button-separator') !global;\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\n  $brand-01: map-get($theme, 'brand-01') !global;\n  $brand-02: map-get($theme, 'brand-02') !global;\n  $brand-03: map-get($theme, 'brand-03') !global;\n  $active-01: map-get($theme, 'active-01') !global;\n  $hover-field: map-get($theme, 'hover-field') !global;\n  $danger: map-get($theme, 'danger') !global;\n  $caption-01: map-get($theme, 'caption-01') !global;\n  $label-01: map-get($theme, 'label-01') !global;\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\n  $body-short-01: map-get($theme, 'body-short-01') !global;\n  $body-long-01: map-get($theme, 'body-long-01') !global;\n  $body-short-02: map-get($theme, 'body-short-02') !global;\n  $body-long-02: map-get($theme, 'body-long-02') !global;\n  $code-01: map-get($theme, 'code-01') !global;\n  $code-02: map-get($theme, 'code-02') !global;\n  $heading-01: map-get($theme, 'heading-01') !global;\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\n  $heading-02: map-get($theme, 'heading-02') !global;\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\n  $quotation-01: map-get($theme, 'quotation-01') !global;\n  $quotation-02: map-get($theme, 'quotation-02') !global;\n  $display-01: map-get($theme, 'display-01') !global;\n  $display-02: map-get($theme, 'display-02') !global;\n  $display-03: map-get($theme, 'display-03') !global;\n  $display-04: map-get($theme, 'display-04') !global;\n  $spacing-01: map-get($theme, 'spacing-01') !global;\n  $spacing-02: map-get($theme, 'spacing-02') !global;\n  $spacing-03: map-get($theme, 'spacing-03') !global;\n  $spacing-04: map-get($theme, 'spacing-04') !global;\n  $spacing-05: map-get($theme, 'spacing-05') !global;\n  $spacing-06: map-get($theme, 'spacing-06') !global;\n  $spacing-07: map-get($theme, 'spacing-07') !global;\n  $spacing-08: map-get($theme, 'spacing-08') !global;\n  $spacing-09: map-get($theme, 'spacing-09') !global;\n  $spacing-10: map-get($theme, 'spacing-10') !global;\n  $spacing-11: map-get($theme, 'spacing-11') !global;\n  $spacing-12: map-get($theme, 'spacing-12') !global;\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\n  $layout-01: map-get($theme, 'layout-01') !global;\n  $layout-02: map-get($theme, 'layout-02') !global;\n  $layout-03: map-get($theme, 'layout-03') !global;\n  $layout-04: map-get($theme, 'layout-04') !global;\n  $layout-05: map-get($theme, 'layout-05') !global;\n  $layout-06: map-get($theme, 'layout-06') !global;\n  $layout-07: map-get($theme, 'layout-07') !global;\n  $container-01: map-get($theme, 'container-01') !global;\n  $container-02: map-get($theme, 'container-02') !global;\n  $container-03: map-get($theme, 'container-03') !global;\n  $container-04: map-get($theme, 'container-04') !global;\n  $container-05: map-get($theme, 'container-05') !global;\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\n\n  @if global-variable-exists('feature-flags') and\n    map-get($feature-flags, 'enable-css-custom-properties')\n  {\n    $interactive-01: var(\n      --#{$custom-property-prefix}-interactive-01,\n      map-get($theme, 'interactive-01')\n    ) !global;\n    $interactive-02: var(\n      --#{$custom-property-prefix}-interactive-02,\n      map-get($theme, 'interactive-02')\n    ) !global;\n    $interactive-03: var(\n      --#{$custom-property-prefix}-interactive-03,\n      map-get($theme, 'interactive-03')\n    ) !global;\n    $interactive-04: var(\n      --#{$custom-property-prefix}-interactive-04,\n      map-get($theme, 'interactive-04')\n    ) !global;\n    $ui-background: var(\n      --#{$custom-property-prefix}-ui-background,\n      map-get($theme, 'ui-background')\n    ) !global;\n    $ui-01: var(\n      --#{$custom-property-prefix}-ui-01,\n      map-get($theme, 'ui-01')\n    ) !global;\n    $ui-02: var(\n      --#{$custom-property-prefix}-ui-02,\n      map-get($theme, 'ui-02')\n    ) !global;\n    $ui-03: var(\n      --#{$custom-property-prefix}-ui-03,\n      map-get($theme, 'ui-03')\n    ) !global;\n    $ui-04: var(\n      --#{$custom-property-prefix}-ui-04,\n      map-get($theme, 'ui-04')\n    ) !global;\n    $ui-05: var(\n      --#{$custom-property-prefix}-ui-05,\n      map-get($theme, 'ui-05')\n    ) !global;\n    $text-01: var(\n      --#{$custom-property-prefix}-text-01,\n      map-get($theme, 'text-01')\n    ) !global;\n    $text-02: var(\n      --#{$custom-property-prefix}-text-02,\n      map-get($theme, 'text-02')\n    ) !global;\n    $text-03: var(\n      --#{$custom-property-prefix}-text-03,\n      map-get($theme, 'text-03')\n    ) !global;\n    $text-04: var(\n      --#{$custom-property-prefix}-text-04,\n      map-get($theme, 'text-04')\n    ) !global;\n    $text-05: var(\n      --#{$custom-property-prefix}-text-05,\n      map-get($theme, 'text-05')\n    ) !global;\n    $text-error: var(\n      --#{$custom-property-prefix}-text-error,\n      map-get($theme, 'text-error')\n    ) !global;\n    $icon-01: var(\n      --#{$custom-property-prefix}-icon-01,\n      map-get($theme, 'icon-01')\n    ) !global;\n    $icon-02: var(\n      --#{$custom-property-prefix}-icon-02,\n      map-get($theme, 'icon-02')\n    ) !global;\n    $icon-03: var(\n      --#{$custom-property-prefix}-icon-03,\n      map-get($theme, 'icon-03')\n    ) !global;\n    $link-01: var(\n      --#{$custom-property-prefix}-link-01,\n      map-get($theme, 'link-01')\n    ) !global;\n    $link-02: var(\n      --#{$custom-property-prefix}-link-02,\n      map-get($theme, 'link-02')\n    ) !global;\n    $inverse-link: var(\n      --#{$custom-property-prefix}-inverse-link,\n      map-get($theme, 'inverse-link')\n    ) !global;\n    $field-01: var(\n      --#{$custom-property-prefix}-field-01,\n      map-get($theme, 'field-01')\n    ) !global;\n    $field-02: var(\n      --#{$custom-property-prefix}-field-02,\n      map-get($theme, 'field-02')\n    ) !global;\n    $inverse-01: var(\n      --#{$custom-property-prefix}-inverse-01,\n      map-get($theme, 'inverse-01')\n    ) !global;\n    $inverse-02: var(\n      --#{$custom-property-prefix}-inverse-02,\n      map-get($theme, 'inverse-02')\n    ) !global;\n    $support-01: var(\n      --#{$custom-property-prefix}-support-01,\n      map-get($theme, 'support-01')\n    ) !global;\n    $support-02: var(\n      --#{$custom-property-prefix}-support-02,\n      map-get($theme, 'support-02')\n    ) !global;\n    $support-03: var(\n      --#{$custom-property-prefix}-support-03,\n      map-get($theme, 'support-03')\n    ) !global;\n    $support-04: var(\n      --#{$custom-property-prefix}-support-04,\n      map-get($theme, 'support-04')\n    ) !global;\n    $inverse-support-01: var(\n      --#{$custom-property-prefix}-inverse-support-01,\n      map-get($theme, 'inverse-support-01')\n    ) !global;\n    $inverse-support-02: var(\n      --#{$custom-property-prefix}-inverse-support-02,\n      map-get($theme, 'inverse-support-02')\n    ) !global;\n    $inverse-support-03: var(\n      --#{$custom-property-prefix}-inverse-support-03,\n      map-get($theme, 'inverse-support-03')\n    ) !global;\n    $inverse-support-04: var(\n      --#{$custom-property-prefix}-inverse-support-04,\n      map-get($theme, 'inverse-support-04')\n    ) !global;\n    $overlay-01: var(\n      --#{$custom-property-prefix}-overlay-01,\n      map-get($theme, 'overlay-01')\n    ) !global;\n    $danger-01: var(\n      --#{$custom-property-prefix}-danger-01,\n      map-get($theme, 'danger-01')\n    ) !global;\n    $danger-02: var(\n      --#{$custom-property-prefix}-danger-02,\n      map-get($theme, 'danger-02')\n    ) !global;\n    $focus: var(\n      --#{$custom-property-prefix}-focus,\n      map-get($theme, 'focus')\n    ) !global;\n    $inverse-focus-ui: var(\n      --#{$custom-property-prefix}-inverse-focus-ui,\n      map-get($theme, 'inverse-focus-ui')\n    ) !global;\n    $hover-primary: var(\n      --#{$custom-property-prefix}-hover-primary,\n      map-get($theme, 'hover-primary')\n    ) !global;\n    $active-primary: var(\n      --#{$custom-property-prefix}-active-primary,\n      map-get($theme, 'active-primary')\n    ) !global;\n    $hover-primary-text: var(\n      --#{$custom-property-prefix}-hover-primary-text,\n      map-get($theme, 'hover-primary-text')\n    ) !global;\n    $hover-secondary: var(\n      --#{$custom-property-prefix}-hover-secondary,\n      map-get($theme, 'hover-secondary')\n    ) !global;\n    $active-secondary: var(\n      --#{$custom-property-prefix}-active-secondary,\n      map-get($theme, 'active-secondary')\n    ) !global;\n    $hover-tertiary: var(\n      --#{$custom-property-prefix}-hover-tertiary,\n      map-get($theme, 'hover-tertiary')\n    ) !global;\n    $active-tertiary: var(\n      --#{$custom-property-prefix}-active-tertiary,\n      map-get($theme, 'active-tertiary')\n    ) !global;\n    $hover-ui: var(\n      --#{$custom-property-prefix}-hover-ui,\n      map-get($theme, 'hover-ui')\n    ) !global;\n    $hover-light-ui: var(\n      --#{$custom-property-prefix}-hover-light-ui,\n      map-get($theme, 'hover-light-ui')\n    ) !global;\n    $hover-selected-ui: var(\n      --#{$custom-property-prefix}-hover-selected-ui,\n      map-get($theme, 'hover-selected-ui')\n    ) !global;\n    $active-ui: var(\n      --#{$custom-property-prefix}-active-ui,\n      map-get($theme, 'active-ui')\n    ) !global;\n    $active-light-ui: var(\n      --#{$custom-property-prefix}-active-light-ui,\n      map-get($theme, 'active-light-ui')\n    ) !global;\n    $selected-ui: var(\n      --#{$custom-property-prefix}-selected-ui,\n      map-get($theme, 'selected-ui')\n    ) !global;\n    $selected-light-ui: var(\n      --#{$custom-property-prefix}-selected-light-ui,\n      map-get($theme, 'selected-light-ui')\n    ) !global;\n    $inverse-hover-ui: var(\n      --#{$custom-property-prefix}-inverse-hover-ui,\n      map-get($theme, 'inverse-hover-ui')\n    ) !global;\n    $hover-danger: var(\n      --#{$custom-property-prefix}-hover-danger,\n      map-get($theme, 'hover-danger')\n    ) !global;\n    $active-danger: var(\n      --#{$custom-property-prefix}-active-danger,\n      map-get($theme, 'active-danger')\n    ) !global;\n    $hover-row: var(\n      --#{$custom-property-prefix}-hover-row,\n      map-get($theme, 'hover-row')\n    ) !global;\n    $visited-link: var(\n      --#{$custom-property-prefix}-visited-link,\n      map-get($theme, 'visited-link')\n    ) !global;\n    $disabled-01: var(\n      --#{$custom-property-prefix}-disabled-01,\n      map-get($theme, 'disabled-01')\n    ) !global;\n    $disabled-02: var(\n      --#{$custom-property-prefix}-disabled-02,\n      map-get($theme, 'disabled-02')\n    ) !global;\n    $disabled-03: var(\n      --#{$custom-property-prefix}-disabled-03,\n      map-get($theme, 'disabled-03')\n    ) !global;\n    $highlight: var(\n      --#{$custom-property-prefix}-highlight,\n      map-get($theme, 'highlight')\n    ) !global;\n    $decorative-01: var(\n      --#{$custom-property-prefix}-decorative-01,\n      map-get($theme, 'decorative-01')\n    ) !global;\n    $button-separator: var(\n      --#{$custom-property-prefix}-button-separator,\n      map-get($theme, 'button-separator')\n    ) !global;\n    $skeleton-01: var(\n      --#{$custom-property-prefix}-skeleton-01,\n      map-get($theme, 'skeleton-01')\n    ) !global;\n    $skeleton-02: var(\n      --#{$custom-property-prefix}-skeleton-02,\n      map-get($theme, 'skeleton-02')\n    ) !global;\n    $brand-01: var(\n      --#{$custom-property-prefix}-brand-01,\n      map-get($theme, 'brand-01')\n    ) !global;\n    $brand-02: var(\n      --#{$custom-property-prefix}-brand-02,\n      map-get($theme, 'brand-02')\n    ) !global;\n    $brand-03: var(\n      --#{$custom-property-prefix}-brand-03,\n      map-get($theme, 'brand-03')\n    ) !global;\n    $active-01: var(\n      --#{$custom-property-prefix}-active-01,\n      map-get($theme, 'active-01')\n    ) !global;\n    $hover-field: var(\n      --#{$custom-property-prefix}-hover-field,\n      map-get($theme, 'hover-field')\n    ) !global;\n    $danger: var(\n      --#{$custom-property-prefix}-danger,\n      map-get($theme, 'danger')\n    ) !global;\n    $spacing-01: var(\n      --#{$custom-property-prefix}-spacing-01,\n      map-get($theme, 'spacing-01')\n    ) !global;\n    $spacing-02: var(\n      --#{$custom-property-prefix}-spacing-02,\n      map-get($theme, 'spacing-02')\n    ) !global;\n    $spacing-03: var(\n      --#{$custom-property-prefix}-spacing-03,\n      map-get($theme, 'spacing-03')\n    ) !global;\n    $spacing-04: var(\n      --#{$custom-property-prefix}-spacing-04,\n      map-get($theme, 'spacing-04')\n    ) !global;\n    $spacing-05: var(\n      --#{$custom-property-prefix}-spacing-05,\n      map-get($theme, 'spacing-05')\n    ) !global;\n    $spacing-06: var(\n      --#{$custom-property-prefix}-spacing-06,\n      map-get($theme, 'spacing-06')\n    ) !global;\n    $spacing-07: var(\n      --#{$custom-property-prefix}-spacing-07,\n      map-get($theme, 'spacing-07')\n    ) !global;\n    $spacing-08: var(\n      --#{$custom-property-prefix}-spacing-08,\n      map-get($theme, 'spacing-08')\n    ) !global;\n    $spacing-09: var(\n      --#{$custom-property-prefix}-spacing-09,\n      map-get($theme, 'spacing-09')\n    ) !global;\n    $spacing-10: var(\n      --#{$custom-property-prefix}-spacing-10,\n      map-get($theme, 'spacing-10')\n    ) !global;\n    $spacing-11: var(\n      --#{$custom-property-prefix}-spacing-11,\n      map-get($theme, 'spacing-11')\n    ) !global;\n    $spacing-12: var(\n      --#{$custom-property-prefix}-spacing-12,\n      map-get($theme, 'spacing-12')\n    ) !global;\n    $fluid-spacing-01: var(\n      --#{$custom-property-prefix}-fluid-spacing-01,\n      map-get($theme, 'fluid-spacing-01')\n    ) !global;\n    $fluid-spacing-02: var(\n      --#{$custom-property-prefix}-fluid-spacing-02,\n      map-get($theme, 'fluid-spacing-02')\n    ) !global;\n    $fluid-spacing-03: var(\n      --#{$custom-property-prefix}-fluid-spacing-03,\n      map-get($theme, 'fluid-spacing-03')\n    ) !global;\n    $fluid-spacing-04: var(\n      --#{$custom-property-prefix}-fluid-spacing-04,\n      map-get($theme, 'fluid-spacing-04')\n    ) !global;\n    $layout-01: var(\n      --#{$custom-property-prefix}-layout-01,\n      map-get($theme, 'layout-01')\n    ) !global;\n    $layout-02: var(\n      --#{$custom-property-prefix}-layout-02,\n      map-get($theme, 'layout-02')\n    ) !global;\n    $layout-03: var(\n      --#{$custom-property-prefix}-layout-03,\n      map-get($theme, 'layout-03')\n    ) !global;\n    $layout-04: var(\n      --#{$custom-property-prefix}-layout-04,\n      map-get($theme, 'layout-04')\n    ) !global;\n    $layout-05: var(\n      --#{$custom-property-prefix}-layout-05,\n      map-get($theme, 'layout-05')\n    ) !global;\n    $layout-06: var(\n      --#{$custom-property-prefix}-layout-06,\n      map-get($theme, 'layout-06')\n    ) !global;\n    $layout-07: var(\n      --#{$custom-property-prefix}-layout-07,\n      map-get($theme, 'layout-07')\n    ) !global;\n    $container-01: var(\n      --#{$custom-property-prefix}-container-01,\n      map-get($theme, 'container-01')\n    ) !global;\n    $container-02: var(\n      --#{$custom-property-prefix}-container-02,\n      map-get($theme, 'container-02')\n    ) !global;\n    $container-03: var(\n      --#{$custom-property-prefix}-container-03,\n      map-get($theme, 'container-03')\n    ) !global;\n    $container-04: var(\n      --#{$custom-property-prefix}-container-04,\n      map-get($theme, 'container-04')\n    ) !global;\n    $container-05: var(\n      --#{$custom-property-prefix}-container-05,\n      map-get($theme, 'container-05')\n    ) !global;\n    $icon-size-01: var(\n      --#{$custom-property-prefix}-icon-size-01,\n      map-get($theme, 'icon-size-01')\n    ) !global;\n    $icon-size-02: var(\n      --#{$custom-property-prefix}-icon-size-02,\n      map-get($theme, 'icon-size-02')\n    ) !global;\n  }\n  @if $emit-custom-properties == true {\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'interactive-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'interactive-01',\n        map-get($theme, 'interactive-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'interactive-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'interactive-02',\n        map-get($theme, 'interactive-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'interactive-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'interactive-03',\n        map-get($theme, 'interactive-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'interactive-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'interactive-04',\n        map-get($theme, 'interactive-04')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'ui-background',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'ui-background',\n        map-get($theme, 'ui-background')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-01', $emit-difference) {\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-02', $emit-difference) {\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-03', $emit-difference) {\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-04', $emit-difference) {\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-05', $emit-difference) {\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-01', $emit-difference) {\n      @include custom-property('text-01', map-get($theme, 'text-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-02', $emit-difference) {\n      @include custom-property('text-02', map-get($theme, 'text-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-03', $emit-difference) {\n      @include custom-property('text-03', map-get($theme, 'text-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-04', $emit-difference) {\n      @include custom-property('text-04', map-get($theme, 'text-04'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-05', $emit-difference) {\n      @include custom-property('text-05', map-get($theme, 'text-05'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'text-error',\n      $emit-difference\n    )\n    {\n      @include custom-property('text-error', map-get($theme, 'text-error'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'icon-01', $emit-difference) {\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'icon-02', $emit-difference) {\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'icon-03', $emit-difference) {\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'link-01', $emit-difference) {\n      @include custom-property('link-01', map-get($theme, 'link-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'link-02', $emit-difference) {\n      @include custom-property('link-02', map-get($theme, 'link-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-link',\n      $emit-difference\n    )\n    {\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'field-01', $emit-difference)\n    {\n      @include custom-property('field-01', map-get($theme, 'field-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'field-02', $emit-difference)\n    {\n      @include custom-property('field-02', map-get($theme, 'field-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'support-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('support-01', map-get($theme, 'support-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'support-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('support-02', map-get($theme, 'support-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'support-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('support-03', map-get($theme, 'support-03'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'support-04',\n      $emit-difference\n    )\n    {\n      @include custom-property('support-04', map-get($theme, 'support-04'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-support-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-01',\n        map-get($theme, 'inverse-support-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-support-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-02',\n        map-get($theme, 'inverse-support-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-support-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-03',\n        map-get($theme, 'inverse-support-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-support-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-04',\n        map-get($theme, 'inverse-support-04')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'overlay-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'danger-01', $emit-difference)\n    {\n      @include custom-property('danger-01', map-get($theme, 'danger-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'danger-02', $emit-difference)\n    {\n      @include custom-property('danger-02', map-get($theme, 'danger-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'focus', $emit-difference) {\n      @include custom-property('focus', map-get($theme, 'focus'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-focus-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-focus-ui',\n        map-get($theme, 'inverse-focus-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-primary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-primary',\n        map-get($theme, 'hover-primary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-primary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-primary',\n        map-get($theme, 'active-primary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-primary-text',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-primary-text',\n        map-get($theme, 'hover-primary-text')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-secondary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-secondary',\n        map-get($theme, 'hover-secondary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-secondary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-secondary',\n        map-get($theme, 'active-secondary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-tertiary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-tertiary',\n        map-get($theme, 'hover-tertiary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-tertiary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-tertiary',\n        map-get($theme, 'active-tertiary')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'hover-ui', $emit-difference)\n    {\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-light-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-light-ui',\n        map-get($theme, 'hover-light-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-selected-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-selected-ui',\n        map-get($theme, 'hover-selected-ui')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'active-ui', $emit-difference)\n    {\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-light-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-light-ui',\n        map-get($theme, 'active-light-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'selected-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'selected-light-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'selected-light-ui',\n        map-get($theme, 'selected-light-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-hover-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-hover-ui',\n        map-get($theme, 'inverse-hover-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-danger',\n      $emit-difference\n    )\n    {\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-danger',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-danger',\n        map-get($theme, 'active-danger')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'hover-row', $emit-difference)\n    {\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'visited-link',\n      $emit-difference\n    )\n    {\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'disabled-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'disabled-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'disabled-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'highlight', $emit-difference)\n    {\n      @include custom-property('highlight', map-get($theme, 'highlight'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'decorative-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'decorative-01',\n        map-get($theme, 'decorative-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'button-separator',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'button-separator',\n        map-get($theme, 'button-separator')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'skeleton-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'skeleton-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'brand-01', $emit-difference)\n    {\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'brand-02', $emit-difference)\n    {\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'brand-03', $emit-difference)\n    {\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'active-01', $emit-difference)\n    {\n      @include custom-property('active-01', map-get($theme, 'active-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-field',\n      $emit-difference\n    )\n    {\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'danger', $emit-difference) {\n      @include custom-property('danger', map-get($theme, 'danger'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'caption-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'label-01', $emit-difference)\n    {\n      @include custom-property('label-01', map-get($theme, 'label-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'helper-text-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'helper-text-01',\n        map-get($theme, 'helper-text-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'body-short-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'body-short-01',\n        map-get($theme, 'body-short-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'body-long-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'body-short-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'body-short-02',\n        map-get($theme, 'body-short-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'body-long-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'code-01', $emit-difference) {\n      @include custom-property('code-01', map-get($theme, 'code-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'code-02', $emit-difference) {\n      @include custom-property('code-02', map-get($theme, 'code-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'heading-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-01',\n        map-get($theme, 'productive-heading-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'heading-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-02',\n        map-get($theme, 'productive-heading-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-03',\n        map-get($theme, 'productive-heading-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-04',\n        map-get($theme, 'productive-heading-04')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-05',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-05',\n        map-get($theme, 'productive-heading-05')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-06',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-06',\n        map-get($theme, 'productive-heading-06')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-07',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-07',\n        map-get($theme, 'productive-heading-07')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-01',\n        map-get($theme, 'expressive-heading-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-02',\n        map-get($theme, 'expressive-heading-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-03',\n        map-get($theme, 'expressive-heading-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-04',\n        map-get($theme, 'expressive-heading-04')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-05',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-05',\n        map-get($theme, 'expressive-heading-05')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-06',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-06',\n        map-get($theme, 'expressive-heading-06')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-paragraph-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-paragraph-01',\n        map-get($theme, 'expressive-paragraph-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'quotation-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'quotation-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'display-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('display-01', map-get($theme, 'display-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'display-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('display-02', map-get($theme, 'display-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'display-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('display-03', map-get($theme, 'display-03'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'display-04',\n      $emit-difference\n    )\n    {\n      @include custom-property('display-04', map-get($theme, 'display-04'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-04',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-05',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-06',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-07',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-08',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-09',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-10',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-11',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-12',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'fluid-spacing-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-01',\n        map-get($theme, 'fluid-spacing-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'fluid-spacing-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-02',\n        map-get($theme, 'fluid-spacing-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'fluid-spacing-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-03',\n        map-get($theme, 'fluid-spacing-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'fluid-spacing-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-04',\n        map-get($theme, 'fluid-spacing-04')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-01', $emit-difference)\n    {\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-02', $emit-difference)\n    {\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-03', $emit-difference)\n    {\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-04', $emit-difference)\n    {\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-05', $emit-difference)\n    {\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-06', $emit-difference)\n    {\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-07', $emit-difference)\n    {\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-01', map-get($theme, 'container-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-02', map-get($theme, 'container-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-03', map-get($theme, 'container-03'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-04',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-04', map-get($theme, 'container-04'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-05',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-05', map-get($theme, 'container-05'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'icon-size-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'icon-size-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\n    }\n  }\n\n  @content;\n\n  // Reset to default theme after apply in content\n  @if $carbon--theme != $parent-carbon-theme {\n    $carbon--theme: $parent-carbon-theme !global;\n\n    @include carbon--theme();\n  }\n}\n"],sourceRoot:""}]),o.locals={productiveHeading01:"-esm-offline-tools__cards-container-styles__productiveHeading01____9F6f",productiveHeading02:"-esm-offline-tools__cards-container-styles__productiveHeading02___2v7Gn",productiveHeading03:"-esm-offline-tools__cards-container-styles__productiveHeading03___1wHjy",productiveHeading04:"-esm-offline-tools__cards-container-styles__productiveHeading04___3lmhl",bodyShort01:"-esm-offline-tools__cards-container-styles__bodyShort01___Ciq4d",bodyLong01:"-esm-offline-tools__cards-container-styles__bodyLong01___2NeLc",label01:"-esm-offline-tools__cards-container-styles__label01___5wMvd",overviewCardContainer:"-esm-offline-tools__cards-container-styles__overviewCardContainer___3XOSe"};const p=o},4083:(e,n,t)=>{t.d(n,{Z:()=>p});var i=t(9233),a=t.n(i),r=t(361),o=t.n(r)()(a());o.push([e.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-offline-tools__home-styles__productiveHeading01___2Jv4l{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.-esm-offline-tools__home-styles__productiveHeading02___wX3_2{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-offline-tools__home-styles__productiveHeading03___S4qK4{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-offline-tools__home-styles__productiveHeading04___1c8Rq{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-offline-tools__home-styles__bodyShort01___1yGFg{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.-esm-offline-tools__home-styles__bodyLong01___2MNS7{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-offline-tools__home-styles__label01____ZJQM{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-offline-tools__home-styles__offlinePatientsTableContainer___RYeuK{padding:1rem}","",{version:3,sources:["webpack://./../../framework/esm-styleguide/src/_vars.scss","webpack://./src/root.scss","webpack://./../../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./src/home/home.styles.scss","webpack://./../../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCzCF,8DC4gBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD7rB1B,8DCwgBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CDzrB1B,8DCogBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CDrrB1B,8DCggBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,gBAqLsB,CDjrB1B,sDC4fI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD7qB1B,qDCwfI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDzqB1B,kDCofI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CClsB1B,wEACE,YCgJa",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n",'@import "~@openmrs/esm-styleguide/src/vars";\n@import "carbon-components/scss/globals/scss/typography.scss";\n\n.productiveHeading01 {\n  @include carbon--type-style("productive-heading-01");\n}\n\n.productiveHeading02 {\n  @include carbon--type-style("productive-heading-02");\n}\n\n.productiveHeading03 {\n  @include carbon--type-style("productive-heading-03");\n}\n\n.productiveHeading04 {\n  @include carbon--type-style("productive-heading-04");\n}\n\n.bodyShort01 {\n  @include carbon--type-style("body-short-01");\n}\n\n.bodyLong01 {\n  @include carbon--type-style("body-long-01");\n}\n\n.label01 {\n  @include carbon--type-style("label-01");\n}\n',"//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n",'@import "../root.scss";\n\n.offlinePatientsTableContainer {\n  padding: $spacing-05;\n}\n',"// Code generated by @carbon/themes. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import './themes';\n\n/// Define theme variables from a map of tokens\n/// @access public\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\n///\n/// @example scss\n///   // Default usage\n///   @include carbon--theme();\n///\n///   // Alternate styling (not white theme)\n///   @include carbon--theme($carbon--theme--g90) {\n///     // declarations...\n///   }\n///\n///   // Inline styling\n///   @include carbon--theme($carbon--theme--g90) {\n///     .my-dark-theme {\n///       // declarations...\n///     }\n///   }\n///\n/// @group @carbon/themes\n@mixin carbon--theme(\n  $theme: $carbon--theme,\n  $emit-custom-properties: false,\n  $emit-difference: false\n) {\n  $parent-carbon-theme: $carbon--theme;\n  $carbon--theme: $theme !global;\n  $interactive-01: map-get($theme, 'interactive-01') !global;\n  $interactive-02: map-get($theme, 'interactive-02') !global;\n  $interactive-03: map-get($theme, 'interactive-03') !global;\n  $interactive-04: map-get($theme, 'interactive-04') !global;\n  $ui-background: map-get($theme, 'ui-background') !global;\n  $ui-01: map-get($theme, 'ui-01') !global;\n  $ui-02: map-get($theme, 'ui-02') !global;\n  $ui-03: map-get($theme, 'ui-03') !global;\n  $ui-04: map-get($theme, 'ui-04') !global;\n  $ui-05: map-get($theme, 'ui-05') !global;\n  $text-01: map-get($theme, 'text-01') !global;\n  $text-02: map-get($theme, 'text-02') !global;\n  $text-03: map-get($theme, 'text-03') !global;\n  $text-04: map-get($theme, 'text-04') !global;\n  $text-05: map-get($theme, 'text-05') !global;\n  $text-error: map-get($theme, 'text-error') !global;\n  $icon-01: map-get($theme, 'icon-01') !global;\n  $icon-02: map-get($theme, 'icon-02') !global;\n  $icon-03: map-get($theme, 'icon-03') !global;\n  $link-01: map-get($theme, 'link-01') !global;\n  $link-02: map-get($theme, 'link-02') !global;\n  $inverse-link: map-get($theme, 'inverse-link') !global;\n  $field-01: map-get($theme, 'field-01') !global;\n  $field-02: map-get($theme, 'field-02') !global;\n  $inverse-01: map-get($theme, 'inverse-01') !global;\n  $inverse-02: map-get($theme, 'inverse-02') !global;\n  $support-01: map-get($theme, 'support-01') !global;\n  $support-02: map-get($theme, 'support-02') !global;\n  $support-03: map-get($theme, 'support-03') !global;\n  $support-04: map-get($theme, 'support-04') !global;\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\n  $overlay-01: map-get($theme, 'overlay-01') !global;\n  $danger-01: map-get($theme, 'danger-01') !global;\n  $danger-02: map-get($theme, 'danger-02') !global;\n  $focus: map-get($theme, 'focus') !global;\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\n  $hover-primary: map-get($theme, 'hover-primary') !global;\n  $active-primary: map-get($theme, 'active-primary') !global;\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\n  $active-secondary: map-get($theme, 'active-secondary') !global;\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\n  $hover-ui: map-get($theme, 'hover-ui') !global;\n  $hover-light-ui: map-get($theme, 'hover-light-ui') !global;\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\n  $active-ui: map-get($theme, 'active-ui') !global;\n  $active-light-ui: map-get($theme, 'active-light-ui') !global;\n  $selected-ui: map-get($theme, 'selected-ui') !global;\n  $selected-light-ui: map-get($theme, 'selected-light-ui') !global;\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\n  $hover-danger: map-get($theme, 'hover-danger') !global;\n  $active-danger: map-get($theme, 'active-danger') !global;\n  $hover-row: map-get($theme, 'hover-row') !global;\n  $visited-link: map-get($theme, 'visited-link') !global;\n  $disabled-01: map-get($theme, 'disabled-01') !global;\n  $disabled-02: map-get($theme, 'disabled-02') !global;\n  $disabled-03: map-get($theme, 'disabled-03') !global;\n  $highlight: map-get($theme, 'highlight') !global;\n  $decorative-01: map-get($theme, 'decorative-01') !global;\n  $button-separator: map-get($theme, 'button-separator') !global;\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\n  $brand-01: map-get($theme, 'brand-01') !global;\n  $brand-02: map-get($theme, 'brand-02') !global;\n  $brand-03: map-get($theme, 'brand-03') !global;\n  $active-01: map-get($theme, 'active-01') !global;\n  $hover-field: map-get($theme, 'hover-field') !global;\n  $danger: map-get($theme, 'danger') !global;\n  $caption-01: map-get($theme, 'caption-01') !global;\n  $label-01: map-get($theme, 'label-01') !global;\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\n  $body-short-01: map-get($theme, 'body-short-01') !global;\n  $body-long-01: map-get($theme, 'body-long-01') !global;\n  $body-short-02: map-get($theme, 'body-short-02') !global;\n  $body-long-02: map-get($theme, 'body-long-02') !global;\n  $code-01: map-get($theme, 'code-01') !global;\n  $code-02: map-get($theme, 'code-02') !global;\n  $heading-01: map-get($theme, 'heading-01') !global;\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\n  $heading-02: map-get($theme, 'heading-02') !global;\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\n  $quotation-01: map-get($theme, 'quotation-01') !global;\n  $quotation-02: map-get($theme, 'quotation-02') !global;\n  $display-01: map-get($theme, 'display-01') !global;\n  $display-02: map-get($theme, 'display-02') !global;\n  $display-03: map-get($theme, 'display-03') !global;\n  $display-04: map-get($theme, 'display-04') !global;\n  $spacing-01: map-get($theme, 'spacing-01') !global;\n  $spacing-02: map-get($theme, 'spacing-02') !global;\n  $spacing-03: map-get($theme, 'spacing-03') !global;\n  $spacing-04: map-get($theme, 'spacing-04') !global;\n  $spacing-05: map-get($theme, 'spacing-05') !global;\n  $spacing-06: map-get($theme, 'spacing-06') !global;\n  $spacing-07: map-get($theme, 'spacing-07') !global;\n  $spacing-08: map-get($theme, 'spacing-08') !global;\n  $spacing-09: map-get($theme, 'spacing-09') !global;\n  $spacing-10: map-get($theme, 'spacing-10') !global;\n  $spacing-11: map-get($theme, 'spacing-11') !global;\n  $spacing-12: map-get($theme, 'spacing-12') !global;\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\n  $layout-01: map-get($theme, 'layout-01') !global;\n  $layout-02: map-get($theme, 'layout-02') !global;\n  $layout-03: map-get($theme, 'layout-03') !global;\n  $layout-04: map-get($theme, 'layout-04') !global;\n  $layout-05: map-get($theme, 'layout-05') !global;\n  $layout-06: map-get($theme, 'layout-06') !global;\n  $layout-07: map-get($theme, 'layout-07') !global;\n  $container-01: map-get($theme, 'container-01') !global;\n  $container-02: map-get($theme, 'container-02') !global;\n  $container-03: map-get($theme, 'container-03') !global;\n  $container-04: map-get($theme, 'container-04') !global;\n  $container-05: map-get($theme, 'container-05') !global;\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\n\n  @if global-variable-exists('feature-flags') and\n    map-get($feature-flags, 'enable-css-custom-properties')\n  {\n    $interactive-01: var(\n      --#{$custom-property-prefix}-interactive-01,\n      map-get($theme, 'interactive-01')\n    ) !global;\n    $interactive-02: var(\n      --#{$custom-property-prefix}-interactive-02,\n      map-get($theme, 'interactive-02')\n    ) !global;\n    $interactive-03: var(\n      --#{$custom-property-prefix}-interactive-03,\n      map-get($theme, 'interactive-03')\n    ) !global;\n    $interactive-04: var(\n      --#{$custom-property-prefix}-interactive-04,\n      map-get($theme, 'interactive-04')\n    ) !global;\n    $ui-background: var(\n      --#{$custom-property-prefix}-ui-background,\n      map-get($theme, 'ui-background')\n    ) !global;\n    $ui-01: var(\n      --#{$custom-property-prefix}-ui-01,\n      map-get($theme, 'ui-01')\n    ) !global;\n    $ui-02: var(\n      --#{$custom-property-prefix}-ui-02,\n      map-get($theme, 'ui-02')\n    ) !global;\n    $ui-03: var(\n      --#{$custom-property-prefix}-ui-03,\n      map-get($theme, 'ui-03')\n    ) !global;\n    $ui-04: var(\n      --#{$custom-property-prefix}-ui-04,\n      map-get($theme, 'ui-04')\n    ) !global;\n    $ui-05: var(\n      --#{$custom-property-prefix}-ui-05,\n      map-get($theme, 'ui-05')\n    ) !global;\n    $text-01: var(\n      --#{$custom-property-prefix}-text-01,\n      map-get($theme, 'text-01')\n    ) !global;\n    $text-02: var(\n      --#{$custom-property-prefix}-text-02,\n      map-get($theme, 'text-02')\n    ) !global;\n    $text-03: var(\n      --#{$custom-property-prefix}-text-03,\n      map-get($theme, 'text-03')\n    ) !global;\n    $text-04: var(\n      --#{$custom-property-prefix}-text-04,\n      map-get($theme, 'text-04')\n    ) !global;\n    $text-05: var(\n      --#{$custom-property-prefix}-text-05,\n      map-get($theme, 'text-05')\n    ) !global;\n    $text-error: var(\n      --#{$custom-property-prefix}-text-error,\n      map-get($theme, 'text-error')\n    ) !global;\n    $icon-01: var(\n      --#{$custom-property-prefix}-icon-01,\n      map-get($theme, 'icon-01')\n    ) !global;\n    $icon-02: var(\n      --#{$custom-property-prefix}-icon-02,\n      map-get($theme, 'icon-02')\n    ) !global;\n    $icon-03: var(\n      --#{$custom-property-prefix}-icon-03,\n      map-get($theme, 'icon-03')\n    ) !global;\n    $link-01: var(\n      --#{$custom-property-prefix}-link-01,\n      map-get($theme, 'link-01')\n    ) !global;\n    $link-02: var(\n      --#{$custom-property-prefix}-link-02,\n      map-get($theme, 'link-02')\n    ) !global;\n    $inverse-link: var(\n      --#{$custom-property-prefix}-inverse-link,\n      map-get($theme, 'inverse-link')\n    ) !global;\n    $field-01: var(\n      --#{$custom-property-prefix}-field-01,\n      map-get($theme, 'field-01')\n    ) !global;\n    $field-02: var(\n      --#{$custom-property-prefix}-field-02,\n      map-get($theme, 'field-02')\n    ) !global;\n    $inverse-01: var(\n      --#{$custom-property-prefix}-inverse-01,\n      map-get($theme, 'inverse-01')\n    ) !global;\n    $inverse-02: var(\n      --#{$custom-property-prefix}-inverse-02,\n      map-get($theme, 'inverse-02')\n    ) !global;\n    $support-01: var(\n      --#{$custom-property-prefix}-support-01,\n      map-get($theme, 'support-01')\n    ) !global;\n    $support-02: var(\n      --#{$custom-property-prefix}-support-02,\n      map-get($theme, 'support-02')\n    ) !global;\n    $support-03: var(\n      --#{$custom-property-prefix}-support-03,\n      map-get($theme, 'support-03')\n    ) !global;\n    $support-04: var(\n      --#{$custom-property-prefix}-support-04,\n      map-get($theme, 'support-04')\n    ) !global;\n    $inverse-support-01: var(\n      --#{$custom-property-prefix}-inverse-support-01,\n      map-get($theme, 'inverse-support-01')\n    ) !global;\n    $inverse-support-02: var(\n      --#{$custom-property-prefix}-inverse-support-02,\n      map-get($theme, 'inverse-support-02')\n    ) !global;\n    $inverse-support-03: var(\n      --#{$custom-property-prefix}-inverse-support-03,\n      map-get($theme, 'inverse-support-03')\n    ) !global;\n    $inverse-support-04: var(\n      --#{$custom-property-prefix}-inverse-support-04,\n      map-get($theme, 'inverse-support-04')\n    ) !global;\n    $overlay-01: var(\n      --#{$custom-property-prefix}-overlay-01,\n      map-get($theme, 'overlay-01')\n    ) !global;\n    $danger-01: var(\n      --#{$custom-property-prefix}-danger-01,\n      map-get($theme, 'danger-01')\n    ) !global;\n    $danger-02: var(\n      --#{$custom-property-prefix}-danger-02,\n      map-get($theme, 'danger-02')\n    ) !global;\n    $focus: var(\n      --#{$custom-property-prefix}-focus,\n      map-get($theme, 'focus')\n    ) !global;\n    $inverse-focus-ui: var(\n      --#{$custom-property-prefix}-inverse-focus-ui,\n      map-get($theme, 'inverse-focus-ui')\n    ) !global;\n    $hover-primary: var(\n      --#{$custom-property-prefix}-hover-primary,\n      map-get($theme, 'hover-primary')\n    ) !global;\n    $active-primary: var(\n      --#{$custom-property-prefix}-active-primary,\n      map-get($theme, 'active-primary')\n    ) !global;\n    $hover-primary-text: var(\n      --#{$custom-property-prefix}-hover-primary-text,\n      map-get($theme, 'hover-primary-text')\n    ) !global;\n    $hover-secondary: var(\n      --#{$custom-property-prefix}-hover-secondary,\n      map-get($theme, 'hover-secondary')\n    ) !global;\n    $active-secondary: var(\n      --#{$custom-property-prefix}-active-secondary,\n      map-get($theme, 'active-secondary')\n    ) !global;\n    $hover-tertiary: var(\n      --#{$custom-property-prefix}-hover-tertiary,\n      map-get($theme, 'hover-tertiary')\n    ) !global;\n    $active-tertiary: var(\n      --#{$custom-property-prefix}-active-tertiary,\n      map-get($theme, 'active-tertiary')\n    ) !global;\n    $hover-ui: var(\n      --#{$custom-property-prefix}-hover-ui,\n      map-get($theme, 'hover-ui')\n    ) !global;\n    $hover-light-ui: var(\n      --#{$custom-property-prefix}-hover-light-ui,\n      map-get($theme, 'hover-light-ui')\n    ) !global;\n    $hover-selected-ui: var(\n      --#{$custom-property-prefix}-hover-selected-ui,\n      map-get($theme, 'hover-selected-ui')\n    ) !global;\n    $active-ui: var(\n      --#{$custom-property-prefix}-active-ui,\n      map-get($theme, 'active-ui')\n    ) !global;\n    $active-light-ui: var(\n      --#{$custom-property-prefix}-active-light-ui,\n      map-get($theme, 'active-light-ui')\n    ) !global;\n    $selected-ui: var(\n      --#{$custom-property-prefix}-selected-ui,\n      map-get($theme, 'selected-ui')\n    ) !global;\n    $selected-light-ui: var(\n      --#{$custom-property-prefix}-selected-light-ui,\n      map-get($theme, 'selected-light-ui')\n    ) !global;\n    $inverse-hover-ui: var(\n      --#{$custom-property-prefix}-inverse-hover-ui,\n      map-get($theme, 'inverse-hover-ui')\n    ) !global;\n    $hover-danger: var(\n      --#{$custom-property-prefix}-hover-danger,\n      map-get($theme, 'hover-danger')\n    ) !global;\n    $active-danger: var(\n      --#{$custom-property-prefix}-active-danger,\n      map-get($theme, 'active-danger')\n    ) !global;\n    $hover-row: var(\n      --#{$custom-property-prefix}-hover-row,\n      map-get($theme, 'hover-row')\n    ) !global;\n    $visited-link: var(\n      --#{$custom-property-prefix}-visited-link,\n      map-get($theme, 'visited-link')\n    ) !global;\n    $disabled-01: var(\n      --#{$custom-property-prefix}-disabled-01,\n      map-get($theme, 'disabled-01')\n    ) !global;\n    $disabled-02: var(\n      --#{$custom-property-prefix}-disabled-02,\n      map-get($theme, 'disabled-02')\n    ) !global;\n    $disabled-03: var(\n      --#{$custom-property-prefix}-disabled-03,\n      map-get($theme, 'disabled-03')\n    ) !global;\n    $highlight: var(\n      --#{$custom-property-prefix}-highlight,\n      map-get($theme, 'highlight')\n    ) !global;\n    $decorative-01: var(\n      --#{$custom-property-prefix}-decorative-01,\n      map-get($theme, 'decorative-01')\n    ) !global;\n    $button-separator: var(\n      --#{$custom-property-prefix}-button-separator,\n      map-get($theme, 'button-separator')\n    ) !global;\n    $skeleton-01: var(\n      --#{$custom-property-prefix}-skeleton-01,\n      map-get($theme, 'skeleton-01')\n    ) !global;\n    $skeleton-02: var(\n      --#{$custom-property-prefix}-skeleton-02,\n      map-get($theme, 'skeleton-02')\n    ) !global;\n    $brand-01: var(\n      --#{$custom-property-prefix}-brand-01,\n      map-get($theme, 'brand-01')\n    ) !global;\n    $brand-02: var(\n      --#{$custom-property-prefix}-brand-02,\n      map-get($theme, 'brand-02')\n    ) !global;\n    $brand-03: var(\n      --#{$custom-property-prefix}-brand-03,\n      map-get($theme, 'brand-03')\n    ) !global;\n    $active-01: var(\n      --#{$custom-property-prefix}-active-01,\n      map-get($theme, 'active-01')\n    ) !global;\n    $hover-field: var(\n      --#{$custom-property-prefix}-hover-field,\n      map-get($theme, 'hover-field')\n    ) !global;\n    $danger: var(\n      --#{$custom-property-prefix}-danger,\n      map-get($theme, 'danger')\n    ) !global;\n    $spacing-01: var(\n      --#{$custom-property-prefix}-spacing-01,\n      map-get($theme, 'spacing-01')\n    ) !global;\n    $spacing-02: var(\n      --#{$custom-property-prefix}-spacing-02,\n      map-get($theme, 'spacing-02')\n    ) !global;\n    $spacing-03: var(\n      --#{$custom-property-prefix}-spacing-03,\n      map-get($theme, 'spacing-03')\n    ) !global;\n    $spacing-04: var(\n      --#{$custom-property-prefix}-spacing-04,\n      map-get($theme, 'spacing-04')\n    ) !global;\n    $spacing-05: var(\n      --#{$custom-property-prefix}-spacing-05,\n      map-get($theme, 'spacing-05')\n    ) !global;\n    $spacing-06: var(\n      --#{$custom-property-prefix}-spacing-06,\n      map-get($theme, 'spacing-06')\n    ) !global;\n    $spacing-07: var(\n      --#{$custom-property-prefix}-spacing-07,\n      map-get($theme, 'spacing-07')\n    ) !global;\n    $spacing-08: var(\n      --#{$custom-property-prefix}-spacing-08,\n      map-get($theme, 'spacing-08')\n    ) !global;\n    $spacing-09: var(\n      --#{$custom-property-prefix}-spacing-09,\n      map-get($theme, 'spacing-09')\n    ) !global;\n    $spacing-10: var(\n      --#{$custom-property-prefix}-spacing-10,\n      map-get($theme, 'spacing-10')\n    ) !global;\n    $spacing-11: var(\n      --#{$custom-property-prefix}-spacing-11,\n      map-get($theme, 'spacing-11')\n    ) !global;\n    $spacing-12: var(\n      --#{$custom-property-prefix}-spacing-12,\n      map-get($theme, 'spacing-12')\n    ) !global;\n    $fluid-spacing-01: var(\n      --#{$custom-property-prefix}-fluid-spacing-01,\n      map-get($theme, 'fluid-spacing-01')\n    ) !global;\n    $fluid-spacing-02: var(\n      --#{$custom-property-prefix}-fluid-spacing-02,\n      map-get($theme, 'fluid-spacing-02')\n    ) !global;\n    $fluid-spacing-03: var(\n      --#{$custom-property-prefix}-fluid-spacing-03,\n      map-get($theme, 'fluid-spacing-03')\n    ) !global;\n    $fluid-spacing-04: var(\n      --#{$custom-property-prefix}-fluid-spacing-04,\n      map-get($theme, 'fluid-spacing-04')\n    ) !global;\n    $layout-01: var(\n      --#{$custom-property-prefix}-layout-01,\n      map-get($theme, 'layout-01')\n    ) !global;\n    $layout-02: var(\n      --#{$custom-property-prefix}-layout-02,\n      map-get($theme, 'layout-02')\n    ) !global;\n    $layout-03: var(\n      --#{$custom-property-prefix}-layout-03,\n      map-get($theme, 'layout-03')\n    ) !global;\n    $layout-04: var(\n      --#{$custom-property-prefix}-layout-04,\n      map-get($theme, 'layout-04')\n    ) !global;\n    $layout-05: var(\n      --#{$custom-property-prefix}-layout-05,\n      map-get($theme, 'layout-05')\n    ) !global;\n    $layout-06: var(\n      --#{$custom-property-prefix}-layout-06,\n      map-get($theme, 'layout-06')\n    ) !global;\n    $layout-07: var(\n      --#{$custom-property-prefix}-layout-07,\n      map-get($theme, 'layout-07')\n    ) !global;\n    $container-01: var(\n      --#{$custom-property-prefix}-container-01,\n      map-get($theme, 'container-01')\n    ) !global;\n    $container-02: var(\n      --#{$custom-property-prefix}-container-02,\n      map-get($theme, 'container-02')\n    ) !global;\n    $container-03: var(\n      --#{$custom-property-prefix}-container-03,\n      map-get($theme, 'container-03')\n    ) !global;\n    $container-04: var(\n      --#{$custom-property-prefix}-container-04,\n      map-get($theme, 'container-04')\n    ) !global;\n    $container-05: var(\n      --#{$custom-property-prefix}-container-05,\n      map-get($theme, 'container-05')\n    ) !global;\n    $icon-size-01: var(\n      --#{$custom-property-prefix}-icon-size-01,\n      map-get($theme, 'icon-size-01')\n    ) !global;\n    $icon-size-02: var(\n      --#{$custom-property-prefix}-icon-size-02,\n      map-get($theme, 'icon-size-02')\n    ) !global;\n  }\n  @if $emit-custom-properties == true {\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'interactive-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'interactive-01',\n        map-get($theme, 'interactive-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'interactive-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'interactive-02',\n        map-get($theme, 'interactive-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'interactive-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'interactive-03',\n        map-get($theme, 'interactive-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'interactive-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'interactive-04',\n        map-get($theme, 'interactive-04')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'ui-background',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'ui-background',\n        map-get($theme, 'ui-background')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-01', $emit-difference) {\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-02', $emit-difference) {\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-03', $emit-difference) {\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-04', $emit-difference) {\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-05', $emit-difference) {\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-01', $emit-difference) {\n      @include custom-property('text-01', map-get($theme, 'text-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-02', $emit-difference) {\n      @include custom-property('text-02', map-get($theme, 'text-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-03', $emit-difference) {\n      @include custom-property('text-03', map-get($theme, 'text-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-04', $emit-difference) {\n      @include custom-property('text-04', map-get($theme, 'text-04'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-05', $emit-difference) {\n      @include custom-property('text-05', map-get($theme, 'text-05'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'text-error',\n      $emit-difference\n    )\n    {\n      @include custom-property('text-error', map-get($theme, 'text-error'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'icon-01', $emit-difference) {\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'icon-02', $emit-difference) {\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'icon-03', $emit-difference) {\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'link-01', $emit-difference) {\n      @include custom-property('link-01', map-get($theme, 'link-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'link-02', $emit-difference) {\n      @include custom-property('link-02', map-get($theme, 'link-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-link',\n      $emit-difference\n    )\n    {\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'field-01', $emit-difference)\n    {\n      @include custom-property('field-01', map-get($theme, 'field-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'field-02', $emit-difference)\n    {\n      @include custom-property('field-02', map-get($theme, 'field-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'support-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('support-01', map-get($theme, 'support-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'support-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('support-02', map-get($theme, 'support-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'support-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('support-03', map-get($theme, 'support-03'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'support-04',\n      $emit-difference\n    )\n    {\n      @include custom-property('support-04', map-get($theme, 'support-04'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-support-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-01',\n        map-get($theme, 'inverse-support-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-support-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-02',\n        map-get($theme, 'inverse-support-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-support-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-03',\n        map-get($theme, 'inverse-support-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-support-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-04',\n        map-get($theme, 'inverse-support-04')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'overlay-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'danger-01', $emit-difference)\n    {\n      @include custom-property('danger-01', map-get($theme, 'danger-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'danger-02', $emit-difference)\n    {\n      @include custom-property('danger-02', map-get($theme, 'danger-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'focus', $emit-difference) {\n      @include custom-property('focus', map-get($theme, 'focus'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-focus-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-focus-ui',\n        map-get($theme, 'inverse-focus-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-primary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-primary',\n        map-get($theme, 'hover-primary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-primary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-primary',\n        map-get($theme, 'active-primary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-primary-text',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-primary-text',\n        map-get($theme, 'hover-primary-text')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-secondary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-secondary',\n        map-get($theme, 'hover-secondary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-secondary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-secondary',\n        map-get($theme, 'active-secondary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-tertiary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-tertiary',\n        map-get($theme, 'hover-tertiary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-tertiary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-tertiary',\n        map-get($theme, 'active-tertiary')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'hover-ui', $emit-difference)\n    {\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-light-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-light-ui',\n        map-get($theme, 'hover-light-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-selected-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-selected-ui',\n        map-get($theme, 'hover-selected-ui')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'active-ui', $emit-difference)\n    {\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-light-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-light-ui',\n        map-get($theme, 'active-light-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'selected-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'selected-light-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'selected-light-ui',\n        map-get($theme, 'selected-light-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-hover-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-hover-ui',\n        map-get($theme, 'inverse-hover-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-danger',\n      $emit-difference\n    )\n    {\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-danger',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-danger',\n        map-get($theme, 'active-danger')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'hover-row', $emit-difference)\n    {\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'visited-link',\n      $emit-difference\n    )\n    {\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'disabled-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'disabled-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'disabled-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'highlight', $emit-difference)\n    {\n      @include custom-property('highlight', map-get($theme, 'highlight'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'decorative-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'decorative-01',\n        map-get($theme, 'decorative-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'button-separator',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'button-separator',\n        map-get($theme, 'button-separator')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'skeleton-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'skeleton-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'brand-01', $emit-difference)\n    {\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'brand-02', $emit-difference)\n    {\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'brand-03', $emit-difference)\n    {\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'active-01', $emit-difference)\n    {\n      @include custom-property('active-01', map-get($theme, 'active-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-field',\n      $emit-difference\n    )\n    {\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'danger', $emit-difference) {\n      @include custom-property('danger', map-get($theme, 'danger'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'caption-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'label-01', $emit-difference)\n    {\n      @include custom-property('label-01', map-get($theme, 'label-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'helper-text-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'helper-text-01',\n        map-get($theme, 'helper-text-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'body-short-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'body-short-01',\n        map-get($theme, 'body-short-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'body-long-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'body-short-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'body-short-02',\n        map-get($theme, 'body-short-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'body-long-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'code-01', $emit-difference) {\n      @include custom-property('code-01', map-get($theme, 'code-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'code-02', $emit-difference) {\n      @include custom-property('code-02', map-get($theme, 'code-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'heading-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-01',\n        map-get($theme, 'productive-heading-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'heading-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-02',\n        map-get($theme, 'productive-heading-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-03',\n        map-get($theme, 'productive-heading-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-04',\n        map-get($theme, 'productive-heading-04')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-05',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-05',\n        map-get($theme, 'productive-heading-05')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-06',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-06',\n        map-get($theme, 'productive-heading-06')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-07',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-07',\n        map-get($theme, 'productive-heading-07')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-01',\n        map-get($theme, 'expressive-heading-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-02',\n        map-get($theme, 'expressive-heading-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-03',\n        map-get($theme, 'expressive-heading-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-04',\n        map-get($theme, 'expressive-heading-04')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-05',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-05',\n        map-get($theme, 'expressive-heading-05')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-06',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-06',\n        map-get($theme, 'expressive-heading-06')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-paragraph-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-paragraph-01',\n        map-get($theme, 'expressive-paragraph-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'quotation-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'quotation-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'display-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('display-01', map-get($theme, 'display-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'display-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('display-02', map-get($theme, 'display-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'display-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('display-03', map-get($theme, 'display-03'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'display-04',\n      $emit-difference\n    )\n    {\n      @include custom-property('display-04', map-get($theme, 'display-04'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-04',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-05',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-06',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-07',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-08',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-09',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-10',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-11',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-12',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'fluid-spacing-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-01',\n        map-get($theme, 'fluid-spacing-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'fluid-spacing-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-02',\n        map-get($theme, 'fluid-spacing-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'fluid-spacing-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-03',\n        map-get($theme, 'fluid-spacing-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'fluid-spacing-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-04',\n        map-get($theme, 'fluid-spacing-04')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-01', $emit-difference)\n    {\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-02', $emit-difference)\n    {\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-03', $emit-difference)\n    {\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-04', $emit-difference)\n    {\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-05', $emit-difference)\n    {\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-06', $emit-difference)\n    {\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-07', $emit-difference)\n    {\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-01', map-get($theme, 'container-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-02', map-get($theme, 'container-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-03', map-get($theme, 'container-03'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-04',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-04', map-get($theme, 'container-04'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-05',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-05', map-get($theme, 'container-05'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'icon-size-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'icon-size-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\n    }\n  }\n\n  @content;\n\n  // Reset to default theme after apply in content\n  @if $carbon--theme != $parent-carbon-theme {\n    $carbon--theme: $parent-carbon-theme !global;\n\n    @include carbon--theme();\n  }\n}\n"],sourceRoot:""}]),o.locals={productiveHeading01:"-esm-offline-tools__home-styles__productiveHeading01___2Jv4l",productiveHeading02:"-esm-offline-tools__home-styles__productiveHeading02___wX3_2",productiveHeading03:"-esm-offline-tools__home-styles__productiveHeading03___S4qK4",productiveHeading04:"-esm-offline-tools__home-styles__productiveHeading04___1c8Rq",bodyShort01:"-esm-offline-tools__home-styles__bodyShort01___1yGFg",bodyLong01:"-esm-offline-tools__home-styles__bodyLong01___2MNS7",label01:"-esm-offline-tools__home-styles__label01____ZJQM",offlinePatientsTableContainer:"-esm-offline-tools__home-styles__offlinePatientsTableContainer___RYeuK"};const p=o},5485:(e,n,t)=>{t.d(n,{Z:()=>p});var i=t(9233),a=t.n(i),r=t(361),o=t.n(r)()(a());o.push([e.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-offline-tools__desktop-side-nav-styles__productiveHeading01___3ICP5,.-esm-offline-tools__desktop-side-nav-styles__link___2BeGC>div a:nth-child(1){font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.-esm-offline-tools__desktop-side-nav-styles__productiveHeading02___35tyk{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-offline-tools__desktop-side-nav-styles__productiveHeading03___1FHfj{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-offline-tools__desktop-side-nav-styles__productiveHeading04___17Irp{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-offline-tools__desktop-side-nav-styles__bodyShort01___3q_nT{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.-esm-offline-tools__desktop-side-nav-styles__bodyLong01___3E58D{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-offline-tools__desktop-side-nav-styles__label01___25CIu{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-offline-tools__desktop-side-nav-styles__link___2BeGC>div a:nth-child(1){height:3rem;padding:1.5rem 0 1.5rem 1.2rem;color:#8d8d8d;border-left:.25rem solid transparent}.-esm-offline-tools__desktop-side-nav-styles__link___2BeGC>div a:nth-child(1):hover{background-color:#e0e0e0;color:#161616;border-left-color:#005d5d;border-left-color:var(--brand-01)}.-esm-offline-tools__desktop-side-nav-styles__link___2BeGC>div a:nth-child(1):focus{background-color:#e0e0e0;outline:none;color:#161616;border-left-color:#005d5d;border-left-color:var(--brand-01)}.omrs-breakpoint-gt-tablet .-esm-offline-tools__desktop-side-nav-styles__link___2BeGC>div{padding-top:1rem}.omrs-breakpoint-gt-tablet .-esm-offline-tools__desktop-side-nav-styles__link___2BeGC>div a:nth-child(1){height:2rem;color:#8d8d8d;padding:0 0 0 1rem}","",{version:3,sources:["webpack://./../../framework/esm-styleguide/src/_vars.scss","webpack://./src/root.scss","webpack://./../../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./src/nav/desktop-side-nav.styles.scss","webpack://./../../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCzCF,wJC4gBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD7rB1B,0ECwgBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CDzrB1B,0ECogBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CDrrB1B,0ECggBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,gBAqLsB,CDjrB1B,kEC4fI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD7qB1B,iECwfI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDzqB1B,8DCofI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CClsB1B,8EACE,WAAA,CACA,8BAAA,CACA,aC2CQ,CDzCR,oCAAA,CAGF,oFACE,wBCoCQ,CDnCR,aCqCQ,CJtBR,yBAAA,CACA,iCAAA,CGZF,oFACE,wBC8BQ,CD7BR,YAAA,CACA,aC8BQ,CJtBR,yBAAA,CACA,iCAAA,CGLF,0FACE,gBAAA,CAGF,yGACE,WAAA,CACA,aCmBQ,CDlBR,kBAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n",'@import "~@openmrs/esm-styleguide/src/vars";\n@import "carbon-components/scss/globals/scss/typography.scss";\n\n.productiveHeading01 {\n  @include carbon--type-style("productive-heading-01");\n}\n\n.productiveHeading02 {\n  @include carbon--type-style("productive-heading-02");\n}\n\n.productiveHeading03 {\n  @include carbon--type-style("productive-heading-03");\n}\n\n.productiveHeading04 {\n  @include carbon--type-style("productive-heading-04");\n}\n\n.bodyShort01 {\n  @include carbon--type-style("body-short-01");\n}\n\n.bodyLong01 {\n  @include carbon--type-style("body-long-01");\n}\n\n.label01 {\n  @include carbon--type-style("label-01");\n}\n',"//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n",'@import "../root.scss";\n\n.link > div a:nth-child(1) {\n  height: 3rem;\n  padding: 1.5rem 0 1.5rem 1.2rem;\n  color: $ui-04;\n  @extend .productiveHeading01;\n  border-left: 0.25rem solid transparent;\n}\n\n.link > div a:nth-child(1):hover {\n  background-color: $ui-03;\n  color: $ui-05;\n  @include brand-01(border-left-color);\n}\n\n.link > div a:nth-child(1):focus {\n  background-color: $ui-03;\n  outline: none;\n  color: $ui-05;\n  @include brand-01(border-left-color);\n}\n\n:global(.omrs-breakpoint-gt-tablet) .link > div {\n  padding-top: 1rem;\n}\n\n:global(.omrs-breakpoint-gt-tablet) .link > div a:nth-child(1) {\n  height: 2rem;\n  color: $ui-04;\n  padding: 0 0 0 1rem;\n}\n',"// Code generated by @carbon/themes. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import './themes';\n\n/// Define theme variables from a map of tokens\n/// @access public\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\n///\n/// @example scss\n///   // Default usage\n///   @include carbon--theme();\n///\n///   // Alternate styling (not white theme)\n///   @include carbon--theme($carbon--theme--g90) {\n///     // declarations...\n///   }\n///\n///   // Inline styling\n///   @include carbon--theme($carbon--theme--g90) {\n///     .my-dark-theme {\n///       // declarations...\n///     }\n///   }\n///\n/// @group @carbon/themes\n@mixin carbon--theme(\n  $theme: $carbon--theme,\n  $emit-custom-properties: false,\n  $emit-difference: false\n) {\n  $parent-carbon-theme: $carbon--theme;\n  $carbon--theme: $theme !global;\n  $interactive-01: map-get($theme, 'interactive-01') !global;\n  $interactive-02: map-get($theme, 'interactive-02') !global;\n  $interactive-03: map-get($theme, 'interactive-03') !global;\n  $interactive-04: map-get($theme, 'interactive-04') !global;\n  $ui-background: map-get($theme, 'ui-background') !global;\n  $ui-01: map-get($theme, 'ui-01') !global;\n  $ui-02: map-get($theme, 'ui-02') !global;\n  $ui-03: map-get($theme, 'ui-03') !global;\n  $ui-04: map-get($theme, 'ui-04') !global;\n  $ui-05: map-get($theme, 'ui-05') !global;\n  $text-01: map-get($theme, 'text-01') !global;\n  $text-02: map-get($theme, 'text-02') !global;\n  $text-03: map-get($theme, 'text-03') !global;\n  $text-04: map-get($theme, 'text-04') !global;\n  $text-05: map-get($theme, 'text-05') !global;\n  $text-error: map-get($theme, 'text-error') !global;\n  $icon-01: map-get($theme, 'icon-01') !global;\n  $icon-02: map-get($theme, 'icon-02') !global;\n  $icon-03: map-get($theme, 'icon-03') !global;\n  $link-01: map-get($theme, 'link-01') !global;\n  $link-02: map-get($theme, 'link-02') !global;\n  $inverse-link: map-get($theme, 'inverse-link') !global;\n  $field-01: map-get($theme, 'field-01') !global;\n  $field-02: map-get($theme, 'field-02') !global;\n  $inverse-01: map-get($theme, 'inverse-01') !global;\n  $inverse-02: map-get($theme, 'inverse-02') !global;\n  $support-01: map-get($theme, 'support-01') !global;\n  $support-02: map-get($theme, 'support-02') !global;\n  $support-03: map-get($theme, 'support-03') !global;\n  $support-04: map-get($theme, 'support-04') !global;\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\n  $overlay-01: map-get($theme, 'overlay-01') !global;\n  $danger-01: map-get($theme, 'danger-01') !global;\n  $danger-02: map-get($theme, 'danger-02') !global;\n  $focus: map-get($theme, 'focus') !global;\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\n  $hover-primary: map-get($theme, 'hover-primary') !global;\n  $active-primary: map-get($theme, 'active-primary') !global;\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\n  $active-secondary: map-get($theme, 'active-secondary') !global;\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\n  $hover-ui: map-get($theme, 'hover-ui') !global;\n  $hover-light-ui: map-get($theme, 'hover-light-ui') !global;\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\n  $active-ui: map-get($theme, 'active-ui') !global;\n  $active-light-ui: map-get($theme, 'active-light-ui') !global;\n  $selected-ui: map-get($theme, 'selected-ui') !global;\n  $selected-light-ui: map-get($theme, 'selected-light-ui') !global;\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\n  $hover-danger: map-get($theme, 'hover-danger') !global;\n  $active-danger: map-get($theme, 'active-danger') !global;\n  $hover-row: map-get($theme, 'hover-row') !global;\n  $visited-link: map-get($theme, 'visited-link') !global;\n  $disabled-01: map-get($theme, 'disabled-01') !global;\n  $disabled-02: map-get($theme, 'disabled-02') !global;\n  $disabled-03: map-get($theme, 'disabled-03') !global;\n  $highlight: map-get($theme, 'highlight') !global;\n  $decorative-01: map-get($theme, 'decorative-01') !global;\n  $button-separator: map-get($theme, 'button-separator') !global;\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\n  $brand-01: map-get($theme, 'brand-01') !global;\n  $brand-02: map-get($theme, 'brand-02') !global;\n  $brand-03: map-get($theme, 'brand-03') !global;\n  $active-01: map-get($theme, 'active-01') !global;\n  $hover-field: map-get($theme, 'hover-field') !global;\n  $danger: map-get($theme, 'danger') !global;\n  $caption-01: map-get($theme, 'caption-01') !global;\n  $label-01: map-get($theme, 'label-01') !global;\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\n  $body-short-01: map-get($theme, 'body-short-01') !global;\n  $body-long-01: map-get($theme, 'body-long-01') !global;\n  $body-short-02: map-get($theme, 'body-short-02') !global;\n  $body-long-02: map-get($theme, 'body-long-02') !global;\n  $code-01: map-get($theme, 'code-01') !global;\n  $code-02: map-get($theme, 'code-02') !global;\n  $heading-01: map-get($theme, 'heading-01') !global;\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\n  $heading-02: map-get($theme, 'heading-02') !global;\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\n  $quotation-01: map-get($theme, 'quotation-01') !global;\n  $quotation-02: map-get($theme, 'quotation-02') !global;\n  $display-01: map-get($theme, 'display-01') !global;\n  $display-02: map-get($theme, 'display-02') !global;\n  $display-03: map-get($theme, 'display-03') !global;\n  $display-04: map-get($theme, 'display-04') !global;\n  $spacing-01: map-get($theme, 'spacing-01') !global;\n  $spacing-02: map-get($theme, 'spacing-02') !global;\n  $spacing-03: map-get($theme, 'spacing-03') !global;\n  $spacing-04: map-get($theme, 'spacing-04') !global;\n  $spacing-05: map-get($theme, 'spacing-05') !global;\n  $spacing-06: map-get($theme, 'spacing-06') !global;\n  $spacing-07: map-get($theme, 'spacing-07') !global;\n  $spacing-08: map-get($theme, 'spacing-08') !global;\n  $spacing-09: map-get($theme, 'spacing-09') !global;\n  $spacing-10: map-get($theme, 'spacing-10') !global;\n  $spacing-11: map-get($theme, 'spacing-11') !global;\n  $spacing-12: map-get($theme, 'spacing-12') !global;\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\n  $layout-01: map-get($theme, 'layout-01') !global;\n  $layout-02: map-get($theme, 'layout-02') !global;\n  $layout-03: map-get($theme, 'layout-03') !global;\n  $layout-04: map-get($theme, 'layout-04') !global;\n  $layout-05: map-get($theme, 'layout-05') !global;\n  $layout-06: map-get($theme, 'layout-06') !global;\n  $layout-07: map-get($theme, 'layout-07') !global;\n  $container-01: map-get($theme, 'container-01') !global;\n  $container-02: map-get($theme, 'container-02') !global;\n  $container-03: map-get($theme, 'container-03') !global;\n  $container-04: map-get($theme, 'container-04') !global;\n  $container-05: map-get($theme, 'container-05') !global;\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\n\n  @if global-variable-exists('feature-flags') and\n    map-get($feature-flags, 'enable-css-custom-properties')\n  {\n    $interactive-01: var(\n      --#{$custom-property-prefix}-interactive-01,\n      map-get($theme, 'interactive-01')\n    ) !global;\n    $interactive-02: var(\n      --#{$custom-property-prefix}-interactive-02,\n      map-get($theme, 'interactive-02')\n    ) !global;\n    $interactive-03: var(\n      --#{$custom-property-prefix}-interactive-03,\n      map-get($theme, 'interactive-03')\n    ) !global;\n    $interactive-04: var(\n      --#{$custom-property-prefix}-interactive-04,\n      map-get($theme, 'interactive-04')\n    ) !global;\n    $ui-background: var(\n      --#{$custom-property-prefix}-ui-background,\n      map-get($theme, 'ui-background')\n    ) !global;\n    $ui-01: var(\n      --#{$custom-property-prefix}-ui-01,\n      map-get($theme, 'ui-01')\n    ) !global;\n    $ui-02: var(\n      --#{$custom-property-prefix}-ui-02,\n      map-get($theme, 'ui-02')\n    ) !global;\n    $ui-03: var(\n      --#{$custom-property-prefix}-ui-03,\n      map-get($theme, 'ui-03')\n    ) !global;\n    $ui-04: var(\n      --#{$custom-property-prefix}-ui-04,\n      map-get($theme, 'ui-04')\n    ) !global;\n    $ui-05: var(\n      --#{$custom-property-prefix}-ui-05,\n      map-get($theme, 'ui-05')\n    ) !global;\n    $text-01: var(\n      --#{$custom-property-prefix}-text-01,\n      map-get($theme, 'text-01')\n    ) !global;\n    $text-02: var(\n      --#{$custom-property-prefix}-text-02,\n      map-get($theme, 'text-02')\n    ) !global;\n    $text-03: var(\n      --#{$custom-property-prefix}-text-03,\n      map-get($theme, 'text-03')\n    ) !global;\n    $text-04: var(\n      --#{$custom-property-prefix}-text-04,\n      map-get($theme, 'text-04')\n    ) !global;\n    $text-05: var(\n      --#{$custom-property-prefix}-text-05,\n      map-get($theme, 'text-05')\n    ) !global;\n    $text-error: var(\n      --#{$custom-property-prefix}-text-error,\n      map-get($theme, 'text-error')\n    ) !global;\n    $icon-01: var(\n      --#{$custom-property-prefix}-icon-01,\n      map-get($theme, 'icon-01')\n    ) !global;\n    $icon-02: var(\n      --#{$custom-property-prefix}-icon-02,\n      map-get($theme, 'icon-02')\n    ) !global;\n    $icon-03: var(\n      --#{$custom-property-prefix}-icon-03,\n      map-get($theme, 'icon-03')\n    ) !global;\n    $link-01: var(\n      --#{$custom-property-prefix}-link-01,\n      map-get($theme, 'link-01')\n    ) !global;\n    $link-02: var(\n      --#{$custom-property-prefix}-link-02,\n      map-get($theme, 'link-02')\n    ) !global;\n    $inverse-link: var(\n      --#{$custom-property-prefix}-inverse-link,\n      map-get($theme, 'inverse-link')\n    ) !global;\n    $field-01: var(\n      --#{$custom-property-prefix}-field-01,\n      map-get($theme, 'field-01')\n    ) !global;\n    $field-02: var(\n      --#{$custom-property-prefix}-field-02,\n      map-get($theme, 'field-02')\n    ) !global;\n    $inverse-01: var(\n      --#{$custom-property-prefix}-inverse-01,\n      map-get($theme, 'inverse-01')\n    ) !global;\n    $inverse-02: var(\n      --#{$custom-property-prefix}-inverse-02,\n      map-get($theme, 'inverse-02')\n    ) !global;\n    $support-01: var(\n      --#{$custom-property-prefix}-support-01,\n      map-get($theme, 'support-01')\n    ) !global;\n    $support-02: var(\n      --#{$custom-property-prefix}-support-02,\n      map-get($theme, 'support-02')\n    ) !global;\n    $support-03: var(\n      --#{$custom-property-prefix}-support-03,\n      map-get($theme, 'support-03')\n    ) !global;\n    $support-04: var(\n      --#{$custom-property-prefix}-support-04,\n      map-get($theme, 'support-04')\n    ) !global;\n    $inverse-support-01: var(\n      --#{$custom-property-prefix}-inverse-support-01,\n      map-get($theme, 'inverse-support-01')\n    ) !global;\n    $inverse-support-02: var(\n      --#{$custom-property-prefix}-inverse-support-02,\n      map-get($theme, 'inverse-support-02')\n    ) !global;\n    $inverse-support-03: var(\n      --#{$custom-property-prefix}-inverse-support-03,\n      map-get($theme, 'inverse-support-03')\n    ) !global;\n    $inverse-support-04: var(\n      --#{$custom-property-prefix}-inverse-support-04,\n      map-get($theme, 'inverse-support-04')\n    ) !global;\n    $overlay-01: var(\n      --#{$custom-property-prefix}-overlay-01,\n      map-get($theme, 'overlay-01')\n    ) !global;\n    $danger-01: var(\n      --#{$custom-property-prefix}-danger-01,\n      map-get($theme, 'danger-01')\n    ) !global;\n    $danger-02: var(\n      --#{$custom-property-prefix}-danger-02,\n      map-get($theme, 'danger-02')\n    ) !global;\n    $focus: var(\n      --#{$custom-property-prefix}-focus,\n      map-get($theme, 'focus')\n    ) !global;\n    $inverse-focus-ui: var(\n      --#{$custom-property-prefix}-inverse-focus-ui,\n      map-get($theme, 'inverse-focus-ui')\n    ) !global;\n    $hover-primary: var(\n      --#{$custom-property-prefix}-hover-primary,\n      map-get($theme, 'hover-primary')\n    ) !global;\n    $active-primary: var(\n      --#{$custom-property-prefix}-active-primary,\n      map-get($theme, 'active-primary')\n    ) !global;\n    $hover-primary-text: var(\n      --#{$custom-property-prefix}-hover-primary-text,\n      map-get($theme, 'hover-primary-text')\n    ) !global;\n    $hover-secondary: var(\n      --#{$custom-property-prefix}-hover-secondary,\n      map-get($theme, 'hover-secondary')\n    ) !global;\n    $active-secondary: var(\n      --#{$custom-property-prefix}-active-secondary,\n      map-get($theme, 'active-secondary')\n    ) !global;\n    $hover-tertiary: var(\n      --#{$custom-property-prefix}-hover-tertiary,\n      map-get($theme, 'hover-tertiary')\n    ) !global;\n    $active-tertiary: var(\n      --#{$custom-property-prefix}-active-tertiary,\n      map-get($theme, 'active-tertiary')\n    ) !global;\n    $hover-ui: var(\n      --#{$custom-property-prefix}-hover-ui,\n      map-get($theme, 'hover-ui')\n    ) !global;\n    $hover-light-ui: var(\n      --#{$custom-property-prefix}-hover-light-ui,\n      map-get($theme, 'hover-light-ui')\n    ) !global;\n    $hover-selected-ui: var(\n      --#{$custom-property-prefix}-hover-selected-ui,\n      map-get($theme, 'hover-selected-ui')\n    ) !global;\n    $active-ui: var(\n      --#{$custom-property-prefix}-active-ui,\n      map-get($theme, 'active-ui')\n    ) !global;\n    $active-light-ui: var(\n      --#{$custom-property-prefix}-active-light-ui,\n      map-get($theme, 'active-light-ui')\n    ) !global;\n    $selected-ui: var(\n      --#{$custom-property-prefix}-selected-ui,\n      map-get($theme, 'selected-ui')\n    ) !global;\n    $selected-light-ui: var(\n      --#{$custom-property-prefix}-selected-light-ui,\n      map-get($theme, 'selected-light-ui')\n    ) !global;\n    $inverse-hover-ui: var(\n      --#{$custom-property-prefix}-inverse-hover-ui,\n      map-get($theme, 'inverse-hover-ui')\n    ) !global;\n    $hover-danger: var(\n      --#{$custom-property-prefix}-hover-danger,\n      map-get($theme, 'hover-danger')\n    ) !global;\n    $active-danger: var(\n      --#{$custom-property-prefix}-active-danger,\n      map-get($theme, 'active-danger')\n    ) !global;\n    $hover-row: var(\n      --#{$custom-property-prefix}-hover-row,\n      map-get($theme, 'hover-row')\n    ) !global;\n    $visited-link: var(\n      --#{$custom-property-prefix}-visited-link,\n      map-get($theme, 'visited-link')\n    ) !global;\n    $disabled-01: var(\n      --#{$custom-property-prefix}-disabled-01,\n      map-get($theme, 'disabled-01')\n    ) !global;\n    $disabled-02: var(\n      --#{$custom-property-prefix}-disabled-02,\n      map-get($theme, 'disabled-02')\n    ) !global;\n    $disabled-03: var(\n      --#{$custom-property-prefix}-disabled-03,\n      map-get($theme, 'disabled-03')\n    ) !global;\n    $highlight: var(\n      --#{$custom-property-prefix}-highlight,\n      map-get($theme, 'highlight')\n    ) !global;\n    $decorative-01: var(\n      --#{$custom-property-prefix}-decorative-01,\n      map-get($theme, 'decorative-01')\n    ) !global;\n    $button-separator: var(\n      --#{$custom-property-prefix}-button-separator,\n      map-get($theme, 'button-separator')\n    ) !global;\n    $skeleton-01: var(\n      --#{$custom-property-prefix}-skeleton-01,\n      map-get($theme, 'skeleton-01')\n    ) !global;\n    $skeleton-02: var(\n      --#{$custom-property-prefix}-skeleton-02,\n      map-get($theme, 'skeleton-02')\n    ) !global;\n    $brand-01: var(\n      --#{$custom-property-prefix}-brand-01,\n      map-get($theme, 'brand-01')\n    ) !global;\n    $brand-02: var(\n      --#{$custom-property-prefix}-brand-02,\n      map-get($theme, 'brand-02')\n    ) !global;\n    $brand-03: var(\n      --#{$custom-property-prefix}-brand-03,\n      map-get($theme, 'brand-03')\n    ) !global;\n    $active-01: var(\n      --#{$custom-property-prefix}-active-01,\n      map-get($theme, 'active-01')\n    ) !global;\n    $hover-field: var(\n      --#{$custom-property-prefix}-hover-field,\n      map-get($theme, 'hover-field')\n    ) !global;\n    $danger: var(\n      --#{$custom-property-prefix}-danger,\n      map-get($theme, 'danger')\n    ) !global;\n    $spacing-01: var(\n      --#{$custom-property-prefix}-spacing-01,\n      map-get($theme, 'spacing-01')\n    ) !global;\n    $spacing-02: var(\n      --#{$custom-property-prefix}-spacing-02,\n      map-get($theme, 'spacing-02')\n    ) !global;\n    $spacing-03: var(\n      --#{$custom-property-prefix}-spacing-03,\n      map-get($theme, 'spacing-03')\n    ) !global;\n    $spacing-04: var(\n      --#{$custom-property-prefix}-spacing-04,\n      map-get($theme, 'spacing-04')\n    ) !global;\n    $spacing-05: var(\n      --#{$custom-property-prefix}-spacing-05,\n      map-get($theme, 'spacing-05')\n    ) !global;\n    $spacing-06: var(\n      --#{$custom-property-prefix}-spacing-06,\n      map-get($theme, 'spacing-06')\n    ) !global;\n    $spacing-07: var(\n      --#{$custom-property-prefix}-spacing-07,\n      map-get($theme, 'spacing-07')\n    ) !global;\n    $spacing-08: var(\n      --#{$custom-property-prefix}-spacing-08,\n      map-get($theme, 'spacing-08')\n    ) !global;\n    $spacing-09: var(\n      --#{$custom-property-prefix}-spacing-09,\n      map-get($theme, 'spacing-09')\n    ) !global;\n    $spacing-10: var(\n      --#{$custom-property-prefix}-spacing-10,\n      map-get($theme, 'spacing-10')\n    ) !global;\n    $spacing-11: var(\n      --#{$custom-property-prefix}-spacing-11,\n      map-get($theme, 'spacing-11')\n    ) !global;\n    $spacing-12: var(\n      --#{$custom-property-prefix}-spacing-12,\n      map-get($theme, 'spacing-12')\n    ) !global;\n    $fluid-spacing-01: var(\n      --#{$custom-property-prefix}-fluid-spacing-01,\n      map-get($theme, 'fluid-spacing-01')\n    ) !global;\n    $fluid-spacing-02: var(\n      --#{$custom-property-prefix}-fluid-spacing-02,\n      map-get($theme, 'fluid-spacing-02')\n    ) !global;\n    $fluid-spacing-03: var(\n      --#{$custom-property-prefix}-fluid-spacing-03,\n      map-get($theme, 'fluid-spacing-03')\n    ) !global;\n    $fluid-spacing-04: var(\n      --#{$custom-property-prefix}-fluid-spacing-04,\n      map-get($theme, 'fluid-spacing-04')\n    ) !global;\n    $layout-01: var(\n      --#{$custom-property-prefix}-layout-01,\n      map-get($theme, 'layout-01')\n    ) !global;\n    $layout-02: var(\n      --#{$custom-property-prefix}-layout-02,\n      map-get($theme, 'layout-02')\n    ) !global;\n    $layout-03: var(\n      --#{$custom-property-prefix}-layout-03,\n      map-get($theme, 'layout-03')\n    ) !global;\n    $layout-04: var(\n      --#{$custom-property-prefix}-layout-04,\n      map-get($theme, 'layout-04')\n    ) !global;\n    $layout-05: var(\n      --#{$custom-property-prefix}-layout-05,\n      map-get($theme, 'layout-05')\n    ) !global;\n    $layout-06: var(\n      --#{$custom-property-prefix}-layout-06,\n      map-get($theme, 'layout-06')\n    ) !global;\n    $layout-07: var(\n      --#{$custom-property-prefix}-layout-07,\n      map-get($theme, 'layout-07')\n    ) !global;\n    $container-01: var(\n      --#{$custom-property-prefix}-container-01,\n      map-get($theme, 'container-01')\n    ) !global;\n    $container-02: var(\n      --#{$custom-property-prefix}-container-02,\n      map-get($theme, 'container-02')\n    ) !global;\n    $container-03: var(\n      --#{$custom-property-prefix}-container-03,\n      map-get($theme, 'container-03')\n    ) !global;\n    $container-04: var(\n      --#{$custom-property-prefix}-container-04,\n      map-get($theme, 'container-04')\n    ) !global;\n    $container-05: var(\n      --#{$custom-property-prefix}-container-05,\n      map-get($theme, 'container-05')\n    ) !global;\n    $icon-size-01: var(\n      --#{$custom-property-prefix}-icon-size-01,\n      map-get($theme, 'icon-size-01')\n    ) !global;\n    $icon-size-02: var(\n      --#{$custom-property-prefix}-icon-size-02,\n      map-get($theme, 'icon-size-02')\n    ) !global;\n  }\n  @if $emit-custom-properties == true {\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'interactive-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'interactive-01',\n        map-get($theme, 'interactive-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'interactive-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'interactive-02',\n        map-get($theme, 'interactive-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'interactive-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'interactive-03',\n        map-get($theme, 'interactive-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'interactive-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'interactive-04',\n        map-get($theme, 'interactive-04')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'ui-background',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'ui-background',\n        map-get($theme, 'ui-background')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-01', $emit-difference) {\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-02', $emit-difference) {\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-03', $emit-difference) {\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-04', $emit-difference) {\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'ui-05', $emit-difference) {\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-01', $emit-difference) {\n      @include custom-property('text-01', map-get($theme, 'text-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-02', $emit-difference) {\n      @include custom-property('text-02', map-get($theme, 'text-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-03', $emit-difference) {\n      @include custom-property('text-03', map-get($theme, 'text-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-04', $emit-difference) {\n      @include custom-property('text-04', map-get($theme, 'text-04'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'text-05', $emit-difference) {\n      @include custom-property('text-05', map-get($theme, 'text-05'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'text-error',\n      $emit-difference\n    )\n    {\n      @include custom-property('text-error', map-get($theme, 'text-error'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'icon-01', $emit-difference) {\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'icon-02', $emit-difference) {\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'icon-03', $emit-difference) {\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'link-01', $emit-difference) {\n      @include custom-property('link-01', map-get($theme, 'link-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'link-02', $emit-difference) {\n      @include custom-property('link-02', map-get($theme, 'link-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-link',\n      $emit-difference\n    )\n    {\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'field-01', $emit-difference)\n    {\n      @include custom-property('field-01', map-get($theme, 'field-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'field-02', $emit-difference)\n    {\n      @include custom-property('field-02', map-get($theme, 'field-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'support-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('support-01', map-get($theme, 'support-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'support-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('support-02', map-get($theme, 'support-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'support-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('support-03', map-get($theme, 'support-03'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'support-04',\n      $emit-difference\n    )\n    {\n      @include custom-property('support-04', map-get($theme, 'support-04'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-support-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-01',\n        map-get($theme, 'inverse-support-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-support-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-02',\n        map-get($theme, 'inverse-support-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-support-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-03',\n        map-get($theme, 'inverse-support-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-support-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-04',\n        map-get($theme, 'inverse-support-04')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'overlay-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'danger-01', $emit-difference)\n    {\n      @include custom-property('danger-01', map-get($theme, 'danger-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'danger-02', $emit-difference)\n    {\n      @include custom-property('danger-02', map-get($theme, 'danger-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'focus', $emit-difference) {\n      @include custom-property('focus', map-get($theme, 'focus'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-focus-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-focus-ui',\n        map-get($theme, 'inverse-focus-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-primary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-primary',\n        map-get($theme, 'hover-primary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-primary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-primary',\n        map-get($theme, 'active-primary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-primary-text',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-primary-text',\n        map-get($theme, 'hover-primary-text')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-secondary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-secondary',\n        map-get($theme, 'hover-secondary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-secondary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-secondary',\n        map-get($theme, 'active-secondary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-tertiary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-tertiary',\n        map-get($theme, 'hover-tertiary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-tertiary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-tertiary',\n        map-get($theme, 'active-tertiary')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'hover-ui', $emit-difference)\n    {\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-light-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-light-ui',\n        map-get($theme, 'hover-light-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-selected-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-selected-ui',\n        map-get($theme, 'hover-selected-ui')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'active-ui', $emit-difference)\n    {\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-light-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-light-ui',\n        map-get($theme, 'active-light-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'selected-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'selected-light-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'selected-light-ui',\n        map-get($theme, 'selected-light-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'inverse-hover-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-hover-ui',\n        map-get($theme, 'inverse-hover-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-danger',\n      $emit-difference\n    )\n    {\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'active-danger',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-danger',\n        map-get($theme, 'active-danger')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'hover-row', $emit-difference)\n    {\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'visited-link',\n      $emit-difference\n    )\n    {\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'disabled-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'disabled-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'disabled-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'highlight', $emit-difference)\n    {\n      @include custom-property('highlight', map-get($theme, 'highlight'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'decorative-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'decorative-01',\n        map-get($theme, 'decorative-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'button-separator',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'button-separator',\n        map-get($theme, 'button-separator')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'skeleton-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'skeleton-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'brand-01', $emit-difference)\n    {\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'brand-02', $emit-difference)\n    {\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'brand-03', $emit-difference)\n    {\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'active-01', $emit-difference)\n    {\n      @include custom-property('active-01', map-get($theme, 'active-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'hover-field',\n      $emit-difference\n    )\n    {\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'danger', $emit-difference) {\n      @include custom-property('danger', map-get($theme, 'danger'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'caption-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'label-01', $emit-difference)\n    {\n      @include custom-property('label-01', map-get($theme, 'label-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'helper-text-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'helper-text-01',\n        map-get($theme, 'helper-text-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'body-short-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'body-short-01',\n        map-get($theme, 'body-short-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'body-long-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'body-short-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'body-short-02',\n        map-get($theme, 'body-short-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'body-long-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'code-01', $emit-difference) {\n      @include custom-property('code-01', map-get($theme, 'code-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'code-02', $emit-difference) {\n      @include custom-property('code-02', map-get($theme, 'code-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'heading-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-01',\n        map-get($theme, 'productive-heading-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'heading-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-02',\n        map-get($theme, 'productive-heading-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-03',\n        map-get($theme, 'productive-heading-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-04',\n        map-get($theme, 'productive-heading-04')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-05',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-05',\n        map-get($theme, 'productive-heading-05')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-06',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-06',\n        map-get($theme, 'productive-heading-06')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'productive-heading-07',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-07',\n        map-get($theme, 'productive-heading-07')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-01',\n        map-get($theme, 'expressive-heading-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-02',\n        map-get($theme, 'expressive-heading-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-03',\n        map-get($theme, 'expressive-heading-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-04',\n        map-get($theme, 'expressive-heading-04')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-05',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-05',\n        map-get($theme, 'expressive-heading-05')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-heading-06',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-06',\n        map-get($theme, 'expressive-heading-06')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'expressive-paragraph-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-paragraph-01',\n        map-get($theme, 'expressive-paragraph-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'quotation-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'quotation-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'display-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('display-01', map-get($theme, 'display-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'display-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('display-02', map-get($theme, 'display-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'display-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('display-03', map-get($theme, 'display-03'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'display-04',\n      $emit-difference\n    )\n    {\n      @include custom-property('display-04', map-get($theme, 'display-04'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-04',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-05',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-06',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-07',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-08',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-09',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-10',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-11',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'spacing-12',\n      $emit-difference\n    )\n    {\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'fluid-spacing-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-01',\n        map-get($theme, 'fluid-spacing-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'fluid-spacing-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-02',\n        map-get($theme, 'fluid-spacing-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'fluid-spacing-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-03',\n        map-get($theme, 'fluid-spacing-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'fluid-spacing-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-04',\n        map-get($theme, 'fluid-spacing-04')\n      );\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-01', $emit-difference)\n    {\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-02', $emit-difference)\n    {\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-03', $emit-difference)\n    {\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-04', $emit-difference)\n    {\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-05', $emit-difference)\n    {\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-06', $emit-difference)\n    {\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\n    }\n\n    @if should-emit($theme, $parent-carbon-theme, 'layout-07', $emit-difference)\n    {\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-01', map-get($theme, 'container-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-02', map-get($theme, 'container-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-03',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-03', map-get($theme, 'container-03'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-04',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-04', map-get($theme, 'container-04'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'container-05',\n      $emit-difference\n    )\n    {\n      @include custom-property('container-05', map-get($theme, 'container-05'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'icon-size-01',\n      $emit-difference\n    )\n    {\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $parent-carbon-theme,\n      'icon-size-02',\n      $emit-difference\n    )\n    {\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\n    }\n  }\n\n  @content;\n\n  // Reset to default theme after apply in content\n  @if $carbon--theme != $parent-carbon-theme {\n    $carbon--theme: $parent-carbon-theme !global;\n\n    @include carbon--theme();\n  }\n}\n"],sourceRoot:""}]),o.locals={productiveHeading01:"-esm-offline-tools__desktop-side-nav-styles__productiveHeading01___3ICP5",link:"-esm-offline-tools__desktop-side-nav-styles__link___2BeGC",productiveHeading02:"-esm-offline-tools__desktop-side-nav-styles__productiveHeading02___35tyk",productiveHeading03:"-esm-offline-tools__desktop-side-nav-styles__productiveHeading03___1FHfj",productiveHeading04:"-esm-offline-tools__desktop-side-nav-styles__productiveHeading04___17Irp",bodyShort01:"-esm-offline-tools__desktop-side-nav-styles__bodyShort01___3q_nT",bodyLong01:"-esm-offline-tools__desktop-side-nav-styles__bodyLong01___3E58D",label01:"-esm-offline-tools__desktop-side-nav-styles__label01___25CIu"};const p=o},1341:(e,n,t)=>{t.d(n,{Z:()=>p});var i=t(9233),a=t.n(i),r=t(361),o=t.n(r)()(a());o.push([e.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-offline-tools__root-styles__productiveHeading01___33aXU{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.-esm-offline-tools__root-styles__productiveHeading02___2FKyv{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-offline-tools__root-styles__productiveHeading03___2tMvj{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-offline-tools__root-styles__productiveHeading04___1oF3W{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-offline-tools__root-styles__bodyShort01___3XkNs{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.-esm-offline-tools__root-styles__bodyLong01___3rRxf{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-offline-tools__root-styles__label01___zj2w_{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.omrs-breakpoint-gt-tablet .-esm-offline-tools__root-styles__mainContentContainer___1MA10{margin-left:var(--omrs-sidenav-width)}","",{version:3,sources:["webpack://./../../framework/esm-styleguide/src/_vars.scss","webpack://./src/root.scss","webpack://./../../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./src/root.styles.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCzCF,8DC4gBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD7rB1B,8DCwgBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CDzrB1B,8DCogBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CDrrB1B,8DCggBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,gBAqLsB,CDjrB1B,sDC4fI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD7qB1B,qDCwfI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDzqB1B,kDCofI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CClsB1B,0FACE,qCAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n",'@import "~@openmrs/esm-styleguide/src/vars";\n@import "carbon-components/scss/globals/scss/typography.scss";\n\n.productiveHeading01 {\n  @include carbon--type-style("productive-heading-01");\n}\n\n.productiveHeading02 {\n  @include carbon--type-style("productive-heading-02");\n}\n\n.productiveHeading03 {\n  @include carbon--type-style("productive-heading-03");\n}\n\n.productiveHeading04 {\n  @include carbon--type-style("productive-heading-04");\n}\n\n.bodyShort01 {\n  @include carbon--type-style("body-short-01");\n}\n\n.bodyLong01 {\n  @include carbon--type-style("body-long-01");\n}\n\n.label01 {\n  @include carbon--type-style("label-01");\n}\n',"//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n",'@import "./root.scss";\n\n:global(.omrs-breakpoint-gt-tablet) .mainContentContainer {\n  margin-left: var(--omrs-sidenav-width);\n}\n'],sourceRoot:""}]),o.locals={productiveHeading01:"-esm-offline-tools__root-styles__productiveHeading01___33aXU",productiveHeading02:"-esm-offline-tools__root-styles__productiveHeading02___2FKyv",productiveHeading03:"-esm-offline-tools__root-styles__productiveHeading03___2tMvj",productiveHeading04:"-esm-offline-tools__root-styles__productiveHeading04___1oF3W",bodyShort01:"-esm-offline-tools__root-styles__bodyShort01___3XkNs",bodyLong01:"-esm-offline-tools__root-styles__bodyLong01___3rRxf",label01:"-esm-offline-tools__root-styles__label01___zj2w_",mainContentContainer:"-esm-offline-tools__root-styles__mainContentContainer___1MA10"};const p=o},7851:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t(6154).Z.Symbol},963:(e,n,t)=>{t.d(n,{Z:()=>m});var i=t(7851),a=Object.prototype,r=a.hasOwnProperty,o=a.toString,p=i.Z?i.Z.toStringTag:void 0;var s=Object.prototype.toString;var l=i.Z?i.Z.toStringTag:void 0;const m=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":l&&l in Object(e)?function(e){var n=r.call(e,p),t=e[p];try{e[p]=void 0;var i=!0}catch(e){}var a=o.call(e);return i&&(n?e[p]=t:delete e[p]),a}(e):function(e){return s.call(e)}(e)}},60:(e,n,t)=>{t.d(n,{Z:()=>a});const i=function(e){return e!=e},a=function(e,n,t){return n==n?function(e,n,t){for(var i=t-1,a=e.length;++i<a;)if(e[i]===n)return i;return-1}(e,n,t):function(e,n,t,i){for(var a=e.length,r=t+(i?1:-1);i?r--:++r<a;)if(n(e[r],r,e))return r;return-1}(e,i,t)}},6154:(e,n,t)=>{t.d(n,{Z:()=>r});const i="object"==typeof global&&global&&global.Object===Object&&global;var a="object"==typeof self&&self&&self.Object===Object&&self;const r=i||a||Function("return this")()}}]);
//# sourceMappingURL=780.js.map