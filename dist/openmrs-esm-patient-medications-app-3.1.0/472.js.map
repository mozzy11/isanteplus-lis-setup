{"version":3,"file":"472.js","mappings":"gSAgBA,MA+BA,EA/B4D,IAAyC,IAAxC,YAAEA,EAAF,mBAAeC,GAAyB,EACnG,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,kBACRC,EAAcF,EAAE,oBAAqB,sBACrCG,EAAcH,EAAE,oBAAqB,uBAEnCI,KAAMC,EAAR,QAA6BC,EAA7B,UAAsCC,EAAtC,aAAiDC,IAAiBC,EAAAA,EAAAA,IAAiBX,EAAa,UAEhGY,EAAoBC,IAAAA,aAAkB,MAC1CC,EAAAA,EAAAA,QAAO,+BAAgC,4BACtC,IAEH,OAAIL,EAAkB,kBAAC,IAAD,CAAmBM,KAAK,gBAC1CP,EAAgB,kBAAC,EAAAQ,WAAD,CAAYC,MAAOT,EAASH,YAAaA,IACzDE,GAAqBW,OAErB,kBAAC,IAAD,CAAUC,MAAOC,EAAAA,GACf,kBAAC,IAAD,CACEV,aAAcA,EACdW,MAAOnB,EAAE,oBAAqB,sBAC9BoB,YAAaf,EACbgB,uBAAuB,EACvBC,kBAAkB,EAClBC,mBAAmB,EACnBC,iBAAkBzB,KAKnB,kBAAC,EAAA0B,WAAD,CAAYvB,YAAaA,EAAaC,YAAaA,EAAauB,WAAYhB","sources":["webpack://@openmrs/esm-patient-medications-app/./src/medications/active-medications.component.tsx"],"sourcesContent":["import React from 'react';\nimport MedicationsDetailsTable from '../components/medications-details-table.component';\nimport styles from './active-medications.scss';\nimport { useTranslation } from 'react-i18next';\nimport { Provider } from 'unistore/react';\nimport { orderBasketStore } from './order-basket-store';\nimport { DataTableSkeleton } from 'carbon-components-react';\nimport { EmptyState, ErrorState } from '@openmrs/esm-patient-common-lib';\nimport { attach } from '@openmrs/esm-framework';\nimport { usePatientOrders } from '../api/api';\n\ninterface ActiveMedicationsProps {\n  patientUuid: string;\n  showAddMedications: boolean;\n}\n\nconst ActiveMedications: React.FC<ActiveMedicationsProps> = ({ patientUuid, showAddMedications }) => {\n  const { t } = useTranslation();\n  const displayText = t('activeMedications', 'Active medications');\n  const headerTitle = t('activeMedications', 'active medications');\n\n  const { data: activePatientOrders, isError, isLoading, isValidating } = usePatientOrders(patientUuid, 'ACTIVE');\n\n  const launchOrderBasket = React.useCallback(() => {\n    attach('patient-chart-workspace-slot', 'order-basket-workspace');\n  }, []);\n\n  if (isLoading) return <DataTableSkeleton role=\"progressbar\" />;\n  if (isError) return <ErrorState error={isError} headerTitle={headerTitle} />;\n  if (activePatientOrders?.length) {\n    return (\n      <Provider store={orderBasketStore}>\n        <MedicationsDetailsTable\n          isValidating={isValidating}\n          title={t('activeMedications', 'Active Medications')}\n          medications={activePatientOrders}\n          showDiscontinueButton={true}\n          showModifyButton={true}\n          showReorderButton={false}\n          showAddNewButton={showAddMedications}\n        />\n      </Provider>\n    );\n  }\n  return <EmptyState displayText={displayText} headerTitle={headerTitle} launchForm={launchOrderBasket} />;\n};\n\nexport default ActiveMedications;\n"],"names":["patientUuid","showAddMedications","t","useTranslation","displayText","headerTitle","data","activePatientOrders","isError","isLoading","isValidating","usePatientOrders","launchOrderBasket","React","attach","role","ErrorState","error","length","store","orderBasketStore","title","medications","showDiscontinueButton","showModifyButton","showReorderButton","showAddNewButton","EmptyState","launchForm"],"sourceRoot":""}