{"version":3,"file":"600.js","mappings":"wQAAO,MAAMA,EAAgB,CAC3BC,KAAM,SACNC,KAAM,sCACNC,OAAQ,CAAEC,QAAS,EAAGC,KAAM,QAC5BC,MAAO,UCAHC,EAAoBC,EAAAA,MAEpBC,EAAsB,CAC1B,mBAAoB,UAGtB,SAASC,IACP,MAAMC,EAAa,uCAEbC,EAAU,CACdC,YAAa,sBACbF,WAAAA,GAKF,OAFAG,EAAAA,EAAAA,oBAAmBH,EAAY,IAExB,CACLI,WAAY,CACV,CACEC,GAAI,6BACJd,KAAMF,EAAcE,KACpBe,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,2FAAiDN,GAC/EO,KAAM,CACJC,WAAY,IAGhB,CACEJ,GAAI,4BACJd,KAAM,uCACNmB,MAAO,EACPJ,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,2FAAsDN,GACpFO,KAAM,CACJC,WAAY,GAEdE,OAAQ,CAAEC,oBAAoB,GAC9BC,QAAS,CAAED,oBAAoB,IAEjC,CACEP,GAAI,yBACJC,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,6GAA2CN,GACzEO,KAAM,CACJb,MAAO,CACLmB,IAAK,cACLC,QAAS,kBAIf,CACEV,GAAI,gCACJd,KAAM,+BACNmB,MAAO,EACPJ,MAAMU,EAAAA,EAAAA,mBAAiBC,EAAAA,EAAAA,qBAAoB5B,GAAgBY,GAC3DO,KAAMnB,O,eCxDd,IAAI6B,EAAM,CACT,YAAa,CACZ,KACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMf,EAAKwB,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,IAClCJ,EAAoBhB,KAG7Bc,EAAoBW,KAAO,IAAOC,OAAOD,KAAKZ,GAC9CC,EAAoBd,GAAK,KACzB2B,EAAOC,QAAUd","sources":["webpack://@openmrs/esm-patient-medications-app/./src/dashboard.meta.tsx","webpack://@openmrs/esm-patient-medications-app/./src/index.ts","webpack://@openmrs/esm-patient-medications-app//home/runner/work/openmrs-esm-patient-chart/openmrs-esm-patient-chart/packages/esm-patient-medications-app/translations|lazy|nonrecursive|/.json$/"],"sourcesContent":["export const dashboardMeta = {\n  name: 'orders',\n  slot: 'patient-chart-orders-dashboard-slot',\n  config: { columns: 1, type: 'grid' },\n  title: 'Orders',\n};\n","import { defineConfigSchema, getAsyncLifecycle, getSyncLifecycle } from '@openmrs/esm-framework';\nimport { createDashboardLink } from '@openmrs/esm-patient-common-lib';\nimport { dashboardMeta } from './dashboard.meta';\n\nconst importTranslation = require.context('../translations', false, /.json$/, 'lazy');\n\nconst backendDependencies = {\n  'webservices.rest': '^2.2.0',\n};\n\nfunction setupOpenMRS() {\n  const moduleName = '@openmrs/esm-patient-medications-app';\n\n  const options = {\n    featureName: 'patient-medications',\n    moduleName,\n  };\n\n  defineConfigSchema(moduleName, {});\n\n  return {\n    extensions: [\n      {\n        id: 'medications-details-widget',\n        slot: dashboardMeta.slot,\n        load: getAsyncLifecycle(() => import('./medications/root-medication-summary'), options),\n        meta: {\n          columnSpan: 1,\n        },\n      },\n      {\n        id: 'active-medications-widget',\n        slot: 'patient-chart-summary-dashboard-slot',\n        order: 1,\n        load: getAsyncLifecycle(() => import('./medications/active-medications.component'), options),\n        meta: {\n          columnSpan: 4,\n        },\n        online: { showAddMedications: true },\n        offline: { showAddMedications: false },\n      },\n      {\n        id: 'order-basket-workspace',\n        load: getAsyncLifecycle(() => import('./medications/root-order-basket'), options),\n        meta: {\n          title: {\n            key: 'orderBasket',\n            default: 'Order Basket',\n          },\n        },\n      },\n      {\n        id: 'medications-summary-dashboard',\n        slot: 'patient-chart-dashboard-slot',\n        order: 3,\n        load: getSyncLifecycle(createDashboardLink(dashboardMeta), options),\n        meta: dashboardMeta,\n      },\n    ],\n  };\n}\n\nexport { backendDependencies, importTranslation, setupOpenMRS };\n","var map = {\n\t\"./en.json\": [\n\t\t3574,\n\t\t574\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3979;\nmodule.exports = webpackAsyncContext;"],"names":["dashboardMeta","name","slot","config","columns","type","title","importTranslation","require","backendDependencies","setupOpenMRS","moduleName","options","featureName","defineConfigSchema","extensions","id","load","getAsyncLifecycle","meta","columnSpan","order","online","showAddMedications","offline","key","default","getSyncLifecycle","createDashboardLink","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","keys","Object","module","exports"],"sourceRoot":""}