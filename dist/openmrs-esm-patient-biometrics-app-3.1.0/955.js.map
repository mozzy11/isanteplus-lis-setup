{"version":3,"file":"955.js","mappings":"sQAEA,SACEA,QAAS,CACPC,MAAOC,EAAAA,KAAAA,OACPC,SAAU,YCFDC,EAAe,CAC1BC,SAAU,CACRC,WAAY,CACVL,MAAOC,EAAAA,KAAAA,YACPC,SAAU,wCAEZI,WAAY,CACVN,MAAOC,EAAAA,KAAAA,YACPC,SAAU,wCAEZK,SAAU,CACRP,MAAOC,EAAAA,KAAAA,YACPC,SAAU,yCAGdM,WAAYC,GClBDC,EAAgB,CAC3BC,KAAM,sBACNC,KAAM,iDACNC,OAAQ,CAAEC,QAAS,EAAGC,KAAM,QAC5BC,MAAO,uBCOHC,EAAoBC,EAAAA,MAEpBC,EAAsB,CAC1B,mBAAoB,SACpBC,MAAO,UAGT,SAASC,KACPC,EAAAA,EAAAA,0BAAyB,CACvBP,KAAM,uBACNQ,QAAU,KAAIC,EAAAA,+BAGhBF,EAAAA,EAAAA,0BAAyB,CACvBP,KAAM,uBACNQ,QAAU,4BAGZ,MAAME,EAAa,sCAEbC,EAAU,CACdC,YAAa,qBACbF,WAAAA,GAKF,OAFAG,EAAAA,EAAAA,oBAAmBH,EAAYtB,GAExB,CACL0B,WAAY,CACV,CACEC,GAAI,6BACJlB,KAAM,uCACNmB,MAAO,EACPC,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,qHAAsDP,GACpFQ,KAAM,CACJC,WAAY,GAEdC,OAAQ,CAAEC,mBAAmB,GAC7BC,QAAS,CAAED,mBAAmB,IAEhC,CACEP,GAAI,4BACJlB,KAAM,+BACNmB,MAAO,EACPC,MAAMO,EAAAA,EAAAA,mBAAiBC,EAAAA,EAAAA,qBAAoB9B,GAAgBgB,GAC3DQ,KAAMxB,EACN0B,QAAQ,EACRE,SAAS,GAEX,CACER,GAAI,4BACJlB,KAAMF,EAAcE,KACpBoB,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,qHAAkDP,GAChFQ,KAAM,CACJO,KAAM,aACNzB,MAAO,cAEToB,OAAQ,CAAEC,mBAAmB,GAC7BC,QAAS,CAAED,mBAAmB,IAEhC,CACEP,GAAI,cACJC,MAAO,EACPnB,KAAM,yBACNoB,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,2FAA8CP,Q,eC3EpF,IAAIgB,EAAM,CACT,YAAa,CACZ,KACA,KAED,YAAa,CACZ,KACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMd,EAAKuB,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,IAClCJ,EAAoBf,KAG7Ba,EAAoBW,KAAO,IAAOC,OAAOD,KAAKZ,GAC9CC,EAAoBb,GAAK,KACzB0B,EAAOC,QAAUd","sources":["webpack://@openmrs/esm-patient-biometrics-app/./src/biometrics/biometrics-config-schema.ts","webpack://@openmrs/esm-patient-biometrics-app/./src/config-schema.ts","webpack://@openmrs/esm-patient-biometrics-app/./src/dashboard.meta.tsx","webpack://@openmrs/esm-patient-biometrics-app/./src/index.ts","webpack://@openmrs/esm-patient-biometrics-app//home/runner/work/openmrs-esm-patient-chart/openmrs-esm-patient-chart/packages/esm-patient-biometrics-app/translations|lazy|nonrecursive|/.json$/"],"sourcesContent":["import { Type } from '@openmrs/esm-framework';\n\nexport default {\n  bmiUnit: {\n    _type: Type.String,\n    _default: 'kg / mÂ²',\n  },\n};\n\nexport interface BiometricsConfigObject {\n  bmiUnit: string;\n  heightUnit: string;\n  weightUnit: string;\n  muacUnit: string;\n}\n","import { Type } from '@openmrs/esm-framework';\nimport biometricsConfigSchema, { BiometricsConfigObject } from './biometrics/biometrics-config-schema';\n\nexport const configSchema = {\n  concepts: {\n    heightUuid: {\n      _type: Type.ConceptUuid,\n      _default: '5090AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n    },\n    weightUuid: {\n      _type: Type.ConceptUuid,\n      _default: '5089AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n    },\n    muacUuid: {\n      _type: Type.ConceptUuid,\n      _default: '1343AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',\n    },\n  },\n  biometrics: biometricsConfigSchema,\n};\n\nexport interface ConfigObject {\n  concepts: {\n    heightUuid: string;\n    weightUuid: string;\n    muacUuid: string;\n  };\n  biometrics: BiometricsConfigObject;\n}\n","export const dashboardMeta = {\n  name: 'vitalsAndBiometrics',\n  slot: 'patient-chart-vitals-biometrics-dashboard-slot',\n  config: { columns: 1, type: 'grid' },\n  title: 'Vitals & Biometrics',\n};\n","import {\n  defineConfigSchema,\n  fhirBaseUrl,\n  getAsyncLifecycle,\n  getSyncLifecycle,\n  messageOmrsServiceWorker,\n} from '@openmrs/esm-framework';\nimport { createDashboardLink } from '@openmrs/esm-patient-common-lib';\nimport { configSchema } from './config-schema';\nimport { dashboardMeta } from './dashboard.meta';\n\nconst importTranslation = require.context('../translations', false, /.json$/, 'lazy');\n\nconst backendDependencies = {\n  'webservices.rest': '^2.2.0',\n  fhir2: '^1.2.0',\n};\n\nfunction setupOpenMRS() {\n  messageOmrsServiceWorker({\n    type: 'registerDynamicRoute',\n    pattern: `.+${fhirBaseUrl}/Observation.+`,\n  });\n\n  messageOmrsServiceWorker({\n    type: 'registerDynamicRoute',\n    pattern: `.+/ws/rest/v1/concept.+`,\n  });\n\n  const moduleName = '@openmrs/esm-patient-biometrics-app';\n\n  const options = {\n    featureName: 'patient-biometrics',\n    moduleName,\n  };\n\n  defineConfigSchema(moduleName, configSchema);\n\n  return {\n    extensions: [\n      {\n        id: 'biometrics-overview-widget',\n        slot: 'patient-chart-summary-dashboard-slot',\n        order: 3,\n        load: getAsyncLifecycle(() => import('./biometrics/biometrics-overview.component'), options),\n        meta: {\n          columnSpan: 4,\n        },\n        online: { showAddBiometrics: true },\n        offline: { showAddBiometrics: false },\n      },\n      {\n        id: 'results-summary-dashboard',\n        slot: 'patient-chart-dashboard-slot',\n        order: 2,\n        load: getSyncLifecycle(createDashboardLink(dashboardMeta), options),\n        meta: dashboardMeta,\n        online: true,\n        offline: true,\n      },\n      {\n        id: 'biometrics-details-widget',\n        slot: dashboardMeta.slot,\n        load: getAsyncLifecycle(() => import('./biometrics/biometrics-main.component'), options),\n        meta: {\n          view: 'biometrics',\n          title: 'Biometrics',\n        },\n        online: { showAddBiometrics: true },\n        offline: { showAddBiometrics: false },\n      },\n      {\n        id: 'weight-tile',\n        order: 2,\n        slot: 'visit-form-header-slot',\n        load: getAsyncLifecycle(() => import('./biometrics/weight-tile.component'), options),\n      },\n    ],\n  };\n}\n\nexport { backendDependencies, importTranslation, setupOpenMRS };\n","var map = {\n\t\"./en.json\": [\n\t\t3574,\n\t\t574\n\t],\n\t\"./fr.json\": [\n\t\t2757,\n\t\t757\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3979;\nmodule.exports = webpackAsyncContext;"],"names":["bmiUnit","_type","Type","_default","configSchema","concepts","heightUuid","weightUuid","muacUuid","biometrics","biometricsConfigSchema","dashboardMeta","name","slot","config","columns","type","title","importTranslation","require","backendDependencies","fhir2","setupOpenMRS","messageOmrsServiceWorker","pattern","fhirBaseUrl","moduleName","options","featureName","defineConfigSchema","extensions","id","order","load","getAsyncLifecycle","meta","columnSpan","online","showAddBiometrics","offline","getSyncLifecycle","createDashboardLink","view","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","keys","Object","module","exports"],"sourceRoot":""}