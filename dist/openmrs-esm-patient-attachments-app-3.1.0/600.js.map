{"version":3,"file":"600.js","mappings":"wQAAO,MAAMA,EAAgB,CAC3BC,KAAM,cACNC,KAAM,2CACNC,OAAQ,CAAEC,QAAS,EAAGC,KAAM,QAC5BC,MAAO,eCAHC,EAAoBC,EAAAA,MAEpBC,EAAsB,CAC1B,mBAAoB,UAGtB,SAASC,IACP,MAAMC,EAAa,uCAInB,OAFAC,EAAAA,EAAAA,oBAAmBD,EAAY,IAExB,CACLE,WAAY,CACV,CACEC,GAAI,8BACJZ,KAAMF,EAAcE,KACpBa,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,mGAAwD,CACpFC,YAAa,sBACbN,WAAAA,IAEFO,KAAM,CACJC,WAAY,IAGhB,CACEL,GAAI,uBACJZ,KAAM,6BACNa,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,yEAAiD,CAC7EC,YAAa,uBACbN,WAAAA,KAGJ,CACEG,GAAI,wCACJZ,KAAM,+BACNkB,MAAO,EACPL,MAAMM,EAAAA,EAAAA,mBAAiBC,EAAAA,EAAAA,qBAAoBtB,GAAgB,CACzDiB,YAAa,6BACbN,WAAAA,IAEFO,KAAMlB,GAER,CACEc,GAAI,sBACJC,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,wGAAiD,CAC7EC,YAAa,sBACbN,WAAAA,IAEFY,QAAQ,EACRC,SAAS,O,eCrDjB,IAAIC,EAAM,CACT,YAAa,CACZ,KACA,KAED,YAAa,CACZ,KACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMb,EAAKsB,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,IAClCJ,EAAoBd,KAG7BY,EAAoBW,KAAO,IAAOC,OAAOD,KAAKZ,GAC9CC,EAAoBZ,GAAK,KACzByB,EAAOC,QAAUd","sources":["webpack://@openmrs/esm-patient-attachments-app/./src/dashboard.meta.tsx","webpack://@openmrs/esm-patient-attachments-app/./src/index.ts","webpack://@openmrs/esm-patient-attachments-app//home/runner/work/openmrs-esm-patient-chart/openmrs-esm-patient-chart/packages/esm-patient-attachments-app/translations|lazy|nonrecursive|/.json$/"],"sourcesContent":["export const dashboardMeta = {\n  name: 'attachments',\n  slot: 'patient-chart-attachments-dashboard-slot',\n  config: { columns: 1, type: 'grid' },\n  title: 'Attachments',\n};\n","import { defineConfigSchema, getAsyncLifecycle, getSyncLifecycle } from '@openmrs/esm-framework';\nimport { createDashboardLink } from '@openmrs/esm-patient-common-lib';\nimport { dashboardMeta } from './dashboard.meta';\n\nconst importTranslation = require.context('../translations', false, /.json$/, 'lazy');\n\nconst backendDependencies = {\n  'webservices.rest': '^2.2.0',\n};\n\nfunction setupOpenMRS() {\n  const moduleName = '@openmrs/esm-patient-attachments-app';\n\n  defineConfigSchema(moduleName, {});\n\n  return {\n    extensions: [\n      {\n        id: 'attachments-overview-widget',\n        slot: dashboardMeta.slot,\n        load: getAsyncLifecycle(() => import('./attachments/attachments-overview.component'), {\n          featureName: 'patient-attachments',\n          moduleName,\n        }),\n        meta: {\n          columnSpan: 1,\n        },\n      },\n      {\n        id: 'capture-photo-widget',\n        slot: 'capture-patient-photo-slot',\n        load: getAsyncLifecycle(() => import('./attachments/capture-photo.component'), {\n          featureName: 'capture-photo-widget',\n          moduleName,\n        }),\n      },\n      {\n        id: 'attachments-results-summary-dashboard',\n        slot: 'patient-chart-dashboard-slot',\n        order: 9,\n        load: getSyncLifecycle(createDashboardLink(dashboardMeta), {\n          featureName: 'attachments-dashboard-link',\n          moduleName,\n        }),\n        meta: dashboardMeta,\n      },\n      {\n        id: 'capture-photo-modal',\n        load: getAsyncLifecycle(() => import('./attachments/camera-upload.component'), {\n          featureName: 'capture-photo-modal',\n          moduleName,\n        }),\n        online: true,\n        offline: true,\n      },\n    ],\n  };\n}\n\nexport { backendDependencies, importTranslation, setupOpenMRS };\n","var map = {\n\t\"./en.json\": [\n\t\t3574,\n\t\t574\n\t],\n\t\"./fr.json\": [\n\t\t2757,\n\t\t757\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3979;\nmodule.exports = webpackAsyncContext;"],"names":["dashboardMeta","name","slot","config","columns","type","title","importTranslation","require","backendDependencies","setupOpenMRS","moduleName","defineConfigSchema","extensions","id","load","getAsyncLifecycle","featureName","meta","columnSpan","order","getSyncLifecycle","createDashboardLink","online","offline","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","keys","Object","module","exports"],"sourceRoot":""}