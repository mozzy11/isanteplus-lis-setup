{"version":3,"file":"165.js","mappings":"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","sources":["webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/field.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/id/identifier-selection.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/custom-input/autosuggest/autosuggest.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/input.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/patient-registration.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/patient-relationships/relationships.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/section.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/ui-components/overlay/overlay.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/before-save-prompt.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/patient-registration.scss?44e1","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/validation/patient-registration-validation.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/patient-registration-context.ts","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/input.scss?3341","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/dummy-data/dummy-data-input.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/section.scss?bebe","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/demographics/demographics-section.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/contact-info/contact-info-section.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/patient-relationships/relationships.scss?89e6","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/custom-input/autosuggest/autosuggest.scss?4a38","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/custom-input/autosuggest/autosuggest.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/patient-relationships/relationships-section.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/basic-input/input/input.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/basic-input/select/select-input.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/death-info/death-info-section.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/section-wrapper.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/field.scss?5a72","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/address/address-field.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/phone/phone-field.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/email/email-field.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/name/name-field.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/gender/gender-field.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/custom-input/identifier/utils.ts","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/custom-input/identifier/identifier-input.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/id/identifier-selection.scss?ce2c","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/ui-components/overlay/overlay.scss?a2ad","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/ui-components/overlay/index.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/id/identifier-selection-overlay.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/id/id-field.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/additional-information/additional-information.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/dob/dob.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/date-util.ts","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/person-attributes/person-attributes.resource.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/person-attributes/coded-attributes.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/person-attributes/text-based-attributes-field.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/section-helper.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/patient-registration-utils.ts","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/patient-registration-hooks.ts","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/patient-registration.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/patient-relationships/relationships.resource.tsx","webpack://@openmrs/esm-patient-registration-app/./src/root.component.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".-esm-patient-registration__field__productiveHeading02___0\\\\+2Gm{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;margin-bottom:1rem}.-esm-patient-registration__field__productiveHeading02Light___bbKeq{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;margin-bottom:1rem;color:#525252}.-esm-patient-registration__field__label01___6YyKZ{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-patient-registration__field__grid___g21pQ{display:grid;grid-template-columns:1fr 1fr;column-gap:1rem}.-esm-patient-registration__field__halfWidthInDesktopView___J9cO8{width:calc(50% - 1rem)}.-esm-patient-registration__field__patientPhoto___9mWMr{display:flex;justify-content:center}.-esm-patient-registration__field__nameField___uPmod{grid-row:1;grid-column:1}.-esm-patient-registration__field__nameField___uPmod>.bx--content-switcher{display:grid;grid-template-columns:1fr 1fr;width:max-content;justify-content:flex-start}.-esm-patient-registration__field__contentSwitcher___G7dTq{margin-bottom:1rem}.-esm-patient-registration__field__dobField___P6SHd>.bx--content-switcher{display:grid;grid-template-columns:1fr 1fr;width:max-content;justify-content:flex-start}.-esm-patient-registration__field__photoExtension___IqCnX{margin-bottom:1rem;grid-row:1;grid-column:2;justify-self:center}.-esm-patient-registration__field__sexField___F8TIv,.-esm-patient-registration__field__dobField___P6SHd{margin-bottom:1rem}.-esm-patient-registration__field__dobContentSwitcherLabel___vW\\\\+UB{margin-bottom:.5rem}.-esm-patient-registration__field__identifierLabelText___bdyJF{display:flex;align-items:center}.-esm-patient-registration__field__setIDNumberButton___XziAX{margin-bottom:1rem}.-esm-patient-registration__field__setIDNumberButton___XziAX>svg{margin-left:.5rem}.-esm-patient-registration__field__attributeField___qdljB{margin-bottom:1rem}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__grid___g21pQ{grid-template-columns:1fr;grid-template-rows:auto auto}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__nameField___uPmod{grid-row:2;grid-column:1}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__photoExtension___IqCnX{grid-column:1;grid-row:1;justify-self:start}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__radioButton___d7GuU label{height:3rem !important}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__halfWidthInDesktopView___J9cO8{width:100%}.-esm-patient-registration__field__radioFieldError___LyxW0{color:#da1e28;display:block;font-weight:400;max-height:12.5rem;overflow:visible;font-size:.75rem;letter-spacing:.32px;line-height:1.34;margin:.25rem 0 0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/patient-registration/field/field.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\"],\"names\":[],\"mappings\":\"AAGA,gEC4gBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD/rBxB,kBAAA,CAGF,oECugBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD1rBxB,kBAAA,CACA,aAAA,CAGF,mDCigBI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDlrB1B,gDACE,YAAA,CACA,6BAAA,CACA,eEUmB,CFPrB,kEACE,sBAAA,CAGF,wDACE,YAAA,CACA,sBAAA,CAGF,qDACE,UAAA,CACA,aAAA,CAGF,2EACE,YAAA,CACA,6BAAA,CACA,iBAAA,CACA,0BAAA,CAGF,2DACE,kBAAA,CAGF,0EACE,YAAA,CACA,6BAAA,CACA,iBAAA,CACA,0BAAA,CAGF,0DACE,kBAAA,CACA,UAAA,CACA,aAAA,CACA,mBAAA,CAGF,wGAEE,kBElCmB,CFqCrB,oEACE,mBEhDmB,CFmDrB,+DACE,YAAA,CACA,kBAAA,CAGF,6DACE,kBE/CmB,CFkDrB,iEACE,iBE7DmB,CFgErB,0DACE,kBEvDmB,CF2DnB,4EACE,yBAAA,CACA,4BAAA,CAEF,iFACE,UAAA,CACA,aAAA,CAEF,sFACE,aAAA,CACA,UAAA,CACA,kBAAA,CAEF,yFACE,sBAAA,CAEF,8FACE,UAAA,CAIJ,2DACE,aAAA,CACA,aAAA,CACA,eAAA,CACA,kBAAA,CACA,gBAAA,CACA,gBAAA,CACA,oBAAA,CACA,gBAAA,CACA,iBAAA\",\"sourcesContent\":[\"@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\\n\\n.productiveHeading02 {\\n  @include carbon--type-style('productive-heading-02');\\n  margin-bottom: 1rem;\\n}\\n\\n.productiveHeading02Light {\\n  @include carbon--type-style('productive-heading-02');\\n  margin-bottom: 1rem;\\n  color: #525252;\\n}\\n\\n.label01 {\\n  @include carbon--type-style('label-01');\\n}\\n\\n.grid {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  column-gap: $spacing-05;\\n}\\n\\n.halfWidthInDesktopView {\\n  width: calc(50% - $spacing-05);\\n}\\n\\n.patientPhoto {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.nameField {\\n  grid-row: 1;\\n  grid-column: 1;\\n}\\n\\n.nameField > :global(.bx--content-switcher) {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  width: max-content;\\n  justify-content: flex-start;\\n}\\n\\n.contentSwitcher {\\n  margin-bottom: 1rem;\\n}\\n\\n.dobField > :global(.bx--content-switcher) {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  width: max-content;\\n  justify-content: flex-start;\\n}\\n\\n.photoExtension {\\n  margin-bottom: 1rem;\\n  grid-row: 1;\\n  grid-column: 2;\\n  justify-self: center;\\n}\\n\\n.sexField,\\n.dobField {\\n  margin-bottom: $spacing-05;\\n}\\n\\n.dobContentSwitcherLabel {\\n  margin-bottom: $spacing-03;\\n}\\n\\n.identifierLabelText {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.setIDNumberButton {\\n  margin-bottom: $spacing-05;\\n}\\n\\n.setIDNumberButton > svg {\\n  margin-left: $spacing-03;\\n}\\n\\n.attributeField {\\n  margin-bottom: $spacing-05;\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .grid {\\n    grid-template-columns: 1fr;\\n    grid-template-rows: auto auto;\\n  }\\n  .nameField {\\n    grid-row: 2;\\n    grid-column: 1;\\n  }\\n  .photoExtension {\\n    grid-column: 1;\\n    grid-row: 1;\\n    justify-self: start;\\n  }\\n  .radioButton label {\\n    height: $spacing-09 !important;\\n  }\\n  .halfWidthInDesktopView {\\n    width: 100%;\\n  }\\n}\\n\\n.radioFieldError {\\n  color: #da1e28;\\n  display: block;\\n  font-weight: 400;\\n  max-height: 12.5rem;\\n  overflow: visible;\\n  font-size: 0.75rem;\\n  letter-spacing: 0.32px;\\n  line-height: 1.34;\\n  margin: 0.25rem 0 0;\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"productiveHeading02\": \"-esm-patient-registration__field__productiveHeading02___0+2Gm\",\n\t\"productiveHeading02Light\": \"-esm-patient-registration__field__productiveHeading02Light___bbKeq\",\n\t\"label01\": \"-esm-patient-registration__field__label01___6YyKZ\",\n\t\"grid\": \"-esm-patient-registration__field__grid___g21pQ\",\n\t\"halfWidthInDesktopView\": \"-esm-patient-registration__field__halfWidthInDesktopView___J9cO8\",\n\t\"patientPhoto\": \"-esm-patient-registration__field__patientPhoto___9mWMr\",\n\t\"nameField\": \"-esm-patient-registration__field__nameField___uPmod\",\n\t\"contentSwitcher\": \"-esm-patient-registration__field__contentSwitcher___G7dTq\",\n\t\"dobField\": \"-esm-patient-registration__field__dobField___P6SHd\",\n\t\"photoExtension\": \"-esm-patient-registration__field__photoExtension___IqCnX\",\n\t\"sexField\": \"-esm-patient-registration__field__sexField___F8TIv\",\n\t\"dobContentSwitcherLabel\": \"-esm-patient-registration__field__dobContentSwitcherLabel___vW+UB\",\n\t\"identifierLabelText\": \"-esm-patient-registration__field__identifierLabelText___bdyJF\",\n\t\"setIDNumberButton\": \"-esm-patient-registration__field__setIDNumberButton___XziAX\",\n\t\"attributeField\": \"-esm-patient-registration__field__attributeField___qdljB\",\n\t\"radioButton\": \"-esm-patient-registration__field__radioButton___d7GuU\",\n\t\"radioFieldError\": \"-esm-patient-registration__field__radioFieldError___LyxW0\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__identifier-selection__title___fPIy3{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__identifier-selection__submit___WgYnV{width:250px}.-esm-patient-registration__identifier-selection__submit___WgYnV:hover{cursor:pointer}.-esm-patient-registration__identifier-selection__cancelButton___ar-za{width:11.688rem}.-esm-patient-registration__identifier-selection__submitButton___mJgTx{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__identifier-selection__infoGrid___5ovdR{width:100%;padding-left:2rem;margin-bottom:40vh;margin-top:1rem;max-width:50rem}.-esm-patient-registration__identifier-selection__label01___sm7Rq{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__identifier-selection__productiveHeading02___aocJ0{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__identifier-selection__space05___pbxiU{margin:1rem 0 1rem 0}.-esm-patient-registration__identifier-selection__formContainer___XacnD{display:flex;width:100%}.-esm-patient-registration__identifier-selection__stickyColumn___H9Wbn{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__identifier-selection__touchTarget___heOv2 a:active{color:#161616}.-esm-patient-registration__identifier-selection__linkName___oKi4d{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__identifier-selection__linkName___oKi4d:active{text-decoration:none;color:#161616}.-esm-patient-registration__identifier-selection__linkName___oKi4d:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__identifier-selection__main___s9KQc{background-color:#fff}.omrs-breakpoint-lt-desktop .-esm-patient-registration__identifier-selection__infoGrid___5ovdR{max-width:unset}.-esm-patient-registration__identifier-selection__overlayButtons___frh9W{display:grid;grid-template-columns:1fr 1fr}.-esm-patient-registration__identifier-selection__overlayButtons___frh9W button{max-width:unset}.-esm-patient-registration__identifier-selection__radioGroup___n\\\\+7PW{background-color:#f4f4f4;padding:1rem}.-esm-patient-registration__identifier-selection__radioButton___yaoFj{margin:0 !important}.-esm-patient-registration__identifier-selection__radioButton___yaoFj label{height:2rem}.omrs-breakpoint-lt-desktop .-esm-patient-registration__identifier-selection__radioButton___yaoFj label{height:3rem !important}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/patient-registration/patient-registration.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./src/patient-registration/field/id/identifier-selection.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,gEACE,kCAAA,CAGF,iEACE,WAAA,CAGF,uEACE,cAAA,CAGF,uEACE,eAAA,CAGF,uEACE,kBCUmB,CDTnB,eAAA,CACA,aAAA,CAGF,mEACE,UAAA,CACA,iBCamB,CDZnB,kBAAA,CACA,eCCmB,CAAA,eAAA,CDGrB,kEE6eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CFhqBxB,eCLmB,CDMnB,kBCNmB,CDOnB,aDnCM,CCsCR,8EEseI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CFzpBxB,aDxCM,CCyCN,cAAA,CAGF,kEACE,oBAAA,CAGF,wEACE,YAAA,CACA,UAAA,CAGF,uEACE,eAAA,CACA,eC3BmB,CD6BnB,QAAA,CAGF,+EACE,aDtDe,CCyDjB,mEACE,aD3Dc,CC4Dd,gBAAA,CACA,cCvCmB,CDwCnB,eAAA,CAEA,0EACE,oBAAA,CACA,aDjEa,CCoEf,yEACE,oBAAA,CACA,aDtEa,CCuEb,cAAA,CAIJ,+DACE,qBAAA,CAIA,+FACE,eAAA,CGzFJ,yEACE,YAAA,CACA,6BAAA,CAGF,gFACE,eAAA,CAGF,sEACE,wBJZM,CIaN,YFkBmB,CEfrB,sEACE,mBAAA,CACA,4EACE,WFsBiB,CEjBnB,wGACE,sBAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\\n@import '~@openmrs/esm-styleguide/src/vars';\\n\\n.title {\\n  color: var(--omrs-color-brand-teal);\\n}\\n\\n.submit {\\n  width: 250px;\\n}\\n\\n.submit:hover {\\n  cursor: pointer;\\n}\\n\\n.cancelButton {\\n  width: 11.688rem;\\n}\\n\\n.submitButton {\\n  margin-bottom: $spacing-05;\\n  width: 11.688rem;\\n  display: block;\\n}\\n\\n.infoGrid {\\n  width: 100%;\\n  padding-left: $spacing-07;\\n  margin-bottom: 40vh;\\n  margin-top: $spacing-05;\\n  max-width: 50rem;\\n}\\n\\n.label01 {\\n  @include carbon--type-style('label-01');\\n  margin-top: $spacing-05;\\n  margin-bottom: $spacing-05;\\n  color: $ui-04;\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style('productive-heading-02');\\n  color: $ui-04;\\n  cursor: pointer;\\n}\\n\\n.space05 {\\n  margin: $spacing-05 0 $spacing-05 0;\\n}\\n\\n.formContainer {\\n  display: flex;\\n  width: 100%;\\n}\\n\\n.stickyColumn {\\n  position: sticky;\\n  margin-top: $spacing-05;\\n  // 3rem for the nav height and 1rem for top margin\\n  top: 4rem;\\n}\\n\\n.touchTarget a:active {\\n  color: $color-gray-100;\\n}\\n\\n.linkName {\\n  color: $color-gray-70;\\n  line-height: 1.38;\\n  font-size: $spacing-05;\\n  font-weight: 600;\\n\\n  &:active {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n  }\\n\\n  &:hover {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n    cursor: pointer;\\n  }\\n}\\n\\n.main {\\n  background-color: white;\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .infoGrid {\\n    max-width: unset;\\n  }\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"@import '../../patient-registration.scss';\\n\\n.overlayButtons {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n}\\n\\n.overlayButtons button {\\n  max-width: unset;\\n}\\n\\n.radioGroup {\\n  background-color: $ui-01;\\n  padding: $spacing-05;\\n}\\n\\n.radioButton {\\n  margin: 0 !important;\\n  label {\\n    height: $spacing-07;\\n  }\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .radioButton label {\\n    height: $spacing-09 !important;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"title\": \"-esm-patient-registration__identifier-selection__title___fPIy3\",\n\t\"submit\": \"-esm-patient-registration__identifier-selection__submit___WgYnV\",\n\t\"cancelButton\": \"-esm-patient-registration__identifier-selection__cancelButton___ar-za\",\n\t\"submitButton\": \"-esm-patient-registration__identifier-selection__submitButton___mJgTx\",\n\t\"infoGrid\": \"-esm-patient-registration__identifier-selection__infoGrid___5ovdR\",\n\t\"label01\": \"-esm-patient-registration__identifier-selection__label01___sm7Rq\",\n\t\"productiveHeading02\": \"-esm-patient-registration__identifier-selection__productiveHeading02___aocJ0\",\n\t\"space05\": \"-esm-patient-registration__identifier-selection__space05___pbxiU\",\n\t\"formContainer\": \"-esm-patient-registration__identifier-selection__formContainer___XacnD\",\n\t\"stickyColumn\": \"-esm-patient-registration__identifier-selection__stickyColumn___H9Wbn\",\n\t\"touchTarget\": \"-esm-patient-registration__identifier-selection__touchTarget___heOv2\",\n\t\"linkName\": \"-esm-patient-registration__identifier-selection__linkName___oKi4d\",\n\t\"main\": \"-esm-patient-registration__identifier-selection__main___s9KQc\",\n\t\"overlayButtons\": \"-esm-patient-registration__identifier-selection__overlayButtons___frh9W\",\n\t\"radioGroup\": \"-esm-patient-registration__identifier-selection__radioGroup___n+7PW\",\n\t\"radioButton\": \"-esm-patient-registration__identifier-selection__radioButton___yaoFj\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__autosuggest__label01___f95oj{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-patient-registration__autosuggest__suggestions___v5o3w{position:relative;border-top-width:0;list-style:none;margin-top:0;max-height:143px;overflow-y:auto;padding-left:0;width:100%;position:absolute;left:0;background-color:#fff;margin-bottom:20px;z-index:99}.-esm-patient-registration__autosuggest__suggestions___v5o3w li{padding:1rem;line-height:1.29;color:#525252;border-bottom:1px solid #8d8d8d}.-esm-patient-registration__autosuggest__suggestions___v5o3w li:hover{background-color:#e5e5e5;color:#161616;cursor:pointer}.-esm-patient-registration__autosuggest__suggestions___v5o3w li:not(:last-of-type){border-bottom:1px solid #999}.-esm-patient-registration__autosuggest__autocomplete___it56z{position:relative}.-esm-patient-registration__autosuggest__autocompleteSearch___sc5fh{width:100%}.-esm-patient-registration__autosuggest__suggestions___v5o3w a{color:inherit;text-decoration:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/patient-registration/input/custom-input/autosuggest/autosuggest.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,yDC2gBI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD5rB1B,6DACE,iBAAA,CACA,kBAAA,CACA,eAAA,CACA,YAAA,CACA,gBAAA,CACA,eAAA,CACA,cAAA,CACA,UAAA,CACA,iBAAA,CACA,MAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CAGF,gEACE,YEMmB,CFLnB,gBAAA,CACA,aAAA,CACA,+BAAA,CAGF,sEACE,wBAAA,CACA,aAAA,CACA,cAAA,CAGF,mFACE,4BAAA,CAGF,8DACE,iBAAA,CAGF,oEACE,UAAA,CAGF,+DACE,aAAA,CACA,oBAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\\n@import '~@openmrs/esm-styleguide/src/vars';\\n\\n.label01 {\\n  @include carbon--type-style('label-01');\\n}\\n\\n.suggestions {\\n  position: relative;\\n  border-top-width: 0;\\n  list-style: none;\\n  margin-top: 0;\\n  max-height: 143px;\\n  overflow-y: auto;\\n  padding-left: 0;\\n  width: 100%;\\n  position: absolute;\\n  left: 0;\\n  background-color: #fff;\\n  margin-bottom: 20px;\\n  z-index: 99;\\n}\\n\\n.suggestions li {\\n  padding: $spacing-05;\\n  line-height: 1.29;\\n  color: #525252;\\n  border-bottom: 1px solid #8d8d8d;\\n}\\n\\n.suggestions li:hover {\\n  background-color: #e5e5e5;\\n  color: #161616;\\n  cursor: pointer;\\n}\\n\\n.suggestions li:not(:last-of-type) {\\n  border-bottom: 1px solid #999;\\n}\\n\\n.autocomplete {\\n  position: relative;\\n}\\n\\n.autocompleteSearch {\\n  width: 100%;\\n}\\n\\n.suggestions a {\\n  color: inherit;\\n  text-decoration: none;\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"label01\": \"-esm-patient-registration__autosuggest__label01___f95oj\",\n\t\"suggestions\": \"-esm-patient-registration__autosuggest__suggestions___v5o3w\",\n\t\"autocomplete\": \"-esm-patient-registration__autosuggest__autocomplete___it56z\",\n\t\"autocompleteSearch\": \"-esm-patient-registration__autosuggest__autocompleteSearch___sc5fh\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__input__title___4PKlg{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__input__submit___mloB4{width:250px}.-esm-patient-registration__input__submit___mloB4:hover{cursor:pointer}.-esm-patient-registration__input__cancelButton___blAcs{width:11.688rem}.-esm-patient-registration__input__submitButton___SofD2{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__input__infoGrid___xohlq{width:100%;padding-left:2rem;margin-bottom:40vh;margin-top:1rem;max-width:50rem}.-esm-patient-registration__input__label01___fwQQq{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__input__productiveHeading02___7pE9K{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__input__space05___9oNC\\\\+{margin:1rem 0 1rem 0}.-esm-patient-registration__input__formContainer___YE8UP{display:flex;width:100%}.-esm-patient-registration__input__stickyColumn___KQudo{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__input__touchTarget___lFvgc a:active{color:#161616}.-esm-patient-registration__input__linkName___C8vKy{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__input__linkName___C8vKy:active{text-decoration:none;color:#161616}.-esm-patient-registration__input__linkName___C8vKy:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__input__main___rng6t{background-color:#fff}.omrs-breakpoint-lt-desktop .-esm-patient-registration__input__infoGrid___xohlq{max-width:unset}.-esm-patient-registration__input__fieldRow___5TD7U{display:flex;flex-direction:row;justify-content:flex-start;flex-wrap:wrap}.-esm-patient-registration__input__subFieldRow___zGAH4{margin-bottom:5px}.-esm-patient-registration__input__label___65tRW{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;color:#525252}.-esm-patient-registration__input__textID___F\\\\+F-t{margin-bottom:1rem}.-esm-patient-registration__input__requiredField___x0TVf{color:#da1e28}.-esm-patient-registration__input__input___JYX4d{margin-right:5px}.-esm-patient-registration__input__checkboxField___gmx7u{display:flex;flex-direction:row;justify-content:flex-start;width:400px;margin-left:10px}.-esm-patient-registration__input__textInput___QJYjz{width:250px !important;height:40px !important}.-esm-patient-registration__input__numberInput___IGlx4{width:200px !important;height:40px !important}.-esm-patient-registration__input__checkboxInput___IVRIk{height:1.5rem !important;width:1.5rem !important;margin-top:8px}.-esm-patient-registration__input__selectInput___yrzZ-{width:150px !important;height:40px !important}.-esm-patient-registration__input__dateInput___2shrY{width:200px !important;height:40px !important;font-size:large !important}.-esm-patient-registration__input__telInput___HxQe3{width:250px !important;height:40px !important}.-esm-patient-registration__input__errorInput___aW2qL{border:2px solid #da1e28 !important;padding-left:.875rem !important}.-esm-patient-registration__input__errorMessage___cbdW2{color:#da1e28;align-self:center}.-esm-patient-registration__input__dummyData___GFQGF{cursor:pointer;margin-left:5px}.-esm-patient-registration__input__IDInput___6B3\\\\+s{display:grid;grid-template-columns:1fr auto;align-items:center;max-width:27rem}.-esm-patient-registration__input__trashCan___usc53{color:#da1e28}.omrs-breakpoint-lt-desktop .-esm-patient-registration__input__IDInput___6B3\\\\+s{max-width:unset;width:100%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/patient-registration/patient-registration.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./src/patient-registration/input/input.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,iDACE,kCAAA,CAGF,kDACE,WAAA,CAGF,wDACE,cAAA,CAGF,wDACE,eAAA,CAGF,wDACE,kBCUmB,CDTnB,eAAA,CACA,aAAA,CAGF,oDACE,UAAA,CACA,iBCamB,CDZnB,kBAAA,CACA,eCCmB,CAAA,eAAA,CDGrB,mDE6eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CFhqBxB,eCLmB,CDMnB,kBCNmB,CDOnB,aDnCM,CCsCR,+DEseI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CFzpBxB,aDxCM,CCyCN,cAAA,CAGF,oDACE,oBAAA,CAGF,yDACE,YAAA,CACA,UAAA,CAGF,wDACE,eAAA,CACA,eC3BmB,CD6BnB,QAAA,CAGF,gEACE,aDtDe,CCyDjB,oDACE,aD3Dc,CC4Dd,gBAAA,CACA,cCvCmB,CDwCnB,eAAA,CAEA,2DACE,oBAAA,CACA,aDjEa,CCoEf,0DACE,oBAAA,CACA,aDtEa,CCuEb,cAAA,CAIJ,gDACE,qBAAA,CAIA,gFACE,eAAA,CGzFJ,oDACE,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,cAAA,CAGF,uDACE,iBAAA,CAGF,iDDkgBI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CCrrBxB,aJVQ,CIaV,mDACE,kBFYmB,CETrB,yDACE,aJHO,CIMT,iDACE,gBAAA,CAGF,yDACE,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,WAAA,CACA,gBAAA,CAGF,qDACE,sBAAA,CACA,sBAAA,CAGF,uDACE,sBAAA,CACA,sBAAA,CAGF,yDACE,wBAAA,CACA,uBAAA,CACA,cAAA,CAGF,uDACE,sBAAA,CACA,sBAAA,CAGF,qDACE,sBAAA,CACA,sBAAA,CACA,0BAAA,CAGF,oDACE,sBAAA,CACA,sBAAA,CAGF,sDACE,mCAAA,CACA,+BAAA,CAGF,wDACE,aJxDO,CIyDP,iBAAA,CAGF,qDACE,cAAA,CACA,eAAA,CAGF,oDACE,YAAA,CACA,8BAAA,CACA,kBAAA,CACA,eAAA,CAGF,oDACE,aJzEO,CI6EP,gFACE,eAAA,CACA,UAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\\n@import '~@openmrs/esm-styleguide/src/vars';\\n\\n.title {\\n  color: var(--omrs-color-brand-teal);\\n}\\n\\n.submit {\\n  width: 250px;\\n}\\n\\n.submit:hover {\\n  cursor: pointer;\\n}\\n\\n.cancelButton {\\n  width: 11.688rem;\\n}\\n\\n.submitButton {\\n  margin-bottom: $spacing-05;\\n  width: 11.688rem;\\n  display: block;\\n}\\n\\n.infoGrid {\\n  width: 100%;\\n  padding-left: $spacing-07;\\n  margin-bottom: 40vh;\\n  margin-top: $spacing-05;\\n  max-width: 50rem;\\n}\\n\\n.label01 {\\n  @include carbon--type-style('label-01');\\n  margin-top: $spacing-05;\\n  margin-bottom: $spacing-05;\\n  color: $ui-04;\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style('productive-heading-02');\\n  color: $ui-04;\\n  cursor: pointer;\\n}\\n\\n.space05 {\\n  margin: $spacing-05 0 $spacing-05 0;\\n}\\n\\n.formContainer {\\n  display: flex;\\n  width: 100%;\\n}\\n\\n.stickyColumn {\\n  position: sticky;\\n  margin-top: $spacing-05;\\n  // 3rem for the nav height and 1rem for top margin\\n  top: 4rem;\\n}\\n\\n.touchTarget a:active {\\n  color: $color-gray-100;\\n}\\n\\n.linkName {\\n  color: $color-gray-70;\\n  line-height: 1.38;\\n  font-size: $spacing-05;\\n  font-weight: 600;\\n\\n  &:active {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n  }\\n\\n  &:hover {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n    cursor: pointer;\\n  }\\n}\\n\\n.main {\\n  background-color: white;\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .infoGrid {\\n    max-width: unset;\\n  }\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"@import '../../patient-registration/patient-registration.scss';\\n\\n.fieldRow {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-start;\\n  flex-wrap: wrap;\\n}\\n\\n.subFieldRow {\\n  margin-bottom: 5px;\\n}\\n\\n.label {\\n  @include carbon--type-style('label-01');\\n  color: $text-02;\\n}\\n\\n.textID {\\n  margin-bottom: $spacing-05;\\n}\\n\\n.requiredField {\\n  color: $danger;\\n}\\n\\n.input {\\n  margin-right: 5px;\\n}\\n\\n.checkboxField {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-start;\\n  width: 400px;\\n  margin-left: 10px;\\n}\\n\\n.textInput {\\n  width: 250px !important;\\n  height: 40px !important;\\n}\\n\\n.numberInput {\\n  width: 200px !important;\\n  height: 40px !important;\\n}\\n\\n.checkboxInput {\\n  height: 1.5rem !important;\\n  width: 1.5rem !important;\\n  margin-top: 8px;\\n}\\n\\n.selectInput {\\n  width: 150px !important;\\n  height: 40px !important;\\n}\\n\\n.dateInput {\\n  width: 200px !important;\\n  height: 40px !important;\\n  font-size: large !important;\\n}\\n\\n.telInput {\\n  width: 250px !important;\\n  height: 40px !important;\\n}\\n\\n.errorInput {\\n  border: 2px solid $danger !important;\\n  padding-left: 0.875rem !important;\\n}\\n\\n.errorMessage {\\n  color: $danger;\\n  align-self: center;\\n}\\n\\n.dummyData {\\n  cursor: pointer;\\n  margin-left: 5px;\\n}\\n\\n.IDInput {\\n  display: grid;\\n  grid-template-columns: 1fr auto;\\n  align-items: center;\\n  max-width: 27rem;\\n}\\n\\n.trashCan {\\n  color: $danger;\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .IDInput {\\n    max-width: unset;\\n    width: 100%;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"title\": \"-esm-patient-registration__input__title___4PKlg\",\n\t\"submit\": \"-esm-patient-registration__input__submit___mloB4\",\n\t\"cancelButton\": \"-esm-patient-registration__input__cancelButton___blAcs\",\n\t\"submitButton\": \"-esm-patient-registration__input__submitButton___SofD2\",\n\t\"infoGrid\": \"-esm-patient-registration__input__infoGrid___xohlq\",\n\t\"label01\": \"-esm-patient-registration__input__label01___fwQQq\",\n\t\"productiveHeading02\": \"-esm-patient-registration__input__productiveHeading02___7pE9K\",\n\t\"space05\": \"-esm-patient-registration__input__space05___9oNC+\",\n\t\"formContainer\": \"-esm-patient-registration__input__formContainer___YE8UP\",\n\t\"stickyColumn\": \"-esm-patient-registration__input__stickyColumn___KQudo\",\n\t\"touchTarget\": \"-esm-patient-registration__input__touchTarget___lFvgc\",\n\t\"linkName\": \"-esm-patient-registration__input__linkName___C8vKy\",\n\t\"main\": \"-esm-patient-registration__input__main___rng6t\",\n\t\"fieldRow\": \"-esm-patient-registration__input__fieldRow___5TD7U\",\n\t\"subFieldRow\": \"-esm-patient-registration__input__subFieldRow___zGAH4\",\n\t\"label\": \"-esm-patient-registration__input__label___65tRW\",\n\t\"textID\": \"-esm-patient-registration__input__textID___F+F-t\",\n\t\"requiredField\": \"-esm-patient-registration__input__requiredField___x0TVf\",\n\t\"input\": \"-esm-patient-registration__input__input___JYX4d\",\n\t\"checkboxField\": \"-esm-patient-registration__input__checkboxField___gmx7u\",\n\t\"textInput\": \"-esm-patient-registration__input__textInput___QJYjz\",\n\t\"numberInput\": \"-esm-patient-registration__input__numberInput___IGlx4\",\n\t\"checkboxInput\": \"-esm-patient-registration__input__checkboxInput___IVRIk\",\n\t\"selectInput\": \"-esm-patient-registration__input__selectInput___yrzZ-\",\n\t\"dateInput\": \"-esm-patient-registration__input__dateInput___2shrY\",\n\t\"telInput\": \"-esm-patient-registration__input__telInput___HxQe3\",\n\t\"errorInput\": \"-esm-patient-registration__input__errorInput___aW2qL\",\n\t\"errorMessage\": \"-esm-patient-registration__input__errorMessage___cbdW2\",\n\t\"dummyData\": \"-esm-patient-registration__input__dummyData___GFQGF\",\n\t\"IDInput\": \"-esm-patient-registration__input__IDInput___6B3+s\",\n\t\"trashCan\": \"-esm-patient-registration__input__trashCan___usc53\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__patient-registration__title___d6s20{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__patient-registration__submit___S6frc{width:250px}.-esm-patient-registration__patient-registration__submit___S6frc:hover{cursor:pointer}.-esm-patient-registration__patient-registration__cancelButton___2-E\\\\+5{width:11.688rem}.-esm-patient-registration__patient-registration__submitButton___Ps1do{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__patient-registration__infoGrid___2S1kw{width:100%;padding-left:2rem;margin-bottom:40vh;margin-top:1rem;max-width:50rem}.-esm-patient-registration__patient-registration__label01___CxOgi{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__patient-registration__productiveHeading02___mBDux{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__patient-registration__space05___\\\\+IJfn{margin:1rem 0 1rem 0}.-esm-patient-registration__patient-registration__formContainer___ydkLz{display:flex;width:100%}.-esm-patient-registration__patient-registration__stickyColumn___2G55G{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__patient-registration__touchTarget___KxfOv a:active{color:#161616}.-esm-patient-registration__patient-registration__linkName___Ukv7z{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__patient-registration__linkName___Ukv7z:active{text-decoration:none;color:#161616}.-esm-patient-registration__patient-registration__linkName___Ukv7z:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__patient-registration__main___eiIwY{background-color:#fff}.omrs-breakpoint-lt-desktop .-esm-patient-registration__patient-registration__infoGrid___2S1kw{max-width:unset}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/patient-registration/patient-registration.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,gEACE,kCAAA,CAGF,iEACE,WAAA,CAGF,uEACE,cAAA,CAGF,wEACE,eAAA,CAGF,uEACE,kBCUmB,CDTnB,eAAA,CACA,aAAA,CAGF,mEACE,UAAA,CACA,iBCamB,CDZnB,kBAAA,CACA,eCCmB,CAAA,eAAA,CDGrB,kEE6eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CFhqBxB,eCLmB,CDMnB,kBCNmB,CDOnB,aDnCM,CCsCR,8EEseI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CFzpBxB,aDxCM,CCyCN,cAAA,CAGF,mEACE,oBAAA,CAGF,wEACE,YAAA,CACA,UAAA,CAGF,uEACE,eAAA,CACA,eC3BmB,CD6BnB,QAAA,CAGF,+EACE,aDtDe,CCyDjB,mEACE,aD3Dc,CC4Dd,gBAAA,CACA,cCvCmB,CDwCnB,eAAA,CAEA,0EACE,oBAAA,CACA,aDjEa,CCoEf,yEACE,oBAAA,CACA,aDtEa,CCuEb,cAAA,CAIJ,+DACE,qBAAA,CAIA,+FACE,eAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\\n@import '~@openmrs/esm-styleguide/src/vars';\\n\\n.title {\\n  color: var(--omrs-color-brand-teal);\\n}\\n\\n.submit {\\n  width: 250px;\\n}\\n\\n.submit:hover {\\n  cursor: pointer;\\n}\\n\\n.cancelButton {\\n  width: 11.688rem;\\n}\\n\\n.submitButton {\\n  margin-bottom: $spacing-05;\\n  width: 11.688rem;\\n  display: block;\\n}\\n\\n.infoGrid {\\n  width: 100%;\\n  padding-left: $spacing-07;\\n  margin-bottom: 40vh;\\n  margin-top: $spacing-05;\\n  max-width: 50rem;\\n}\\n\\n.label01 {\\n  @include carbon--type-style('label-01');\\n  margin-top: $spacing-05;\\n  margin-bottom: $spacing-05;\\n  color: $ui-04;\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style('productive-heading-02');\\n  color: $ui-04;\\n  cursor: pointer;\\n}\\n\\n.space05 {\\n  margin: $spacing-05 0 $spacing-05 0;\\n}\\n\\n.formContainer {\\n  display: flex;\\n  width: 100%;\\n}\\n\\n.stickyColumn {\\n  position: sticky;\\n  margin-top: $spacing-05;\\n  // 3rem for the nav height and 1rem for top margin\\n  top: 4rem;\\n}\\n\\n.touchTarget a:active {\\n  color: $color-gray-100;\\n}\\n\\n.linkName {\\n  color: $color-gray-70;\\n  line-height: 1.38;\\n  font-size: $spacing-05;\\n  font-weight: 600;\\n\\n  &:active {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n  }\\n\\n  &:hover {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n    cursor: pointer;\\n  }\\n}\\n\\n.main {\\n  background-color: white;\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .infoGrid {\\n    max-width: unset;\\n  }\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"title\": \"-esm-patient-registration__patient-registration__title___d6s20\",\n\t\"submit\": \"-esm-patient-registration__patient-registration__submit___S6frc\",\n\t\"cancelButton\": \"-esm-patient-registration__patient-registration__cancelButton___2-E+5\",\n\t\"submitButton\": \"-esm-patient-registration__patient-registration__submitButton___Ps1do\",\n\t\"infoGrid\": \"-esm-patient-registration__patient-registration__infoGrid___2S1kw\",\n\t\"label01\": \"-esm-patient-registration__patient-registration__label01___CxOgi\",\n\t\"productiveHeading02\": \"-esm-patient-registration__patient-registration__productiveHeading02___mBDux\",\n\t\"space05\": \"-esm-patient-registration__patient-registration__space05___+IJfn\",\n\t\"formContainer\": \"-esm-patient-registration__patient-registration__formContainer___ydkLz\",\n\t\"stickyColumn\": \"-esm-patient-registration__patient-registration__stickyColumn___2G55G\",\n\t\"touchTarget\": \"-esm-patient-registration__patient-registration__touchTarget___KxfOv\",\n\t\"linkName\": \"-esm-patient-registration__patient-registration__linkName___Ukv7z\",\n\t\"main\": \"-esm-patient-registration__patient-registration__main___eiIwY\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__relationships__title___zOYZm{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__relationships__submit___kNlmu{width:250px}.-esm-patient-registration__relationships__submit___kNlmu:hover{cursor:pointer}.-esm-patient-registration__relationships__cancelButton___cFt6p{width:11.688rem}.-esm-patient-registration__relationships__submitButton___CW8X\\\\+{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__relationships__infoGrid___9dg84{width:100%;padding-left:2rem;margin-bottom:40vh;margin-top:1rem;max-width:50rem}.-esm-patient-registration__relationships__label01___TYH\\\\+i{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__relationships__productiveHeading02___PuSkg{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__relationships__space05___gWnMG{margin:1rem 0 1rem 0}.-esm-patient-registration__relationships__formContainer___U91DX{display:flex;width:100%}.-esm-patient-registration__relationships__stickyColumn___2cbAk{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__relationships__touchTarget___chVrk a:active{color:#161616}.-esm-patient-registration__relationships__linkName___M6KoQ{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__relationships__linkName___M6KoQ:active{text-decoration:none;color:#161616}.-esm-patient-registration__relationships__linkName___M6KoQ:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__relationships__main___G8ux-{background-color:#fff}.omrs-breakpoint-lt-desktop .-esm-patient-registration__relationships__infoGrid___9dg84{max-width:unset}.-esm-patient-registration__relationships__labelText___hTuhj{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-patient-registration__relationships__bodyShort02___hfBao{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.-esm-patient-registration__relationships__searchBox___xY0Yt{margin-bottom:1rem}.-esm-patient-registration__relationships__relationshipHeader___2w\\\\+Ew{display:flex;align-items:center}.-esm-patient-registration__relationships__productiveHeading___IiVgd{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#525252}.-esm-patient-registration__relationships__trashCan___nBYrg{color:#da1e28 !important}.omrs-breakpoint-lt-desktop .-esm-patient-registration__relationships__relationshipHeader___2w\\\\+Ew{justify-content:space-between}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/patient-registration/patient-registration.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./src/patient-registration/section/patient-relationships/relationships.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,yDACE,kCAAA,CAGF,0DACE,WAAA,CAGF,gEACE,cAAA,CAGF,gEACE,eAAA,CAGF,iEACE,kBCUmB,CDTnB,eAAA,CACA,aAAA,CAGF,4DACE,UAAA,CACA,iBCamB,CDZnB,kBAAA,CACA,eCCmB,CAAA,eAAA,CDGrB,4DE6eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CFhqBxB,eCLmB,CDMnB,kBCNmB,CDOnB,aDnCM,CCsCR,uEEseI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CFzpBxB,aDxCM,CCyCN,cAAA,CAGF,2DACE,oBAAA,CAGF,iEACE,YAAA,CACA,UAAA,CAGF,gEACE,eAAA,CACA,eC3BmB,CD6BnB,QAAA,CAGF,wEACE,aDtDe,CCyDjB,4DACE,aD3Dc,CC4Dd,gBAAA,CACA,cCvCmB,CDwCnB,eAAA,CAEA,mEACE,oBAAA,CACA,aDjEa,CCoEf,kEACE,oBAAA,CACA,aDtEa,CCuEb,cAAA,CAIJ,wDACE,qBAAA,CAIA,wFACE,eAAA,CGzFJ,6DD6gBI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CC9rB1B,+DDygBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CC1rB1B,6DACE,kBFoBmB,CEjBrB,uEACE,YAAA,CACA,kBAAA,CAGF,qED4fI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CC/qBxB,aJhBQ,CImBV,4DACE,wBAAA,CAIA,mGACE,6BAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\\n@import '~@openmrs/esm-styleguide/src/vars';\\n\\n.title {\\n  color: var(--omrs-color-brand-teal);\\n}\\n\\n.submit {\\n  width: 250px;\\n}\\n\\n.submit:hover {\\n  cursor: pointer;\\n}\\n\\n.cancelButton {\\n  width: 11.688rem;\\n}\\n\\n.submitButton {\\n  margin-bottom: $spacing-05;\\n  width: 11.688rem;\\n  display: block;\\n}\\n\\n.infoGrid {\\n  width: 100%;\\n  padding-left: $spacing-07;\\n  margin-bottom: 40vh;\\n  margin-top: $spacing-05;\\n  max-width: 50rem;\\n}\\n\\n.label01 {\\n  @include carbon--type-style('label-01');\\n  margin-top: $spacing-05;\\n  margin-bottom: $spacing-05;\\n  color: $ui-04;\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style('productive-heading-02');\\n  color: $ui-04;\\n  cursor: pointer;\\n}\\n\\n.space05 {\\n  margin: $spacing-05 0 $spacing-05 0;\\n}\\n\\n.formContainer {\\n  display: flex;\\n  width: 100%;\\n}\\n\\n.stickyColumn {\\n  position: sticky;\\n  margin-top: $spacing-05;\\n  // 3rem for the nav height and 1rem for top margin\\n  top: 4rem;\\n}\\n\\n.touchTarget a:active {\\n  color: $color-gray-100;\\n}\\n\\n.linkName {\\n  color: $color-gray-70;\\n  line-height: 1.38;\\n  font-size: $spacing-05;\\n  font-weight: 600;\\n\\n  &:active {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n  }\\n\\n  &:hover {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n    cursor: pointer;\\n  }\\n}\\n\\n.main {\\n  background-color: white;\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .infoGrid {\\n    max-width: unset;\\n  }\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"@import '../../patient-registration.scss';\\n\\n.labelText {\\n  @include carbon--type-style('label-01');\\n}\\n\\n.bodyShort02 {\\n  @include carbon--type-style('body-short-02');\\n}\\n\\n.searchBox {\\n  margin-bottom: $spacing-05;\\n}\\n\\n.relationshipHeader {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.productiveHeading {\\n  @include carbon--type-style('productive-heading-02');\\n  color: $text-02;\\n}\\n\\n.trashCan {\\n  color: $danger !important;\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .relationshipHeader {\\n    justify-content: space-between;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"title\": \"-esm-patient-registration__relationships__title___zOYZm\",\n\t\"submit\": \"-esm-patient-registration__relationships__submit___kNlmu\",\n\t\"cancelButton\": \"-esm-patient-registration__relationships__cancelButton___cFt6p\",\n\t\"submitButton\": \"-esm-patient-registration__relationships__submitButton___CW8X+\",\n\t\"infoGrid\": \"-esm-patient-registration__relationships__infoGrid___9dg84\",\n\t\"label01\": \"-esm-patient-registration__relationships__label01___TYH+i\",\n\t\"productiveHeading02\": \"-esm-patient-registration__relationships__productiveHeading02___PuSkg\",\n\t\"space05\": \"-esm-patient-registration__relationships__space05___gWnMG\",\n\t\"formContainer\": \"-esm-patient-registration__relationships__formContainer___U91DX\",\n\t\"stickyColumn\": \"-esm-patient-registration__relationships__stickyColumn___2cbAk\",\n\t\"touchTarget\": \"-esm-patient-registration__relationships__touchTarget___chVrk\",\n\t\"linkName\": \"-esm-patient-registration__relationships__linkName___M6KoQ\",\n\t\"main\": \"-esm-patient-registration__relationships__main___G8ux-\",\n\t\"labelText\": \"-esm-patient-registration__relationships__labelText___hTuhj\",\n\t\"bodyShort02\": \"-esm-patient-registration__relationships__bodyShort02___hfBao\",\n\t\"searchBox\": \"-esm-patient-registration__relationships__searchBox___xY0Yt\",\n\t\"relationshipHeader\": \"-esm-patient-registration__relationships__relationshipHeader___2w+Ew\",\n\t\"productiveHeading\": \"-esm-patient-registration__relationships__productiveHeading___IiVgd\",\n\t\"trashCan\": \"-esm-patient-registration__relationships__trashCan___nBYrg\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__section__title___WE522{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__section__submit___ZCyMT{width:250px}.-esm-patient-registration__section__submit___ZCyMT:hover{cursor:pointer}.-esm-patient-registration__section__cancelButton___BtWcr{width:11.688rem}.-esm-patient-registration__section__submitButton___SX3tz{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__section__infoGrid___m6EFv{width:100%;padding-left:2rem;margin-bottom:40vh;margin-top:1rem;max-width:50rem}.-esm-patient-registration__section__label01___SB4dO{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__section__productiveHeading02___0Qr6X{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__section__space05___\\\\+I97l{margin:1rem 0 1rem 0}.-esm-patient-registration__section__formContainer___bUz8M{display:flex;width:100%}.-esm-patient-registration__section__stickyColumn___e3QEm{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__section__touchTarget___ubpCE a:active{color:#161616}.-esm-patient-registration__section__linkName___NOqjy{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__section__linkName___NOqjy:active{text-decoration:none;color:#161616}.-esm-patient-registration__section__linkName___NOqjy:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__section__main___3eHUo{background-color:#fff}.omrs-breakpoint-lt-desktop .-esm-patient-registration__section__infoGrid___m6EFv{max-width:unset}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/patient-registration/patient-registration.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,mDACE,kCAAA,CAGF,oDACE,WAAA,CAGF,0DACE,cAAA,CAGF,0DACE,eAAA,CAGF,0DACE,kBCUmB,CDTnB,eAAA,CACA,aAAA,CAGF,sDACE,UAAA,CACA,iBCamB,CDZnB,kBAAA,CACA,eCCmB,CAAA,eAAA,CDGrB,qDE6eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CFhqBxB,eCLmB,CDMnB,kBCNmB,CDOnB,aDnCM,CCsCR,iEEseI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CFzpBxB,aDxCM,CCyCN,cAAA,CAGF,sDACE,oBAAA,CAGF,2DACE,YAAA,CACA,UAAA,CAGF,0DACE,eAAA,CACA,eC3BmB,CD6BnB,QAAA,CAGF,kEACE,aDtDe,CCyDjB,sDACE,aD3Dc,CC4Dd,gBAAA,CACA,cCvCmB,CDwCnB,eAAA,CAEA,6DACE,oBAAA,CACA,aDjEa,CCoEf,4DACE,oBAAA,CACA,aDtEa,CCuEb,cAAA,CAIJ,kDACE,qBAAA,CAIA,kFACE,eAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\\n@import '~@openmrs/esm-styleguide/src/vars';\\n\\n.title {\\n  color: var(--omrs-color-brand-teal);\\n}\\n\\n.submit {\\n  width: 250px;\\n}\\n\\n.submit:hover {\\n  cursor: pointer;\\n}\\n\\n.cancelButton {\\n  width: 11.688rem;\\n}\\n\\n.submitButton {\\n  margin-bottom: $spacing-05;\\n  width: 11.688rem;\\n  display: block;\\n}\\n\\n.infoGrid {\\n  width: 100%;\\n  padding-left: $spacing-07;\\n  margin-bottom: 40vh;\\n  margin-top: $spacing-05;\\n  max-width: 50rem;\\n}\\n\\n.label01 {\\n  @include carbon--type-style('label-01');\\n  margin-top: $spacing-05;\\n  margin-bottom: $spacing-05;\\n  color: $ui-04;\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style('productive-heading-02');\\n  color: $ui-04;\\n  cursor: pointer;\\n}\\n\\n.space05 {\\n  margin: $spacing-05 0 $spacing-05 0;\\n}\\n\\n.formContainer {\\n  display: flex;\\n  width: 100%;\\n}\\n\\n.stickyColumn {\\n  position: sticky;\\n  margin-top: $spacing-05;\\n  // 3rem for the nav height and 1rem for top margin\\n  top: 4rem;\\n}\\n\\n.touchTarget a:active {\\n  color: $color-gray-100;\\n}\\n\\n.linkName {\\n  color: $color-gray-70;\\n  line-height: 1.38;\\n  font-size: $spacing-05;\\n  font-weight: 600;\\n\\n  &:active {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n  }\\n\\n  &:hover {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n    cursor: pointer;\\n  }\\n}\\n\\n.main {\\n  background-color: white;\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .infoGrid {\\n    max-width: unset;\\n  }\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"title\": \"-esm-patient-registration__section__title___WE522\",\n\t\"submit\": \"-esm-patient-registration__section__submit___ZCyMT\",\n\t\"cancelButton\": \"-esm-patient-registration__section__cancelButton___BtWcr\",\n\t\"submitButton\": \"-esm-patient-registration__section__submitButton___SX3tz\",\n\t\"infoGrid\": \"-esm-patient-registration__section__infoGrid___m6EFv\",\n\t\"label01\": \"-esm-patient-registration__section__label01___SB4dO\",\n\t\"productiveHeading02\": \"-esm-patient-registration__section__productiveHeading02___0Qr6X\",\n\t\"space05\": \"-esm-patient-registration__section__space05___+I97l\",\n\t\"formContainer\": \"-esm-patient-registration__section__formContainer___bUz8M\",\n\t\"stickyColumn\": \"-esm-patient-registration__section__stickyColumn___e3QEm\",\n\t\"touchTarget\": \"-esm-patient-registration__section__touchTarget___ubpCE\",\n\t\"linkName\": \"-esm-patient-registration__section__linkName___NOqjy\",\n\t\"main\": \"-esm-patient-registration__section__main___3eHUo\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__overlay__title___ovEFv{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__overlay__submit___MEU04{width:250px}.-esm-patient-registration__overlay__submit___MEU04:hover{cursor:pointer}.-esm-patient-registration__overlay__cancelButton___Kuq8k{width:11.688rem}.-esm-patient-registration__overlay__submitButton___koip2{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__overlay__infoGrid___IR-lJ{width:100%;padding-left:2rem;margin-bottom:40vh;margin-top:1rem;max-width:50rem}.-esm-patient-registration__overlay__label01___UFjWe{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__overlay__productiveHeading02___0-7g8{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__overlay__space05___3-aCf{margin:1rem 0 1rem 0}.-esm-patient-registration__overlay__formContainer___0etfN{display:flex;width:100%}.-esm-patient-registration__overlay__stickyColumn___ZAq3J{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__overlay__touchTarget___eSQ3o a:active{color:#161616}.-esm-patient-registration__overlay__linkName___Kol4j{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__overlay__linkName___Kol4j:active{text-decoration:none;color:#161616}.-esm-patient-registration__overlay__linkName___Kol4j:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__overlay__main___pCgsu{background-color:#fff}.omrs-breakpoint-lt-desktop .-esm-patient-registration__overlay__infoGrid___IR-lJ{max-width:unset}.-esm-patient-registration__overlay__desktopOverlay___pTy0O{position:fixed;top:3rem;right:0;height:calc(100vh - 3rem);min-width:27rem;background-color:#fff;border-left:1px solid #a8a8a8;overflow:hidden;display:grid;grid-template-rows:auto 1fr auto;z-index:999}.-esm-patient-registration__overlay__tabletOverlay___\\\\+CQze{position:fixed;top:0;bottom:0;left:0;right:0;z-index:9999;background-color:#fff;overflow:hidden;padding-top:3rem;display:grid;grid-template-rows:1fr auto}.-esm-patient-registration__overlay__tabletOverlayHeader___omtl4 button{background-color:#005d5d !important}.-esm-patient-registration__overlay__tabletOverlayHeader___omtl4 .-esm-patient-registration__overlay__headerContent___S7vPL{color:#fff}.-esm-patient-registration__overlay__desktopHeader___X3NCa{display:flex;justify-content:space-between;align-items:center;background-color:#e0e0e0;border-bottom:1px solid #a8a8a8}.-esm-patient-registration__overlay__headerContent___S7vPL{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;padding:0 1rem;color:#161616}.-esm-patient-registration__overlay__closeButton___8Pcw1{background-color:#fff}.-esm-patient-registration__overlay__overlayContent___9V2UN{padding:1rem;overflow-y:auto}.-esm-patient-registration__overlay__buttonsGroup___5b3bz{align-self:end}.-esm-patient-registration__overlay__buttonsGroup___5b3bz button{max-width:unset !important}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/patient-registration/patient-registration.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./src/patient-registration/ui-components/overlay/overlay.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,mDACE,kCAAA,CAGF,oDACE,WAAA,CAGF,0DACE,cAAA,CAGF,0DACE,eAAA,CAGF,0DACE,kBCUmB,CDTnB,eAAA,CACA,aAAA,CAGF,sDACE,UAAA,CACA,iBCamB,CDZnB,kBAAA,CACA,eCCmB,CAAA,eAAA,CDGrB,qDE6eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CFhqBxB,eCLmB,CDMnB,kBCNmB,CDOnB,aDnCM,CCsCR,iEEseI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CFzpBxB,aDxCM,CCyCN,cAAA,CAGF,qDACE,oBAAA,CAGF,2DACE,YAAA,CACA,UAAA,CAGF,0DACE,eAAA,CACA,eC3BmB,CD6BnB,QAAA,CAGF,kEACE,aDtDe,CCyDjB,sDACE,aD3Dc,CC4Dd,gBAAA,CACA,cCvCmB,CDwCnB,eAAA,CAEA,6DACE,oBAAA,CACA,aDjEa,CCoEf,4DACE,oBAAA,CACA,aDtEa,CCuEb,cAAA,CAIJ,kDACE,qBAAA,CAIA,kFACE,eAAA,CGzFJ,4DACE,cAAA,CACA,QF+CmB,CE9CnB,OAAA,CACA,yBAAA,CACA,eAAA,CACA,qBJPM,CIQN,6BAAA,CACA,eAAA,CACA,YAAA,CACA,gCAAA,CACA,WAAA,CAGF,4DACE,cAAA,CACA,KAAA,CACA,QAAA,CACA,MAAA,CACA,OAAA,CACA,YAAA,CACA,qBJtBM,CIuBN,eAAA,CACA,gBF0BmB,CEzBnB,YAAA,CACA,2BAAA,CAIA,wEACE,mCAAA,CAEF,4HACE,UJlCI,CIsCR,2DACE,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,wBJzCM,CI0CN,+BAAA,CAGF,2DDgeI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CCnpBxB,cAAA,CACA,aJ9CM,CIiDR,yDACE,qBJrDM,CIwDR,4DACE,YF3BmB,CE4BnB,eAAA,CAGF,0DACE,cAAA,CAGF,iEACE,0BAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\\n@import '~@openmrs/esm-styleguide/src/vars';\\n\\n.title {\\n  color: var(--omrs-color-brand-teal);\\n}\\n\\n.submit {\\n  width: 250px;\\n}\\n\\n.submit:hover {\\n  cursor: pointer;\\n}\\n\\n.cancelButton {\\n  width: 11.688rem;\\n}\\n\\n.submitButton {\\n  margin-bottom: $spacing-05;\\n  width: 11.688rem;\\n  display: block;\\n}\\n\\n.infoGrid {\\n  width: 100%;\\n  padding-left: $spacing-07;\\n  margin-bottom: 40vh;\\n  margin-top: $spacing-05;\\n  max-width: 50rem;\\n}\\n\\n.label01 {\\n  @include carbon--type-style('label-01');\\n  margin-top: $spacing-05;\\n  margin-bottom: $spacing-05;\\n  color: $ui-04;\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style('productive-heading-02');\\n  color: $ui-04;\\n  cursor: pointer;\\n}\\n\\n.space05 {\\n  margin: $spacing-05 0 $spacing-05 0;\\n}\\n\\n.formContainer {\\n  display: flex;\\n  width: 100%;\\n}\\n\\n.stickyColumn {\\n  position: sticky;\\n  margin-top: $spacing-05;\\n  // 3rem for the nav height and 1rem for top margin\\n  top: 4rem;\\n}\\n\\n.touchTarget a:active {\\n  color: $color-gray-100;\\n}\\n\\n.linkName {\\n  color: $color-gray-70;\\n  line-height: 1.38;\\n  font-size: $spacing-05;\\n  font-weight: 600;\\n\\n  &:active {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n  }\\n\\n  &:hover {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n    cursor: pointer;\\n  }\\n}\\n\\n.main {\\n  background-color: white;\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .infoGrid {\\n    max-width: unset;\\n  }\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"@import '../../patient-registration.scss';\\n\\n.desktopOverlay {\\n  position: fixed;\\n  top: $spacing-09;\\n  right: 0;\\n  height: calc(100vh - 3rem);\\n  min-width: 27rem;\\n  background-color: $ui-02;\\n  border-left: 1px solid $text-03;\\n  overflow: hidden;\\n  display: grid;\\n  grid-template-rows: auto 1fr auto;\\n  z-index: 999;\\n}\\n\\n.tabletOverlay {\\n  position: fixed;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 9999;\\n  background-color: $ui-02;\\n  overflow: hidden;\\n  padding-top: $spacing-09;\\n  display: grid;\\n  grid-template-rows: 1fr auto;\\n}\\n\\n.tabletOverlayHeader {\\n  button {\\n    background-color: $brand-01 !important;\\n  }\\n  .headerContent {\\n    color: $ui-02;\\n  }\\n}\\n\\n.desktopHeader {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  background-color: $ui-03;\\n  border-bottom: 1px solid $text-03;\\n}\\n\\n.headerContent {\\n  @include carbon--type-style('productive-heading-02');\\n  padding: 0 $spacing-05;\\n  color: $ui-05;\\n}\\n\\n.closeButton {\\n  background-color: $ui-02;\\n}\\n\\n.overlayContent {\\n  padding: $spacing-05;\\n  overflow-y: auto;\\n}\\n\\n.buttonsGroup {\\n  align-self: end;\\n}\\n\\n.buttonsGroup button {\\n  max-width: unset !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"title\": \"-esm-patient-registration__overlay__title___ovEFv\",\n\t\"submit\": \"-esm-patient-registration__overlay__submit___MEU04\",\n\t\"cancelButton\": \"-esm-patient-registration__overlay__cancelButton___Kuq8k\",\n\t\"submitButton\": \"-esm-patient-registration__overlay__submitButton___koip2\",\n\t\"infoGrid\": \"-esm-patient-registration__overlay__infoGrid___IR-lJ\",\n\t\"label01\": \"-esm-patient-registration__overlay__label01___UFjWe\",\n\t\"productiveHeading02\": \"-esm-patient-registration__overlay__productiveHeading02___0-7g8\",\n\t\"space05\": \"-esm-patient-registration__overlay__space05___3-aCf\",\n\t\"formContainer\": \"-esm-patient-registration__overlay__formContainer___0etfN\",\n\t\"stickyColumn\": \"-esm-patient-registration__overlay__stickyColumn___ZAq3J\",\n\t\"touchTarget\": \"-esm-patient-registration__overlay__touchTarget___eSQ3o\",\n\t\"linkName\": \"-esm-patient-registration__overlay__linkName___Kol4j\",\n\t\"main\": \"-esm-patient-registration__overlay__main___pCgsu\",\n\t\"desktopOverlay\": \"-esm-patient-registration__overlay__desktopOverlay___pTy0O\",\n\t\"tabletOverlay\": \"-esm-patient-registration__overlay__tabletOverlay___+CQze\",\n\t\"tabletOverlayHeader\": \"-esm-patient-registration__overlay__tabletOverlayHeader___omtl4\",\n\t\"headerContent\": \"-esm-patient-registration__overlay__headerContent___S7vPL\",\n\t\"desktopHeader\": \"-esm-patient-registration__overlay__desktopHeader___X3NCa\",\n\t\"closeButton\": \"-esm-patient-registration__overlay__closeButton___8Pcw1\",\n\t\"overlayContent\": \"-esm-patient-registration__overlay__overlayContent___9V2UN\",\n\t\"buttonsGroup\": \"-esm-patient-registration__overlay__buttonsGroup___5b3bz\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { showModal } from '@openmrs/esm-framework';\nimport { useTranslation } from 'react-i18next';\n\nfunction getUrlWithoutPrefix(url: string) {\n  return url.split(window['getOpenmrsSpaBase']())?.[1];\n}\n\ninterface BeforeSavePromptProps {\n  when: boolean;\n  redirect?: string;\n}\n\nconst BeforeSavePrompt: React.FC<BeforeSavePromptProps> = ({ when, redirect }) => {\n  const history = useHistory();\n  const { t } = useTranslation();\n  const ref = useRef<boolean>(false);\n  const [localTarget, setTarget] = useState<string | undefined>();\n  const target = localTarget || redirect;\n  const cancelUnload = useCallback((e: BeforeUnloadEvent) => {\n    const message = t(\n      'discardModalBody',\n      \"The changes you made to this patient's details have not been saved. Discard changes?\",\n    );\n    e.preventDefault();\n    e.returnValue = message;\n    return message;\n  }, []);\n\n  const cancelNavigation = useCallback((evt: CustomEvent) => {\n    if (!evt.detail.navigationIsCanceled && !ref.current) {\n      ref.current = true;\n      evt.detail.cancelNavigation();\n      const dispose = showModal(\n        'cancel-patient-edit-modal',\n        {\n          onConfirm: () => {\n            setTarget(evt.detail.newUrl);\n            dispose();\n          },\n        },\n        () => {\n          ref.current = false;\n        },\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    if (when && typeof target === 'undefined') {\n      window.addEventListener('single-spa:before-routing-event', cancelNavigation);\n      window.addEventListener('beforeunload', cancelUnload);\n\n      return () => {\n        window.removeEventListener('beforeunload', cancelUnload);\n        window.removeEventListener('single-spa:before-routing-event', cancelNavigation);\n      };\n    }\n  }, [target, when, cancelUnload, cancelNavigation]);\n\n  useEffect(() => {\n    if (typeof target === 'string') {\n      history.push(`/${getUrlWithoutPrefix(target)}`);\n    }\n  }, [target]);\n\n  return null;\n};\n\nexport default BeforeSavePrompt;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./patient-registration.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./patient-registration.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as Yup from 'yup';\n\nexport const validationSchema = Yup.object({\n  givenName: Yup.string().required('givenNameRequired'),\n  familyName: Yup.string().required('familyNameRequired'),\n  additionalGivenName: Yup.string().when('addNameInLocalLanguage', {\n    is: true,\n    then: Yup.string().required('givenNameRequired'),\n    otherwise: Yup.string().notRequired(),\n  }),\n  additionalFamilyName: Yup.string().when('addNameInLocalLanguage', {\n    is: true,\n    then: Yup.string().required('familyNameRequired'),\n    otherwise: Yup.string().notRequired(),\n  }),\n  gender: Yup.string().oneOf(['Male', 'Female', 'Other', 'Unknown'], 'genderUnspecified').required('genderRequired'),\n  birthdate: Yup.date().when('birthdateEstimated', {\n    is: false,\n    then: Yup.date().required('birthdayRequired').max(Date(), 'birthdayNotInTheFuture').nullable(),\n    otherwise: Yup.date().nullable(),\n  }),\n  ageEstimate: Yup.number().when('birthdateEstimated', {\n    is: true,\n    then: Yup.number().required('ageEstimateRequired').min(0, 'negativeYears'),\n    otherwise: Yup.number().nullable(),\n  }),\n  identifiers: Yup.array().of(\n    Yup.object().shape({\n      identifier: Yup.string().required('identifierRequired'),\n    }),\n  ),\n  yearsEstimated: Yup.number().min(0, 'negativeYears'),\n  monthsEstimated: Yup.number().min(0, 'negativeMonths'),\n  deathDate: Yup.date().max(Date(), 'deathdayNotInTheFuture').nullable(),\n  email: Yup.string().optional().email('invalidEmail'),\n});\n","import { createContext, SetStateAction, useContext } from 'react';\nimport { FormValues, CapturePhotoProps } from './patient-registration-types';\n\nexport interface PatientRegistrationContextProps {\n  identifierTypes: Array<any>;\n  values: FormValues;\n  validationSchema: any;\n  setValidationSchema(value: any): void;\n  inEditMode: boolean;\n  fieldConfigs: Record<string, any>;\n  setFieldValue(field: string, value: any, shouldValidate?: boolean): void;\n  setCapturePhotoProps(value: SetStateAction<CapturePhotoProps>): void;\n  currentPhoto: string;\n  isOffline: boolean;\n}\n\nexport const PatientRegistrationContext = createContext<PatientRegistrationContextProps | undefined>(undefined);\n\nexport function useFieldConfig(field: string) {\n  const { fieldConfigs } = useContext(PatientRegistrationContext);\n  return fieldConfigs[field];\n}\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./input.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./input.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport { v4 } from 'uuid';\nimport { FormValues } from '../../patient-registration-types';\nimport styles from './../input.scss';\n\ninterface DummyDataInputProps {\n  setValues(values: FormValues, shouldValidate?: boolean): void;\n}\n\nexport const dummyFormValues: FormValues = {\n  patientUuid: v4(),\n  givenName: 'John',\n  middleName: '',\n  familyName: 'Smith',\n  unidentifiedPatient: false,\n  additionalGivenName: 'Joey',\n  additionalMiddleName: '',\n  additionalFamilyName: 'Smitty',\n  addNameInLocalLanguage: true,\n  gender: 'Male',\n  birthdate: new Date(2020, 1, 1) as any,\n  yearsEstimated: 1,\n  monthsEstimated: 2,\n  birthdateEstimated: true,\n  telephoneNumber: '0800001066',\n  address1: 'Bom Jesus Street',\n  address2: '',\n  cityVillage: 'Recife',\n  stateProvince: 'Pernambuco',\n  country: 'Brazil',\n  postalCode: '50030-310',\n  isDead: false,\n  deathDate: '',\n  deathCause: '',\n  relationships: [],\n  identifiers: [],\n};\n\nexport const DummyDataInput: React.FC<DummyDataInputProps> = ({ setValues }) => {\n  return (\n    <main>\n      <button\n        onClick={() => setValues(dummyFormValues)}\n        className={`omrs-btn omrs-filled-neutral ${styles.dummyData}`}\n        type=\"button\"\n        aria-label=\"Dummy Data Input\">\n        Input Dummy Data\n      </button>\n    </main>\n  );\n};\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./section.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./section.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useContext, useEffect } from 'react';\nimport styles from './../section.scss';\nimport { useField } from 'formik';\nimport { getField } from '../section-helper';\nimport { PatientRegistrationContext } from '../../patient-registration-context';\n\nexport interface DemographicsSectionProps {\n  id: 'demographics';\n  fields: Array<any>;\n}\n\nexport const DemographicsSection: React.FC<DemographicsSectionProps> = ({ fields }) => {\n  const [field, meta] = useField('addNameInLocalLanguage');\n  const { setFieldValue } = useContext(PatientRegistrationContext);\n\n  useEffect(() => {\n    if (!field.value && meta.touched) {\n      setFieldValue('additionalGivenName', '');\n      setFieldValue('additionalMiddleName', '');\n      setFieldValue('additionalFamilyName', '');\n    }\n  }, [field.value, meta.touched]);\n\n  return (\n    <section className={styles.formSection} aria-label=\"Demographics Section\">\n      {fields.map((field) => (\n        <div key={field}>{getField(field)}</div>\n      ))}\n    </section>\n  );\n};\n","import React from 'react';\nimport { getField } from '../section-helper';\n\nexport interface ContactInfoSectionProps {\n  id: 'contact';\n  fields: Array<string>;\n}\n\nexport const ContactInfoSection: React.FC<ContactInfoSectionProps> = ({ fields }) => {\n  return (\n    <section aria-label=\"Contact Info Section\">\n      {fields.map((fieldName) => (\n        <div key={fieldName}>{getField(fieldName)}</div>\n      ))}\n    </section>\n  );\n};\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./relationships.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./relationships.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./autosuggest.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./autosuggest.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Search, SearchProps } from 'carbon-components-react';\nimport styles from './autosuggest.scss';\nimport { useTranslation } from 'react-i18next';\n\ninterface AutosuggestProps extends SearchProps {\n  getDisplayValue: Function;\n  getFieldValue: Function;\n  getSearchResults: (query: string) => Promise<any>;\n  onSuggestionSelected: (field: string, value: string) => void;\n}\n\nexport const Autosuggest: React.FC<AutosuggestProps> = ({\n  getDisplayValue,\n  getFieldValue,\n  getSearchResults,\n  onSuggestionSelected,\n  ...searchProps\n}) => {\n  const [suggestions, setSuggestions] = useState([]);\n  const searchBox = useRef(null);\n  const wrapper = useRef(null);\n  const { t } = useTranslation();\n  const { name, labelText } = searchProps;\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutsideComponent);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutsideComponent);\n    };\n  }, [wrapper]);\n\n  const handleClickOutsideComponent = (e) => {\n    if (wrapper.current && !wrapper.current.contains(e.target)) {\n      setSuggestions([]);\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const query = e.target.value;\n    if (query) {\n      getSearchResults(query).then((suggestions) => {\n        setSuggestions(suggestions);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  const handleClick = (index: number) => {\n    const display = getDisplayValue(suggestions[index]);\n    const value = getFieldValue(suggestions[index]);\n    searchBox.current.input.value = display;\n    onSuggestionSelected(name, value);\n    setSuggestions([]);\n  };\n\n  return (\n    <div className={styles.autocomplete} ref={wrapper}>\n      <label className=\"bx--label\">{labelText}</label>\n      <Search\n        id=\"autosuggest\"\n        onChange={handleChange}\n        ref={searchBox}\n        className={styles.autocompleteSearch}\n        light\n        {...searchProps}\n      />\n      {suggestions.length > 0 && (\n        <ul className={styles.suggestions}>\n          {suggestions.map((suggestion, index) => (\n            <li //eslint-disable-line jsx-a11y/no-noninteractive-element-interactions\n              key={index}\n              onClick={(e) => handleClick(index)}>\n              {getDisplayValue(suggestion)}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport sectionStyles from '../section.scss';\nimport styles from './relationships.scss';\nimport { Button, Select, SelectItem, InlineNotification, NotificationActionButton } from 'carbon-components-react';\nimport { FieldArray } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { Autosuggest } from '../../input/custom-input/autosuggest/autosuggest.component';\nimport { PatientRegistrationContext } from '../../patient-registration-context';\nimport { ResourcesContext } from '../../../offline.resources';\nimport { fetchPerson } from '../../patient-registration.resource';\nimport { RelationshipValue } from '../../patient-registration-types';\nimport { TrashCan16 } from '@carbon/icons-react';\n\ninterface RelationshipType {\n  display: string;\n  uuid: string;\n  direction: string;\n}\n\nasync function searchPerson(query: string) {\n  const abortController = new AbortController();\n  const searchResults = await fetchPerson(query, abortController);\n  return searchResults.data.results;\n}\n\nexport interface RelationshipsSectionProps {\n  id: 'relationships';\n}\n\nexport const RelationshipsSection: React.FC<RelationshipsSectionProps> = () => {\n  const { relationshipTypes } = useContext(ResourcesContext);\n  const [displayRelationshipTypes, setDisplayRelationshipTypes] = useState<RelationshipType[]>([]);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const tmp: RelationshipType[] = [];\n    relationshipTypes.results.forEach((type) => {\n      const aIsToB = {\n        display: type.aIsToB,\n        uuid: type.uuid,\n        direction: 'aIsToB',\n      };\n      const bIsToA = {\n        display: type.bIsToA,\n        uuid: type.uuid,\n        direction: 'bIsToA',\n      };\n      aIsToB.display === bIsToA.display ? tmp.push(aIsToB) : tmp.push(aIsToB, bIsToA);\n    });\n    setDisplayRelationshipTypes(tmp);\n  }, [relationshipTypes]);\n\n  return (\n    <section aria-label=\"Relationships Section\">\n      <FieldArray name=\"relationships\">\n        {({\n          push,\n          remove,\n          form: {\n            values: { relationships },\n          },\n        }) => (\n          <div>\n            {relationships && relationships.length > 0\n              ? relationships.map((relationship: RelationshipValue, index) => (\n                  <div key={index} className={sectionStyles.formSection}>\n                    <RelationshipView\n                      relationship={relationship}\n                      index={index}\n                      displayRelationshipTypes={displayRelationshipTypes}\n                      key={index}\n                      remove={remove}\n                    />\n                  </div>\n                ))\n              : null}\n            <div className={styles.actions}>\n              <Button\n                kind=\"ghost\"\n                onClick={() =>\n                  push({\n                    relatedPersonUuid: '',\n                    action: 'ADD',\n                  })\n                }>\n                {t('addRelationshipButtonText', 'Add Relationship')}\n              </Button>\n            </div>\n          </div>\n        )}\n      </FieldArray>\n    </section>\n  );\n};\n\ninterface RelationshipViewProps {\n  relationship: RelationshipValue;\n  index: number;\n  displayRelationshipTypes: RelationshipType[];\n  remove: <T>(index: number) => T;\n}\n\nconst RelationshipView: React.FC<RelationshipViewProps> = ({\n  relationship,\n  index,\n  displayRelationshipTypes,\n  remove,\n}) => {\n  const { t } = useTranslation();\n  const { setFieldValue } = React.useContext(PatientRegistrationContext);\n\n  const newRelationship = !relationship.uuid;\n\n  const handleRelationshipTypeChange = useCallback((event) => {\n    const { target } = event;\n    const field = target.name;\n    const value = target.options[target.selectedIndex].value;\n    setFieldValue(field, value);\n    if (!relationship?.action) {\n      setFieldValue(`relationships[${index}].action`, 'UPDATE');\n    }\n  }, []);\n\n  const handleSuggestionSelected = useCallback((field: string, selectedSuggestion: string) => {\n    setFieldValue(field, selectedSuggestion);\n  }, []);\n\n  const searchPerson = async (query: string) => {\n    const abortController = new AbortController();\n    const searchResults = await fetchPerson(query, abortController);\n    return searchResults.data.results;\n  };\n\n  const deleteRelationship = useCallback(() => {\n    if (relationship.action === 'ADD') {\n      remove(index);\n    } else {\n      setFieldValue(`relationships[${index}].action`, 'DELETE');\n    }\n  }, [relationship, index]);\n\n  const restoreRelationship = useCallback(() => {\n    setFieldValue(`relationships[${index}]`, {\n      ...relationship,\n      action: undefined,\n      relationshipType: relationship.initialrelationshipTypeValue,\n    });\n  }, [index]);\n\n  return relationship.action !== 'DELETE' ? (\n    <div className={styles.relationship}>\n      <div className={styles.searchBox}>\n        <div className={styles.relationshipHeader}>\n          <h4 className={styles.productiveHeading}>\n            {relationship?.relation ?? t('relationshipPlaceholder', 'Relationship')}\n          </h4>\n          <Button\n            kind=\"ghost\"\n            iconDescription={t('deleteRelationshipTooltipText', 'Delete')}\n            hasIconOnly\n            onClick={deleteRelationship}>\n            <TrashCan16 className={styles.trashCan} />\n          </Button>\n        </div>\n        <div>\n          {newRelationship ? (\n            <Autosuggest\n              name={`relationships[${index}].relatedPersonUuid`}\n              labelText={t('relativeFullNameLabelText', 'Full name')}\n              placeholder={t('relativeNamePlaceholder', 'Firstname Familyname')}\n              defaultValue={relationship.relatedPersonName}\n              onSuggestionSelected={handleSuggestionSelected}\n              getSearchResults={searchPerson}\n              getDisplayValue={(item) => item.display}\n              getFieldValue={(item) => item.uuid}\n              required\n            />\n          ) : (\n            <>\n              <span className={styles.labelText}>{t('relativeFullNameLabelText', 'Full name')}</span>\n              <p className={styles.bodyShort02}>{relationship.relatedPersonName}</p>\n            </>\n          )}\n        </div>\n      </div>\n      <div className={`${styles.selectRelationshipType}`} style={{ marginBottom: '1rem' }}>\n        <Select\n          light={true}\n          id=\"select\"\n          labelText={t('relationship', 'Relationship')}\n          onChange={handleRelationshipTypeChange}\n          name={`relationships[${index}].relationshipType`}\n          defaultValue={relationship?.relationshipType ?? 'placeholder-item'}>\n          <SelectItem\n            disabled\n            hidden\n            value=\"placeholder-item\"\n            text={t('relationshipToPatient', 'Relationship to patient')}\n          />\n          {displayRelationshipTypes.map((type) => (\n            <SelectItem text={type.display} value={`${type.uuid}/${type.direction}`} key={type.display} />\n          ))}\n        </Select>\n      </div>\n    </div>\n  ) : (\n    <InlineNotification\n      kind=\"info\"\n      title={t('relationshipRemovedText', 'Relationship removed')}\n      actions={\n        <NotificationActionButton onClick={restoreRelationship}>\n          {t('restoreRelationshipActionButton', 'Undo')}\n        </NotificationActionButton>\n      }\n    />\n  );\n};\n","import React, { useMemo } from 'react';\nimport { TextInput, TextInputProps } from 'carbon-components-react';\nimport { useField } from 'formik';\nimport { useTranslation } from 'react-i18next';\n\ninterface InputProps extends TextInputProps {\n  checkWarning?(value: string): string;\n}\n\nexport const Input: React.FC<InputProps> = ({ checkWarning, ...props }) => {\n  const [field, meta] = useField(props.name);\n  const { t } = useTranslation();\n  /*\n    t('givenNameRequired')\n    t('familyNameRequired')\n    t('genderUnspecified')\n    t('genderRequired')\n    t('birthdayRequired')\n    t('birthdayNotInTheFuture')\n    t('negativeYears')\n    t('negativeMonths')\n    t('deathdayNotInTheFuture')\n    t('invalidEmail')\n    t('numberInNameDubious')\n  */\n  const value = field.value || '';\n  const invalidText = meta.error && t(meta.error);\n  const warnText = useMemo(() => {\n    if (!invalidText && typeof checkWarning === 'function') {\n      const warning = checkWarning(value);\n      return warning && t(warning);\n    }\n\n    return undefined;\n  }, [checkWarning, invalidText, value, t]);\n\n  return (\n    <div style={{ marginBottom: '1rem' }}>\n      <TextInput\n        {...props}\n        {...field}\n        invalid={!!(meta.touched && meta.error)}\n        invalidText={invalidText}\n        warn={!!warnText}\n        warnText={warnText}\n        value={value}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Select, SelectItem } from 'carbon-components-react';\nimport { useField } from 'formik';\n\ninterface SelectInputProps {\n  name: string;\n  options: Array<string>;\n  label: string;\n}\n\nexport const SelectInput: React.FC<SelectInputProps> = ({ name, options, label }) => {\n  const [field, meta] = useField(name);\n  const selectOptions = [\n    <SelectItem disabled hidden text={`Select ${label}`} key=\"\" value=\"\" />,\n    ...options.map((currentOption, index) => <SelectItem text={currentOption} value={currentOption} key={index} />),\n  ];\n\n  return (\n    <div style={{ marginBottom: '1rem' }}>\n      <Select id=\"identifier\" {...field} labelText={label} light>\n        {selectOptions}\n      </Select>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Input } from '../../input/basic-input/input/input.component';\nimport { SelectInput } from '../../input/basic-input/select/select-input.component';\nimport { PatientRegistrationContext } from '../../patient-registration-context';\nimport { useTranslation } from 'react-i18next';\nimport styles from './../section.scss';\n\nexport interface DeathInfoSectionProps {\n  id: 'death';\n}\n\nexport const DeathInfoSection: React.FC<DeathInfoSectionProps> = () => {\n  const { values } = React.useContext(PatientRegistrationContext);\n  const { t } = useTranslation();\n\n  return (\n    <section className={styles.formSection} aria-label=\"Death Info Section\">\n      <h5 className={`omrs-type-title-5 ${styles.formSectionTitle}`}>Death Info</h5>\n      <section className={styles.fieldGroup}>\n        <Input labelText={t('isDeadInputLabel', 'Is Dead')} name=\"isDead\" id=\"isDead\" light />\n        {values.isDead && (\n          <>\n            <Input labelText={t('deathDateInputLabel', 'Date of Death')} name=\"deathDate\" id=\"deathDate\" light />\n            <SelectInput\n              options={[t('unknown', 'Unknown'), t('stroke', 'Stroke')]}\n              label={t('causeOfDeathInputLabel', 'Cause of Death')}\n              name=\"deathCause\"\n            />\n          </>\n        )}\n      </section>\n    </section>\n  );\n};\n","import React from 'react';\nimport styles from '../patient-registration.scss';\nimport { Tile } from 'carbon-components-react';\nimport { useTranslation } from 'react-i18next';\n\nexport const SectionWrapper = ({ id, children, name, index }) => {\n  const { t } = useTranslation();\n  return (\n    <div id={id}>\n      <h3 className={styles.productiveHeading02} style={{ color: '#161616' }}>\n        {index + 1}. {name}\n      </h3>\n      <span className={styles.label01}>\n        {t('allFieldsRequiredText', 'All fields are required unless marked optional')}\n      </span>\n      <div style={{ margin: '1rem 0 1rem' }}>\n        <Tile>{children}</Tile>\n      </div>\n    </div>\n  );\n};\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./field.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./field.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Input } from '../../input/basic-input/input/input.component';\nimport { ResourcesContext } from '../../../offline.resources';\nimport styles from '../field.scss';\n\nfunction parseString(xmlDockAsString: string) {\n  const parser = new DOMParser();\n  return parser.parseFromString(xmlDockAsString, 'text/xml');\n}\n\nfunction getTagAsDocument(tagName: string, template: XMLDocument) {\n  const tmp = template.getElementsByTagName(tagName)[0];\n  return tmp ? parseString(tmp.outerHTML) : parseString('');\n}\n\nfunction getFieldValue(field: string, doc: XMLDocument) {\n  const fieldElement = doc.getElementsByTagName(field)[0];\n  return fieldElement ? fieldElement.getAttribute('value') : null;\n}\n\nexport const AddressField: React.FC = () => {\n  const { addressTemplate } = useContext(ResourcesContext);\n  const [addressFields, setAddressFields] = useState([]);\n  const { t } = useTranslation();\n  const addressTemplateXml = addressTemplate.results[0].value;\n\n  useEffect(() => {\n    const templateXmlDoc = parseString(addressTemplateXml);\n    const nameMappings = getTagAsDocument('nameMappings', templateXmlDoc);\n    const elementDefaults = getTagAsDocument('elementdefaults', templateXmlDoc);\n    const properties = nameMappings.getElementsByTagName('property');\n    const propertiesObj = Array.prototype.map.call(properties, (property: Element) => {\n      const name = property.getAttribute('name');\n      /*\n        t('postalCode')\n        t('address1')\n        t('stateProvince')\n        t('cityVillage')\n        t('country')\n      */\n      const labelText = t(name, property.getAttribute('value'));\n      const value = getFieldValue(name, elementDefaults);\n      return {\n        id: name,\n        name,\n        labelText,\n        value,\n      };\n    });\n    setAddressFields(propertiesObj);\n  }, [t, addressTemplateXml]);\n\n  return (\n    <div>\n      <h4 className={styles.productiveHeading02Light}>{t('addressHeader', 'Address')}</h4>\n      <div>\n        {addressFields.map((attributes) => (\n          <Input key={attributes.name} {...attributes} light />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Input } from '../../input/basic-input/input/input.component';\nimport { useTranslation } from 'react-i18next';\n\nexport const PhoneField: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      <Input id=\"phone\" name=\"phone\" labelText={t('phoneNumberInputLabelText', 'Phone number (optional)')} light />\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from '../field.scss';\nimport { Input } from '../../input/basic-input/input/input.component';\nimport { useTranslation } from 'react-i18next';\nimport { PhoneField } from '../phone/phone-field.component';\n\nexport const PhoneEmailField: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      <h4 className={styles.productiveHeading02Light}>{t('phoneEmailLabelText', 'Phone, Email, etc.')}</h4>\n      <div className={styles.grid}>\n        <PhoneField />\n        <Input id=\"email\" name=\"email\" labelText={t('emailLabelText', 'Email')} light />\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useContext } from 'react';\nimport styles from '../field.scss';\nimport { Input } from '../../input/basic-input/input/input.component';\nimport { PatientRegistrationContext } from '../../patient-registration-context';\nimport { useTranslation } from 'react-i18next';\nimport { ExtensionSlot, useConfig } from '@openmrs/esm-framework';\nimport { ContentSwitcher, Switch } from 'carbon-components-react';\nimport { useField } from 'formik';\n\nconst containsNoNumbers = /^([^0-9]*)$/;\n\nfunction checkNumber(value: string) {\n  if (!containsNoNumbers.test(value)) {\n    return 'numberInNameDubious';\n  }\n\n  return undefined;\n}\n\nexport const NameField = () => {\n  const { t } = useTranslation();\n  const { setCapturePhotoProps, currentPhoto, setFieldValue } = useContext(PatientRegistrationContext);\n  const { fieldConfigurations } = useConfig();\n  const fieldConfigs = fieldConfigurations?.name;\n  const [{ value: unidentified }] = useField('unidentifiedPatient');\n  const nameKnown = !unidentified;\n\n  const onCapturePhoto = useCallback(\n    (dataUri: string, photoDateTime: string) => {\n      if (setCapturePhotoProps) {\n        setCapturePhotoProps({\n          imageData: dataUri,\n          dateTime: photoDateTime,\n        });\n      }\n    },\n    [setCapturePhotoProps],\n  );\n\n  const toggleNameKnown = (e) => {\n    if (e.name === 'known') {\n      setFieldValue('givenName', '');\n      setFieldValue('familyName', '');\n      setFieldValue('unidentifiedPatient', false);\n    } else {\n      setFieldValue('givenName', fieldConfigs.defaultUnknownGivenName);\n      setFieldValue('familyName', fieldConfigs.defaultUnknownFamilyName);\n      setFieldValue('unidentifiedPatient', true);\n    }\n  };\n\n  return (\n    <div>\n      <h4 className={styles.productiveHeading02Light}>{t('fullNameLabelText', 'Full Name')}</h4>\n      <div className={styles.grid}>\n        <ExtensionSlot\n          className={styles.photoExtension}\n          extensionSlotName=\"capture-patient-photo-slot\"\n          state={{ onCapturePhoto, initialState: currentPhoto }}\n        />\n\n        <div className={styles.nameField}>\n          <div className={styles.dobContentSwitcherLabel}>\n            <span className={styles.label01}>{t('patientNameKnown', \"Patient's Name is Known?\")}</span>\n          </div>\n          <ContentSwitcher className={styles.contentSwitcher} onChange={toggleNameKnown}>\n            <Switch name=\"known\" text={t('yes', 'Yes')} />\n            <Switch name=\"unknown\" text={t('no', 'No')} />\n          </ContentSwitcher>\n          {nameKnown && (\n            <>\n              <Input\n                id=\"givenName\"\n                name=\"givenName\"\n                labelText={t('givenNameLabelText', 'First Name')}\n                light\n                checkWarning={checkNumber}\n              />\n              {fieldConfigs.displayMiddleName && (\n                <Input\n                  id=\"middleName\"\n                  name=\"middleName\"\n                  labelText={t('middleNameLabelText', 'Middle Name (optional)')}\n                  light\n                  checkWarning={checkNumber}\n                />\n              )}\n              <Input\n                id=\"familyName\"\n                name=\"familyName\"\n                labelText={t('familyNameLabelText', 'Family Name')}\n                light\n                checkWarning={checkNumber}\n              />\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { RadioButton, RadioButtonGroup } from 'carbon-components-react';\nimport styles from '../field.scss';\nimport { useTranslation } from 'react-i18next';\nimport { PatientRegistrationContext } from '../../patient-registration-context';\nimport { useField } from 'formik';\n\nconst GenderField: React.FC = () => {\n  const { t } = useTranslation();\n  const [field, meta] = useField('gender');\n  const { setFieldValue } = useContext(PatientRegistrationContext);\n\n  const setGender = (gender: string) => {\n    setFieldValue('gender', gender);\n  };\n\n  return (\n    <div className={styles.halfWidthInDesktopView}>\n      <h4 className={styles.productiveHeading02Light}>{t('sexFieldLabelText', 'Sex')}</h4>\n      <div className={styles.sexField}>\n        <p className=\"bx--label\">{t('genderLabelText', 'Sex')}</p>\n        <RadioButtonGroup name=\"gender\" orientation=\"vertical\" onChange={setGender} valueSelected={field.value}>\n          <RadioButton id=\"male\" labelText={t('maleLabelText', 'Male')} value=\"Male\" />\n          <RadioButton id=\"female\" labelText={t('femaleLabelText', 'Female')} value=\"Female\" />\n          <RadioButton id=\"other\" labelText={t('otherLabelText', 'Other')} value=\"Other\" />\n          <RadioButton id=\"unknown\" labelText={t('unknownLabelText', 'Unknown')} value=\"Unknown\" />\n        </RadioButtonGroup>\n        {meta.touched && meta.error && (\n          <div className={styles.radioFieldError}>{t(meta.error, 'Gender is required')}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GenderField;\n","import { FetchedPatientIdentifierType, PatientIdentifierType } from '../../../patient-registration-types';\n\nexport function shouldBlockPatientIdentifierInOfflineMode(identifierType: PatientIdentifierType) {\n  // Patient Identifiers which are unique and can be manually entered are prohibited while offline because\n  // of the chance of generating conflicts when syncing later.\n  return (\n    isUniqueIdentifierTypeForOffline(identifierType) &&\n    !identifierType.identifierSources.some(\n      (source) =>\n        !source.autoGenerationOption?.manualEntryEnabled && source.autoGenerationOption?.automaticGenerationEnabled,\n    )\n  );\n}\n\nexport function isUniqueIdentifierTypeForOffline(identifierType: FetchedPatientIdentifierType) {\n  // In offline mode we consider each uniqueness behavior which could cause conflicts during syncing as 'unique'.\n  // Syncing conflicts can appear for the following behaviors:\n  return identifierType.uniquenessBehavior === 'UNIQUE' || identifierType.uniquenessBehavior === 'LOCATION';\n}\n","import React, { useState, useEffect, useCallback, useContext, useMemo } from 'react';\nimport styles from '../../input.scss';\nimport { useTranslation } from 'react-i18next';\nimport { Input } from '../../basic-input/input/input.component';\nimport { IdentifierSourceAutoGenerationOption, PatientIdentifierValue } from '../../../patient-registration-types';\nimport { PatientRegistrationContext } from '../../../patient-registration-context';\nimport { TrashCan16, Edit16 } from '@carbon/icons-react';\nimport { Button } from 'carbon-components-react';\nimport { ResourcesContext } from '../../../../offline.resources';\nimport { showModal, useConfig } from '@openmrs/esm-framework';\nimport { shouldBlockPatientIdentifierInOfflineMode } from './utils';\nimport { useField } from 'formik';\n\ninterface IdentifierInputProps {\n  patientIdentifier: PatientIdentifierValue;\n  index: number;\n  remove: <T>(index: number) => T;\n}\n\nexport const IdentifierInput: React.FC<IdentifierInputProps> = ({ patientIdentifier, index, remove }) => {\n  const { identifierTypes } = useContext(ResourcesContext);\n  const { isOffline } = useContext(PatientRegistrationContext);\n  const identifierType = useMemo(\n    () => identifierTypes.find((identifierType) => identifierType.uuid === patientIdentifier.identifierTypeUuid),\n    [patientIdentifier, identifierTypes],\n  );\n  const fieldName = `identifiers[${index}].identifier`;\n  const [identifierField, identifierFieldMeta] = useField(fieldName);\n  const { setFieldValue } = React.useContext(PatientRegistrationContext);\n  const { source, action, identifier } = patientIdentifier;\n  const identifierName = identifierType?.name;\n  const { t } = useTranslation();\n  const [option, setAutoGenerationOption] = useState<Partial<IdentifierSourceAutoGenerationOption>>({\n    manualEntryEnabled: source ? true : undefined,\n    automaticGenerationEnabled: undefined,\n  });\n  const autoGenerated = !option.manualEntryEnabled || (option.manualEntryEnabled && option.automaticGenerationEnabled);\n  const disabled = isOffline && shouldBlockPatientIdentifierInOfflineMode(identifierType);\n  const { defaultPatientIdentifierTypes } = useConfig();\n  const defaultPatientIdentifierTypesMap = useMemo(() => {\n    const map = {};\n    defaultPatientIdentifierTypes?.forEach((typeUuid) => {\n      map[typeUuid] = true;\n    });\n    return map;\n  }, [defaultPatientIdentifierTypes]);\n  const isNewIdentifier = patientIdentifier?.action === 'ADD' || patientIdentifier?.action === undefined;\n\n  useEffect(() => {\n    if (source?.autoGenerationOption?.automaticGenerationEnabled) {\n      setFieldValue(`identifiers[${index}].autoGeneration`, true);\n      setFieldValue(`identifiers[${index}].identifier`, 'auto-generated');\n    }\n  }, [source]);\n\n  useEffect(() => {\n    if (source) {\n      if (source.autoGenerationOption) {\n        setAutoGenerationOption(source.autoGenerationOption);\n\n        if (source.autoGenerationOption.automaticGenerationEnabled) {\n          setFieldValue(`identifiers[${index}].autoGeneration`, true);\n          setFieldValue(`identifiers[${index}].identifier`, 'auto-generated');\n        }\n      } else {\n        setAutoGenerationOption({\n          manualEntryEnabled: true,\n          automaticGenerationEnabled: false,\n        });\n        setFieldValue(`identifiers[${index}].autoGeneration`, false);\n      }\n    } else {\n      setAutoGenerationOption({\n        manualEntryEnabled: true,\n        automaticGenerationEnabled: false,\n      });\n      setFieldValue(`identifiers[${index}].autoGeneration`, false);\n    }\n  }, [source]);\n\n  const handleEdit = useCallback(() => {\n    setFieldValue(`identifiers[${index}]`, {\n      ...patientIdentifier,\n      action: 'UPDATE',\n      source: identifierType?.identifierSources?.[0],\n    } as PatientIdentifierValue);\n  }, [patientIdentifier]);\n\n  const handleDelete = useCallback(() => {\n    if (action === 'ADD') {\n      remove(index);\n    } else {\n      const confirmDeleteIdentifierModal = showModal('delete-identifier-confirmation-modal', {\n        deleteIdentifier: (deleteIdentifier) => {\n          if (deleteIdentifier) {\n            setFieldValue(`identifiers[${index}].action`, 'DELETE');\n          }\n          confirmDeleteIdentifierModal();\n        },\n        identifierName,\n        identifierValue: identifier,\n      });\n    }\n  }, [action, patientIdentifier, identifierName, identifier]);\n\n  return (\n    <div className={styles.IDInput}>\n      {option.manualEntryEnabled && (action === 'ADD' || action === 'UPDATE') ? (\n        <Input\n          id={identifierName}\n          light\n          labelText={identifierName}\n          name={fieldName}\n          disabled={!option.manualEntryEnabled || disabled}\n          invalid={!!(identifierFieldMeta.touched && identifierFieldMeta.error)}\n          invalidText={identifierFieldMeta.error && t(identifierFieldMeta.error)}\n          {...identifierField}\n        />\n      ) : (\n        <div className={styles.textID}>\n          <p className={styles.label}>{identifierName}</p>\n          <p className={styles.bodyShort02}>\n            {!isNewIdentifier ? identifier : t('autoGeneratedPlaceholderText', 'Auto generated')}\n          </p>\n        </div>\n      )}\n      <div>\n        {!(\n          identifierType.isPrimary ||\n          identifierType.required ||\n          defaultPatientIdentifierTypesMap[identifierType.uuid]\n        ) &&\n          patientIdentifier.action === 'NONE' && (\n            <Button\n              kind=\"ghost\"\n              onClick={handleEdit}\n              iconDescription={t('editIdentifierTooltip', 'Edit')}\n              disabled={disabled}\n              hasIconOnly>\n              <Edit16 />\n            </Button>\n          )}\n        {!(\n          identifierType?.isPrimary ||\n          identifierType?.required ||\n          defaultPatientIdentifierTypesMap[identifierType.uuid]\n        ) && (\n          <Button\n            kind=\"danger--ghost\"\n            onClick={handleDelete}\n            iconDescription={t('deleteIdentifierTooltip', 'Delete')}\n            disabled={disabled}\n            hasIconOnly>\n            <TrashCan16 />\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./identifier-selection.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./identifier-selection.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./overlay.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/@openmrs/webpack-config/node_modules/sass-loader/dist/cjs.js!./overlay.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport { ArrowLeft16, Close16 } from '@carbon/icons-react';\nimport { Button, Header } from 'carbon-components-react';\nimport styles from './overlay.scss';\nimport { useLayoutType } from '@openmrs/esm-framework';\n\ninterface OverlayProps {\n  close: () => void;\n  header: string;\n  buttonsGroup?: React.ReactElement;\n}\n\nconst Overlay: React.FC<OverlayProps> = ({ close, children, header, buttonsGroup }) => {\n  const isDesktop = useLayoutType() === 'desktop';\n\n  return (\n    <div className={isDesktop ? styles.desktopOverlay : styles.tabletOverlay}>\n      {isDesktop ? (\n        <div className={styles.desktopHeader}>\n          <div className={styles.headerContent}>{header}</div>\n          <Button className={styles.closeButton} onClick={close} kind=\"ghost\" hasIconOnly>\n            <Close16 />\n          </Button>\n        </div>\n      ) : (\n        <Header className={styles.tabletOverlayHeader}>\n          <Button onClick={close} hasIconOnly>\n            <ArrowLeft16 onClick={close} />\n          </Button>\n          <div className={styles.headerContent}>{header}</div>\n        </Header>\n      )}\n      <div className={styles.overlayContent}>{children}</div>\n      <div className={styles.buttonsGroup}>{buttonsGroup}</div>\n    </div>\n  );\n};\n\nexport default Overlay;\n","import React, { useMemo, useCallback, useEffect, useState, useContext } from 'react';\nimport styles from './identifier-selection.scss';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Checkbox, Search, RadioButtonGroup, RadioButton } from 'carbon-components-react';\nimport { PatientIdentifierType, PatientIdentifierValue } from '../../patient-registration-types';\nimport Overlay from '../../ui-components/overlay';\nimport { ResourcesContext } from '../../../offline.resources';\nimport { PatientRegistrationContext } from '../../patient-registration-context';\nimport {\n  isUniqueIdentifierTypeForOffline,\n  shouldBlockPatientIdentifierInOfflineMode,\n} from '../../input/custom-input/identifier/utils';\nimport { useConfig } from '@openmrs/esm-framework';\n\ninterface PatientIdentifierOverlayProps {\n  setFieldValue: (string, PatientIdentifierValue) => void;\n  closeOverlay: () => void;\n  push: (obj: PatientIdentifierValue) => void;\n  remove: <T>(index: number) => T;\n  identifiers: Array<PatientIdentifierValue>;\n}\n\nconst PatientIdentifierOverlay: React.FC<PatientIdentifierOverlayProps> = ({\n  closeOverlay,\n  push,\n  setFieldValue,\n  identifiers,\n  remove,\n}) => {\n  const { identifierTypes } = useContext(ResourcesContext);\n  const { isOffline } = useContext(PatientRegistrationContext);\n  const [unsavedIdentifierTypes, setUnsavedIdentifierTypes] = useState<Array<PatientIdentifierType>>([]);\n  const [searchString, setSearchString] = useState<string>('');\n  const { t } = useTranslation();\n  const getIdentifierByTypeUuid = (identifierTypeUuid: string) =>\n    identifiers.find((identifier) => identifier.identifierTypeUuid === identifierTypeUuid);\n  const { defaultPatientIdentifierTypes } = useConfig();\n  const defaultPatientIdentifierTypesMap = useMemo(() => {\n    const map = {};\n    defaultPatientIdentifierTypes?.forEach((typeUuid) => {\n      map[typeUuid] = true;\n    });\n    return map;\n  }, [defaultPatientIdentifierTypes]);\n\n  useEffect(() => {\n    if (identifierTypes) {\n      setUnsavedIdentifierTypes(\n        identifierTypes.map((identifierType) => {\n          const identifier = getIdentifierByTypeUuid(identifierType.uuid);\n          const alreadySelectedSource = identifier?.source;\n          const defaultSelectedSource =\n            isOffline && isUniqueIdentifierTypeForOffline(identifierType)\n              ? identifierType.identifierSources?.find(\n                  (identifierSource) =>\n                    !identifierSource.autoGenerationOption?.manualEntryEnabled &&\n                    identifierSource.autoGenerationOption?.automaticGenerationEnabled,\n                )\n              : identifierType.identifierSources?.[0];\n\n          return {\n            ...identifierType,\n            checked: identifier\n              ? identifier.action !== 'DELETE'\n              : identifierType.isPrimary ||\n                identifierType.required ||\n                defaultPatientIdentifierTypesMap[identifierType.uuid],\n            source: alreadySelectedSource ?? defaultSelectedSource,\n          };\n        }),\n      );\n    }\n  }, [identifierTypes, identifiers]);\n\n  const handleSearch = useCallback((event) => setSearchString(event?.target?.value ?? ''), []);\n\n  const filteredIdentifiers = useMemo(\n    () =>\n      unsavedIdentifierTypes?.filter((identifier) =>\n        identifier?.name?.toLowerCase().includes(searchString.toLowerCase()),\n      ),\n    [unsavedIdentifierTypes, searchString],\n  );\n\n  const handleCheckingIdentifier = (uuid: string, checked: boolean) =>\n    setUnsavedIdentifierTypes((identifiers) =>\n      identifiers.map((identifier) =>\n        identifier.uuid === uuid\n          ? {\n              ...identifier,\n              checked:\n                identifier.isPrimary ||\n                identifier.required ||\n                defaultPatientIdentifierTypesMap[identifier.uuid] ||\n                checked,\n            }\n          : identifier,\n      ),\n    );\n\n  const handleSelectingIdentifierSource = (identifierTypeUuid, sourceUuid) =>\n    setUnsavedIdentifierTypes((unsavedIdentifierTypes) =>\n      unsavedIdentifierTypes?.map((identifierType) =>\n        identifierType?.uuid === identifierTypeUuid\n          ? {\n              ...identifierType,\n              source: identifierType?.identifierSources.find((source) => source?.uuid === sourceUuid),\n            }\n          : identifierType,\n      ),\n    );\n\n  const identifierTypeFields = useMemo(\n    () =>\n      filteredIdentifiers.map((identifierType) => {\n        const identifier = getIdentifierByTypeUuid(identifierType.uuid);\n        const showIdentifierSources = !(identifier?.action === 'NONE');\n        const isDisabled = identifier\n          ? identifier.action !== 'DELETE'\n          : identifierType.isPrimary ||\n            identifierType.required ||\n            defaultPatientIdentifierTypesMap[identifierType.uuid];\n        const isDisabledOffline = isOffline && shouldBlockPatientIdentifierInOfflineMode(identifierType);\n\n        return (\n          <div key={identifierType.uuid} className={styles.space05}>\n            <Checkbox\n              id={identifierType.uuid}\n              value={identifierType.uuid}\n              labelText={identifierType.name}\n              onChange={(checked) => handleCheckingIdentifier(identifierType?.uuid, checked)}\n              checked={identifierType.checked}\n              disabled={isDisabled || (isOffline && isDisabledOffline)}\n            />\n            {showIdentifierSources && identifierType.checked && identifierType?.identifierSources?.length > 0 && (\n              <div className={styles.radioGroup}>\n                <RadioButtonGroup\n                  legendText={t('source', 'Source')}\n                  name={`${identifierType?.fieldName}-identifier-sources`}\n                  defaultSelected={identifier?.source?.uuid}\n                  onChange={(sourceUuid: string) => handleSelectingIdentifierSource(identifierType?.uuid, sourceUuid)}\n                  orientation=\"vertical\">\n                  {identifierType?.identifierSources.map((source) => (\n                    <RadioButton\n                      key={source.uuid}\n                      labelText={source.name}\n                      name={source.uuid}\n                      value={source.uuid}\n                      className={styles.radioButton}\n                      disabled={\n                        isOffline &&\n                        isUniqueIdentifierTypeForOffline(identifierType) &&\n                        source.autoGenerationOption?.manualEntryEnabled\n                      }\n                    />\n                  ))}\n                </RadioButtonGroup>\n              </div>\n            )}\n          </div>\n        );\n      }),\n    [filteredIdentifiers],\n  );\n\n  const handleConfiguringIdentifiers = useCallback(() => {\n    unsavedIdentifierTypes.forEach((identifierType) => {\n      const index = identifiers.findIndex((identifier) => identifier.identifierTypeUuid === identifierType.uuid);\n      if (index >= 0) {\n        const identifier = identifiers[index];\n        if (!identifierType.checked && identifiers[index].action === 'ADD') {\n          remove(index);\n        } else {\n          let action: PatientIdentifierValue['action'];\n\n          if (identifierType.checked) {\n            if (identifier.action === 'DELETE') {\n              action = 'UPDATE';\n            } else {\n              action = identifier.action;\n            }\n          } else {\n            if (identifier.action === 'UPDATE') {\n              action = 'DELETE';\n            }\n          }\n\n          setFieldValue(`identifiers[${index}]`, {\n            ...identifiers[index],\n            action: action,\n            source: action === 'ADD' || action === 'UPDATE' ? identifierType.source : null,\n          });\n        }\n      } else if (identifierType.checked) {\n        push({\n          identifier: '',\n          action: 'ADD',\n          source: identifierType.source,\n          identifierTypeUuid: identifierType.uuid,\n          preferred: identifierType.isPrimary,\n        });\n      }\n    });\n    closeOverlay();\n  }, [unsavedIdentifierTypes, identifiers]);\n\n  return (\n    <Overlay\n      close={closeOverlay}\n      header={t('configureIdentifiers', 'Configure identifiers')}\n      buttonsGroup={\n        <div className={styles.overlayButtons}>\n          <Button kind=\"secondary\" size=\"lg\" onClick={closeOverlay}>\n            {t('cancel', 'Cancel')}\n          </Button>\n          <Button kind=\"primary\" size=\"lg\" onClick={handleConfiguringIdentifiers}>\n            {t('configureIdentifiers', 'Configure identifiers')}\n          </Button>\n        </div>\n      }>\n      <div>\n        <p className={styles.bodyLong02}>\n          {t('IDInstructions', \"Select the identifiers you'd like to add for this patient:\")}\n        </p>\n        {unsavedIdentifierTypes.length > 7 && (\n          <div className={styles.space05}>\n            <Search\n              labelText={t('searchIdentifierPlaceholder', 'Search identifier')}\n              placeholder={t('searchIdentifierPlaceholder', 'Search identifier')}\n              onChange={handleSearch}\n              value={searchString}\n            />\n          </div>\n        )}\n        <fieldset>{identifierTypeFields}</fieldset>\n      </div>\n    </Overlay>\n  );\n};\n\nexport default PatientIdentifierOverlay;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { IdentifierInput } from '../../input/custom-input/identifier/identifier-input.component';\nimport styles from '../field.scss';\nimport { useTranslation } from 'react-i18next';\nimport { PatientRegistrationContext } from '../../patient-registration-context';\nimport { Button } from 'carbon-components-react';\nimport { ArrowRight16 } from '@carbon/icons-react';\nimport { useLayoutType, useConfig } from '@openmrs/esm-framework';\nimport { PatientIdentifierValue } from '../../patient-registration-types';\nimport IdentifierSelectionOverlay from './identifier-selection-overlay';\nimport { FieldArray } from 'formik';\nimport { ResourcesContext } from '../../../offline.resources';\n\nexport const IdField: React.FC = () => {\n  const { identifierTypes } = useContext(ResourcesContext);\n  const { setFieldValue, inEditMode } = useContext(PatientRegistrationContext);\n  const { t } = useTranslation();\n  const desktop = useLayoutType() === 'desktop';\n  const [showIdentifierOverlay, setShowIdentifierOverlay] = useState(false);\n  const config = useConfig();\n  const { defaultPatientIdentifierTypes } = config;\n\n  useEffect(() => {\n    if (!inEditMode && identifierTypes) {\n      const defaultPatientIdentifierTypesMap = {};\n      if (defaultPatientIdentifierTypes?.length) {\n        defaultPatientIdentifierTypes.forEach((typeUuid) => {\n          defaultPatientIdentifierTypesMap[typeUuid] = true;\n        });\n      }\n      setFieldValue(\n        'identifiers',\n        identifierTypes\n          .filter((identifierType) => identifierType.required || defaultPatientIdentifierTypesMap[identifierType.uuid])\n          .map(\n            (identifierType) =>\n              ({\n                action: 'ADD',\n                identifier: '',\n                identifierTypeUuid: identifierType.uuid,\n                source: identifierType.identifierSources?.[0],\n                preferred: identifierType.isPrimary,\n              } as PatientIdentifierValue),\n          ),\n      );\n    }\n  }, [identifierTypes, inEditMode, defaultPatientIdentifierTypes, setFieldValue]);\n\n  return (\n    <div className={styles.halfWidthInDesktopView}>\n      <div className={styles.identifierLabelText}>\n        <h4 className={styles.productiveHeading02Light}>{t('idFieldLabelText', 'Identifiers')}</h4>\n        <Button\n          kind=\"ghost\"\n          className={styles.setIDNumberButton}\n          onClick={() => setShowIdentifierOverlay(true)}\n          size={desktop ? 'sm' : 'md'}>\n          {t('configure', 'Configure')} <ArrowRight16 />\n        </Button>\n      </div>\n      <div>\n        <FieldArray name=\"identifiers\">\n          {({\n            push,\n            remove,\n            form: {\n              values: { identifiers },\n            },\n          }) => (\n            <>\n              {identifiers\n                .filter((identifier) => identifier.action !== 'DELETE')\n                .map((identifier: PatientIdentifierValue, index) => (\n                  <IdentifierInput key={index} index={index} patientIdentifier={identifier} remove={remove} />\n                ))}\n              {showIdentifierOverlay && (\n                <IdentifierSelectionOverlay\n                  setFieldValue={setFieldValue}\n                  closeOverlay={() => setShowIdentifierOverlay(false)}\n                  push={push}\n                  identifiers={identifiers}\n                  remove={remove}\n                />\n              )}\n            </>\n          )}\n        </FieldArray>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './../section.scss';\nimport { getField } from '../section-helper';\nexport interface AdditionalInformationSectionProps {\n  id: 'additionalInformation';\n  fields: Array<any>;\n}\n\nexport const AdditionalInformationSection: React.FC<AdditionalInformationSectionProps> = ({ fields }) => {\n  return (\n    <section className={styles.formSection} aria-label=\"Additional Information Section\">\n      {fields.map((field) => (\n        <div key={field}>{getField(field)}</div>\n      ))}\n    </section>\n  );\n};\n","import React, { useContext } from 'react';\nimport { ContentSwitcher, DatePicker, DatePickerInput, Switch, TextInput } from 'carbon-components-react';\nimport { useTranslation } from 'react-i18next';\nimport { useField } from 'formik';\nimport { PatientRegistrationContext } from '../../patient-registration-context';\nimport { generateFormatting } from '../../date-util';\nimport styles from '../field.scss';\n\nexport const DobField: React.FC = () => {\n  const { t } = useTranslation();\n  const [dobUnknown] = useField('birthdateEstimated');\n  const dobKnown = !dobUnknown.value;\n  const [birthdate, birthdateMeta] = useField('birthdate');\n  const [ageEstimate, ageEstimateMeta] = useField('ageEstimate');\n  const { setFieldValue } = useContext(PatientRegistrationContext);\n  const { format, placeHolder, dateFormat } = generateFormatting(['d', 'm', 'Y'], '/');\n  const today = new Date();\n\n  const onToggle = (e) => {\n    setFieldValue('birthdateEstimated', e.name === 'unknown');\n    setFieldValue('birthdate', '');\n    setFieldValue('ageEstimate', '');\n  };\n\n  const onDateChange = ([birthdate]) => {\n    setFieldValue('birthdate', birthdate);\n  };\n\n  const onEstimatedAgeChange = (ev) => {\n    const years = +ev.target.value;\n\n    if (!isNaN(years) && years < 140 && years >= 0) {\n      setFieldValue('birthdate', new Date(today.getFullYear() - years, 0, 1));\n      setFieldValue('ageEstimate', years);\n    }\n  };\n\n  return (\n    <div className={styles.halfWidthInDesktopView}>\n      <h4 className={styles.productiveHeading02Light}>{t('birthFieldLabelText', 'Birth')}</h4>\n      <div className={styles.dobField}>\n        <div className={styles.dobContentSwitcherLabel}>\n          <span className={styles.label01}>{t('dobToggleLabelText', 'Date of Birth Known?')}</span>\n        </div>\n        <ContentSwitcher onChange={onToggle}>\n          <Switch name=\"known\" text={t('yes', 'Yes')} />\n          <Switch name=\"unknown\" text={t('no', 'No')} />\n        </ContentSwitcher>\n      </div>\n      {dobKnown ? (\n        <div className={styles.dobField}>\n          <DatePicker\n            dateFormat={dateFormat}\n            datePickerType=\"single\"\n            light\n            onChange={onDateChange}\n            maxDate={format(today)}>\n            <DatePickerInput\n              id=\"birthdate\"\n              {...birthdate}\n              placeholder={placeHolder}\n              labelText={t('dateOfBirthLabelText', 'Date of Birth')}\n              invalid={!!(birthdateMeta.touched && birthdateMeta.error)}\n              invalidText={birthdateMeta.error && t(birthdateMeta.error)}\n              value={format(birthdate.value)}\n            />\n          </DatePicker>\n        </div>\n      ) : (\n        <div className={styles.dobField}>\n          <TextInput\n            id=\"ageEstimate\"\n            type=\"number\"\n            light\n            onChange={onEstimatedAgeChange}\n            labelText={t('estimatedYearsLabelText', 'Estimated Years')}\n            invalid={!!(ageEstimateMeta.touched && ageEstimateMeta.error)}\n            invalidText={ageEstimateMeta.error && t(ageEstimateMeta.error)}\n            value={ageEstimate.value}\n            min={0}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","export const generateFormatting = (order: Array<string>, separator: string) => {\n  const parse = (value: string) => {\n    const parts = value.split(separator);\n    const date = new Date(null);\n\n    order.forEach((key, index) => {\n      switch (key) {\n        case 'd':\n          date.setDate(parseInt(parts[index]));\n          break;\n        case 'm':\n          date.setMonth(parseInt(parts[index]) - 1);\n          break;\n        case 'Y':\n          date.setFullYear(parseInt(parts[index]));\n          break;\n      }\n    });\n    return date;\n  };\n\n  const format = (date: Date) => {\n    if (date === null) {\n      return '';\n    } else if (!(date instanceof Date)) {\n      return date;\n    } else {\n      const parts = [];\n\n      order.forEach((key, index) => {\n        switch (key) {\n          case 'd':\n            parts[index] = date.getDate();\n            break;\n          case 'm':\n            parts[index] = date.getMonth() + 1;\n            break;\n          case 'Y':\n            parts[index] = date.getFullYear();\n            break;\n        }\n      });\n\n      return parts.join(separator);\n    }\n  };\n\n  const placeHolder = order.map((x) => (x === 'Y' ? 'YYYY' : x + x)).join(separator);\n  const dateFormat = order.join(separator);\n\n  return { parse, format, placeHolder, dateFormat };\n};\n","import { FetchResponse, openmrsFetch, showToast } from '@openmrs/esm-framework';\nimport useSWRImmutable from 'swr/immutable';\nimport { ConceptAnswers, ConceptResponse, PersonAttributeTypeResponse } from '../../patient-registration-types';\n\nexport function usePersonAttributeType(personAttributeTypeUuid: string): {\n  data: PersonAttributeTypeResponse;\n  isLoading: boolean;\n} {\n  const { data, error } = useSWRImmutable<FetchResponse<PersonAttributeTypeResponse>>(\n    `/ws/rest/v1/personattributetype/${personAttributeTypeUuid}`,\n    openmrsFetch,\n  );\n  if (error) {\n    showToast({\n      title: error.name,\n      description: error.message,\n      kind: 'error',\n    });\n  }\n  return {\n    data: data?.data,\n    isLoading: !data && !error,\n  };\n}\n\nexport function useConceptAnswers(conceptUuid: string): { data: Array<ConceptAnswers>; isLoading: boolean } {\n  const shouldFetch = typeof conceptUuid === 'string' && conceptUuid !== '';\n  const { data, error } = useSWRImmutable<FetchResponse<ConceptResponse>, Error>(\n    shouldFetch ? `/ws/rest/v1/concept/${conceptUuid}` : null,\n    openmrsFetch,\n  );\n  if (error) {\n    showToast({\n      title: error.name,\n      description: error.message,\n      kind: 'error',\n    });\n  }\n  return { data: data?.data?.answers, isLoading: !data && !error };\n}\n","import React from 'react';\nimport styles from './../field.scss';\nimport { Input } from '../../input/basic-input/input/input.component';\nimport { useConfig } from '@openmrs/esm-framework';\nimport { CodedPersonAttributeConfig } from '../../patient-registration-types';\nimport { Select, SelectItem } from 'carbon-components-react';\nimport { useConceptAnswers, usePersonAttributeType } from './person-attributes.resource';\n\nexport interface CodedAttributesFieldProps {}\n\nexport const CodedAttributesField: React.FC<CodedAttributesFieldProps> = () => {\n  const { codedPersonAttributes } = useConfig();\n\n  return codedPersonAttributes?.length ? (\n    <div>\n      {codedPersonAttributes.map((personAttributeType: CodedPersonAttributeConfig, ind) => (\n        <PersonAttributeField\n          key={ind}\n          personAttributeTypeUuid={personAttributeType.personAttributeUuid}\n          conceptUuid={personAttributeType.conceptUuid}\n        />\n      ))}\n    </div>\n  ) : null;\n};\n\ninterface PersonAttributeFieldProps {\n  personAttributeTypeUuid: string;\n  conceptUuid: string;\n}\n\nconst PersonAttributeField: React.FC<PersonAttributeFieldProps> = ({ personAttributeTypeUuid, conceptUuid }) => {\n  const { data: personAttributeType, isLoading } = usePersonAttributeType(personAttributeTypeUuid);\n  const { data: conceptAnswers, isLoading: isLoadingConceptAnswers } = useConceptAnswers(conceptUuid);\n\n  return !isLoading ? (\n    <div className={`${styles.attributeField} ${styles.halfWidthInDesktopView}`}>\n      {!isLoadingConceptAnswers && conceptAnswers?.length ? (\n        <Select\n          id={`person-attribute-${personAttributeTypeUuid}`}\n          name={`attributes.${personAttributeTypeUuid}`}\n          labelText={personAttributeType?.display}\n          light>\n          {conceptAnswers.map((answer) => (\n            <SelectItem key={answer.uuid} value={answer.uuid} text={answer.display} />\n          ))}\n        </Select>\n      ) : (\n        <Input\n          id={`person-attribute-${personAttributeTypeUuid}`}\n          labelText={personAttributeType?.display}\n          name={`attributes.${personAttributeTypeUuid}`}\n          light\n        />\n      )}\n    </div>\n  ) : null;\n};\n","import React from 'react';\nimport styles from './../field.scss';\nimport { Input } from '../../input/basic-input/input/input.component';\nimport { useConfig } from '@openmrs/esm-framework';\nimport { TextBasedPersonAttributeConfig } from '../../patient-registration-types';\nimport { usePersonAttributeType } from './person-attributes.resource';\nimport { Field } from 'formik';\nimport { useTranslation } from 'react-i18next';\n\nexport interface TextBasedAttributesFieldProps {}\n\nexport const TextBasedAttributesField: React.FC<TextBasedAttributesFieldProps> = () => {\n  const { textBasedAttributes } = useConfig();\n\n  return textBasedAttributes?.length ? (\n    <div>\n      {textBasedAttributes.map((personAttributeType: TextBasedPersonAttributeConfig, ind) => (\n        <PersonAttributeField\n          key={ind}\n          personAttributeTypeUuid={personAttributeType.personAttributeUuid}\n          validationRegex={personAttributeType.validationRegex}\n        />\n      ))}\n    </div>\n  ) : null;\n};\n\ninterface PersonAttributeFieldProps {\n  personAttributeTypeUuid: string;\n  validationRegex: string;\n}\n\nconst PersonAttributeField: React.FC<PersonAttributeFieldProps> = ({ personAttributeTypeUuid, validationRegex }) => {\n  const { data: personAttributeType, isLoading } = usePersonAttributeType(personAttributeTypeUuid);\n  const { t } = useTranslation();\n\n  const validateInput = (value) => {\n    let error;\n    if (!value || !validationRegex || validationRegex === '' || typeof validationRegex !== 'string' || value === '') {\n      return error;\n    }\n    const regex = new RegExp(validationRegex);\n    if (regex.test(value)) {\n      return error;\n    } else {\n      error = t('invalidInput', 'Invalid Input');\n    }\n\n    return error;\n  };\n\n  return !isLoading ? (\n    <div className={`${styles.attributeField} ${styles.halfWidthInDesktopView}`}>\n      <Field name={`attributes.${personAttributeTypeUuid}`} validate={validateInput}>\n        {({ field, form: { touched, errors }, meta }) => {\n          return (\n            <Input\n              id={`person-attribute-${personAttributeTypeUuid}`}\n              labelText={personAttributeType?.display}\n              light\n              invalid={\n                errors[`attributes.${personAttributeTypeUuid}`] && touched[`attributes.${personAttributeTypeUuid}`]\n              }\n              {...field}\n            />\n          );\n        }}\n      </Field>\n    </div>\n  ) : null;\n};\n","import React from 'react';\nimport { DemographicsSection, DemographicsSectionProps } from './demographics/demographics-section.component';\nimport { ContactInfoSection, ContactInfoSectionProps } from './contact-info/contact-info-section.component';\nimport {\n  RelationshipsSection,\n  RelationshipsSectionProps,\n} from './patient-relationships/relationships-section.component';\nimport { DeathInfoSection, DeathInfoSectionProps } from './death-info/death-info-section.component';\nimport { SectionWrapper } from './section-wrapper.component';\nimport { AddressField } from '../field/address/address-field.component';\nimport { PhoneEmailField } from '../field/email/email-field.component';\nimport { NameField } from '../field/name/name-field.component';\nimport GenderField from '../field/gender/gender-field.component';\nimport { IdField } from '../field/id/id-field.component';\nimport {\n  AdditionalInformationSection,\n  AdditionalInformationSectionProps,\n} from './additional-information/additional-information.component';\nimport { DobField } from '../field/dob/dob.component';\nimport { CodedAttributesField } from '../field/person-attributes/coded-attributes.component';\nimport { TextBasedAttributesField } from '../field/person-attributes/text-based-attributes-field.component';\n\nexport function getField(fieldName: string) {\n  switch (fieldName) {\n    case 'address':\n      return <AddressField />;\n    case 'phone & email':\n      return <PhoneEmailField />;\n    case 'name':\n      return <NameField />;\n    case 'gender':\n      return <GenderField />;\n    case 'dob':\n      return <DobField />;\n    case 'id':\n      return <IdField />;\n    case 'codedAttributes':\n      return <CodedAttributesField />;\n    case 'textBasedAttributes':\n      return <TextBasedAttributesField />;\n    default:\n      return <div>Unknown Field {fieldName} </div>;\n  }\n}\n\nfunction renderSection(sectionProps: SectionProps) {\n  switch (sectionProps.id) {\n    case 'demographics':\n      return <DemographicsSection {...sectionProps} />;\n    case 'contact':\n      return <ContactInfoSection {...sectionProps} />;\n    case 'death':\n      return <DeathInfoSection {...sectionProps} />;\n    case 'relationships':\n      return <RelationshipsSection {...sectionProps} />;\n    case 'additionalInformation':\n      return <AdditionalInformationSection {...sectionProps} />;\n    default:\n      return <div>Unknown Section {sectionProps.id}</div>;\n  }\n}\n\nexport interface DefaultSectionProps {\n  id: 'default';\n}\n\nexport type SectionProps =\n  | DemographicsSectionProps\n  | ContactInfoSectionProps\n  | DeathInfoSectionProps\n  | RelationshipsSectionProps\n  | AdditionalInformationSectionProps\n  | DefaultSectionProps;\n\nexport function getSection(sectionProps: SectionProps & { name: string }, index: number) {\n  return (\n    <SectionWrapper {...sectionProps} index={index}>\n      {renderSection(sectionProps)}\n    </SectionWrapper>\n  );\n}\n","import { navigate, openmrsFetch } from '@openmrs/esm-framework';\nimport * as Yup from 'yup';\nimport {\n  AddressValidationSchemaType,\n  FormValues,\n  PatientIdentifier,\n  PatientUuidMapType,\n  PatientIdentifierValue,\n} from './patient-registration-types';\nimport camelCase from 'lodash-es/camelCase';\nimport capitalize from 'lodash-es/capitalize';\n\nexport function parseAddressTemplateXml(addressTemplate: string) {\n  const templateXmlDoc = new DOMParser().parseFromString(addressTemplate, 'text/xml');\n  const nameMappings = templateXmlDoc.querySelector('nameMappings').querySelectorAll('property');\n  const validationSchemaObjs: AddressValidationSchemaType[] = Array.prototype.map.call(\n    nameMappings,\n    (nameMapping: Element) => {\n      const name = nameMapping.getAttribute('name');\n      const label = nameMapping.getAttribute('value');\n      const regex = findElementValueInXmlDoc(name, 'elementRegex', templateXmlDoc) || '.*';\n      const regexFormat = findElementValueInXmlDoc(name, 'elementRegexFormats', templateXmlDoc) || '';\n\n      return {\n        name,\n        label,\n        regex,\n        regexFormat,\n      };\n    },\n  );\n\n  const addressValidationSchema = Yup.object(\n    validationSchemaObjs.reduce((final, current) => {\n      final[current.name] = Yup.string().matches(current.regex, current.regexFormat);\n      return final;\n    }, {}),\n  );\n\n  const addressFieldValues: Array<{ name: string; defaultValue: string }> = Array.prototype.map.call(\n    nameMappings,\n    (nameMapping: Element) => {\n      const name = nameMapping.getAttribute('name');\n      const defaultValue = findElementValueInXmlDoc(name, 'elementDefaults', templateXmlDoc) ?? '';\n      return { name, defaultValue };\n    },\n  );\n\n  return {\n    addressFieldValues,\n    addressValidationSchema,\n  };\n}\n\nfunction findElementValueInXmlDoc(fieldName: string, elementSelector: string, doc: XMLDocument) {\n  return doc.querySelector(elementSelector)?.querySelector(`[name=${fieldName}]`)?.getAttribute('value') ?? null;\n}\n\nexport function scrollIntoView(viewId: string) {\n  document.getElementById(viewId).scrollIntoView({\n    behavior: 'smooth',\n    block: 'center',\n    inline: 'center',\n  });\n}\n\nexport function cancelRegistration() {\n  navigate({ to: `${window.spaBase}/home` });\n}\n\nexport function getFormValuesFromFhirPatient(patient: fhir.Patient) {\n  const result = {} as FormValues;\n  const patientName = patient.name[0];\n  const additionalPatientName = patient.name[1];\n\n  result.patientUuid = patient.id;\n  result.givenName = patientName?.given[0];\n  result.middleName = patientName?.given[1];\n  result.familyName = patientName?.family;\n  result.unidentifiedPatient =\n    patientName.given[0] === 'UNKNOWN' && patientName.family === 'unknown' ? true : undefined;\n\n  result.addNameInLocalLanguage = !!additionalPatientName ? true : undefined;\n  result.additionalGivenName = additionalPatientName?.given[0];\n  result.additionalMiddleName = additionalPatientName?.given[1];\n  result.additionalFamilyName = additionalPatientName?.family;\n\n  result.gender = capitalize(patient.gender);\n  result.birthdate = patient.birthDate ? (new Date(patient.birthDate) as any) : undefined;\n  result.telephoneNumber = patient.telecom ? patient.telecom[0].value : '';\n\n  if (patient.deceasedBoolean || patient.deceasedDateTime) {\n    result.isDead = true;\n    result.deathDate = patient.deceasedDateTime ? patient.deceasedDateTime.split('T')[0] : '';\n  }\n\n  return {\n    ...result,\n    ...patient.identifier.map((identifier) => {\n      const key = camelCase(identifier.system || identifier.type.text);\n      return { [key]: identifier.value };\n    }),\n  };\n}\n\nexport function getAddressFieldValuesFromFhirPatient(patient: fhir.Patient) {\n  const result = {};\n  const address = patient.address?.[0];\n\n  if (address) {\n    for (const key of Object.keys(address)) {\n      switch (key) {\n        case 'city':\n          result['cityVillage'] = address[key];\n          break;\n        case 'state':\n          result['stateProvince'] = address[key];\n          break;\n        case 'district':\n          result['countyDistrict'] = address[key];\n          break;\n        case 'extension':\n          address[key].forEach((ext) => {\n            ext.extension.forEach((extension) => {\n              result[extension.url.split('#')[1]] = extension.valueString;\n            });\n          });\n          break;\n        default:\n          if (key === 'country' || key === 'postalCode') {\n            result[key] = address[key];\n          }\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function getPatientUuidMapFromFhirPatient(patient: fhir.Patient): PatientUuidMapType {\n  const patientName = patient.name[0];\n  const additionalPatientName = patient.name[1];\n  const address = patient.address?.[0];\n\n  return {\n    preferredNameUuid: patientName?.id,\n    additionalNameUuid: additionalPatientName?.id,\n    preferredAddressUuid: address?.id,\n    ...patient.identifier.map((identifier) => {\n      const key = camelCase(identifier.system || identifier.type.text);\n      return { [key]: { uuid: identifier.id, value: identifier.value } };\n    }),\n  };\n}\n\nexport function getPatientIdentifiersFromFhirPatient(patient: fhir.Patient): Array<PatientIdentifier> {\n  return patient.identifier.map((identifier) => {\n    return {\n      uuid: identifier.id,\n      identifier: identifier.value,\n    };\n  });\n}\n\nexport function getPhonePersonAttributeValueFromFhirPatient(patient: fhir.Patient) {\n  const result = {};\n  if (patient.telecom) {\n    result['phone'] = patient.telecom[0].value;\n  }\n  return result;\n}\n","import { FetchResponse, getSynchronizationItems, openmrsFetch, usePatient } from '@openmrs/esm-framework';\nimport { Dispatch, useEffect, useMemo, useState } from 'react';\nimport useSWRImmutable from 'swr/immutable';\nimport { v4 } from 'uuid';\nimport { patientRegistration } from '../constants';\nimport {\n  FormValues,\n  PatientRegistration,\n  PatientUuidMapType,\n  PersonAttributeResponse,\n  PatientIdentifierValue,\n  PatientIdentifierResponse,\n} from './patient-registration-types';\nimport {\n  getAddressFieldValuesFromFhirPatient,\n  getFormValuesFromFhirPatient,\n  getPatientUuidMapFromFhirPatient,\n  getPhonePersonAttributeValueFromFhirPatient,\n} from './patient-registration-utils';\nimport { useInitialPatientRelationships } from './section/patient-relationships/relationships.resource';\n\nexport function useInitialFormValues(patientUuid: string): [FormValues, Dispatch<FormValues>] {\n  const { isLoading: isLoadingPatientToEdit, patient: patientToEdit } = usePatient(patientUuid);\n  const { data: attributes, isLoading: isLoadingAttributes } = useInitialPersonAttributes(patientUuid);\n  const { data: identifiers, isLoading: isLoadingIdentifiers } = useInitialPatientIdentifiers(patientUuid);\n  const { data: relationships, isLoading: isLoadingRelationships } = useInitialPatientRelationships(patientUuid);\n  const [initialFormValues, setInitialFormValues] = useState<FormValues>({\n    patientUuid: v4(),\n    givenName: '',\n    middleName: '',\n    familyName: '',\n    unidentifiedPatient: false,\n    additionalGivenName: '',\n    additionalMiddleName: '',\n    additionalFamilyName: '',\n    addNameInLocalLanguage: false,\n    gender: '',\n    birthdate: null,\n    ageEstimate: null,\n    yearsEstimated: 0,\n    monthsEstimated: 0,\n    birthdateEstimated: false,\n    telephoneNumber: '',\n    address1: '',\n    address2: '',\n    cityVillage: '',\n    stateProvince: '',\n    country: '',\n    postalCode: '',\n    isDead: false,\n    deathDate: '',\n    deathCause: '',\n    relationships: [],\n    identifiers: [],\n  });\n\n  useEffect(() => {\n    (async () => {\n      if (patientToEdit) {\n        setInitialFormValues({\n          ...initialFormValues,\n          ...getFormValuesFromFhirPatient(patientToEdit),\n          ...getAddressFieldValuesFromFhirPatient(patientToEdit),\n          ...getPhonePersonAttributeValueFromFhirPatient(patientToEdit),\n        });\n      } else if (!isLoadingPatientToEdit && patientUuid) {\n        const registration = await getPatientRegistration(patientUuid);\n\n        if (!registration._patientRegistrationData.formValues) {\n          console.error(\n            `Found a queued offline patient registration for patient ${patientUuid}, but without form values. Not using these values.`,\n          );\n          return;\n        }\n\n        setInitialFormValues(registration._patientRegistrationData.formValues);\n      }\n    })();\n  }, [isLoadingPatientToEdit, patientToEdit, patientUuid]);\n\n  // Set initial patient relationships\n  useEffect(() => {\n    if (!isLoadingRelationships && relationships) {\n      setInitialFormValues((initialFormValues) => ({\n        ...initialFormValues,\n        relationships,\n      }));\n    }\n  }, [isLoadingRelationships, relationships, setInitialFormValues]);\n\n  // Set Initial patient identifiers\n  useEffect(() => {\n    if (!isLoadingIdentifiers && identifiers) {\n      setInitialFormValues((initialFormValues) => ({\n        ...initialFormValues,\n        identifiers,\n      }));\n    }\n  }, [isLoadingIdentifiers, identifiers, setInitialFormValues]);\n\n  // Set Initial person attributes\n  useEffect(() => {\n    if (!isLoadingAttributes && attributes) {\n      let personAttributes = {};\n      attributes.forEach((attribute) => {\n        personAttributes[attribute.attributeType.uuid] = attribute.value;\n      });\n      setInitialFormValues((initialFormValues) => ({\n        ...initialFormValues,\n        attributes: personAttributes,\n      }));\n    }\n  }, [attributes, setInitialFormValues, isLoadingAttributes]);\n\n  return [initialFormValues, setInitialFormValues];\n}\n\nexport function useInitialAddressFieldValues(patientUuid: string, fallback = {}): [object, Dispatch<object>] {\n  const { isLoading, patient } = usePatient(patientUuid);\n  const [initialAddressFieldValues, setInitialAddressFieldValues] = useState<object>(fallback);\n\n  useEffect(() => {\n    (async () => {\n      if (patient) {\n        setInitialAddressFieldValues({\n          ...initialAddressFieldValues,\n          ...getAddressFieldValuesFromFhirPatient(patient),\n        });\n      } else if (!isLoading && patientUuid) {\n        const registration = await getPatientRegistration(patientUuid);\n        setInitialAddressFieldValues(registration?._patientRegistrationData.initialAddressFieldValues ?? fallback);\n      }\n    })();\n  }, [isLoading, patient, patientUuid]);\n\n  return [initialAddressFieldValues, setInitialAddressFieldValues];\n}\n\nexport function usePatientUuidMap(\n  patientUuid: string,\n  fallback: PatientUuidMapType = {},\n): [PatientUuidMapType, Dispatch<PatientUuidMapType>] {\n  const { isLoading: isLoadingPatientToEdit, patient: patientToEdit } = usePatient(patientUuid);\n  const [patientUuidMap, setPatientUuidMap] = useState(fallback);\n\n  useEffect(() => {\n    if (patientToEdit) {\n      setPatientUuidMap({ ...patientUuidMap, ...getPatientUuidMapFromFhirPatient(patientToEdit) });\n    } else if (!isLoadingPatientToEdit && patientUuid) {\n      getPatientRegistration(patientUuid).then((registration) =>\n        setPatientUuidMap(registration?._patientRegistrationData.initialAddressFieldValues ?? fallback),\n      );\n    }\n  }, [isLoadingPatientToEdit, patientToEdit, patientUuid]);\n\n  return [patientUuidMap, setPatientUuidMap];\n}\n\nasync function getPatientRegistration(patientUuid: string) {\n  const items = await getSynchronizationItems<PatientRegistration>(patientRegistration);\n  return items.find((item) => item._patientRegistrationData.formValues.patientUuid === patientUuid);\n}\n\nexport function useInitialPatientIdentifiers(patientUuid: string): {\n  data: Array<PatientIdentifierValue>;\n  isLoading: boolean;\n} {\n  const shouldFetch = !!patientUuid;\n\n  const { data, error } = useSWRImmutable<FetchResponse<{ results: Array<PatientIdentifierResponse> }>, Error>(\n    shouldFetch ? `/ws/rest/v1/patient/${patientUuid}/identifier?v=full` : null,\n    openmrsFetch,\n  );\n\n  const result: {\n    data: Array<PatientIdentifierValue>;\n    isLoading: boolean;\n  } = useMemo(\n    () => ({\n      data: data?.data?.results?.map((patientIdentifier) => ({\n        uuid: patientIdentifier.uuid,\n        identifier: patientIdentifier.identifier,\n        identifierTypeUuid: patientIdentifier.identifierType.uuid,\n        action: 'NONE',\n        source: null,\n        preferred: patientIdentifier.identifierType.isPrimary,\n      })),\n      isLoading: !data && !error,\n    }),\n    [data, error],\n  );\n\n  return result;\n}\n\nfunction useInitialPersonAttributes(personUuid: string) {\n  const shouldFetch = !!personUuid;\n  const { data, error } = useSWRImmutable<FetchResponse<{ results: Array<PersonAttributeResponse> }>, Error>(\n    shouldFetch ? `/ws/rest/v1/person/${personUuid}/attribute` : null,\n    openmrsFetch,\n  );\n  const result = useMemo(() => {\n    return {\n      data: data?.data?.results,\n      isLoading: !data && !error,\n    };\n  }, [data, error]);\n  return result;\n}\n","import React, { useState, useEffect, useContext, useMemo } from 'react';\nimport XAxis16 from '@carbon/icons-react/es/x-axis/16';\nimport { Button, Link } from 'carbon-components-react';\nimport BeforeSavePrompt from './before-save-prompt';\nimport styles from './patient-registration.scss';\nimport { useLocation } from 'react-router-dom';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport {\n  createErrorHandler,\n  showToast,\n  useConfig,\n  interpolateString,\n  interpolateUrl,\n  usePatient,\n} from '@openmrs/esm-framework';\nimport { useTranslation } from 'react-i18next';\nimport { validationSchema as initialSchema } from './validation/patient-registration-validation';\nimport { FormValues, CapturePhotoProps } from './patient-registration-types';\nimport { PatientRegistrationContext } from './patient-registration-context';\nimport { SavePatientForm } from './form-manager';\nimport { usePatientPhoto } from './patient-registration.resource';\nimport { DummyDataInput } from './input/dummy-data/dummy-data-input.component';\nimport { getSection } from './section/section-helper';\nimport { cancelRegistration, parseAddressTemplateXml, scrollIntoView } from './patient-registration-utils';\nimport { useInitialAddressFieldValues, useInitialFormValues, usePatientUuidMap } from './patient-registration-hooks';\nimport { ResourcesContext } from '../offline.resources';\n\nlet exportedInitialFormValuesForTesting = {} as FormValues;\n\nexport interface PatientRegistrationProps {\n  savePatientForm: SavePatientForm;\n  match: any;\n  isOffline: boolean;\n}\n\nexport const PatientRegistration: React.FC<PatientRegistrationProps> = ({ savePatientForm, match, isOffline }) => {\n  const { currentSession, addressTemplate, identifierTypes } = useContext(ResourcesContext);\n  const { search } = useLocation();\n  const config = useConfig();\n  const [sections, setSections] = useState([]);\n  const [target, setTarget] = useState<undefined | string>();\n  const [validationSchema, setValidationSchema] = useState(initialSchema);\n  const { patientUuid: uuidOfPatientToEdit } = match.params;\n  const { isLoading: isLoadingPatientToEdit, patient: patientToEdit } = usePatient(uuidOfPatientToEdit);\n  const { t } = useTranslation();\n  const [capturePhotoProps, setCapturePhotoProps] = useState<CapturePhotoProps | null>(null);\n  const [fieldConfigs, setFieldConfigs] = useState({});\n  const [initialFormValues, setInitialFormValues] = useInitialFormValues(uuidOfPatientToEdit);\n  const [initialAddressFieldValues] = useInitialAddressFieldValues(uuidOfPatientToEdit);\n  const [patientUuidMap] = usePatientUuidMap(uuidOfPatientToEdit);\n  const location = currentSession.sessionLocation?.uuid;\n  const inEditMode = isLoadingPatientToEdit ? undefined : !!(uuidOfPatientToEdit && patientToEdit);\n  const showDummyData = useMemo(() => localStorage.getItem('openmrs:devtools') === 'true' && !inEditMode, [inEditMode]);\n  const { data: photo } = usePatientPhoto(patientToEdit?.id);\n\n  useEffect(() => {\n    exportedInitialFormValuesForTesting = initialFormValues;\n  }, [initialFormValues]);\n\n  useEffect(() => {\n    if (config?.sections) {\n      const configuredSections = config.sections.map((section) => ({\n        id: section,\n        name: config.sectionDefinitions[section].name,\n        fields: config.sectionDefinitions[section].fields,\n      }));\n\n      setSections(configuredSections);\n      setFieldConfigs(config.fieldConfigurations);\n    }\n  }, [config.sections, config.fieldConfigurations, config.sectionDefinitions]);\n\n  useEffect(() => {\n    const addressTemplateXml = addressTemplate.results[0].value;\n\n    if (!addressTemplateXml) {\n      return;\n    }\n\n    const { addressFieldValues, addressValidationSchema } = parseAddressTemplateXml(addressTemplateXml);\n    setValidationSchema((validationSchema) => validationSchema.concat(addressValidationSchema));\n\n    // `=== false` is here on purpose (`inEditMode` is a triple state value).\n    // We *only* want to set initial address field values when *creating* a patient.\n    // We must wait until after loading for this info.\n    if (inEditMode === false) {\n      for (const { name, defaultValue } of addressFieldValues) {\n        if (!initialAddressFieldValues[name]) {\n          initialAddressFieldValues[name] = defaultValue;\n        }\n      }\n\n      setInitialFormValues({ ...initialFormValues, ...initialAddressFieldValues });\n    }\n  }, [inEditMode, addressTemplate, initialAddressFieldValues]);\n\n  const onFormSubmit = async (values: FormValues, helpers: FormikHelpers<FormValues>) => {\n    const abortController = new AbortController();\n    helpers.setSubmitting(true);\n\n    try {\n      await savePatientForm(\n        !inEditMode,\n        values,\n        patientUuidMap,\n        initialAddressFieldValues,\n        capturePhotoProps,\n        config?.concepts?.patientPhotoUuid,\n        location,\n        abortController,\n      );\n\n      showToast({\n        description: inEditMode\n          ? t('updationSuccessToastDescription', \"The patient's information has been successfully updated\")\n          : t(\n              'registrationSuccessToastDescription',\n              'The patient can now be found by searching for them using their name or ID number',\n            ),\n        title: inEditMode\n          ? t('updationSuccessToastTitle', 'Patient Details Updated')\n          : t('registrationSuccessToastTitle', 'New Patient Created'),\n        kind: 'success',\n      });\n\n      const redirectUrl = interpolateUrl(\n        new URLSearchParams(search).get('afterUrl') ||\n          interpolateString(config.links.submitButton, { patientUuid: values.patientUuid }),\n      );\n\n      setTarget(redirectUrl);\n    } catch (error) {\n      if (error.responseBody?.error?.globalErrors) {\n        error.responseBody.error.globalErrors.forEach((error) => {\n          showToast({ description: error.message });\n        });\n      } else if (error.responseBody?.error?.message) {\n        showToast({ description: error.responseBody.error.message });\n      } else {\n        createErrorHandler()(error);\n      }\n\n      helpers.setSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialFormValues}\n      validationSchema={validationSchema}\n      onSubmit={onFormSubmit}>\n      {(props) => (\n        <Form className={styles.form}>\n          <BeforeSavePrompt when={props.dirty} redirect={target} />\n          <div className={styles.formContainer}>\n            <div>\n              <div className={styles.stickyColumn}>\n                <h4>\n                  {inEditMode ? t('edit', 'Edit') : t('createNew', 'Create New')} {t('patient', 'Patient')}\n                </h4>\n                {showDummyData && <DummyDataInput setValues={props.setValues} />}\n                <p className={styles.label01}>{t('jumpTo', 'Jump to')}</p>\n                {sections.map((section) => (\n                  <div className={`${styles.space05} ${styles.touchTarget}`} key={section.name}>\n                    <Link className={styles.linkName} onClick={() => scrollIntoView(section.id)}>\n                      <XAxis16 /> {section.name}\n                    </Link>\n                  </div>\n                ))}\n                <Button className={styles.submitButton} type=\"submit\">\n                  {inEditMode ? t('updatePatient', 'Update Patient') : t('registerPatient', 'Register Patient')}\n                </Button>\n                <Button className={styles.cancelButton} kind=\"tertiary\" onClick={cancelRegistration}>\n                  {t('cancel', 'Cancel')}\n                </Button>\n              </div>\n            </div>\n            <div className={styles.infoGrid}>\n              <PatientRegistrationContext.Provider\n                value={{\n                  identifierTypes: identifierTypes,\n                  validationSchema,\n                  setValidationSchema,\n                  fieldConfigs,\n                  values: props.values,\n                  inEditMode,\n                  setFieldValue: props.setFieldValue,\n                  setCapturePhotoProps,\n                  currentPhoto: photo?.imageSrc,\n                  isOffline,\n                }}>\n                {sections.map((section, index) => (\n                  <div key={index}>{getSection(section, index)}</div>\n                ))}\n              </PatientRegistrationContext.Provider>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\n/**\n * @internal\n * Just exported for testing\n */\nexport { exportedInitialFormValuesForTesting as initialFormValues };\n","import { FetchResponse, openmrsFetch, showToast } from '@openmrs/esm-framework';\nimport { RelationshipValue } from '../../patient-registration-types';\nimport useSWRImmutable from 'swr/immutable';\nimport { useMemo } from 'react';\n\nconst customRepresentation =\n  'custom:(display,uuid,' +\n  'personA:(age,display,birthdate,uuid),' +\n  'personB:(age,display,birthdate,uuid),' +\n  'relationshipType:(uuid,display,description,aIsToB,bIsToA))';\n\nexport function useInitialPatientRelationships(patientUuid: string): {\n  data: Array<RelationshipValue>;\n  isLoading: boolean;\n} {\n  const shouldFetch = !!patientUuid;\n  const { data, error } = useSWRImmutable<FetchResponse<RelationshipsResponse>, Error>(\n    shouldFetch ? `/ws/rest/v1/relationship?v=${customRepresentation}&person=${patientUuid}` : null,\n    openmrsFetch,\n  );\n  if (error) {\n    showToast({\n      title: error.name,\n      description: error.message,\n      kind: 'error',\n    });\n  }\n\n  const result = useMemo(() => {\n    const relationships: Array<RelationshipValue> | undefined = data?.data?.results.map((r) =>\n      r.personA.uuid === patientUuid\n        ? {\n            relatedPersonName: r.personB.display,\n            relatedPersonUuid: r.personB.uuid,\n            relation: r.relationshipType.bIsToA,\n            relationshipType: `${r.relationshipType.uuid}/bIsToA`,\n            /**\n             * Value kept for restoring initial value\n             */\n            initialrelationshipTypeValue: `${r.relationshipType.uuid}/bIsToA`,\n            uuid: r.uuid,\n          }\n        : {\n            relatedPersonName: r.personA.display,\n            relatedPersonUuid: r.personA.uuid,\n            relation: r.relationshipType.aIsToB,\n            relationshipType: `${r.relationshipType.uuid}/aIsToB`,\n            /**\n             * Value kept for restoring initial value\n             */\n            initialrelationshipTypeValue: `${r.relationshipType.uuid}/aIsToB`,\n            uuid: r.uuid,\n          },\n    );\n    return {\n      data: relationships,\n      isLoading: !data && !error,\n    };\n  }, [data, error]);\n\n  return result;\n}\n\nexport interface Relationship {\n  display: string;\n  uuid: string;\n  personA: {\n    age: number;\n    display: string;\n    birthdate: string;\n    uuid: string;\n  };\n  personB: {\n    age: number;\n    display: string;\n    birthdate: string;\n    uuid: string;\n  };\n  relationshipType: {\n    uuid: string;\n    display: string;\n    aIsToB: string;\n    bIsToA: string;\n  };\n}\n\ninterface RelationshipsResponse {\n  results: Array<Relationship>;\n}\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Grid, Row } from 'carbon-components-react';\nimport { ExtensionSlot } from '@openmrs/esm-framework';\nimport { Resources, ResourcesContext } from './offline.resources';\nimport { SavePatientForm } from './patient-registration/form-manager';\nimport { PatientRegistration, PatientRegistrationProps } from './patient-registration/patient-registration.component';\n\nexport interface RootProps extends PatientRegistrationProps, Resources {\n  savePatientForm: SavePatientForm;\n  isOffline: boolean;\n}\n\nexport default function Root({\n  currentSession,\n  addressTemplate,\n  relationshipTypes,\n  identifierTypes,\n  savePatientForm,\n  isOffline,\n}: RootProps) {\n  const resources = {\n    currentSession,\n    addressTemplate,\n    relationshipTypes,\n    identifierTypes,\n  };\n\n  return (\n    <ResourcesContext.Provider value={resources}>\n      <BrowserRouter basename={window['getOpenmrsSpaBase']()}>\n        <main className=\"omrs-main-content\" style={{ backgroundColor: 'white' }}>\n          <Grid>\n            <Row>\n              <ExtensionSlot extensionSlotName=\"breadcrumbs-slot\" />\n            </Row>\n            <Route\n              exact\n              path=\"/patient-registration\"\n              render={(props) => (\n                <PatientRegistration savePatientForm={savePatientForm} isOffline={isOffline} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/patient/:patientUuid/edit\"\n              render={(props) => (\n                <PatientRegistration savePatientForm={savePatientForm} isOffline={isOffline} {...props} />\n              )}\n            />\n          </Grid>\n        </main>\n      </BrowserRouter>\n    </ResourcesContext.Provider>\n  );\n}\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","locals","when","redirect","history","useHistory","useTranslation","t","ref","useRef","useState","localTarget","setTarget","target","cancelUnload","useCallback","e","message","preventDefault","returnValue","cancelNavigation","evt","detail","navigationIsCanceled","current","dispose","showModal","onConfirm","newUrl","useEffect","window","addEventListener","removeEventListener","url","split","getUrlWithoutPrefix","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","validationSchema","Yup","givenName","required","familyName","additionalGivenName","is","then","otherwise","notRequired","additionalFamilyName","gender","oneOf","birthdate","max","Date","nullable","ageEstimate","min","identifiers","of","shape","identifier","yearsEstimated","monthsEstimated","deathDate","email","optional","PatientRegistrationContext","createContext","dummyFormValues","patientUuid","v4","middleName","unidentifiedPatient","additionalMiddleName","addNameInLocalLanguage","birthdateEstimated","telephoneNumber","address1","address2","cityVillage","stateProvince","country","postalCode","isDead","deathCause","relationships","DummyDataInput","setValues","main","button","onClick","className","styles","type","aria-label","DemographicsSection","fields","useField","field","meta","useContext","setFieldValue","value","touched","section","map","div","key","getField","ContactInfoSection","fieldName","Autosuggest","getDisplayValue","getFieldValue","getSearchResults","onSuggestionSelected","searchProps","suggestions","setSuggestions","searchBox","wrapper","name","labelText","document","handleClickOutsideComponent","contains","label","Search","onChange","query","light","length","ul","suggestion","index","li","display","input","handleClick","RelationshipsSection","ResourcesContext","relationshipTypes","displayRelationshipTypes","setDisplayRelationshipTypes","tmp","results","forEach","aIsToB","uuid","direction","bIsToA","FieldArray","remove","values","form","relationship","sectionStyles","RelationshipView","Button","kind","relatedPersonUuid","action","React","newRelationship","handleRelationshipTypeChange","event","selectedIndex","handleSuggestionSelected","selectedSuggestion","searchPerson","abortController","searchResults","AbortController","fetchPerson","data","deleteRelationship","restoreRelationship","relationshipType","initialrelationshipTypeValue","h4","relation","iconDescription","hasIconOnly","TrashCan16","placeholder","defaultValue","relatedPersonName","item","span","p","style","marginBottom","Select","SelectItem","disabled","hidden","text","InlineNotification","title","actions","NotificationActionButton","Input","checkWarning","props","invalidText","error","warnText","useMemo","warning","TextInput","invalid","warn","SelectInput","selectOptions","currentOption","DeathInfoSection","h5","SectionWrapper","children","h3","color","margin","Tile","parseString","xmlDockAsString","DOMParser","parseFromString","getTagAsDocument","tagName","template","getElementsByTagName","outerHTML","AddressField","addressTemplate","addressFields","setAddressFields","addressTemplateXml","templateXmlDoc","nameMappings","elementDefaults","properties","propertiesObj","Array","prototype","call","property","getAttribute","doc","fieldElement","attributes","PhoneField","PhoneEmailField","containsNoNumbers","checkNumber","test","NameField","setCapturePhotoProps","currentPhoto","useConfig","fieldConfigurations","fieldConfigs","nameKnown","onCapturePhoto","dataUri","photoDateTime","imageData","dateTime","ExtensionSlot","extensionSlotName","state","initialState","ContentSwitcher","defaultUnknownGivenName","defaultUnknownFamilyName","Switch","displayMiddleName","RadioButtonGroup","orientation","valueSelected","RadioButton","shouldBlockPatientIdentifierInOfflineMode","identifierType","isUniqueIdentifierTypeForOffline","identifierSources","some","source","autoGenerationOption","manualEntryEnabled","automaticGenerationEnabled","uniquenessBehavior","IdentifierInput","patientIdentifier","identifierTypes","isOffline","find","identifierTypeUuid","identifierField","identifierFieldMeta","identifierName","option","setAutoGenerationOption","defaultPatientIdentifierTypes","defaultPatientIdentifierTypesMap","typeUuid","isNewIdentifier","handleEdit","handleDelete","confirmDeleteIdentifierModal","deleteIdentifier","identifierValue","isPrimary","Edit16","close","header","buttonsGroup","isDesktop","useLayoutType","Close16","Header","ArrowLeft16","closeOverlay","unsavedIdentifierTypes","setUnsavedIdentifierTypes","searchString","setSearchString","getIdentifierByTypeUuid","alreadySelectedSource","defaultSelectedSource","identifierSource","checked","handleSearch","filteredIdentifiers","filter","toLowerCase","includes","identifierTypeFields","showIdentifierSources","isDisabled","isDisabledOffline","Checkbox","handleCheckingIdentifier","legendText","defaultSelected","sourceUuid","handleSelectingIdentifierSource","handleConfiguringIdentifiers","findIndex","preferred","Overlay","size","fieldset","IdField","inEditMode","desktop","showIdentifierOverlay","setShowIdentifierOverlay","ArrowRight16","IdentifierSelectionOverlay","AdditionalInformationSection","DobField","order","separator","dobKnown","birthdateMeta","ageEstimateMeta","generateFormatting","parse","parts","date","setDate","parseInt","setMonth","setFullYear","format","getDate","getMonth","getFullYear","join","placeHolder","x","dateFormat","today","DatePicker","datePickerType","maxDate","DatePickerInput","ev","years","isNaN","usePersonAttributeType","personAttributeTypeUuid","useSWRImmutable","openmrsFetch","showToast","description","isLoading","CodedAttributesField","codedPersonAttributes","personAttributeType","ind","PersonAttributeField","personAttributeUuid","conceptUuid","useConceptAnswers","shouldFetch","answers","isLoadingConceptAnswers","conceptAnswers","answer","TextBasedAttributesField","textBasedAttributes","validationRegex","Field","validate","RegExp","errors","GenderField","findElementValueInXmlDoc","elementSelector","querySelector","cancelRegistration","navigate","to","spaBase","getFormValuesFromFhirPatient","patient","result","patientName","additionalPatientName","given","family","capitalize","birthDate","telecom","deceasedBoolean","deceasedDateTime","camelCase","system","getAddressFieldValuesFromFhirPatient","address","Object","keys","ext","extension","valueString","getPatientUuidMapFromFhirPatient","preferredNameUuid","additionalNameUuid","preferredAddressUuid","getPhonePersonAttributeValueFromFhirPatient","getPatientRegistration","items","getSynchronizationItems","patientRegistration","_patientRegistrationData","formValues","PatientRegistration","currentSession","savePatientForm","match","useLocation","search","config","sections","setSections","initialSchema","setValidationSchema","params","usePatient","uuidOfPatientToEdit","capturePhotoProps","setFieldConfigs","useInitialFormValues","personUuid","useInitialPersonAttributes","useInitialPatientIdentifiers","useInitialPatientRelationships","r","personA","personB","initialFormValues","setInitialFormValues","registration","patientToEdit","isLoadingPatientToEdit","console","isLoadingRelationships","isLoadingIdentifiers","isLoadingAttributes","personAttributes","attribute","attributeType","useInitialAddressFieldValues","fallback","initialAddressFieldValues","setInitialAddressFieldValues","usePatientUuidMap","patientUuidMap","setPatientUuidMap","location","sessionLocation","showDummyData","localStorage","getItem","usePatientPhoto","configuredSections","sectionDefinitions","parseAddressTemplateXml","querySelectorAll","validationSchemaObjs","nameMapping","regex","regexFormat","addressValidationSchema","reduce","final","matches","addressFieldValues","concat","onFormSubmit","helpers","redirectUrl","setSubmitting","concepts","patientPhotoUuid","interpolateUrl","URLSearchParams","get","interpolateString","links","submitButton","responseBody","globalErrors","createErrorHandler","Formik","enableReinitialize","initialValues","onSubmit","Form","BeforeSavePrompt","dirty","Link","viewId","getElementById","scrollIntoView","behavior","block","inline","XAxis16","Provider","photo","imageSrc","sectionProps","renderSection","getSection","Root","resources","BrowserRouter","basename","backgroundColor","Grid","Row","Route","exact","path","render"],"sourceRoot":""}