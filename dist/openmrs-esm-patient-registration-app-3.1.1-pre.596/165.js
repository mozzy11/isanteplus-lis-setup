"use strict";(self.webpackChunk_openmrs_esm_patient_registration_app=self.webpackChunk_openmrs_esm_patient_registration_app||[]).push([[165],{6159:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(1799),i=t.n(a),r=t(2609),o=t.n(r)()(i());o.push([n.id,".-esm-patient-registration__field__productiveHeading02___0\\+2Gm{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;margin-bottom:1rem}.-esm-patient-registration__field__productiveHeading02Light___bbKeq{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;margin-bottom:1rem;color:#525252}.-esm-patient-registration__field__label01___6YyKZ{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-patient-registration__field__grid___g21pQ{display:grid;grid-template-columns:1fr 1fr;column-gap:1rem}.-esm-patient-registration__field__halfWidthInDesktopView___J9cO8{width:calc(50% - 1rem)}.-esm-patient-registration__field__patientPhoto___9mWMr{display:flex;justify-content:center}.-esm-patient-registration__field__nameField___uPmod{grid-row:1;grid-column:1}.-esm-patient-registration__field__nameField___uPmod>.bx--content-switcher{display:grid;grid-template-columns:1fr 1fr;width:max-content;justify-content:flex-start}.-esm-patient-registration__field__contentSwitcher___G7dTq{margin-bottom:1rem}.-esm-patient-registration__field__dobField___P6SHd>.bx--content-switcher{display:grid;grid-template-columns:1fr 1fr;width:max-content;justify-content:flex-start}.-esm-patient-registration__field__photoExtension___IqCnX{margin-bottom:1rem;grid-row:1;grid-column:2;justify-self:center}.-esm-patient-registration__field__sexField___F8TIv,.-esm-patient-registration__field__dobField___P6SHd{margin-bottom:1rem}.-esm-patient-registration__field__dobContentSwitcherLabel___vW\\+UB{margin-bottom:.5rem}.-esm-patient-registration__field__identifierLabelText___bdyJF{display:flex;align-items:center}.-esm-patient-registration__field__setIDNumberButton___XziAX{margin-bottom:1rem}.-esm-patient-registration__field__setIDNumberButton___XziAX>svg{margin-left:.5rem}.-esm-patient-registration__field__attributeField___qdljB{margin-bottom:1rem}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__grid___g21pQ{grid-template-columns:1fr;grid-template-rows:auto auto}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__nameField___uPmod{grid-row:2;grid-column:1}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__photoExtension___IqCnX{grid-column:1;grid-row:1;justify-self:start}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__radioButton___d7GuU label{height:3rem !important}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__halfWidthInDesktopView___J9cO8{width:100%}.-esm-patient-registration__field__radioFieldError___LyxW0{color:#da1e28;display:block;font-weight:400;max-height:12.5rem;overflow:visible;font-size:.75rem;letter-spacing:.32px;line-height:1.34;margin:.25rem 0 0}","",{version:3,sources:["webpack://./src/patient-registration/field/field.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss"],names:[],mappings:"AAGA,gEC4gBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD/rBxB,kBAAA,CAGF,oECugBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD1rBxB,kBAAA,CACA,aAAA,CAGF,mDCigBI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDlrB1B,gDACE,YAAA,CACA,6BAAA,CACA,eEUmB,CFPrB,kEACE,sBAAA,CAGF,wDACE,YAAA,CACA,sBAAA,CAGF,qDACE,UAAA,CACA,aAAA,CAGF,2EACE,YAAA,CACA,6BAAA,CACA,iBAAA,CACA,0BAAA,CAGF,2DACE,kBAAA,CAGF,0EACE,YAAA,CACA,6BAAA,CACA,iBAAA,CACA,0BAAA,CAGF,0DACE,kBAAA,CACA,UAAA,CACA,aAAA,CACA,mBAAA,CAGF,wGAEE,kBElCmB,CFqCrB,oEACE,mBEhDmB,CFmDrB,+DACE,YAAA,CACA,kBAAA,CAGF,6DACE,kBE/CmB,CFkDrB,iEACE,iBE7DmB,CFgErB,0DACE,kBEvDmB,CF2DnB,4EACE,yBAAA,CACA,4BAAA,CAEF,iFACE,UAAA,CACA,aAAA,CAEF,sFACE,aAAA,CACA,UAAA,CACA,kBAAA,CAEF,yFACE,sBAAA,CAEF,8FACE,UAAA,CAIJ,2DACE,aAAA,CACA,aAAA,CACA,eAAA,CACA,kBAAA,CACA,gBAAA,CACA,gBAAA,CACA,oBAAA,CACA,gBAAA,CACA,iBAAA",sourcesContent:["@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\n\n.productiveHeading02 {\n  @include carbon--type-style('productive-heading-02');\n  margin-bottom: 1rem;\n}\n\n.productiveHeading02Light {\n  @include carbon--type-style('productive-heading-02');\n  margin-bottom: 1rem;\n  color: #525252;\n}\n\n.label01 {\n  @include carbon--type-style('label-01');\n}\n\n.grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: $spacing-05;\n}\n\n.halfWidthInDesktopView {\n  width: calc(50% - $spacing-05);\n}\n\n.patientPhoto {\n  display: flex;\n  justify-content: center;\n}\n\n.nameField {\n  grid-row: 1;\n  grid-column: 1;\n}\n\n.nameField > :global(.bx--content-switcher) {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  width: max-content;\n  justify-content: flex-start;\n}\n\n.contentSwitcher {\n  margin-bottom: 1rem;\n}\n\n.dobField > :global(.bx--content-switcher) {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  width: max-content;\n  justify-content: flex-start;\n}\n\n.photoExtension {\n  margin-bottom: 1rem;\n  grid-row: 1;\n  grid-column: 2;\n  justify-self: center;\n}\n\n.sexField,\n.dobField {\n  margin-bottom: $spacing-05;\n}\n\n.dobContentSwitcherLabel {\n  margin-bottom: $spacing-03;\n}\n\n.identifierLabelText {\n  display: flex;\n  align-items: center;\n}\n\n.setIDNumberButton {\n  margin-bottom: $spacing-05;\n}\n\n.setIDNumberButton > svg {\n  margin-left: $spacing-03;\n}\n\n.attributeField {\n  margin-bottom: $spacing-05;\n}\n\n:global(.omrs-breakpoint-lt-desktop) {\n  .grid {\n    grid-template-columns: 1fr;\n    grid-template-rows: auto auto;\n  }\n  .nameField {\n    grid-row: 2;\n    grid-column: 1;\n  }\n  .photoExtension {\n    grid-column: 1;\n    grid-row: 1;\n    justify-self: start;\n  }\n  .radioButton label {\n    height: $spacing-09 !important;\n  }\n  .halfWidthInDesktopView {\n    width: 100%;\n  }\n}\n\n.radioFieldError {\n  color: #da1e28;\n  display: block;\n  font-weight: 400;\n  max-height: 12.5rem;\n  overflow: visible;\n  font-size: 0.75rem;\n  letter-spacing: 0.32px;\n  line-height: 1.34;\n  margin: 0.25rem 0 0;\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n"],sourceRoot:""}]),o.locals={productiveHeading02:"-esm-patient-registration__field__productiveHeading02___0+2Gm",productiveHeading02Light:"-esm-patient-registration__field__productiveHeading02Light___bbKeq",label01:"-esm-patient-registration__field__label01___6YyKZ",grid:"-esm-patient-registration__field__grid___g21pQ",halfWidthInDesktopView:"-esm-patient-registration__field__halfWidthInDesktopView___J9cO8",patientPhoto:"-esm-patient-registration__field__patientPhoto___9mWMr",nameField:"-esm-patient-registration__field__nameField___uPmod",contentSwitcher:"-esm-patient-registration__field__contentSwitcher___G7dTq",dobField:"-esm-patient-registration__field__dobField___P6SHd",photoExtension:"-esm-patient-registration__field__photoExtension___IqCnX",sexField:"-esm-patient-registration__field__sexField___F8TIv",dobContentSwitcherLabel:"-esm-patient-registration__field__dobContentSwitcherLabel___vW+UB",identifierLabelText:"-esm-patient-registration__field__identifierLabelText___bdyJF",setIDNumberButton:"-esm-patient-registration__field__setIDNumberButton___XziAX",attributeField:"-esm-patient-registration__field__attributeField___qdljB",radioButton:"-esm-patient-registration__field__radioButton___d7GuU",radioFieldError:"-esm-patient-registration__field__radioFieldError___LyxW0"};const s=o},1627:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(1799),i=t.n(a),r=t(2609),o=t.n(r)()(i());o.push([n.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__identifier-selection__title___fPIy3{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__identifier-selection__submit___WgYnV{width:250px}.-esm-patient-registration__identifier-selection__submit___WgYnV:hover{cursor:pointer}.-esm-patient-registration__identifier-selection__cancelButton___ar-za{width:11.688rem}.-esm-patient-registration__identifier-selection__submitButton___mJgTx{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__identifier-selection__infoGrid___5ovdR{width:100%;padding-left:2rem;margin-bottom:40vh;margin-top:1rem;max-width:50rem}.-esm-patient-registration__identifier-selection__label01___sm7Rq{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__identifier-selection__productiveHeading02___aocJ0{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__identifier-selection__space05___pbxiU{margin:1rem 0 1rem 0}.-esm-patient-registration__identifier-selection__formContainer___XacnD{display:flex;width:100%}.-esm-patient-registration__identifier-selection__stickyColumn___H9Wbn{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__identifier-selection__touchTarget___heOv2 a:active{color:#161616}.-esm-patient-registration__identifier-selection__linkName___oKi4d{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__identifier-selection__linkName___oKi4d:active{text-decoration:none;color:#161616}.-esm-patient-registration__identifier-selection__linkName___oKi4d:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__identifier-selection__main___s9KQc{background-color:#fff}.omrs-breakpoint-lt-desktop .-esm-patient-registration__identifier-selection__infoGrid___5ovdR{max-width:unset}.-esm-patient-registration__identifier-selection__overlayButtons___frh9W{display:grid;grid-template-columns:1fr 1fr}.-esm-patient-registration__identifier-selection__overlayButtons___frh9W button{max-width:unset}.-esm-patient-registration__identifier-selection__radioGroup___n\\+7PW{background-color:#f4f4f4;padding:1rem}.-esm-patient-registration__identifier-selection__radioButton___yaoFj{margin:0 !important}.-esm-patient-registration__identifier-selection__radioButton___yaoFj label{height:2rem}.omrs-breakpoint-lt-desktop .-esm-patient-registration__identifier-selection__radioButton___yaoFj label{height:3rem !important}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/patient-registration/patient-registration.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./src/patient-registration/field/id/identifier-selection.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,gEACE,kCAAA,CAGF,iEACE,WAAA,CAGF,uEACE,cAAA,CAGF,uEACE,eAAA,CAGF,uEACE,kBCUmB,CDTnB,eAAA,CACA,aAAA,CAGF,mEACE,UAAA,CACA,iBCamB,CDZnB,kBAAA,CACA,eCCmB,CAAA,eAAA,CDGrB,kEE6eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CFhqBxB,eCLmB,CDMnB,kBCNmB,CDOnB,aDnCM,CCsCR,8EEseI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CFzpBxB,aDxCM,CCyCN,cAAA,CAGF,kEACE,oBAAA,CAGF,wEACE,YAAA,CACA,UAAA,CAGF,uEACE,eAAA,CACA,eC3BmB,CD6BnB,QAAA,CAGF,+EACE,aDtDe,CCyDjB,mEACE,aD3Dc,CC4Dd,gBAAA,CACA,cCvCmB,CDwCnB,eAAA,CAEA,0EACE,oBAAA,CACA,aDjEa,CCoEf,yEACE,oBAAA,CACA,aDtEa,CCuEb,cAAA,CAIJ,+DACE,qBAAA,CAIA,+FACE,eAAA,CGzFJ,yEACE,YAAA,CACA,6BAAA,CAGF,gFACE,eAAA,CAGF,sEACE,wBJZM,CIaN,YFkBmB,CEfrB,sEACE,mBAAA,CACA,4EACE,WFsBiB,CEjBnB,wGACE,sBAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n","@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\n@import '~@openmrs/esm-styleguide/src/vars';\n\n.title {\n  color: var(--omrs-color-brand-teal);\n}\n\n.submit {\n  width: 250px;\n}\n\n.submit:hover {\n  cursor: pointer;\n}\n\n.cancelButton {\n  width: 11.688rem;\n}\n\n.submitButton {\n  margin-bottom: $spacing-05;\n  width: 11.688rem;\n  display: block;\n}\n\n.infoGrid {\n  width: 100%;\n  padding-left: $spacing-07;\n  margin-bottom: 40vh;\n  margin-top: $spacing-05;\n  max-width: 50rem;\n}\n\n.label01 {\n  @include carbon--type-style('label-01');\n  margin-top: $spacing-05;\n  margin-bottom: $spacing-05;\n  color: $ui-04;\n}\n\n.productiveHeading02 {\n  @include carbon--type-style('productive-heading-02');\n  color: $ui-04;\n  cursor: pointer;\n}\n\n.space05 {\n  margin: $spacing-05 0 $spacing-05 0;\n}\n\n.formContainer {\n  display: flex;\n  width: 100%;\n}\n\n.stickyColumn {\n  position: sticky;\n  margin-top: $spacing-05;\n  // 3rem for the nav height and 1rem for top margin\n  top: 4rem;\n}\n\n.touchTarget a:active {\n  color: $color-gray-100;\n}\n\n.linkName {\n  color: $color-gray-70;\n  line-height: 1.38;\n  font-size: $spacing-05;\n  font-weight: 600;\n\n  &:active {\n    text-decoration: none;\n    color: $color-gray-100;\n  }\n\n  &:hover {\n    text-decoration: none;\n    color: $color-gray-100;\n    cursor: pointer;\n  }\n}\n\n.main {\n  background-color: white;\n}\n\n:global(.omrs-breakpoint-lt-desktop) {\n  .infoGrid {\n    max-width: unset;\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n","@import '../../patient-registration.scss';\n\n.overlayButtons {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.overlayButtons button {\n  max-width: unset;\n}\n\n.radioGroup {\n  background-color: $ui-01;\n  padding: $spacing-05;\n}\n\n.radioButton {\n  margin: 0 !important;\n  label {\n    height: $spacing-07;\n  }\n}\n\n:global(.omrs-breakpoint-lt-desktop) {\n  .radioButton label {\n    height: $spacing-09 !important;\n  }\n}\n"],sourceRoot:""}]),o.locals={title:"-esm-patient-registration__identifier-selection__title___fPIy3",submit:"-esm-patient-registration__identifier-selection__submit___WgYnV",cancelButton:"-esm-patient-registration__identifier-selection__cancelButton___ar-za",submitButton:"-esm-patient-registration__identifier-selection__submitButton___mJgTx",infoGrid:"-esm-patient-registration__identifier-selection__infoGrid___5ovdR",label01:"-esm-patient-registration__identifier-selection__label01___sm7Rq",productiveHeading02:"-esm-patient-registration__identifier-selection__productiveHeading02___aocJ0",space05:"-esm-patient-registration__identifier-selection__space05___pbxiU",formContainer:"-esm-patient-registration__identifier-selection__formContainer___XacnD",stickyColumn:"-esm-patient-registration__identifier-selection__stickyColumn___H9Wbn",touchTarget:"-esm-patient-registration__identifier-selection__touchTarget___heOv2",linkName:"-esm-patient-registration__identifier-selection__linkName___oKi4d",main:"-esm-patient-registration__identifier-selection__main___s9KQc",overlayButtons:"-esm-patient-registration__identifier-selection__overlayButtons___frh9W",radioGroup:"-esm-patient-registration__identifier-selection__radioGroup___n+7PW",radioButton:"-esm-patient-registration__identifier-selection__radioButton___yaoFj"};const s=o},6323:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(1799),i=t.n(a),r=t(2609),o=t.n(r)()(i());o.push([n.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__autosuggest__label01___f95oj{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-patient-registration__autosuggest__suggestions___v5o3w{position:relative;border-top-width:0;list-style:none;margin-top:0;max-height:143px;overflow-y:auto;padding-left:0;width:100%;position:absolute;left:0;background-color:#fff;margin-bottom:20px;z-index:99}.-esm-patient-registration__autosuggest__suggestions___v5o3w li{padding:1rem;line-height:1.29;color:#525252;border-bottom:1px solid #8d8d8d}.-esm-patient-registration__autosuggest__suggestions___v5o3w li:hover{background-color:#e5e5e5;color:#161616;cursor:pointer}.-esm-patient-registration__autosuggest__suggestions___v5o3w li:not(:last-of-type){border-bottom:1px solid #999}.-esm-patient-registration__autosuggest__autocomplete___it56z{position:relative}.-esm-patient-registration__autosuggest__autocompleteSearch___sc5fh{width:100%}.-esm-patient-registration__autosuggest__suggestions___v5o3w a{color:inherit;text-decoration:none}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/patient-registration/input/custom-input/autosuggest/autosuggest.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,yDC2gBI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD5rB1B,6DACE,iBAAA,CACA,kBAAA,CACA,eAAA,CACA,YAAA,CACA,gBAAA,CACA,eAAA,CACA,cAAA,CACA,UAAA,CACA,iBAAA,CACA,MAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CAGF,gEACE,YEMmB,CFLnB,gBAAA,CACA,aAAA,CACA,+BAAA,CAGF,sEACE,wBAAA,CACA,aAAA,CACA,cAAA,CAGF,mFACE,4BAAA,CAGF,8DACE,iBAAA,CAGF,oEACE,UAAA,CAGF,+DACE,aAAA,CACA,oBAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n","@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\n@import '~@openmrs/esm-styleguide/src/vars';\n\n.label01 {\n  @include carbon--type-style('label-01');\n}\n\n.suggestions {\n  position: relative;\n  border-top-width: 0;\n  list-style: none;\n  margin-top: 0;\n  max-height: 143px;\n  overflow-y: auto;\n  padding-left: 0;\n  width: 100%;\n  position: absolute;\n  left: 0;\n  background-color: #fff;\n  margin-bottom: 20px;\n  z-index: 99;\n}\n\n.suggestions li {\n  padding: $spacing-05;\n  line-height: 1.29;\n  color: #525252;\n  border-bottom: 1px solid #8d8d8d;\n}\n\n.suggestions li:hover {\n  background-color: #e5e5e5;\n  color: #161616;\n  cursor: pointer;\n}\n\n.suggestions li:not(:last-of-type) {\n  border-bottom: 1px solid #999;\n}\n\n.autocomplete {\n  position: relative;\n}\n\n.autocompleteSearch {\n  width: 100%;\n}\n\n.suggestions a {\n  color: inherit;\n  text-decoration: none;\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n"],sourceRoot:""}]),o.locals={label01:"-esm-patient-registration__autosuggest__label01___f95oj",suggestions:"-esm-patient-registration__autosuggest__suggestions___v5o3w",autocomplete:"-esm-patient-registration__autosuggest__autocomplete___it56z",autocompleteSearch:"-esm-patient-registration__autosuggest__autocompleteSearch___sc5fh"};const s=o},1692:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(1799),i=t.n(a),r=t(2609),o=t.n(r)()(i());o.push([n.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__input__title___4PKlg{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__input__submit___mloB4{width:250px}.-esm-patient-registration__input__submit___mloB4:hover{cursor:pointer}.-esm-patient-registration__input__cancelButton___blAcs{width:11.688rem}.-esm-patient-registration__input__submitButton___SofD2{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__input__infoGrid___xohlq{width:100%;padding-left:2rem;margin-bottom:40vh;margin-top:1rem;max-width:50rem}.-esm-patient-registration__input__label01___fwQQq{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__input__productiveHeading02___7pE9K{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__input__space05___9oNC\\+{margin:1rem 0 1rem 0}.-esm-patient-registration__input__formContainer___YE8UP{display:flex;width:100%}.-esm-patient-registration__input__stickyColumn___KQudo{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__input__touchTarget___lFvgc a:active{color:#161616}.-esm-patient-registration__input__linkName___C8vKy{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__input__linkName___C8vKy:active{text-decoration:none;color:#161616}.-esm-patient-registration__input__linkName___C8vKy:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__input__main___rng6t{background-color:#fff}.omrs-breakpoint-lt-desktop .-esm-patient-registration__input__infoGrid___xohlq{max-width:unset}.-esm-patient-registration__input__fieldRow___5TD7U{display:flex;flex-direction:row;justify-content:flex-start;flex-wrap:wrap}.-esm-patient-registration__input__subFieldRow___zGAH4{margin-bottom:5px}.-esm-patient-registration__input__label___65tRW{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;color:#525252}.-esm-patient-registration__input__textID___F\\+F-t{margin-bottom:1rem}.-esm-patient-registration__input__requiredField___x0TVf{color:#da1e28}.-esm-patient-registration__input__input___JYX4d{margin-right:5px}.-esm-patient-registration__input__checkboxField___gmx7u{display:flex;flex-direction:row;justify-content:flex-start;width:400px;margin-left:10px}.-esm-patient-registration__input__textInput___QJYjz{width:250px !important;height:40px !important}.-esm-patient-registration__input__numberInput___IGlx4{width:200px !important;height:40px !important}.-esm-patient-registration__input__checkboxInput___IVRIk{height:1.5rem !important;width:1.5rem !important;margin-top:8px}.-esm-patient-registration__input__selectInput___yrzZ-{width:150px !important;height:40px !important}.-esm-patient-registration__input__dateInput___2shrY{width:200px !important;height:40px !important;font-size:large !important}.-esm-patient-registration__input__telInput___HxQe3{width:250px !important;height:40px !important}.-esm-patient-registration__input__errorInput___aW2qL{border:2px solid #da1e28 !important;padding-left:.875rem !important}.-esm-patient-registration__input__errorMessage___cbdW2{color:#da1e28;align-self:center}.-esm-patient-registration__input__dummyData___GFQGF{cursor:pointer;margin-left:5px}.-esm-patient-registration__input__IDInput___6B3\\+s{display:grid;grid-template-columns:1fr auto;align-items:center;max-width:27rem}.-esm-patient-registration__input__trashCan___usc53{color:#da1e28}.omrs-breakpoint-lt-desktop .-esm-patient-registration__input__IDInput___6B3\\+s{max-width:unset;width:100%}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/patient-registration/patient-registration.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./src/patient-registration/input/input.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,iDACE,kCAAA,CAGF,kDACE,WAAA,CAGF,wDACE,cAAA,CAGF,wDACE,eAAA,CAGF,wDACE,kBCUmB,CDTnB,eAAA,CACA,aAAA,CAGF,oDACE,UAAA,CACA,iBCamB,CDZnB,kBAAA,CACA,eCCmB,CAAA,eAAA,CDGrB,mDE6eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CFhqBxB,eCLmB,CDMnB,kBCNmB,CDOnB,aDnCM,CCsCR,+DEseI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CFzpBxB,aDxCM,CCyCN,cAAA,CAGF,oDACE,oBAAA,CAGF,yDACE,YAAA,CACA,UAAA,CAGF,wDACE,eAAA,CACA,eC3BmB,CD6BnB,QAAA,CAGF,gEACE,aDtDe,CCyDjB,oDACE,aD3Dc,CC4Dd,gBAAA,CACA,cCvCmB,CDwCnB,eAAA,CAEA,2DACE,oBAAA,CACA,aDjEa,CCoEf,0DACE,oBAAA,CACA,aDtEa,CCuEb,cAAA,CAIJ,gDACE,qBAAA,CAIA,gFACE,eAAA,CGzFJ,oDACE,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,cAAA,CAGF,uDACE,iBAAA,CAGF,iDDkgBI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CCrrBxB,aJVQ,CIaV,mDACE,kBFYmB,CETrB,yDACE,aJHO,CIMT,iDACE,gBAAA,CAGF,yDACE,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,WAAA,CACA,gBAAA,CAGF,qDACE,sBAAA,CACA,sBAAA,CAGF,uDACE,sBAAA,CACA,sBAAA,CAGF,yDACE,wBAAA,CACA,uBAAA,CACA,cAAA,CAGF,uDACE,sBAAA,CACA,sBAAA,CAGF,qDACE,sBAAA,CACA,sBAAA,CACA,0BAAA,CAGF,oDACE,sBAAA,CACA,sBAAA,CAGF,sDACE,mCAAA,CACA,+BAAA,CAGF,wDACE,aJxDO,CIyDP,iBAAA,CAGF,qDACE,cAAA,CACA,eAAA,CAGF,oDACE,YAAA,CACA,8BAAA,CACA,kBAAA,CACA,eAAA,CAGF,oDACE,aJzEO,CI6EP,gFACE,eAAA,CACA,UAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n","@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\n@import '~@openmrs/esm-styleguide/src/vars';\n\n.title {\n  color: var(--omrs-color-brand-teal);\n}\n\n.submit {\n  width: 250px;\n}\n\n.submit:hover {\n  cursor: pointer;\n}\n\n.cancelButton {\n  width: 11.688rem;\n}\n\n.submitButton {\n  margin-bottom: $spacing-05;\n  width: 11.688rem;\n  display: block;\n}\n\n.infoGrid {\n  width: 100%;\n  padding-left: $spacing-07;\n  margin-bottom: 40vh;\n  margin-top: $spacing-05;\n  max-width: 50rem;\n}\n\n.label01 {\n  @include carbon--type-style('label-01');\n  margin-top: $spacing-05;\n  margin-bottom: $spacing-05;\n  color: $ui-04;\n}\n\n.productiveHeading02 {\n  @include carbon--type-style('productive-heading-02');\n  color: $ui-04;\n  cursor: pointer;\n}\n\n.space05 {\n  margin: $spacing-05 0 $spacing-05 0;\n}\n\n.formContainer {\n  display: flex;\n  width: 100%;\n}\n\n.stickyColumn {\n  position: sticky;\n  margin-top: $spacing-05;\n  // 3rem for the nav height and 1rem for top margin\n  top: 4rem;\n}\n\n.touchTarget a:active {\n  color: $color-gray-100;\n}\n\n.linkName {\n  color: $color-gray-70;\n  line-height: 1.38;\n  font-size: $spacing-05;\n  font-weight: 600;\n\n  &:active {\n    text-decoration: none;\n    color: $color-gray-100;\n  }\n\n  &:hover {\n    text-decoration: none;\n    color: $color-gray-100;\n    cursor: pointer;\n  }\n}\n\n.main {\n  background-color: white;\n}\n\n:global(.omrs-breakpoint-lt-desktop) {\n  .infoGrid {\n    max-width: unset;\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n","@import '../../patient-registration/patient-registration.scss';\n\n.fieldRow {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n}\n\n.subFieldRow {\n  margin-bottom: 5px;\n}\n\n.label {\n  @include carbon--type-style('label-01');\n  color: $text-02;\n}\n\n.textID {\n  margin-bottom: $spacing-05;\n}\n\n.requiredField {\n  color: $danger;\n}\n\n.input {\n  margin-right: 5px;\n}\n\n.checkboxField {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  width: 400px;\n  margin-left: 10px;\n}\n\n.textInput {\n  width: 250px !important;\n  height: 40px !important;\n}\n\n.numberInput {\n  width: 200px !important;\n  height: 40px !important;\n}\n\n.checkboxInput {\n  height: 1.5rem !important;\n  width: 1.5rem !important;\n  margin-top: 8px;\n}\n\n.selectInput {\n  width: 150px !important;\n  height: 40px !important;\n}\n\n.dateInput {\n  width: 200px !important;\n  height: 40px !important;\n  font-size: large !important;\n}\n\n.telInput {\n  width: 250px !important;\n  height: 40px !important;\n}\n\n.errorInput {\n  border: 2px solid $danger !important;\n  padding-left: 0.875rem !important;\n}\n\n.errorMessage {\n  color: $danger;\n  align-self: center;\n}\n\n.dummyData {\n  cursor: pointer;\n  margin-left: 5px;\n}\n\n.IDInput {\n  display: grid;\n  grid-template-columns: 1fr auto;\n  align-items: center;\n  max-width: 27rem;\n}\n\n.trashCan {\n  color: $danger;\n}\n\n:global(.omrs-breakpoint-lt-desktop) {\n  .IDInput {\n    max-width: unset;\n    width: 100%;\n  }\n}\n"],sourceRoot:""}]),o.locals={title:"-esm-patient-registration__input__title___4PKlg",submit:"-esm-patient-registration__input__submit___mloB4",cancelButton:"-esm-patient-registration__input__cancelButton___blAcs",submitButton:"-esm-patient-registration__input__submitButton___SofD2",infoGrid:"-esm-patient-registration__input__infoGrid___xohlq",label01:"-esm-patient-registration__input__label01___fwQQq",productiveHeading02:"-esm-patient-registration__input__productiveHeading02___7pE9K",space05:"-esm-patient-registration__input__space05___9oNC+",formContainer:"-esm-patient-registration__input__formContainer___YE8UP",stickyColumn:"-esm-patient-registration__input__stickyColumn___KQudo",touchTarget:"-esm-patient-registration__input__touchTarget___lFvgc",linkName:"-esm-patient-registration__input__linkName___C8vKy",main:"-esm-patient-registration__input__main___rng6t",fieldRow:"-esm-patient-registration__input__fieldRow___5TD7U",subFieldRow:"-esm-patient-registration__input__subFieldRow___zGAH4",label:"-esm-patient-registration__input__label___65tRW",textID:"-esm-patient-registration__input__textID___F+F-t",requiredField:"-esm-patient-registration__input__requiredField___x0TVf",input:"-esm-patient-registration__input__input___JYX4d",checkboxField:"-esm-patient-registration__input__checkboxField___gmx7u",textInput:"-esm-patient-registration__input__textInput___QJYjz",numberInput:"-esm-patient-registration__input__numberInput___IGlx4",checkboxInput:"-esm-patient-registration__input__checkboxInput___IVRIk",selectInput:"-esm-patient-registration__input__selectInput___yrzZ-",dateInput:"-esm-patient-registration__input__dateInput___2shrY",telInput:"-esm-patient-registration__input__telInput___HxQe3",errorInput:"-esm-patient-registration__input__errorInput___aW2qL",errorMessage:"-esm-patient-registration__input__errorMessage___cbdW2",dummyData:"-esm-patient-registration__input__dummyData___GFQGF",IDInput:"-esm-patient-registration__input__IDInput___6B3+s",trashCan:"-esm-patient-registration__input__trashCan___usc53"};const s=o},1822:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(1799),i=t.n(a),r=t(2609),o=t.n(r)()(i());o.push([n.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__patient-registration__title___d6s20{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__patient-registration__submit___S6frc{width:250px}.-esm-patient-registration__patient-registration__submit___S6frc:hover{cursor:pointer}.-esm-patient-registration__patient-registration__cancelButton___2-E\\+5{width:11.688rem}.-esm-patient-registration__patient-registration__submitButton___Ps1do{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__patient-registration__infoGrid___2S1kw{width:100%;padding-left:2rem;margin-bottom:40vh;margin-top:1rem;max-width:50rem}.-esm-patient-registration__patient-registration__label01___CxOgi{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__patient-registration__productiveHeading02___mBDux{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__patient-registration__space05___\\+IJfn{margin:1rem 0 1rem 0}.-esm-patient-registration__patient-registration__formContainer___ydkLz{display:flex;width:100%}.-esm-patient-registration__patient-registration__stickyColumn___2G55G{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__patient-registration__touchTarget___KxfOv a:active{color:#161616}.-esm-patient-registration__patient-registration__linkName___Ukv7z{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__patient-registration__linkName___Ukv7z:active{text-decoration:none;color:#161616}.-esm-patient-registration__patient-registration__linkName___Ukv7z:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__patient-registration__main___eiIwY{background-color:#fff}.omrs-breakpoint-lt-desktop .-esm-patient-registration__patient-registration__infoGrid___2S1kw{max-width:unset}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/patient-registration/patient-registration.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,gEACE,kCAAA,CAGF,iEACE,WAAA,CAGF,uEACE,cAAA,CAGF,wEACE,eAAA,CAGF,uEACE,kBCUmB,CDTnB,eAAA,CACA,aAAA,CAGF,mEACE,UAAA,CACA,iBCamB,CDZnB,kBAAA,CACA,eCCmB,CAAA,eAAA,CDGrB,kEE6eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CFhqBxB,eCLmB,CDMnB,kBCNmB,CDOnB,aDnCM,CCsCR,8EEseI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CFzpBxB,aDxCM,CCyCN,cAAA,CAGF,mEACE,oBAAA,CAGF,wEACE,YAAA,CACA,UAAA,CAGF,uEACE,eAAA,CACA,eC3BmB,CD6BnB,QAAA,CAGF,+EACE,aDtDe,CCyDjB,mEACE,aD3Dc,CC4Dd,gBAAA,CACA,cCvCmB,CDwCnB,eAAA,CAEA,0EACE,oBAAA,CACA,aDjEa,CCoEf,yEACE,oBAAA,CACA,aDtEa,CCuEb,cAAA,CAIJ,+DACE,qBAAA,CAIA,+FACE,eAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n","@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\n@import '~@openmrs/esm-styleguide/src/vars';\n\n.title {\n  color: var(--omrs-color-brand-teal);\n}\n\n.submit {\n  width: 250px;\n}\n\n.submit:hover {\n  cursor: pointer;\n}\n\n.cancelButton {\n  width: 11.688rem;\n}\n\n.submitButton {\n  margin-bottom: $spacing-05;\n  width: 11.688rem;\n  display: block;\n}\n\n.infoGrid {\n  width: 100%;\n  padding-left: $spacing-07;\n  margin-bottom: 40vh;\n  margin-top: $spacing-05;\n  max-width: 50rem;\n}\n\n.label01 {\n  @include carbon--type-style('label-01');\n  margin-top: $spacing-05;\n  margin-bottom: $spacing-05;\n  color: $ui-04;\n}\n\n.productiveHeading02 {\n  @include carbon--type-style('productive-heading-02');\n  color: $ui-04;\n  cursor: pointer;\n}\n\n.space05 {\n  margin: $spacing-05 0 $spacing-05 0;\n}\n\n.formContainer {\n  display: flex;\n  width: 100%;\n}\n\n.stickyColumn {\n  position: sticky;\n  margin-top: $spacing-05;\n  // 3rem for the nav height and 1rem for top margin\n  top: 4rem;\n}\n\n.touchTarget a:active {\n  color: $color-gray-100;\n}\n\n.linkName {\n  color: $color-gray-70;\n  line-height: 1.38;\n  font-size: $spacing-05;\n  font-weight: 600;\n\n  &:active {\n    text-decoration: none;\n    color: $color-gray-100;\n  }\n\n  &:hover {\n    text-decoration: none;\n    color: $color-gray-100;\n    cursor: pointer;\n  }\n}\n\n.main {\n  background-color: white;\n}\n\n:global(.omrs-breakpoint-lt-desktop) {\n  .infoGrid {\n    max-width: unset;\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n"],sourceRoot:""}]),o.locals={title:"-esm-patient-registration__patient-registration__title___d6s20",submit:"-esm-patient-registration__patient-registration__submit___S6frc",cancelButton:"-esm-patient-registration__patient-registration__cancelButton___2-E+5",submitButton:"-esm-patient-registration__patient-registration__submitButton___Ps1do",infoGrid:"-esm-patient-registration__patient-registration__infoGrid___2S1kw",label01:"-esm-patient-registration__patient-registration__label01___CxOgi",productiveHeading02:"-esm-patient-registration__patient-registration__productiveHeading02___mBDux",space05:"-esm-patient-registration__patient-registration__space05___+IJfn",formContainer:"-esm-patient-registration__patient-registration__formContainer___ydkLz",stickyColumn:"-esm-patient-registration__patient-registration__stickyColumn___2G55G",touchTarget:"-esm-patient-registration__patient-registration__touchTarget___KxfOv",linkName:"-esm-patient-registration__patient-registration__linkName___Ukv7z",main:"-esm-patient-registration__patient-registration__main___eiIwY"};const s=o},5247:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(1799),i=t.n(a),r=t(2609),o=t.n(r)()(i());o.push([n.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__relationships__title___zOYZm{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__relationships__submit___kNlmu{width:250px}.-esm-patient-registration__relationships__submit___kNlmu:hover{cursor:pointer}.-esm-patient-registration__relationships__cancelButton___cFt6p{width:11.688rem}.-esm-patient-registration__relationships__submitButton___CW8X\\+{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__relationships__infoGrid___9dg84{width:100%;padding-left:2rem;margin-bottom:40vh;margin-top:1rem;max-width:50rem}.-esm-patient-registration__relationships__label01___TYH\\+i{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__relationships__productiveHeading02___PuSkg{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__relationships__space05___gWnMG{margin:1rem 0 1rem 0}.-esm-patient-registration__relationships__formContainer___U91DX{display:flex;width:100%}.-esm-patient-registration__relationships__stickyColumn___2cbAk{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__relationships__touchTarget___chVrk a:active{color:#161616}.-esm-patient-registration__relationships__linkName___M6KoQ{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__relationships__linkName___M6KoQ:active{text-decoration:none;color:#161616}.-esm-patient-registration__relationships__linkName___M6KoQ:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__relationships__main___G8ux-{background-color:#fff}.omrs-breakpoint-lt-desktop .-esm-patient-registration__relationships__infoGrid___9dg84{max-width:unset}.-esm-patient-registration__relationships__labelText___hTuhj{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-patient-registration__relationships__bodyShort02___hfBao{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.-esm-patient-registration__relationships__searchBox___xY0Yt{margin-bottom:1rem}.-esm-patient-registration__relationships__relationshipHeader___2w\\+Ew{display:flex;align-items:center}.-esm-patient-registration__relationships__productiveHeading___IiVgd{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#525252}.-esm-patient-registration__relationships__trashCan___nBYrg{color:#da1e28 !important}.omrs-breakpoint-lt-desktop .-esm-patient-registration__relationships__relationshipHeader___2w\\+Ew{justify-content:space-between}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/patient-registration/patient-registration.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./src/patient-registration/section/patient-relationships/relationships.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,yDACE,kCAAA,CAGF,0DACE,WAAA,CAGF,gEACE,cAAA,CAGF,gEACE,eAAA,CAGF,iEACE,kBCUmB,CDTnB,eAAA,CACA,aAAA,CAGF,4DACE,UAAA,CACA,iBCamB,CDZnB,kBAAA,CACA,eCCmB,CAAA,eAAA,CDGrB,4DE6eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CFhqBxB,eCLmB,CDMnB,kBCNmB,CDOnB,aDnCM,CCsCR,uEEseI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CFzpBxB,aDxCM,CCyCN,cAAA,CAGF,2DACE,oBAAA,CAGF,iEACE,YAAA,CACA,UAAA,CAGF,gEACE,eAAA,CACA,eC3BmB,CD6BnB,QAAA,CAGF,wEACE,aDtDe,CCyDjB,4DACE,aD3Dc,CC4Dd,gBAAA,CACA,cCvCmB,CDwCnB,eAAA,CAEA,mEACE,oBAAA,CACA,aDjEa,CCoEf,kEACE,oBAAA,CACA,aDtEa,CCuEb,cAAA,CAIJ,wDACE,qBAAA,CAIA,wFACE,eAAA,CGzFJ,6DD6gBI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CC9rB1B,+DDygBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CC1rB1B,6DACE,kBFoBmB,CEjBrB,uEACE,YAAA,CACA,kBAAA,CAGF,qED4fI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CC/qBxB,aJhBQ,CImBV,4DACE,wBAAA,CAIA,mGACE,6BAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n","@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\n@import '~@openmrs/esm-styleguide/src/vars';\n\n.title {\n  color: var(--omrs-color-brand-teal);\n}\n\n.submit {\n  width: 250px;\n}\n\n.submit:hover {\n  cursor: pointer;\n}\n\n.cancelButton {\n  width: 11.688rem;\n}\n\n.submitButton {\n  margin-bottom: $spacing-05;\n  width: 11.688rem;\n  display: block;\n}\n\n.infoGrid {\n  width: 100%;\n  padding-left: $spacing-07;\n  margin-bottom: 40vh;\n  margin-top: $spacing-05;\n  max-width: 50rem;\n}\n\n.label01 {\n  @include carbon--type-style('label-01');\n  margin-top: $spacing-05;\n  margin-bottom: $spacing-05;\n  color: $ui-04;\n}\n\n.productiveHeading02 {\n  @include carbon--type-style('productive-heading-02');\n  color: $ui-04;\n  cursor: pointer;\n}\n\n.space05 {\n  margin: $spacing-05 0 $spacing-05 0;\n}\n\n.formContainer {\n  display: flex;\n  width: 100%;\n}\n\n.stickyColumn {\n  position: sticky;\n  margin-top: $spacing-05;\n  // 3rem for the nav height and 1rem for top margin\n  top: 4rem;\n}\n\n.touchTarget a:active {\n  color: $color-gray-100;\n}\n\n.linkName {\n  color: $color-gray-70;\n  line-height: 1.38;\n  font-size: $spacing-05;\n  font-weight: 600;\n\n  &:active {\n    text-decoration: none;\n    color: $color-gray-100;\n  }\n\n  &:hover {\n    text-decoration: none;\n    color: $color-gray-100;\n    cursor: pointer;\n  }\n}\n\n.main {\n  background-color: white;\n}\n\n:global(.omrs-breakpoint-lt-desktop) {\n  .infoGrid {\n    max-width: unset;\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n","@import '../../patient-registration.scss';\n\n.labelText {\n  @include carbon--type-style('label-01');\n}\n\n.bodyShort02 {\n  @include carbon--type-style('body-short-02');\n}\n\n.searchBox {\n  margin-bottom: $spacing-05;\n}\n\n.relationshipHeader {\n  display: flex;\n  align-items: center;\n}\n\n.productiveHeading {\n  @include carbon--type-style('productive-heading-02');\n  color: $text-02;\n}\n\n.trashCan {\n  color: $danger !important;\n}\n\n:global(.omrs-breakpoint-lt-desktop) {\n  .relationshipHeader {\n    justify-content: space-between;\n  }\n}\n"],sourceRoot:""}]),o.locals={title:"-esm-patient-registration__relationships__title___zOYZm",submit:"-esm-patient-registration__relationships__submit___kNlmu",cancelButton:"-esm-patient-registration__relationships__cancelButton___cFt6p",submitButton:"-esm-patient-registration__relationships__submitButton___CW8X+",infoGrid:"-esm-patient-registration__relationships__infoGrid___9dg84",label01:"-esm-patient-registration__relationships__label01___TYH+i",productiveHeading02:"-esm-patient-registration__relationships__productiveHeading02___PuSkg",space05:"-esm-patient-registration__relationships__space05___gWnMG",formContainer:"-esm-patient-registration__relationships__formContainer___U91DX",stickyColumn:"-esm-patient-registration__relationships__stickyColumn___2cbAk",touchTarget:"-esm-patient-registration__relationships__touchTarget___chVrk",linkName:"-esm-patient-registration__relationships__linkName___M6KoQ",main:"-esm-patient-registration__relationships__main___G8ux-",labelText:"-esm-patient-registration__relationships__labelText___hTuhj",bodyShort02:"-esm-patient-registration__relationships__bodyShort02___hfBao",searchBox:"-esm-patient-registration__relationships__searchBox___xY0Yt",relationshipHeader:"-esm-patient-registration__relationships__relationshipHeader___2w+Ew",productiveHeading:"-esm-patient-registration__relationships__productiveHeading___IiVgd",trashCan:"-esm-patient-registration__relationships__trashCan___nBYrg"};const s=o},3222:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(1799),i=t.n(a),r=t(2609),o=t.n(r)()(i());o.push([n.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__section__title___WE522{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__section__submit___ZCyMT{width:250px}.-esm-patient-registration__section__submit___ZCyMT:hover{cursor:pointer}.-esm-patient-registration__section__cancelButton___BtWcr{width:11.688rem}.-esm-patient-registration__section__submitButton___SX3tz{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__section__infoGrid___m6EFv{width:100%;padding-left:2rem;margin-bottom:40vh;margin-top:1rem;max-width:50rem}.-esm-patient-registration__section__label01___SB4dO{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__section__productiveHeading02___0Qr6X{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__section__space05___\\+I97l{margin:1rem 0 1rem 0}.-esm-patient-registration__section__formContainer___bUz8M{display:flex;width:100%}.-esm-patient-registration__section__stickyColumn___e3QEm{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__section__touchTarget___ubpCE a:active{color:#161616}.-esm-patient-registration__section__linkName___NOqjy{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__section__linkName___NOqjy:active{text-decoration:none;color:#161616}.-esm-patient-registration__section__linkName___NOqjy:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__section__main___3eHUo{background-color:#fff}.omrs-breakpoint-lt-desktop .-esm-patient-registration__section__infoGrid___m6EFv{max-width:unset}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/patient-registration/patient-registration.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,mDACE,kCAAA,CAGF,oDACE,WAAA,CAGF,0DACE,cAAA,CAGF,0DACE,eAAA,CAGF,0DACE,kBCUmB,CDTnB,eAAA,CACA,aAAA,CAGF,sDACE,UAAA,CACA,iBCamB,CDZnB,kBAAA,CACA,eCCmB,CAAA,eAAA,CDGrB,qDE6eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CFhqBxB,eCLmB,CDMnB,kBCNmB,CDOnB,aDnCM,CCsCR,iEEseI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CFzpBxB,aDxCM,CCyCN,cAAA,CAGF,sDACE,oBAAA,CAGF,2DACE,YAAA,CACA,UAAA,CAGF,0DACE,eAAA,CACA,eC3BmB,CD6BnB,QAAA,CAGF,kEACE,aDtDe,CCyDjB,sDACE,aD3Dc,CC4Dd,gBAAA,CACA,cCvCmB,CDwCnB,eAAA,CAEA,6DACE,oBAAA,CACA,aDjEa,CCoEf,4DACE,oBAAA,CACA,aDtEa,CCuEb,cAAA,CAIJ,kDACE,qBAAA,CAIA,kFACE,eAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n","@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\n@import '~@openmrs/esm-styleguide/src/vars';\n\n.title {\n  color: var(--omrs-color-brand-teal);\n}\n\n.submit {\n  width: 250px;\n}\n\n.submit:hover {\n  cursor: pointer;\n}\n\n.cancelButton {\n  width: 11.688rem;\n}\n\n.submitButton {\n  margin-bottom: $spacing-05;\n  width: 11.688rem;\n  display: block;\n}\n\n.infoGrid {\n  width: 100%;\n  padding-left: $spacing-07;\n  margin-bottom: 40vh;\n  margin-top: $spacing-05;\n  max-width: 50rem;\n}\n\n.label01 {\n  @include carbon--type-style('label-01');\n  margin-top: $spacing-05;\n  margin-bottom: $spacing-05;\n  color: $ui-04;\n}\n\n.productiveHeading02 {\n  @include carbon--type-style('productive-heading-02');\n  color: $ui-04;\n  cursor: pointer;\n}\n\n.space05 {\n  margin: $spacing-05 0 $spacing-05 0;\n}\n\n.formContainer {\n  display: flex;\n  width: 100%;\n}\n\n.stickyColumn {\n  position: sticky;\n  margin-top: $spacing-05;\n  // 3rem for the nav height and 1rem for top margin\n  top: 4rem;\n}\n\n.touchTarget a:active {\n  color: $color-gray-100;\n}\n\n.linkName {\n  color: $color-gray-70;\n  line-height: 1.38;\n  font-size: $spacing-05;\n  font-weight: 600;\n\n  &:active {\n    text-decoration: none;\n    color: $color-gray-100;\n  }\n\n  &:hover {\n    text-decoration: none;\n    color: $color-gray-100;\n    cursor: pointer;\n  }\n}\n\n.main {\n  background-color: white;\n}\n\n:global(.omrs-breakpoint-lt-desktop) {\n  .infoGrid {\n    max-width: unset;\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n"],sourceRoot:""}]),o.locals={title:"-esm-patient-registration__section__title___WE522",submit:"-esm-patient-registration__section__submit___ZCyMT",cancelButton:"-esm-patient-registration__section__cancelButton___BtWcr",submitButton:"-esm-patient-registration__section__submitButton___SX3tz",infoGrid:"-esm-patient-registration__section__infoGrid___m6EFv",label01:"-esm-patient-registration__section__label01___SB4dO",productiveHeading02:"-esm-patient-registration__section__productiveHeading02___0Qr6X",space05:"-esm-patient-registration__section__space05___+I97l",formContainer:"-esm-patient-registration__section__formContainer___bUz8M",stickyColumn:"-esm-patient-registration__section__stickyColumn___e3QEm",touchTarget:"-esm-patient-registration__section__touchTarget___ubpCE",linkName:"-esm-patient-registration__section__linkName___NOqjy",main:"-esm-patient-registration__section__main___3eHUo"};const s=o},8120:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(1799),i=t.n(a),r=t(2609),o=t.n(r)()(i());o.push([n.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__overlay__title___ovEFv{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__overlay__submit___MEU04{width:250px}.-esm-patient-registration__overlay__submit___MEU04:hover{cursor:pointer}.-esm-patient-registration__overlay__cancelButton___Kuq8k{width:11.688rem}.-esm-patient-registration__overlay__submitButton___koip2{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__overlay__infoGrid___IR-lJ{width:100%;padding-left:2rem;margin-bottom:40vh;margin-top:1rem;max-width:50rem}.-esm-patient-registration__overlay__label01___UFjWe{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__overlay__productiveHeading02___0-7g8{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__overlay__space05___3-aCf{margin:1rem 0 1rem 0}.-esm-patient-registration__overlay__formContainer___0etfN{display:flex;width:100%}.-esm-patient-registration__overlay__stickyColumn___ZAq3J{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__overlay__touchTarget___eSQ3o a:active{color:#161616}.-esm-patient-registration__overlay__linkName___Kol4j{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__overlay__linkName___Kol4j:active{text-decoration:none;color:#161616}.-esm-patient-registration__overlay__linkName___Kol4j:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__overlay__main___pCgsu{background-color:#fff}.omrs-breakpoint-lt-desktop .-esm-patient-registration__overlay__infoGrid___IR-lJ{max-width:unset}.-esm-patient-registration__overlay__desktopOverlay___pTy0O{position:fixed;top:3rem;right:0;height:calc(100vh - 3rem);min-width:27rem;background-color:#fff;border-left:1px solid #a8a8a8;overflow:hidden;display:grid;grid-template-rows:auto 1fr auto;z-index:999}.-esm-patient-registration__overlay__tabletOverlay___\\+CQze{position:fixed;top:0;bottom:0;left:0;right:0;z-index:9999;background-color:#fff;overflow:hidden;padding-top:3rem;display:grid;grid-template-rows:1fr auto}.-esm-patient-registration__overlay__tabletOverlayHeader___omtl4 button{background-color:#005d5d !important}.-esm-patient-registration__overlay__tabletOverlayHeader___omtl4 .-esm-patient-registration__overlay__headerContent___S7vPL{color:#fff}.-esm-patient-registration__overlay__desktopHeader___X3NCa{display:flex;justify-content:space-between;align-items:center;background-color:#e0e0e0;border-bottom:1px solid #a8a8a8}.-esm-patient-registration__overlay__headerContent___S7vPL{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;padding:0 1rem;color:#161616}.-esm-patient-registration__overlay__closeButton___8Pcw1{background-color:#fff}.-esm-patient-registration__overlay__overlayContent___9V2UN{padding:1rem;overflow-y:auto}.-esm-patient-registration__overlay__buttonsGroup___5b3bz{align-self:end}.-esm-patient-registration__overlay__buttonsGroup___5b3bz button{max-width:unset !important}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/patient-registration/patient-registration.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./src/patient-registration/ui-components/overlay/overlay.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,mDACE,kCAAA,CAGF,oDACE,WAAA,CAGF,0DACE,cAAA,CAGF,0DACE,eAAA,CAGF,0DACE,kBCUmB,CDTnB,eAAA,CACA,aAAA,CAGF,sDACE,UAAA,CACA,iBCamB,CDZnB,kBAAA,CACA,eCCmB,CAAA,eAAA,CDGrB,qDE6eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CFhqBxB,eCLmB,CDMnB,kBCNmB,CDOnB,aDnCM,CCsCR,iEEseI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CFzpBxB,aDxCM,CCyCN,cAAA,CAGF,qDACE,oBAAA,CAGF,2DACE,YAAA,CACA,UAAA,CAGF,0DACE,eAAA,CACA,eC3BmB,CD6BnB,QAAA,CAGF,kEACE,aDtDe,CCyDjB,sDACE,aD3Dc,CC4Dd,gBAAA,CACA,cCvCmB,CDwCnB,eAAA,CAEA,6DACE,oBAAA,CACA,aDjEa,CCoEf,4DACE,oBAAA,CACA,aDtEa,CCuEb,cAAA,CAIJ,kDACE,qBAAA,CAIA,kFACE,eAAA,CGzFJ,4DACE,cAAA,CACA,QF+CmB,CE9CnB,OAAA,CACA,yBAAA,CACA,eAAA,CACA,qBJPM,CIQN,6BAAA,CACA,eAAA,CACA,YAAA,CACA,gCAAA,CACA,WAAA,CAGF,4DACE,cAAA,CACA,KAAA,CACA,QAAA,CACA,MAAA,CACA,OAAA,CACA,YAAA,CACA,qBJtBM,CIuBN,eAAA,CACA,gBF0BmB,CEzBnB,YAAA,CACA,2BAAA,CAIA,wEACE,mCAAA,CAEF,4HACE,UJlCI,CIsCR,2DACE,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,wBJzCM,CI0CN,+BAAA,CAGF,2DDgeI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CCnpBxB,cAAA,CACA,aJ9CM,CIiDR,yDACE,qBJrDM,CIwDR,4DACE,YF3BmB,CE4BnB,eAAA,CAGF,0DACE,cAAA,CAGF,iEACE,0BAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n","@import '~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles';\n@import '~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing';\n@import '~@openmrs/esm-styleguide/src/vars';\n\n.title {\n  color: var(--omrs-color-brand-teal);\n}\n\n.submit {\n  width: 250px;\n}\n\n.submit:hover {\n  cursor: pointer;\n}\n\n.cancelButton {\n  width: 11.688rem;\n}\n\n.submitButton {\n  margin-bottom: $spacing-05;\n  width: 11.688rem;\n  display: block;\n}\n\n.infoGrid {\n  width: 100%;\n  padding-left: $spacing-07;\n  margin-bottom: 40vh;\n  margin-top: $spacing-05;\n  max-width: 50rem;\n}\n\n.label01 {\n  @include carbon--type-style('label-01');\n  margin-top: $spacing-05;\n  margin-bottom: $spacing-05;\n  color: $ui-04;\n}\n\n.productiveHeading02 {\n  @include carbon--type-style('productive-heading-02');\n  color: $ui-04;\n  cursor: pointer;\n}\n\n.space05 {\n  margin: $spacing-05 0 $spacing-05 0;\n}\n\n.formContainer {\n  display: flex;\n  width: 100%;\n}\n\n.stickyColumn {\n  position: sticky;\n  margin-top: $spacing-05;\n  // 3rem for the nav height and 1rem for top margin\n  top: 4rem;\n}\n\n.touchTarget a:active {\n  color: $color-gray-100;\n}\n\n.linkName {\n  color: $color-gray-70;\n  line-height: 1.38;\n  font-size: $spacing-05;\n  font-weight: 600;\n\n  &:active {\n    text-decoration: none;\n    color: $color-gray-100;\n  }\n\n  &:hover {\n    text-decoration: none;\n    color: $color-gray-100;\n    cursor: pointer;\n  }\n}\n\n.main {\n  background-color: white;\n}\n\n:global(.omrs-breakpoint-lt-desktop) {\n  .infoGrid {\n    max-width: unset;\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n","@import '../../patient-registration.scss';\n\n.desktopOverlay {\n  position: fixed;\n  top: $spacing-09;\n  right: 0;\n  height: calc(100vh - 3rem);\n  min-width: 27rem;\n  background-color: $ui-02;\n  border-left: 1px solid $text-03;\n  overflow: hidden;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  z-index: 999;\n}\n\n.tabletOverlay {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 9999;\n  background-color: $ui-02;\n  overflow: hidden;\n  padding-top: $spacing-09;\n  display: grid;\n  grid-template-rows: 1fr auto;\n}\n\n.tabletOverlayHeader {\n  button {\n    background-color: $brand-01 !important;\n  }\n  .headerContent {\n    color: $ui-02;\n  }\n}\n\n.desktopHeader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: $ui-03;\n  border-bottom: 1px solid $text-03;\n}\n\n.headerContent {\n  @include carbon--type-style('productive-heading-02');\n  padding: 0 $spacing-05;\n  color: $ui-05;\n}\n\n.closeButton {\n  background-color: $ui-02;\n}\n\n.overlayContent {\n  padding: $spacing-05;\n  overflow-y: auto;\n}\n\n.buttonsGroup {\n  align-self: end;\n}\n\n.buttonsGroup button {\n  max-width: unset !important;\n}\n"],sourceRoot:""}]),o.locals={title:"-esm-patient-registration__overlay__title___ovEFv",submit:"-esm-patient-registration__overlay__submit___MEU04",cancelButton:"-esm-patient-registration__overlay__cancelButton___Kuq8k",submitButton:"-esm-patient-registration__overlay__submitButton___koip2",infoGrid:"-esm-patient-registration__overlay__infoGrid___IR-lJ",label01:"-esm-patient-registration__overlay__label01___UFjWe",productiveHeading02:"-esm-patient-registration__overlay__productiveHeading02___0-7g8",space05:"-esm-patient-registration__overlay__space05___3-aCf",formContainer:"-esm-patient-registration__overlay__formContainer___0etfN",stickyColumn:"-esm-patient-registration__overlay__stickyColumn___ZAq3J",touchTarget:"-esm-patient-registration__overlay__touchTarget___eSQ3o",linkName:"-esm-patient-registration__overlay__linkName___Kol4j",main:"-esm-patient-registration__overlay__main___pCgsu",desktopOverlay:"-esm-patient-registration__overlay__desktopOverlay___pTy0O",tabletOverlay:"-esm-patient-registration__overlay__tabletOverlay___+CQze",tabletOverlayHeader:"-esm-patient-registration__overlay__tabletOverlayHeader___omtl4",headerContent:"-esm-patient-registration__overlay__headerContent___S7vPL",desktopHeader:"-esm-patient-registration__overlay__desktopHeader___X3NCa",closeButton:"-esm-patient-registration__overlay__closeButton___8Pcw1",overlayContent:"-esm-patient-registration__overlay__overlayContent___9V2UN",buttonsGroup:"-esm-patient-registration__overlay__buttonsGroup___5b3bz"};const s=o},165:(n,e,t)=>{t.r(e),t.d(e,{default:()=>ot});var a=t(9902),i=t.n(a),r=t(9575),o=t(9542),s=t(707),l=t(3066),c=t(6279),p=t(5047),u=t.n(p),g=t(9686),d=t(3277),b=t(7030),f=t(4924);function h(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}const m=function(n){var e,t,i=n.when,o=n.redirect,s=(0,r.useHistory)(),c=(0,f.useTranslation)().t,p=(0,a.useRef)(!1),u=(e=(0,a.useState)(),t=2,function(n){if(Array.isArray(n))return n}(e)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(e,t)||function(n,e){if(n){if("string"==typeof n)return h(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?h(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),g=u[0],d=u[1],b=g||o,m=(0,a.useCallback)((function(n){var e=c("discardModalBody","The changes you made to this patient's details have not been saved. Discard changes?");return n.preventDefault(),n.returnValue=e,e}),[]),y=(0,a.useCallback)((function(n){if(!n.detail.navigationIsCanceled&&!p.current){p.current=!0,n.detail.cancelNavigation();var e=(0,l.showModal)("cancel-patient-edit-modal",{onConfirm:function(){d(n.detail.newUrl),e()}},(function(){p.current=!1}))}}),[]);return(0,a.useEffect)((function(){if(i&&void 0===b)return window.addEventListener("single-spa:before-routing-event",y),window.addEventListener("beforeunload",m),function(){window.removeEventListener("beforeunload",m),window.removeEventListener("single-spa:before-routing-event",y)}}),[b,i,m,y]),(0,a.useEffect)((function(){"string"==typeof b&&s.push("/".concat(function(n){var e;return null===(e=n.split(window.getOpenmrsSpaBase()))||void 0===e?void 0:e[1]}(b)))}),[b]),null};var y=t(6062),$=t.n(y),_=t(4036),v=t.n(_),A=t(6793),k=t.n(A),x=t(7892),w=t.n(x),C=t(1173),z=t.n(C),E=t(2464),B=t.n(E),N=t(1822),M={};M.styleTagTransform=B(),M.setAttributes=w(),M.insert=k().bind(null,"head"),M.domAPI=v(),M.insertStyleElement=z(),$()(N.Z,M);const T=N.Z&&N.Z.locals?N.Z.locals:void 0;var D=t(7065),I=t(6794),F=I.Ry({givenName:I.Z_().required("givenNameRequired"),familyName:I.Z_().required("familyNameRequired"),additionalGivenName:I.Z_().when("addNameInLocalLanguage",{is:!0,then:I.Z_().required("givenNameRequired"),otherwise:I.Z_().notRequired()}),additionalFamilyName:I.Z_().when("addNameInLocalLanguage",{is:!0,then:I.Z_().required("familyNameRequired"),otherwise:I.Z_().notRequired()}),gender:I.Z_().oneOf(["Male","Female","Other","Unknown"],"genderUnspecified").required("genderRequired"),birthdate:I.hT().when("birthdateEstimated",{is:!1,then:I.hT().required("birthdayRequired").max(Date(),"birthdayNotInTheFuture").nullable(),otherwise:I.hT().nullable()}),ageEstimate:I.Rx().when("birthdateEstimated",{is:!0,then:I.Rx().required("ageEstimateRequired").min(0,"negativeYears"),otherwise:I.Rx().nullable()}),identifiers:I.IX().of(I.Ry().shape({identifier:I.Z_().required("identifierRequired")})),yearsEstimated:I.Rx().min(0,"negativeYears"),monthsEstimated:I.Rx().min(0,"negativeMonths"),deathDate:I.hT().max(Date(),"deathdayNotInTheFuture").nullable(),email:I.Z_().optional().email("invalidEmail")}),S=(0,a.createContext)(void 0),L=t(7117),O=t(9571),q=t(1692),G={};G.styleTagTransform=B(),G.setAttributes=w(),G.insert=k().bind(null,"head"),G.domAPI=v(),G.insertStyleElement=z(),$()(q.Z,G);const j=q.Z&&q.Z.locals?q.Z.locals:void 0;var P={patientUuid:(0,O.Z)(),givenName:"John",middleName:"",familyName:"Smith",unidentifiedPatient:!1,additionalGivenName:"Joey",additionalMiddleName:"",additionalFamilyName:"Smitty",addNameInLocalLanguage:!0,gender:"Male",birthdate:new Date(2020,1,1),yearsEstimated:1,monthsEstimated:2,birthdateEstimated:!0,telephoneNumber:"0800001066",address1:"Bom Jesus Street",address2:"",cityVillage:"Recife",stateProvince:"Pernambuco",country:"Brazil",postalCode:"50030-310",isDead:!1,deathDate:"",deathCause:"",relationships:[],identifiers:[]},U=function(n){var e=n.setValues;return i().createElement("main",null,i().createElement("button",{onClick:function(){return e(P)},className:"omrs-btn omrs-filled-neutral ".concat(j.dummyData),type:"button","aria-label":"Dummy Data Input"},"Input Dummy Data"))},Z=t(3222),R={};R.styleTagTransform=B(),R.setAttributes=w(),R.insert=k().bind(null,"head"),R.domAPI=v(),R.insertStyleElement=z(),$()(Z.Z,R);const H=Z.Z&&Z.Z.locals?Z.Z.locals:void 0;function W(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}var V=function(n){var e,t,r=n.fields,o=(e=(0,D.U$)("addNameInLocalLanguage"),t=2,function(n){if(Array.isArray(n))return n}(e)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(e,t)||function(n,e){if(n){if("string"==typeof n)return W(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?W(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),s=o[0],l=o[1],c=(0,a.useContext)(S).setFieldValue;return(0,a.useEffect)((function(){!s.value&&l.touched&&(c("additionalGivenName",""),c("additionalMiddleName",""),c("additionalFamilyName",""))}),[s.value,l.touched]),i().createElement("section",{className:H.formSection,"aria-label":"Demographics Section"},r.map((function(n){return i().createElement("div",{key:n},Ie(n))})))},Y=function(n){var e=n.fields;return i().createElement("section",{"aria-label":"Contact Info Section"},e.map((function(n){return i().createElement("div",{key:n},Ie(n))})))},J=t(5247),Q={};Q.styleTagTransform=B(),Q.setAttributes=w(),Q.insert=k().bind(null,"head"),Q.domAPI=v(),Q.insertStyleElement=z(),$()(J.Z,Q);const K=J.Z&&J.Z.locals?J.Z.locals:void 0;var X=t(2810),nn=t(5067),en=t(5223),tn=t(5380),an=t(6323),rn={};rn.styleTagTransform=B(),rn.setAttributes=w(),rn.insert=k().bind(null,"head"),rn.domAPI=v(),rn.insertStyleElement=z(),$()(an.Z,rn);const on=an.Z&&an.Z.locals?an.Z.locals:void 0;function sn(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}function ln(){return ln=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},ln.apply(this,arguments)}var cn=function(n){var e,t,r=n.getDisplayValue,o=n.getFieldValue,s=n.getSearchResults,l=n.onSuggestionSelected,c=function(n,e){if(null==n)return{};var t,a,i=function(n,e){if(null==n)return{};var t,a,i={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}(n,["getDisplayValue","getFieldValue","getSearchResults","onSuggestionSelected"]),p=(e=(0,a.useState)([]),t=2,function(n){if(Array.isArray(n))return n}(e)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(e,t)||function(n,e){if(n){if("string"==typeof n)return sn(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?sn(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=p[0],g=p[1],d=(0,a.useRef)(null),b=(0,a.useRef)(null),h=((0,f.useTranslation)().t,c.name),m=c.labelText;(0,a.useEffect)((function(){return document.addEventListener("mousedown",y),function(){document.removeEventListener("mousedown",y)}}),[b]);var y=function(n){b.current&&!b.current.contains(n.target)&&g([])};return i().createElement("div",{className:on.autocomplete,ref:b},i().createElement("label",{className:"bx--label"},m),i().createElement(tn.Z,ln({id:"autosuggest",onChange:function(n){var e=n.target.value;e?s(e).then((function(n){g(n)})):g([])},ref:d,className:on.autocompleteSearch,light:!0},c)),u.length>0&&i().createElement("ul",{className:on.suggestions},u.map((function(n,e){return i().createElement("li",{key:e,onClick:function(n){return function(n){var e=r(u[n]),t=o(u[n]);d.current.input.value=e,l(h,t),g([])}(e)}},r(n))}))))},pn=t(195);function un(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}function gn(n,e,t,a,i,r,o){try{var s=n[r](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(a,i)}function dn(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}var bn=function(){var n,e,t=(0,a.useContext)(c.Cg).relationshipTypes,r=(n=(0,a.useState)([]),e=2,function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(n,e)||function(n,e){if(n){if("string"==typeof n)return un(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?un(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],s=r[1],l=(0,f.useTranslation)().t;return(0,a.useEffect)((function(){var n=[];t.results.forEach((function(e){var t={display:e.aIsToB,uuid:e.uuid,direction:"aIsToB"},a={display:e.bIsToA,uuid:e.uuid,direction:"bIsToA"};t.display===a.display?n.push(t):n.push(t,a)})),s(n)}),[t]),i().createElement("section",{"aria-label":"Relationships Section"},i().createElement(D.F2,{name:"relationships"},(function(n){var e=n.push,t=n.remove,a=n.form.values.relationships;return i().createElement("div",null,a&&a.length>0?a.map((function(n,e){return i().createElement("div",{key:e,className:H.formSection},i().createElement(fn,{relationship:n,index:e,displayRelationshipTypes:o,key:e,remove:t}))})):null,i().createElement("div",{className:K.actions},i().createElement(b.Z,{kind:"ghost",onClick:function(){return e({relatedPersonUuid:"",action:"ADD"})}},l("addRelationshipButtonText","Add Relationship"))))})))},fn=function(n){var e,t,r,o,s=n.relationship,l=n.index,c=n.displayRelationshipTypes,p=n.remove,g=(0,f.useTranslation)().t,d=i().useContext(S).setFieldValue,h=!s.uuid,m=(0,a.useCallback)((function(n){var e=n.target,t=e.name,a=e.options[e.selectedIndex].value;d(t,a),(null==s?void 0:s.action)||d("relationships[".concat(l,"].action"),"UPDATE")}),[]),y=(0,a.useCallback)((function(n,e){d(n,e)}),[]),$=(o=u().mark((function n(e){var t,a;return u().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t=new AbortController,n.next=3,(0,L.M8)(e,t);case 3:return a=n.sent,n.abrupt("return",a.data.results);case 5:case"end":return n.stop()}}),n)})),e=function(){var n=this,e=arguments;return new Promise((function(t,a){var i=o.apply(n,e);function r(n){gn(i,t,a,r,s,"next",n)}function s(n){gn(i,t,a,r,s,"throw",n)}r(void 0)}))},function(n){return e.apply(this,arguments)}),_=(0,a.useCallback)((function(){"ADD"===s.action?p(l):d("relationships[".concat(l,"].action"),"DELETE")}),[s,l]),v=(0,a.useCallback)((function(){d("relationships[".concat(l,"]"),function(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable})))),a.forEach((function(e){dn(n,e,t[e])}))}return n}({},s,{action:void 0,relationshipType:s.initialrelationshipTypeValue}))}),[l]);return"DELETE"!==s.action?i().createElement("div",{className:K.relationship},i().createElement("div",{className:K.searchBox},i().createElement("div",{className:K.relationshipHeader},i().createElement("h4",{className:K.productiveHeading},null!==(t=null==s?void 0:s.relation)&&void 0!==t?t:g("relationshipPlaceholder","Relationship")),i().createElement(b.Z,{kind:"ghost",iconDescription:g("deleteRelationshipTooltipText","Delete"),hasIconOnly:!0,onClick:_},i().createElement(pn.XqF,{className:K.trashCan}))),i().createElement("div",null,h?i().createElement(cn,{name:"relationships[".concat(l,"].relatedPersonUuid"),labelText:g("relativeFullNameLabelText","Full name"),placeholder:g("relativeNamePlaceholder","Firstname Familyname"),defaultValue:s.relatedPersonName,onSuggestionSelected:y,getSearchResults:$,getDisplayValue:function(n){return n.display},getFieldValue:function(n){return n.uuid},required:!0}):i().createElement(i().Fragment,null,i().createElement("span",{className:K.labelText},g("relativeFullNameLabelText","Full name")),i().createElement("p",{className:K.bodyShort02},s.relatedPersonName)))),i().createElement("div",{className:"".concat(K.selectRelationshipType),style:{marginBottom:"1rem"}},i().createElement(X.Z,{light:!0,id:"select",labelText:g("relationship","Relationship"),onChange:m,name:"relationships[".concat(l,"].relationshipType"),defaultValue:null!==(r=null==s?void 0:s.relationshipType)&&void 0!==r?r:"placeholder-item"},i().createElement(nn.Z,{disabled:!0,hidden:!0,value:"placeholder-item",text:g("relationshipToPatient","Relationship to patient")}),c.map((function(n){return i().createElement(nn.Z,{text:n.display,value:"".concat(n.uuid,"/").concat(n.direction),key:n.display})}))))):i().createElement(en.K0,{kind:"info",title:g("relationshipRemovedText","Relationship removed"),actions:i().createElement(en.xh,{onClick:v},g("restoreRelationshipActionButton","Undo"))})},hn=t(7367);function mn(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}function yn(){return yn=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},yn.apply(this,arguments)}var $n=function(n){var e,t,r=n.checkWarning,o=function(n,e){if(null==n)return{};var t,a,i=function(n,e){if(null==n)return{};var t,a,i={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}(n,["checkWarning"]),s=(e=(0,D.U$)(o.name),t=2,function(n){if(Array.isArray(n))return n}(e)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(e,t)||function(n,e){if(n){if("string"==typeof n)return mn(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?mn(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=s[0],c=s[1],p=(0,f.useTranslation)().t,u=l.value||"",g=c.error&&p(c.error),d=(0,a.useMemo)((function(){if(!g&&"function"==typeof r){var n=r(u);return n&&p(n)}}),[r,g,u,p]);return i().createElement("div",{style:{marginBottom:"1rem"}},i().createElement(hn.Z,yn({},o,l,{invalid:!(!c.touched||!c.error),invalidText:g,warn:!!d,warnText:d,value:u})))};function _n(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}function vn(){return vn=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},vn.apply(this,arguments)}function An(n,e){if(n){if("string"==typeof n)return _n(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_n(n,e):void 0}}var kn=function(n){var e,t,a=n.name,r=n.options,o=n.label,s=(e=(0,D.U$)(a),t=2,function(n){if(Array.isArray(n))return n}(e)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(e,t)||An(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=s[0],c=(s[1],[i().createElement(nn.Z,{disabled:!0,hidden:!0,text:"Select ".concat(o),key:"",value:""})].concat(function(n){return function(n){if(Array.isArray(n))return _n(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||An(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(r.map((function(n,e){return i().createElement(nn.Z,{text:n,value:n,key:e})})))));return i().createElement("div",{style:{marginBottom:"1rem"}},i().createElement(X.Z,vn({id:"identifier"},l,{labelText:o,light:!0}),c))},xn=function(){var n=i().useContext(S).values,e=(0,f.useTranslation)().t;return i().createElement("section",{className:H.formSection,"aria-label":"Death Info Section"},i().createElement("h5",{className:"omrs-type-title-5 ".concat(H.formSectionTitle)},"Death Info"),i().createElement("section",{className:H.fieldGroup},i().createElement($n,{labelText:e("isDeadInputLabel","Is Dead"),name:"isDead",id:"isDead",light:!0}),n.isDead&&i().createElement(i().Fragment,null,i().createElement($n,{labelText:e("deathDateInputLabel","Date of Death"),name:"deathDate",id:"deathDate",light:!0}),i().createElement(kn,{options:[e("unknown","Unknown"),e("stroke","Stroke")],label:e("causeOfDeathInputLabel","Cause of Death"),name:"deathCause"}))))},wn=t(4187),Cn=function(n){var e=n.id,t=n.children,a=n.name,r=n.index,o=(0,f.useTranslation)().t;return i().createElement("div",{id:e},i().createElement("h3",{className:T.productiveHeading02,style:{color:"#161616"}},r+1,". ",a),i().createElement("span",{className:T.label01},o("allFieldsRequiredText","All fields are required unless marked optional")),i().createElement("div",{style:{margin:"1rem 0 1rem"}},i().createElement(wn.n9,null,t)))},zn=t(6159),En={};En.styleTagTransform=B(),En.setAttributes=w(),En.insert=k().bind(null,"head"),En.domAPI=v(),En.insertStyleElement=z(),$()(zn.Z,En);const Bn=zn.Z&&zn.Z.locals?zn.Z.locals:void 0;function Nn(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}function Mn(){return Mn=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},Mn.apply(this,arguments)}function Tn(n){return(new DOMParser).parseFromString(n,"text/xml")}function Dn(n,e){var t=e.getElementsByTagName(n)[0];return Tn(t?t.outerHTML:"")}var In=function(){var n,e,t=(0,a.useContext)(c.Cg).addressTemplate,r=(n=(0,a.useState)([]),e=2,function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Nn(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Nn(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],s=r[1],l=(0,f.useTranslation)().t,p=t.results[0].value;return(0,a.useEffect)((function(){var n=Tn(p),e=Dn("nameMappings",n),t=Dn("elementdefaults",n),a=e.getElementsByTagName("property"),i=Array.prototype.map.call(a,(function(n){var e=n.getAttribute("name"),a=l(e,n.getAttribute("value")),i=function(n,e){var t=e.getElementsByTagName(n)[0];return t?t.getAttribute("value"):null}(e,t);return{id:e,name:e,labelText:a,value:i}}));s(i)}),[l,p]),i().createElement("div",null,i().createElement("h4",{className:Bn.productiveHeading02Light},l("addressHeader","Address")),i().createElement("div",null,o.map((function(n){return i().createElement($n,Mn({key:n.name},n,{light:!0}))}))))},Fn=function(){var n=(0,f.useTranslation)().t;return i().createElement("div",null,i().createElement($n,{id:"phone",name:"phone",labelText:n("phoneNumberInputLabelText","Phone number (optional)"),light:!0}))},Sn=function(){var n=(0,f.useTranslation)().t;return i().createElement("div",null,i().createElement("h4",{className:Bn.productiveHeading02Light},n("phoneEmailLabelText","Phone, Email, etc.")),i().createElement("div",{className:Bn.grid},i().createElement(Fn,null),i().createElement($n,{id:"email",name:"email",labelText:n("emailLabelText","Email"),light:!0})))},Ln=t(6228),On=t(8953);function qn(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}var Gn=/^([^0-9]*)$/;function jn(n){if(!Gn.test(n))return"numberInNameDubious"}var Pn=function(){var n,e,t=(0,f.useTranslation)().t,r=(0,a.useContext)(S),o=r.setCapturePhotoProps,s=r.currentPhoto,c=r.setFieldValue,p=(0,l.useConfig)().fieldConfigurations,u=null==p?void 0:p.name,g=!(n=(0,D.U$)("unidentifiedPatient"),e=1,function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(n,e)||function(n,e){if(n){if("string"==typeof n)return qn(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?qn(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0].value,d=(0,a.useCallback)((function(n,e){o&&o({imageData:n,dateTime:e})}),[o]);return i().createElement("div",null,i().createElement("h4",{className:Bn.productiveHeading02Light},t("fullNameLabelText","Full Name")),i().createElement("div",{className:Bn.grid},i().createElement(l.ExtensionSlot,{className:Bn.photoExtension,extensionSlotName:"capture-patient-photo-slot",state:{onCapturePhoto:d,initialState:s}}),i().createElement("div",{className:Bn.nameField},i().createElement("div",{className:Bn.dobContentSwitcherLabel},i().createElement("span",{className:Bn.label01},t("patientNameKnown","Patient's Name is Known?"))),i().createElement(Ln.Z,{className:Bn.contentSwitcher,onChange:function(n){"known"===n.name?(c("givenName",""),c("familyName",""),c("unidentifiedPatient",!1)):(c("givenName",u.defaultUnknownGivenName),c("familyName",u.defaultUnknownFamilyName),c("unidentifiedPatient",!0))}},i().createElement(On.Z,{name:"known",text:t("yes","Yes")}),i().createElement(On.Z,{name:"unknown",text:t("no","No")})),g&&i().createElement(i().Fragment,null,i().createElement($n,{id:"givenName",name:"givenName",labelText:t("givenNameLabelText","First Name"),light:!0,checkWarning:jn}),u.displayMiddleName&&i().createElement($n,{id:"middleName",name:"middleName",labelText:t("middleNameLabelText","Middle Name (optional)"),light:!0,checkWarning:jn}),i().createElement($n,{id:"familyName",name:"familyName",labelText:t("familyNameLabelText","Family Name"),light:!0,checkWarning:jn})))))},Un=t(8769),Zn=t(6086);function Rn(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}const Hn=function(){var n,e,t=(0,f.useTranslation)().t,r=(n=(0,D.U$)("gender"),e=2,function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Rn(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Rn(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],s=r[1],l=(0,a.useContext)(S).setFieldValue;return i().createElement("div",{className:Bn.halfWidthInDesktopView},i().createElement("h4",{className:Bn.productiveHeading02Light},t("sexFieldLabelText","Sex")),i().createElement("div",{className:Bn.sexField},i().createElement("p",{className:"bx--label"},t("genderLabelText","Sex")),i().createElement(Un.Z,{name:"gender",orientation:"vertical",onChange:function(n){l("gender",n)},valueSelected:o.value},i().createElement(Zn.Z,{id:"male",labelText:t("maleLabelText","Male"),value:"Male"}),i().createElement(Zn.Z,{id:"female",labelText:t("femaleLabelText","Female"),value:"Female"}),i().createElement(Zn.Z,{id:"other",labelText:t("otherLabelText","Other"),value:"Other"}),i().createElement(Zn.Z,{id:"unknown",labelText:t("unknownLabelText","Unknown"),value:"Unknown"})),s.touched&&s.error&&i().createElement("div",{className:Bn.radioFieldError},t(s.error,"Gender is required"))))};var Wn=t(618);function Vn(n){return Yn(n)&&!n.identifierSources.some((function(n){var e,t;return!(null===(e=n.autoGenerationOption)||void 0===e?void 0:e.manualEntryEnabled)&&(null===(t=n.autoGenerationOption)||void 0===t?void 0:t.automaticGenerationEnabled)}))}function Yn(n){return"UNIQUE"===n.uniquenessBehavior||"LOCATION"===n.uniquenessBehavior}function Jn(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}function Qn(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function Kn(){return Kn=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},Kn.apply(this,arguments)}function Xn(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Jn(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Jn(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var ne=function(n){var e=n.patientIdentifier,t=n.index,r=n.remove,o=(0,a.useContext)(c.Cg).identifierTypes,s=(0,a.useContext)(S).isOffline,p=(0,a.useMemo)((function(){return o.find((function(n){return n.uuid===e.identifierTypeUuid}))}),[e,o]),u="identifiers[".concat(t,"].identifier"),g=Xn((0,D.U$)(u),2),d=g[0],h=g[1],m=i().useContext(S).setFieldValue,y=e.source,$=e.action,_=e.identifier,v=null==p?void 0:p.name,A=(0,f.useTranslation)().t,k=Xn((0,a.useState)({manualEntryEnabled:!!y||void 0,automaticGenerationEnabled:void 0}),2),x=k[0],w=k[1],C=(!x.manualEntryEnabled||x.manualEntryEnabled&&x.automaticGenerationEnabled,s&&Vn(p)),z=(0,l.useConfig)().defaultPatientIdentifierTypes,E=(0,a.useMemo)((function(){var n={};return null==z||z.forEach((function(e){n[e]=!0})),n}),[z]),B="ADD"===(null==e?void 0:e.action)||void 0===(null==e?void 0:e.action);(0,a.useEffect)((function(){var n;(null==y||null===(n=y.autoGenerationOption)||void 0===n?void 0:n.automaticGenerationEnabled)&&(m("identifiers[".concat(t,"].autoGeneration"),!0),m("identifiers[".concat(t,"].identifier"),"auto-generated"))}),[y]),(0,a.useEffect)((function(){y&&y.autoGenerationOption?(w(y.autoGenerationOption),y.autoGenerationOption.automaticGenerationEnabled&&(m("identifiers[".concat(t,"].autoGeneration"),!0),m("identifiers[".concat(t,"].identifier"),"auto-generated"))):(w({manualEntryEnabled:!0,automaticGenerationEnabled:!1}),m("identifiers[".concat(t,"].autoGeneration"),!1))}),[y]);var N=(0,a.useCallback)((function(){var n;m("identifiers[".concat(t,"]"),function(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable})))),a.forEach((function(e){Qn(n,e,t[e])}))}return n}({},e,{action:"UPDATE",source:null==p||null===(n=p.identifierSources)||void 0===n?void 0:n[0]}))}),[e]),M=(0,a.useCallback)((function(){if("ADD"===$)r(t);else var n=(0,l.showModal)("delete-identifier-confirmation-modal",{deleteIdentifier:function(e){e&&m("identifiers[".concat(t,"].action"),"DELETE"),n()},identifierName:v,identifierValue:_})}),[$,e,v,_]);return i().createElement("div",{className:j.IDInput},!x.manualEntryEnabled||"ADD"!==$&&"UPDATE"!==$?i().createElement("div",{className:j.textID},i().createElement("p",{className:j.label},v),i().createElement("p",{className:j.bodyShort02},B?A("autoGeneratedPlaceholderText","Auto generated"):_)):i().createElement($n,Kn({id:v,light:!0,labelText:v,name:u,disabled:!x.manualEntryEnabled||C,invalid:!(!h.touched||!h.error),invalidText:h.error&&A(h.error)},d)),i().createElement("div",null,!(p.isPrimary||p.required||E[p.uuid])&&"NONE"===e.action&&i().createElement(b.Z,{kind:"ghost",onClick:N,iconDescription:A("editIdentifierTooltip","Edit"),disabled:C,hasIconOnly:!0},i().createElement(Wn.dr6,null)),!((null==p?void 0:p.isPrimary)||(null==p?void 0:p.required)||E[p.uuid])&&i().createElement(b.Z,{kind:"danger--ghost",onClick:M,iconDescription:A("deleteIdentifierTooltip","Delete"),disabled:C,hasIconOnly:!0},i().createElement(pn.XqF,null))))},ee=t(4673),te=t(1627),ae={};ae.styleTagTransform=B(),ae.setAttributes=w(),ae.insert=k().bind(null,"head"),ae.domAPI=v(),ae.insertStyleElement=z(),$()(te.Z,ae);const ie=te.Z&&te.Z.locals?te.Z.locals:void 0;var re=t(4868),oe=t(8358),se=t(3342),le=t(8120),ce={};ce.styleTagTransform=B(),ce.setAttributes=w(),ce.insert=k().bind(null,"head"),ce.domAPI=v(),ce.insertStyleElement=z(),$()(le.Z,ce);const pe=le.Z&&le.Z.locals?le.Z.locals:void 0,ue=function(n){var e=n.close,t=n.children,a=n.header,r=n.buttonsGroup,o="desktop"===(0,l.useLayoutType)();return i().createElement("div",{className:o?pe.desktopOverlay:pe.tabletOverlay},o?i().createElement("div",{className:pe.desktopHeader},i().createElement("div",{className:pe.headerContent},a),i().createElement(b.Z,{className:pe.closeButton,onClick:e,kind:"ghost",hasIconOnly:!0},i().createElement(oe.PcV,null))):i().createElement(se.Z,{className:pe.tabletOverlayHeader},i().createElement(b.Z,{onClick:e,hasIconOnly:!0},i().createElement(ee._V8,{onClick:e})),i().createElement("div",{className:pe.headerContent},a)),i().createElement("div",{className:pe.overlayContent},t),i().createElement("div",{className:pe.buttonsGroup},r))};function ge(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}function de(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function be(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable})))),a.forEach((function(e){de(n,e,t[e])}))}return n}function fe(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(n,e)||function(n,e){if(n){if("string"==typeof n)return ge(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?ge(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}const he=function(n){var e,t=n.closeOverlay,r=n.push,o=n.setFieldValue,s=n.identifiers,p=n.remove,u=(0,a.useContext)(c.Cg).identifierTypes,g=(0,a.useContext)(S).isOffline,d=fe((0,a.useState)([]),2),h=d[0],m=d[1],y=fe((0,a.useState)(""),2),$=y[0],_=y[1],v=(0,f.useTranslation)().t,A=function(n){return s.find((function(e){return e.identifierTypeUuid===n}))},k=(0,l.useConfig)().defaultPatientIdentifierTypes,x=(0,a.useMemo)((function(){var n={};return null==k||k.forEach((function(e){n[e]=!0})),n}),[k]);(0,a.useEffect)((function(){u&&m(u.map((function(n){var e,t,a=A(n.uuid),i=null==a?void 0:a.source,r=g&&Yn(n)?null===(e=n.identifierSources)||void 0===e?void 0:e.find((function(n){var e,t;return!(null===(e=n.autoGenerationOption)||void 0===e?void 0:e.manualEntryEnabled)&&(null===(t=n.autoGenerationOption)||void 0===t?void 0:t.automaticGenerationEnabled)})):null===(t=n.identifierSources)||void 0===t?void 0:t[0];return be({},n,{checked:a?"DELETE"!==a.action:n.isPrimary||n.required||x[n.uuid],source:null!=i?i:r})})))}),[u,s]);var w=(0,a.useCallback)((function(n){var t;return _(null!==(e=null==n||null===(t=n.target)||void 0===t?void 0:t.value)&&void 0!==e?e:"")}),[]),C=(0,a.useMemo)((function(){return null==h?void 0:h.filter((function(n){var e;return null==n||null===(e=n.name)||void 0===e?void 0:e.toLowerCase().includes($.toLowerCase())}))}),[h,$]),z=(0,a.useMemo)((function(){return C.map((function(n){var e,t,a=A(n.uuid),r=!("NONE"===(null==a?void 0:a.action)),o=a?"DELETE"!==a.action:n.isPrimary||n.required||x[n.uuid],s=g&&Vn(n);return i().createElement("div",{key:n.uuid,className:ie.space05},i().createElement(re.Z,{id:n.uuid,value:n.uuid,labelText:n.name,onChange:function(e){return function(n,e){return m((function(t){return t.map((function(t){return t.uuid===n?be({},t,{checked:t.isPrimary||t.required||x[t.uuid]||e}):t}))}))}(null==n?void 0:n.uuid,e)},checked:n.checked,disabled:o||g&&s}),r&&n.checked&&(null==n||null===(e=n.identifierSources)||void 0===e?void 0:e.length)>0&&i().createElement("div",{className:ie.radioGroup},i().createElement(Un.Z,{legendText:v("source","Source"),name:"".concat(null==n?void 0:n.fieldName,"-identifier-sources"),defaultSelected:null==a||null===(t=a.source)||void 0===t?void 0:t.uuid,onChange:function(e){return function(n,e){return m((function(t){return null==t?void 0:t.map((function(t){return(null==t?void 0:t.uuid)===n?be({},t,{source:null==t?void 0:t.identifierSources.find((function(n){return(null==n?void 0:n.uuid)===e}))}):t}))}))}(null==n?void 0:n.uuid,e)},orientation:"vertical"},null==n?void 0:n.identifierSources.map((function(e){var t;return i().createElement(Zn.Z,{key:e.uuid,labelText:e.name,name:e.uuid,value:e.uuid,className:ie.radioButton,disabled:g&&Yn(n)&&(null===(t=e.autoGenerationOption)||void 0===t?void 0:t.manualEntryEnabled)})})))))}))}),[C]),E=(0,a.useCallback)((function(){h.forEach((function(n){var e=s.findIndex((function(e){return e.identifierTypeUuid===n.uuid}));if(e>=0){var t,a=s[e];n.checked||"ADD"!==s[e].action?(n.checked?t="DELETE"===a.action?"UPDATE":a.action:"UPDATE"===a.action&&(t="DELETE"),o("identifiers[".concat(e,"]"),be({},s[e],{action:t,source:"ADD"===t||"UPDATE"===t?n.source:null}))):p(e)}else n.checked&&r({identifier:"",action:"ADD",source:n.source,identifierTypeUuid:n.uuid,preferred:n.isPrimary})})),t()}),[h,s]);return i().createElement(ue,{close:t,header:v("configureIdentifiers","Configure identifiers"),buttonsGroup:i().createElement("div",{className:ie.overlayButtons},i().createElement(b.Z,{kind:"secondary",size:"lg",onClick:t},v("cancel","Cancel")),i().createElement(b.Z,{kind:"primary",size:"lg",onClick:E},v("configureIdentifiers","Configure identifiers")))},i().createElement("div",null,i().createElement("p",{className:ie.bodyLong02},v("IDInstructions","Select the identifiers you'd like to add for this patient:")),h.length>7&&i().createElement("div",{className:ie.space05},i().createElement(tn.Z,{labelText:v("searchIdentifierPlaceholder","Search identifier"),placeholder:v("searchIdentifierPlaceholder","Search identifier"),onChange:w,value:$})),i().createElement("fieldset",null,z)))};function me(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}var ye=function(){var n,e,t=(0,a.useContext)(c.Cg).identifierTypes,r=(0,a.useContext)(S),o=r.setFieldValue,s=r.inEditMode,p=(0,f.useTranslation)().t,u="desktop"===(0,l.useLayoutType)(),g=(n=(0,a.useState)(!1),e=2,function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(n,e)||function(n,e){if(n){if("string"==typeof n)return me(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?me(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),d=g[0],h=g[1],m=(0,l.useConfig)().defaultPatientIdentifierTypes;return(0,a.useEffect)((function(){if(!s&&t){var n={};(null==m?void 0:m.length)&&m.forEach((function(e){n[e]=!0})),o("identifiers",t.filter((function(e){return e.required||n[e.uuid]})).map((function(n){var e;return{action:"ADD",identifier:"",identifierTypeUuid:n.uuid,source:null===(e=n.identifierSources)||void 0===e?void 0:e[0],preferred:n.isPrimary}})))}}),[t,s,m,o]),i().createElement("div",{className:Bn.halfWidthInDesktopView},i().createElement("div",{className:Bn.identifierLabelText},i().createElement("h4",{className:Bn.productiveHeading02Light},p("idFieldLabelText","Identifiers")),i().createElement(b.Z,{kind:"ghost",className:Bn.setIDNumberButton,onClick:function(){return h(!0)},size:u?"sm":"md"},p("configure","Configure")," ",i().createElement(ee.i9_,null))),i().createElement("div",null,i().createElement(D.F2,{name:"identifiers"},(function(n){var e=n.push,t=n.remove,a=n.form.values.identifiers;return i().createElement(i().Fragment,null,a.filter((function(n){return"DELETE"!==n.action})).map((function(n,e){return i().createElement(ne,{key:e,index:e,patientIdentifier:n,remove:t})})),d&&i().createElement(he,{setFieldValue:o,closeOverlay:function(){return h(!1)},push:e,identifiers:a,remove:t}))}))))},$e=function(n){var e=n.fields;return i().createElement("section",{className:H.formSection,"aria-label":"Additional Information Section"},e.map((function(n){return i().createElement("div",{key:n},Ie(n))})))},_e=t(6642),ve=t(6194);function Ae(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}function ke(){return ke=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},ke.apply(this,arguments)}function xe(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(n,e)||function(n,e){if(n){if("string"==typeof n)return Ae(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Ae(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var we=function(){var n,e,t=(0,f.useTranslation)().t,r=!xe((0,D.U$)("birthdateEstimated"),1)[0].value,o=xe((0,D.U$)("birthdate"),2),s=o[0],l=o[1],c=xe((0,D.U$)("ageEstimate"),2),p=c[0],u=c[1],g=(0,a.useContext)(S).setFieldValue,d=(e="/",{parse:function(t){var a=t.split(e),i=new Date(null);return n.forEach((function(n,e){switch(n){case"d":i.setDate(parseInt(a[e]));break;case"m":i.setMonth(parseInt(a[e])-1);break;case"Y":i.setFullYear(parseInt(a[e]))}})),i},format:function(t){if(null===t)return"";if(i=t,null!=(r=Date)&&"undefined"!=typeof Symbol&&r[Symbol.hasInstance]?r[Symbol.hasInstance](i):i instanceof r){var a=[];return n.forEach((function(n,e){switch(n){case"d":a[e]=t.getDate();break;case"m":a[e]=t.getMonth()+1;break;case"Y":a[e]=t.getFullYear()}})),a.join(e)}return t;var i,r},placeHolder:(n=["d","m","Y"]).map((function(n){return"Y"===n?"YYYY":n+n})).join(e),dateFormat:n.join(e)}),b=d.format,h=d.placeHolder,m=d.dateFormat,y=new Date;return i().createElement("div",{className:Bn.halfWidthInDesktopView},i().createElement("h4",{className:Bn.productiveHeading02Light},t("birthFieldLabelText","Birth")),i().createElement("div",{className:Bn.dobField},i().createElement("div",{className:Bn.dobContentSwitcherLabel},i().createElement("span",{className:Bn.label01},t("dobToggleLabelText","Date of Birth Known?"))),i().createElement(Ln.Z,{onChange:function(n){g("birthdateEstimated","unknown"===n.name),g("birthdate",""),g("ageEstimate","")}},i().createElement(On.Z,{name:"known",text:t("yes","Yes")}),i().createElement(On.Z,{name:"unknown",text:t("no","No")}))),r?i().createElement("div",{className:Bn.dobField},i().createElement(_e.Z,{dateFormat:m,datePickerType:"single",light:!0,onChange:function(n){var e=xe(n,1)[0];g("birthdate",e)},maxDate:b(y)},i().createElement(ve.Z,ke({id:"birthdate"},s,{placeholder:h,labelText:t("dateOfBirthLabelText","Date of Birth"),invalid:!(!l.touched||!l.error),invalidText:l.error&&t(l.error),value:b(s.value)})))):i().createElement("div",{className:Bn.dobField},i().createElement(hn.Z,{id:"ageEstimate",type:"number",light:!0,onChange:function(n){var e=+n.target.value;!isNaN(e)&&e<140&&e>=0&&(g("birthdate",new Date(y.getFullYear()-e,0,1)),g("ageEstimate",e))},labelText:t("estimatedYearsLabelText","Estimated Years"),invalid:!(!u.touched||!u.error),invalidText:u.error&&t(u.error),value:p.value,min:0})))},Ce=t(2303);function ze(n){var e=(0,Ce.Z)("/ws/rest/v1/personattributetype/".concat(n),l.openmrsFetch),t=e.data,a=e.error;return a&&(0,l.showToast)({title:a.name,description:a.message,kind:"error"}),{data:null==t?void 0:t.data,isLoading:!t&&!a}}var Ee=function(){var n=(0,l.useConfig)().codedPersonAttributes;return(null==n?void 0:n.length)?i().createElement("div",null,n.map((function(n,e){return i().createElement(Be,{key:e,personAttributeTypeUuid:n.personAttributeUuid,conceptUuid:n.conceptUuid})}))):null},Be=function(n){var e=n.personAttributeTypeUuid,t=n.conceptUuid,a=ze(e),r=a.data,o=a.isLoading,s=function(n){var e,t="string"==typeof n&&""!==n,a=(0,Ce.Z)(t?"/ws/rest/v1/concept/".concat(n):null,l.openmrsFetch),i=a.data,r=a.error;return r&&(0,l.showToast)({title:r.name,description:r.message,kind:"error"}),{data:null==i||null===(e=i.data)||void 0===e?void 0:e.answers,isLoading:!i&&!r}}(t),c=s.data,p=s.isLoading;return o?null:i().createElement("div",{className:"".concat(Bn.attributeField," ").concat(Bn.halfWidthInDesktopView)},!p&&(null==c?void 0:c.length)?i().createElement(X.Z,{id:"person-attribute-".concat(e),name:"attributes.".concat(e),labelText:null==r?void 0:r.display,light:!0},c.map((function(n){return i().createElement(nn.Z,{key:n.uuid,value:n.uuid,text:n.display})}))):i().createElement($n,{id:"person-attribute-".concat(e),labelText:null==r?void 0:r.display,name:"attributes.".concat(e),light:!0}))};function Ne(){return Ne=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},Ne.apply(this,arguments)}var Me=function(){var n=(0,l.useConfig)().textBasedAttributes;return(null==n?void 0:n.length)?i().createElement("div",null,n.map((function(n,e){return i().createElement(Te,{key:e,personAttributeTypeUuid:n.personAttributeUuid,validationRegex:n.validationRegex})}))):null},Te=function(n){var e=n.personAttributeTypeUuid,t=n.validationRegex,a=ze(e),r=a.data,o=a.isLoading,s=(0,f.useTranslation)().t;return o?null:i().createElement("div",{className:"".concat(Bn.attributeField," ").concat(Bn.halfWidthInDesktopView)},i().createElement(D.gN,{name:"attributes.".concat(e),validate:function(n){var e;return n&&t&&""!==t&&"string"==typeof t&&""!==n?new RegExp(t).test(n)?e:e=s("invalidInput","Invalid Input"):e}},(function(n){var t=n.field,a=n.form,o=a.touched,s=a.errors;return n.meta,i().createElement($n,Ne({id:"person-attribute-".concat(e),labelText:null==r?void 0:r.display,light:!0,invalid:s["attributes.".concat(e)]&&o["attributes.".concat(e)]},t))})))};function De(){return De=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},De.apply(this,arguments)}function Ie(n){switch(n){case"address":return i().createElement(In,null);case"phone & email":return i().createElement(Sn,null);case"name":return i().createElement(Pn,null);case"gender":return i().createElement(Hn,null);case"dob":return i().createElement(we,null);case"id":return i().createElement(ye,null);case"codedAttributes":return i().createElement(Ee,null);case"textBasedAttributes":return i().createElement(Me,null);default:return i().createElement("div",null,"Unknown Field ",n," ")}}var Fe=t(2777),Se=t(1525);function Le(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function Oe(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable})))),a.forEach((function(e){Le(n,e,t[e])}))}return n}function qe(n,e,t){var a,i,r;return null!==(r=null===(i=null===(a=t.querySelector(e))||void 0===a?void 0:a.querySelector("[name=".concat(n,"]")))||void 0===i?void 0:i.getAttribute("value"))&&void 0!==r?r:null}function Ge(){(0,l.navigate)({to:"".concat(window.spaBase,"/home")})}function je(n){var e={},t=n.name[0],a=n.name[1];return e.patientUuid=n.id,e.givenName=null==t?void 0:t.given[0],e.middleName=null==t?void 0:t.given[1],e.familyName=null==t?void 0:t.family,e.unidentifiedPatient="UNKNOWN"===t.given[0]&&"unknown"===t.family||void 0,e.addNameInLocalLanguage=!!a||void 0,e.additionalGivenName=null==a?void 0:a.given[0],e.additionalMiddleName=null==a?void 0:a.given[1],e.additionalFamilyName=null==a?void 0:a.family,e.gender=(0,Se.Z)(n.gender),e.birthdate=n.birthDate?new Date(n.birthDate):void 0,e.telephoneNumber=n.telecom?n.telecom[0].value:"",(n.deceasedBoolean||n.deceasedDateTime)&&(e.isDead=!0,e.deathDate=n.deceasedDateTime?n.deceasedDateTime.split("T")[0]:""),Oe({},e,n.identifier.map((function(n){return Le({},(0,Fe.Z)(n.system||n.type.text),n.value)})))}function Pe(n){var e,t={},a=null===(e=n.address)||void 0===e?void 0:e[0];if(a){var i=!0,r=!1,o=void 0;try{for(var s,l=Object.keys(a)[Symbol.iterator]();!(i=(s=l.next()).done);i=!0){var c=s.value;switch(c){case"city":t.cityVillage=a[c];break;case"state":t.stateProvince=a[c];break;case"district":t.countyDistrict=a[c];break;case"extension":a[c].forEach((function(n){n.extension.forEach((function(n){t[n.url.split("#")[1]]=n.valueString}))}));break;default:"country"!==c&&"postalCode"!==c||(t[c]=a[c])}}}catch(n){r=!0,o=n}finally{try{i||null==l.return||l.return()}finally{if(r)throw o}}}return t}function Ue(n){var e,t=n.name[0],a=n.name[1],i=null===(e=n.address)||void 0===e?void 0:e[0];return Oe({preferredNameUuid:null==t?void 0:t.id,additionalNameUuid:null==a?void 0:a.id,preferredAddressUuid:null==i?void 0:i.id},n.identifier.map((function(n){return Le({},(0,Fe.Z)(n.system||n.type.text),{uuid:n.id,value:n.value})})))}function Ze(n){var e={};return n.telecom&&(e.phone=n.telecom[0].value),e}var Re=t(8179);function He(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}function We(n,e,t,a,i,r,o){try{var s=n[r](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(a,i)}function Ve(n){return function(){var e=this,t=arguments;return new Promise((function(a,i){var r=n.apply(e,t);function o(n){We(r,a,i,o,s,"next",n)}function s(n){We(r,a,i,o,s,"throw",n)}o(void 0)}))}}function Ye(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function Je(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable})))),a.forEach((function(e){Ye(n,e,t[e])}))}return n}function Qe(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(n,e)||function(n,e){if(n){if("string"==typeof n)return He(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?He(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ke(n){return Xe.apply(this,arguments)}function Xe(){return(Xe=Ve(u().mark((function n(e){var t;return u().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,(0,l.getSynchronizationItems)(Re.Kt);case 2:return t=n.sent,n.abrupt("return",t.find((function(n){return n._patientRegistrationData.formValues.patientUuid===e})));case 4:case"end":return n.stop()}}),n)})))).apply(this,arguments)}function nt(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}function et(n,e,t,a,i,r,o){try{var s=n[r](o),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(a,i)}function tt(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function at(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var a,i,r=[],o=!0,s=!1;try{for(t=t.call(n);!(o=(a=t.next()).done)&&(r.push(a.value),!e||r.length!==e);o=!0);}catch(n){s=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(s)throw i}}return r}}(n,e)||function(n,e){if(n){if("string"==typeof n)return nt(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?nt(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var it=function(n){var e,t=n.savePatientForm,o=n.match,s=n.isOffline,p=(0,a.useContext)(c.Cg),h=p.currentSession,y=p.addressTemplate,$=p.identifierTypes,_=(0,r.useLocation)().search,v=(0,l.useConfig)(),A=at((0,a.useState)([]),2),k=A[0],x=A[1],w=at((0,a.useState)(),2),C=w[0],z=w[1],E=at((0,a.useState)(F),2),B=E[0],N=E[1],M=o.params.patientUuid,q=(0,l.usePatient)(M),G=q.isLoading,j=q.patient,P=(0,f.useTranslation)().t,Z=at((0,a.useState)(null),2),R=Z[0],H=Z[1],W=at((0,a.useState)({}),2),J=W[0],Q=W[1],K=at(function(n){var e,t,i,r,o,s,c=(0,l.usePatient)(n),p=c.isLoading,g=c.patient,d=(t=!!(e=n),i=(0,Ce.Z)(t?"/ws/rest/v1/person/".concat(e,"/attribute"):null,l.openmrsFetch),r=i.data,o=i.error,s=(0,a.useMemo)((function(){var n;return{data:null==r||null===(n=r.data)||void 0===n?void 0:n.results,isLoading:!r&&!o}}),[r,o]),s),b=d.data,f=d.isLoading,h=function(n){var e=!!n,t=(0,Ce.Z)(e?"/ws/rest/v1/patient/".concat(n,"/identifier?v=full"):null,l.openmrsFetch),i=t.data,r=t.error,o=(0,a.useMemo)((function(){var n,e;return{data:null==i||null===(n=i.data)||void 0===n||null===(e=n.results)||void 0===e?void 0:e.map((function(n){return{uuid:n.uuid,identifier:n.identifier,identifierTypeUuid:n.identifierType.uuid,action:"NONE",source:null,preferred:n.identifierType.isPrimary}})),isLoading:!i&&!r}}),[i,r]);return o}(n),m=h.data,y=h.isLoading,$=function(n){var e=!!n,t=(0,Ce.Z)(e?"/ws/rest/v1/relationship?v=".concat("custom:(display,uuid,personA:(age,display,birthdate,uuid),personB:(age,display,birthdate,uuid),relationshipType:(uuid,display,description,aIsToB,bIsToA))","&person=").concat(n):null,l.openmrsFetch),i=t.data,r=t.error;return r&&(0,l.showToast)({title:r.name,description:r.message,kind:"error"}),(0,a.useMemo)((function(){var e;return{data:null==i||null===(e=i.data)||void 0===e?void 0:e.results.map((function(e){return e.personA.uuid===n?{relatedPersonName:e.personB.display,relatedPersonUuid:e.personB.uuid,relation:e.relationshipType.bIsToA,relationshipType:"".concat(e.relationshipType.uuid,"/bIsToA"),initialrelationshipTypeValue:"".concat(e.relationshipType.uuid,"/bIsToA"),uuid:e.uuid}:{relatedPersonName:e.personA.display,relatedPersonUuid:e.personA.uuid,relation:e.relationshipType.aIsToB,relationshipType:"".concat(e.relationshipType.uuid,"/aIsToB"),initialrelationshipTypeValue:"".concat(e.relationshipType.uuid,"/aIsToB"),uuid:e.uuid}})),isLoading:!i&&!r}}),[i,r])}(n),_=$.data,v=$.isLoading,A=Qe((0,a.useState)({patientUuid:(0,O.Z)(),givenName:"",middleName:"",familyName:"",unidentifiedPatient:!1,additionalGivenName:"",additionalMiddleName:"",additionalFamilyName:"",addNameInLocalLanguage:!1,gender:"",birthdate:null,ageEstimate:null,yearsEstimated:0,monthsEstimated:0,birthdateEstimated:!1,telephoneNumber:"",address1:"",address2:"",cityVillage:"",stateProvince:"",country:"",postalCode:"",isDead:!1,deathDate:"",deathCause:"",relationships:[],identifiers:[]}),2),k=A[0],x=A[1];return(0,a.useEffect)((function(){Ve(u().mark((function e(){var t;return u().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!g){e.next=4;break}x(Je({},k,je(g),Pe(g),Ze(g))),e.next=12;break;case 4:if(p||!n){e.next=12;break}return e.next=7,Ke(n);case 7:if((t=e.sent)._patientRegistrationData.formValues){e.next=11;break}return console.error("Found a queued offline patient registration for patient ".concat(n,", but without form values. Not using these values.")),e.abrupt("return");case 11:x(t._patientRegistrationData.formValues);case 12:case"end":return e.stop()}}),e)})))()}),[p,g,n]),(0,a.useEffect)((function(){!v&&_&&x((function(n){return Je({},n,{relationships:_})}))}),[v,_,x]),(0,a.useEffect)((function(){!y&&m&&x((function(n){return Je({},n,{identifiers:m})}))}),[y,m,x]),(0,a.useEffect)((function(){if(!f&&b){var n={};b.forEach((function(e){n[e.attributeType.uuid]=e.value})),x((function(e){return Je({},e,{attributes:n})}))}}),[b,x,f]),[k,x]}(M),2),X=K[0],nn=K[1],en=at(function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=(0,l.usePatient)(n),i=t.isLoading,r=t.patient,o=Qe((0,a.useState)(e),2),s=o[0],c=o[1];return(0,a.useEffect)((function(){Ve(u().mark((function t(){var a,o;return u().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!r){t.next=4;break}c(Je({},s,Pe(r))),t.next=10;break;case 4:if(i||!n){t.next=10;break}return t.next=7,Ke(n);case 7:a=t.sent,c(null!==(o=null==a?void 0:a._patientRegistrationData.initialAddressFieldValues)&&void 0!==o?o:e);case 10:case"end":return t.stop()}}),t)})))()}),[i,r,n]),[s,c]}(M),1),tn=en[0],an=at(function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=(0,l.usePatient)(n),i=t.isLoading,r=t.patient,o=Qe((0,a.useState)(e),2),s=o[0],c=o[1];return(0,a.useEffect)((function(){if(r)c(Je({},s,Ue(r)));else if(!i&&n){var t;Ke(n).then((function(n){return c(null!==(t=null==n?void 0:n._patientRegistrationData.initialAddressFieldValues)&&void 0!==t?t:e)}))}}),[i,r,n]),[s,c]}(M),1),rn=an[0],on=null===(e=h.sessionLocation)||void 0===e?void 0:e.uuid,sn=G?void 0:!(!M||!j),ln=(0,a.useMemo)((function(){return"true"===localStorage.getItem("openmrs:devtools")&&!sn}),[sn]),cn=(0,L.Uu)(null==j?void 0:j.id).data;(0,a.useEffect)((function(){}),[X]),(0,a.useEffect)((function(){if(null==v?void 0:v.sections){var n=v.sections.map((function(n){return{id:n,name:v.sectionDefinitions[n].name,fields:v.sectionDefinitions[n].fields}}));x(n),Q(v.fieldConfigurations)}}),[v.sections,v.fieldConfigurations,v.sectionDefinitions]),(0,a.useEffect)((function(){var n=y.results[0].value;if(n){var e=function(n){var e=(new DOMParser).parseFromString(n,"text/xml"),t=e.querySelector("nameMappings").querySelectorAll("property"),a=Array.prototype.map.call(t,(function(n){var t=n.getAttribute("name");return{name:t,label:n.getAttribute("value"),regex:qe(t,"elementRegex",e)||".*",regexFormat:qe(t,"elementRegexFormats",e)||""}})),i=I.Ry(a.reduce((function(n,e){return n[e.name]=I.Z_().matches(e.regex,e.regexFormat),n}),{}));return{addressFieldValues:Array.prototype.map.call(t,(function(n){var t,a=n.getAttribute("name");return{name:a,defaultValue:null!==(t=qe(a,"elementDefaults",e))&&void 0!==t?t:""}})),addressValidationSchema:i}}(n),t=e.addressFieldValues,a=e.addressValidationSchema;if(N((function(n){return n.concat(a)})),!1===sn){var i=!0,r=!1,o=void 0;try{for(var s,l=t[Symbol.iterator]();!(i=(s=l.next()).done);i=!0){var c=s.value,p=c.name,u=c.defaultValue;tn[p]||(tn[p]=u)}}catch(n){r=!0,o=n}finally{try{i||null==l.return||l.return()}finally{if(r)throw o}}nn(function(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable})))),a.forEach((function(e){tt(n,e,t[e])}))}return n}({},X,tn))}}}),[sn,y,tn]);var pn,un,gn=(pn=u().mark((function n(e,a){var i,r,o,s,c,p,g;return u().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return i=new AbortController,a.setSubmitting(!0),n.prev=2,n.next=6,t(!sn,e,rn,tn,R,null==v||null===(r=v.concepts)||void 0===r?void 0:r.patientPhotoUuid,on,i);case 6:(0,l.showToast)({description:sn?P("updationSuccessToastDescription","The patient's information has been successfully updated"):P("registrationSuccessToastDescription","The patient can now be found by searching for them using their name or ID number"),title:sn?P("updationSuccessToastTitle","Patient Details Updated"):P("registrationSuccessToastTitle","New Patient Created"),kind:"success"}),o=(0,l.interpolateUrl)(new URLSearchParams(_).get("afterUrl")||(0,l.interpolateString)(v.links.submitButton,{patientUuid:e.patientUuid})),z(o),n.next=16;break;case 11:n.prev=11,n.t0=n.catch(2),(null===(s=n.t0.responseBody)||void 0===s||null===(c=s.error)||void 0===c?void 0:c.globalErrors)?n.t0.responseBody.error.globalErrors.forEach((function(n){(0,l.showToast)({description:n.message})})):(null===(p=n.t0.responseBody)||void 0===p||null===(g=p.error)||void 0===g?void 0:g.message)?(0,l.showToast)({description:n.t0.responseBody.error.message}):(0,l.createErrorHandler)()(n.t0),a.setSubmitting(!1);case 16:case"end":return n.stop()}}),n,null,[[2,11]])})),un=function(){var n=this,e=arguments;return new Promise((function(t,a){var i=pn.apply(n,e);function r(n){et(i,t,a,r,o,"next",n)}function o(n){et(i,t,a,r,o,"throw",n)}r(void 0)}))},function(n,e){return un.apply(this,arguments)});return i().createElement(D.J9,{enableReinitialize:!0,initialValues:X,validationSchema:B,onSubmit:gn},(function(n){return i().createElement(D.l0,{className:T.form},i().createElement(m,{when:n.dirty,redirect:C}),i().createElement("div",{className:T.formContainer},i().createElement("div",null,i().createElement("div",{className:T.stickyColumn},i().createElement("h4",null,sn?P("edit","Edit"):P("createNew","Create New")," ",P("patient","Patient")),ln&&i().createElement(U,{setValues:n.setValues}),i().createElement("p",{className:T.label01},P("jumpTo","Jump to")),k.map((function(n){return i().createElement("div",{className:"".concat(T.space05," ").concat(T.touchTarget),key:n.name},i().createElement(d.Z,{className:T.linkName,onClick:function(){return e=n.id,void document.getElementById(e).scrollIntoView({behavior:"smooth",block:"center",inline:"center"});var e}},i().createElement(g.Z,null)," ",n.name))})),i().createElement(b.Z,{className:T.submitButton,type:"submit"},sn?P("updatePatient","Update Patient"):P("registerPatient","Register Patient")),i().createElement(b.Z,{className:T.cancelButton,kind:"tertiary",onClick:Ge},P("cancel","Cancel")))),i().createElement("div",{className:T.infoGrid},i().createElement(S.Provider,{value:{identifierTypes:$,validationSchema:B,setValidationSchema:N,fieldConfigs:J,values:n.values,inEditMode:sn,setFieldValue:n.setFieldValue,setCapturePhotoProps:H,currentPhoto:null==cn?void 0:cn.imageSrc,isOffline:s}},k.map((function(n,e){return i().createElement("div",{key:e},function(n,e){return i().createElement(Cn,De({},n,{index:e}),function(n){switch(n.id){case"demographics":return i().createElement(V,De({},n));case"contact":return i().createElement(Y,De({},n));case"death":return i().createElement(xn,De({},n));case"relationships":return i().createElement(bn,De({},n));case"additionalInformation":return i().createElement($e,De({},n));default:return i().createElement("div",null,"Unknown Section ",n.id)}}(n))}(n,e))}))))))}))};function rt(){return rt=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},rt.apply(this,arguments)}function ot(n){var e=n.currentSession,t=n.addressTemplate,a=n.relationshipTypes,p=n.identifierTypes,u=n.savePatientForm,g=n.isOffline,d={currentSession:e,addressTemplate:t,relationshipTypes:a,identifierTypes:p};return i().createElement(c.Cg.Provider,{value:d},i().createElement(r.BrowserRouter,{basename:window.getOpenmrsSpaBase()},i().createElement("main",{className:"omrs-main-content",style:{backgroundColor:"white"}},i().createElement(o.r,null,i().createElement(s.Z,null,i().createElement(l.ExtensionSlot,{extensionSlotName:"breadcrumbs-slot"})),i().createElement(r.Route,{exact:!0,path:"/patient-registration",render:function(n){return i().createElement(it,rt({savePatientForm:u,isOffline:g},n))}}),i().createElement(r.Route,{exact:!0,path:"/patient/:patientUuid/edit",render:function(n){return i().createElement(it,rt({savePatientForm:u,isOffline:g},n))}})))))}}}]);
//# sourceMappingURL=165.js.map