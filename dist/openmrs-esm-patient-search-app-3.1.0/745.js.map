{"version":3,"file":"745.js","mappings":"+QACO,MAAMA,EAAe,CAC1BC,OAAQ,CACNC,iBAAkB,CAChBC,SAAU,iDACVC,aAAc,4FACdC,YAAa,CAACC,EAAAA,WAAAA,4BAAuC,CAAC,mBAG1DC,YAAa,CACXC,MAAOC,EAAAA,KAAAA,QACPN,UAAU,EACVC,aAAc,uDCTZM,EAAoBC,EAAAA,MAEpBC,EAAsB,CAC1B,mBAAoB,UAGhBC,EAAuB,CAC3B,yBAA0BC,mBAG5B,SAASC,IACP,MAAMC,EAAa,kCAEbC,EAAU,CACdC,YAAa,iBACbF,WAAAA,GAKF,OAFAG,EAAAA,EAAAA,oBAAmBH,EAAYhB,GAExB,CACLoB,WAAY,CACV,CACEC,GAAI,sBACJC,KAAM,uBACNC,MAAO,EACPC,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,+DAA+DR,Q,eC7BrG,IAAIS,EAAM,CACT,YAAa,CACZ,KACA,KAED,YAAa,CACZ,KACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMP,EAAKgB,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,IAClCJ,EAAoBR,KAG7BM,EAAoBW,KAAO,IAAOC,OAAOD,KAAKZ,GAC9CC,EAAoBN,GAAK,KACzBmB,EAAOC,QAAUd","sources":["webpack://@openmrs/esm-patient-search-app/./src/config-schema.ts","webpack://@openmrs/esm-patient-search-app/./src/index.ts","webpack://@openmrs/esm-patient-search-app//home/runner/work/openmrs-esm-patient-management/openmrs-esm-patient-management/packages/esm-patient-search-app/translations|lazy|nonrecursive|/.json$/"],"sourcesContent":["import { Type, validators } from '@openmrs/esm-framework';\nexport const configSchema = {\n  search: {\n    patientResultUrl: {\n      _default: '${openmrsSpaBase}/patient/${patientUuid}/chart',\n      _description: 'Where clicking a patient result takes the user. Accepts template parameter ${patientUuid}',\n      _validators: [validators.isUrlWithTemplateParameters(['patientUuid'])],\n    },\n  },\n  includeDead: {\n    _type: Type.Boolean,\n    _default: true,\n    _description: 'Whether to include dead patients in search results',\n  },\n};\n","import { defineConfigSchema, getAsyncLifecycle } from '@openmrs/esm-framework';\nimport { configSchema } from './config-schema';\n\nconst importTranslation = require.context('../translations', false, /.json$/, 'lazy');\n\nconst backendDependencies = {\n  'webservices.rest': '^2.2.0',\n};\n\nconst frontendDependencies = {\n  '@openmrs/esm-framework': process.env.FRAMEWORK_VERSION,\n};\n\nfunction setupOpenMRS() {\n  const moduleName = '@openmrs/esm-patient-search-app';\n\n  const options = {\n    featureName: 'patient-search',\n    moduleName,\n  };\n\n  defineConfigSchema(moduleName, configSchema);\n\n  return {\n    extensions: [\n      {\n        id: 'patient-search-icon',\n        slot: 'top-nav-actions-slot',\n        order: 0,\n        load: getAsyncLifecycle(() => import('./patient-search-icon/patient-search-icon.component'), options),\n      },\n    ],\n  };\n}\n\nexport { backendDependencies, frontendDependencies, importTranslation, setupOpenMRS };\n","var map = {\n\t\"./en.json\": [\n\t\t3574,\n\t\t574\n\t],\n\t\"./es.json\": [\n\t\t8319,\n\t\t319\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3979;\nmodule.exports = webpackAsyncContext;"],"names":["configSchema","search","patientResultUrl","_default","_description","_validators","validators","includeDead","_type","Type","importTranslation","require","backendDependencies","frontendDependencies","process","setupOpenMRS","moduleName","options","featureName","defineConfigSchema","extensions","id","slot","order","load","getAsyncLifecycle","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","keys","Object","module","exports"],"sourceRoot":""}