{"version":3,"file":"471.js","mappings":"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","sources":["webpack://@openmrs/esm-primary-navigation-app/./src/constants.ts","webpack://@openmrs/esm-primary-navigation-app/./src/components/choose-locale/change-locale.resource.tsx","webpack://@openmrs/esm-primary-navigation-app/./src/config-schema.ts","webpack://@openmrs/esm-primary-navigation-app/./src/offline.ts","webpack://@openmrs/esm-primary-navigation-app/./src/index.ts","webpack://@openmrs/esm-primary-navigation-app//home/runner/work/openmrs-esm-core/openmrs-esm-core/packages/apps/esm-primary-navigation-app/translations|lazy|nonrecursive|/.json$/"],"sourcesContent":["export const userPropertyChange = \"user-property-change\";\nexport const moduleName = \"@openmrs/esm-primary-navigation-app\";\n","import {\n  openmrsFetch,\n  queueSynchronizationItemFor,\n  getSessionLocation,\n  setSessionLocation,\n} from \"@openmrs/esm-framework\";\nimport { userPropertyChange } from \"../../constants\";\n\nexport type PostUserProperties = (\n  userUuid: string,\n  userProperties: any,\n  abortController?: AbortController\n) => Promise<any>;\n\nexport async function postUserPropertiesOnline(\n  userUuid: string,\n  userProperties: any,\n  abortController: AbortController\n): Promise<any> {\n  const sessionLocation = await getSessionLocation();\n  const locationUuid = sessionLocation?.uuid;\n\n  await openmrsFetch(`/ws/rest/v1/user/${userUuid}`, {\n    method: \"POST\",\n    body: { userProperties },\n    headers: { \"Content-Type\": \"application/json\" },\n    signal: abortController.signal,\n  });\n\n  if (locationUuid) {\n    await setSessionLocation(locationUuid, abortController);\n  }\n}\n\nexport function postUserPropertiesOffline(\n  userUuid: string,\n  userProperties: any\n): Promise<any> {\n  return queueSynchronizationItemFor(\n    userUuid,\n    userPropertyChange,\n    userProperties,\n    {\n      displayName: \"User Language Change\",\n    }\n  );\n}\n","import { Type } from \"@openmrs/esm-framework\";\n\nexport const configSchema = {\n  logo: {\n    src: {\n      _type: Type.String,\n      _default: null,\n      _description:\n        \"A path or URL to an image. Defaults to the OpenMRS SVG sprite.\",\n    },\n    alt: {\n      _type: Type.String,\n      _default: \"Logo\",\n      _description: \"Alt text, shown on hover\",\n    },\n    name: {\n      _type: Type.String,\n      _default: null,\n      _description: \"The organization name displayed when image is absent\",\n    },\n  },\n  externalRefLinks: {\n    enabled: {\n      _type: Type.Boolean,\n      _default: true,\n      _description: \"Whether to show external links in the app menu\",\n    },\n    links: {\n      _type: Type.Array,\n      _elements: {\n        visible: {\n          _type: Type.Boolean,\n          _description: \"Whether to show a link in the menu\",\n          _default: true,\n        },\n        title: {\n          _type: Type.String,\n          _description: \"Title of the link\",\n        },\n        redirect: {\n          _type: Type.String,\n          _description: \"Link to redirect to (must be an external link)\",\n        },\n      },\n      _default: [\n        {\n          visible: false,\n          title: \"External link\",\n          redirect: \"/external-link\",\n        },\n      ],\n      _description: \"The links to be showcased in the app menu\",\n    },\n  },\n};\n","import {\n  refetchCurrentUser,\n  getLoggedInUser,\n  SyncProcessOptions,\n} from \"@openmrs/esm-framework\";\nimport { postUserPropertiesOnline } from \"./components/choose-locale/change-locale.resource\";\n\nexport async function syncUserLanguagePreference(\n  _: any,\n  options: SyncProcessOptions<any>\n) {\n  if (options.index === 0) {\n    const loggedInUser = await getLoggedInUser();\n    const allChanges = options.items.map(([_, change]) => change);\n    const newUserProperties = Object.assign(\n      {},\n      loggedInUser.userProperties,\n      ...allChanges\n    );\n\n    await postUserPropertiesOnline(\n      loggedInUser.uuid,\n      newUserProperties,\n      options.abort\n    );\n\n    refetchCurrentUser();\n  }\n}\n","import {\n  defineConfigSchema,\n  getAsyncLifecycle,\n  setupOfflineSync,\n} from \"@openmrs/esm-framework\";\nimport {\n  postUserPropertiesOnline,\n  postUserPropertiesOffline,\n} from \"./components/choose-locale/change-locale.resource\";\nimport { configSchema } from \"./config-schema\";\nimport { moduleName, userPropertyChange } from \"./constants\";\nimport { syncUserLanguagePreference } from \"./offline\";\n\nconst importTranslation = require.context(\n  \"../translations\",\n  false,\n  /.json$/,\n  \"lazy\"\n);\n\nconst backendDependencies = {\n  \"webservices.rest\": \"^2.2.0\",\n};\n\nconst options = {\n  featureName: \"primary navigation\",\n  moduleName,\n};\n\nfunction setupOpenMRS() {\n  defineConfigSchema(moduleName, configSchema);\n\n  setupOfflineSync(userPropertyChange, [], syncUserLanguagePreference);\n\n  return {\n    pages: [\n      {\n        load: getAsyncLifecycle(() => import(\"./root.component\"), options),\n        route: (location: Location) =>\n          !location.pathname.startsWith(window.getOpenmrsSpaBase() + \"login\"),\n        online: true,\n        offline: true,\n        order: 0,\n      },\n    ],\n    extensions: [\n      {\n        name: \"default-user-panel\",\n        slot: \"user-panel-slot\",\n        order: 0, // should be first DOM element\n        load: getAsyncLifecycle(\n          () =>\n            import(\n              \"./components/user-panel-switcher-item/user-panel-switcher.component\"\n            ),\n          options\n        ),\n        online: true,\n        offline: true,\n      },\n      {\n        name: \"change-locale\",\n        slot: \"user-panel-slot\",\n        order: 1,\n        load: getAsyncLifecycle(\n          () => import(\"./components/choose-locale/change-locale.component\"),\n          options\n        ),\n        online: {\n          postUserProperties: postUserPropertiesOnline,\n        },\n        offline: {\n          postUserProperties: postUserPropertiesOffline,\n        },\n      },\n    ],\n  };\n}\n\nexport { setupOpenMRS, importTranslation, backendDependencies };\n","var map = {\n\t\"./en.json\": [\n\t\t3574,\n\t\t574\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3979;\nmodule.exports = webpackAsyncContext;"],"names":["userPropertyChange","moduleName","async","postUserPropertiesOnline","userUuid","userProperties","abortController","sessionLocation","getSessionLocation","locationUuid","uuid","openmrsFetch","method","body","headers","signal","setSessionLocation","postUserPropertiesOffline","queueSynchronizationItemFor","displayName","configSchema","logo","src","_type","Type","_default","_description","alt","name","externalRefLinks","enabled","links","_elements","visible","title","redirect","syncUserLanguagePreference","_","options","index","loggedInUser","getLoggedInUser","allChanges","items","map","change","newUserProperties","Object","assign","abort","refetchCurrentUser","importTranslation","require","backendDependencies","featureName","setupOpenMRS","defineConfigSchema","setupOfflineSync","pages","load","getAsyncLifecycle","route","location","pathname","startsWith","window","getOpenmrsSpaBase","online","offline","order","extensions","slot","postUserProperties","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","module","exports"],"sourceRoot":""}