{"version":3,"file":"427.js","mappings":"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","sources":["webpack://@openmrs/esm-patient-conditions-app/./src/conditions/conditions-detailed-summary.scss?c9ae","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_baseToString.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_arrayMap.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/toString.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_castSlice.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_baseSlice.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_hasUnicode.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_unicodeToArray.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_stringToArray.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_asciiToArray.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/upperFirst.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_createCaseFirst.js","webpack://@openmrs/esm-patient-conditions-app/./src/conditions/conditions.context.tsx","webpack://@openmrs/esm-patient-conditions-app/./src/conditions/conditions-detailed-summary.component.tsx","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/capitalize.js","webpack://@openmrs/esm-patient-conditions-app/./src/conditions/conditions.component.tsx","webpack://@openmrs/esm-patient-conditions-app/./src/conditions/conditions.resource.tsx","webpack://@openmrs/esm-patient-conditions-app/./src/conditions/conditions-detailed-summary.scss","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_Symbol.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_getRawTag.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_objectToString.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_baseGetTag.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_freeGlobal.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/_root.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/isArray.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/isObjectLike.js","webpack://@openmrs/esm-patient-conditions-app/../../node_modules/lodash-es/isSymbol.js"],"sourcesContent":["\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./conditions-detailed-summary.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./conditions-detailed-summary.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import baseSlice from './_baseSlice.js';\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nexport default castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nexport default hasUnicode;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nexport default unicodeToArray;\n","import asciiToArray from './_asciiToArray.js';\nimport hasUnicode from './_hasUnicode.js';\nimport unicodeToArray from './_unicodeToArray.js';\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nexport default stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nexport default asciiToArray;\n","import createCaseFirst from './_createCaseFirst.js';\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nexport default upperFirst;\n","import castSlice from './_castSlice.js';\nimport hasUnicode from './_hasUnicode.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nexport default createCaseFirst;\n","import { createContext, useContext } from 'react';\n\nexport interface ConditionsContextShape {\n  patientUuid: string;\n  patient: fhir.Patient;\n}\n\nexport const ConditionsContext = createContext<ConditionsContextShape>({\n  patientUuid: undefined,\n  patient: undefined,\n});\n\nexport function useConditionsContext() {\n  return useContext(ConditionsContext);\n}\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport Add16 from '@carbon/icons-react/es/add/16';\nimport styles from './conditions-detailed-summary.scss';\nimport capitalize from 'lodash-es/capitalize';\nimport { useTranslation } from 'react-i18next';\nimport {\n  DataTable,\n  DataTableSkeleton,\n  Button,\n  InlineLoading,\n  Table,\n  TableCell,\n  TableContainer,\n  TableBody,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from 'carbon-components-react';\nimport { Condition, useConditions } from './conditions.resource';\nimport { CardHeader, EmptyState, ErrorState, launchPatientWorkspace } from '@openmrs/esm-patient-common-lib';\nimport { useConditionsContext } from './conditions.context';\n\nconst ConditionsDetailedSummary: React.FC = () => {\n  const { t } = useTranslation();\n  const { patient } = useConditionsContext();\n  const displayText = t('conditions', 'Conditions');\n  const headerTitle = t('conditions', 'Conditions');\n  const { data: conditions, isError, isLoading, isValidating } = useConditions(patient.id);\n\n  const headers = React.useMemo(\n    () => [\n      {\n        key: 'condition',\n        header: t('condition', 'Condition'),\n      },\n      {\n        key: 'onsetDateTime',\n        header: t('since', 'Since'),\n      },\n      {\n        key: 'status',\n        header: t('status', 'Status'),\n      },\n    ],\n    [t],\n  );\n\n  const tableRows: Array<Condition> = React.useMemo(() => {\n    return conditions?.map((condition) => {\n      return {\n        ...condition,\n        id: condition.id,\n        condition: condition.display,\n        onsetDateTime: dayjs(condition.onsetDateTime).format('MMM-YYYY'),\n        status: capitalize(condition.clinicalStatus),\n      };\n    });\n  }, [conditions]);\n\n  const launchConditionsForm = React.useCallback(() => launchPatientWorkspace('conditions-form-workspace'), []);\n\n  if (isLoading) return <DataTableSkeleton role=\"progressbar\" />;\n  if (isError) return <ErrorState error={isError} headerTitle={headerTitle} />;\n  if (conditions?.length) {\n    return (\n      <div className={styles.widgetCard}>\n        <CardHeader title={headerTitle}>\n          <span>{isValidating ? <InlineLoading /> : null}</span>\n          <Button kind=\"ghost\" renderIcon={Add16} iconDescription=\"Add conditions\" onClick={launchConditionsForm}>\n            {t('add', 'Add')}\n          </Button>\n        </CardHeader>\n        <TableContainer>\n          <DataTable rows={tableRows} headers={headers} isSortable={true} size=\"short\">\n            {({ rows, headers, getHeaderProps, getTableProps }) => (\n              <Table {...getTableProps()} useZebraStyles>\n                <TableHead>\n                  <TableRow>\n                    {headers.map((header) => (\n                      <TableHeader\n                        className={`${styles.productiveHeading01} ${styles.text02}`}\n                        {...getHeaderProps({\n                          header,\n                          isSortable: header.isSortable,\n                        })}\n                      >\n                        {header.header?.content ?? header.header}\n                      </TableHeader>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows.map((row) => (\n                    <TableRow key={row.id}>\n                      {row.cells.map((cell) => (\n                        <TableCell key={cell.id}>{cell.value?.content ?? cell.value}</TableCell>\n                      ))}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            )}\n          </DataTable>\n        </TableContainer>\n      </div>\n    );\n  }\n  return <EmptyState displayText={displayText} headerTitle={headerTitle} launchForm={launchConditionsForm} />;\n};\n\nexport default ConditionsDetailedSummary;\n","import toString from './toString.js';\nimport upperFirst from './upperFirst.js';\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nexport default capitalize;\n","import React from 'react';\nimport ConditionsDetailedSummary from './conditions-detailed-summary.component';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport { ConditionsContext } from './conditions.context';\n\ninterface ConditionsProps {\n  basePath: string;\n  patient: fhir.Patient;\n  patientUuid: string;\n}\n\nexport default function Conditions({ basePath, patientUuid, patient }: ConditionsProps) {\n  return (\n    <ConditionsContext.Provider value={{ patientUuid, patient }}>\n      <BrowserRouter basename={`${window.spaBase}${basePath}/conditions`}>\n        <Switch>\n          <Route exact path=\"/\" component={ConditionsDetailedSummary} />\n        </Switch>\n      </BrowserRouter>\n    </ConditionsContext.Provider>\n  );\n}\n","import useSWR from 'swr';\nimport { map } from 'rxjs/operators';\nimport { openmrsObservableFetch, fhirBaseUrl, openmrsFetch } from '@openmrs/esm-framework';\nimport { FHIRCondition, FHIRConditionResponse } from '../types';\n\nexport function useConditions(patientUuid: string) {\n  const { data, error, isValidating } = useSWR<{ data: FHIRConditionResponse }, Error>(\n    `${fhirBaseUrl}/Condition?patient=${patientUuid}`,\n    openmrsFetch,\n  );\n\n  const formattedConditions =\n    data?.data?.total > 0\n      ? data?.data?.entry\n          .map((entry) => entry.resource ?? [])\n          .map(mapConditionProperties)\n          .sort((a, b) => (b.onsetDateTime > a.onsetDateTime ? 1 : -1))\n      : null;\n\n  return {\n    data: data ? formattedConditions : null,\n    isError: error,\n    isLoading: !data && !error,\n    isValidating,\n  };\n}\n\nexport function searchConditionConcepts(searchTerm: string) {\n  const conditionConceptClassUuid = '8d4918b0-c2cc-11de-8d13-0010c6dffd0f';\n\n  return openmrsObservableFetch<Array<CodedCondition>>(\n    `/ws/rest/v1/conceptsearch?conceptClasses=${conditionConceptClassUuid}&q=${searchTerm}`,\n  ).pipe(map(({ data }) => data['results']));\n}\n\nexport function getConditionByUuid(conditionUuid: string) {\n  return openmrsObservableFetch(`${fhirBaseUrl}/Condition/${conditionUuid}`).pipe(\n    map(({ data }) => data),\n    map((data: FHIRCondition) => mapConditionProperties(data)),\n  );\n}\n\nfunction mapConditionProperties(condition: FHIRCondition): Condition {\n  return {\n    clinicalStatus: condition?.clinicalStatus?.coding[0]?.code,\n    conceptId: condition?.code?.coding[0]?.code,\n    display: condition?.code?.coding[0]?.display,\n    onsetDateTime: condition?.onsetDateTime,\n    recordedDate: condition?.recordedDate,\n    id: condition?.id,\n  };\n}\n\nexport function createPatientCondition(payload, abortController) {\n  return openmrsObservableFetch(`${fhirBaseUrl}/Condition`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    body: payload,\n    signal: abortController,\n  });\n}\n\nexport function updatePatientCondition(patientCondition, patientUuid, abortController) {\n  return Promise.resolve({ status: 200, body: 'Ok' });\n}\n\nexport type Condition = {\n  clinicalStatus: string;\n  conceptId: string;\n  display: string;\n  onsetDateTime: string;\n  recordedDate: string;\n  id: string;\n};\n\nexport type CodedCondition = {\n  concept: {\n    uuid: string;\n    display: string;\n  };\n  conceptName: {\n    uuid: string;\n    display: string;\n  };\n  display: string;\n};\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{padding:0;border:0;margin:0;font:inherit;font-size:100%;vertical-align:baseline}button,select,input,textarea{border-radius:0;font-family:inherit}input[type=text]::-ms-clear{display:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}body{line-height:1}sup{vertical-align:super}sub{vertical-align:sub}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:\\\"\\\"}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}button{margin:0}html{font-size:100%}body{font-weight:400;font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility}code{font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace}strong{font-weight:600}@media screen and (-ms-high-contrast: active){svg{fill:ButtonText}}h1{font-size:2.625rem;font-weight:300;line-height:1.199;letter-spacing:0}h2{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}h3{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}h4{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}h5{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}h6{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}p{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}a{color:#0f62fe}em{font-style:italic}@keyframes -esm-patient-conditions__conditions-detailed-summary__skeleton___ehaOl{0%{opacity:.3;transform:scaleX(0);transform-origin:left}20%{opacity:1;transform:scaleX(1);transform-origin:left}28%{transform:scaleX(1);transform-origin:right}51%{transform:scaleX(0);transform-origin:right}58%{transform:scaleX(0);transform-origin:right}82%{transform:scaleX(1);transform-origin:right}83%{transform:scaleX(1);transform-origin:left}96%{transform:scaleX(0);transform-origin:left}100%{opacity:.3;transform:scaleX(0);transform-origin:left}}.-esm-patient-conditions__conditions-detailed-summary__widgetCard___j4cUS{border:1px solid #e0e0e0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_css--reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_font-family.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/icons/mixins.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_helper-mixins.scss\",\"webpack://./src/conditions/conditions-detailed-summary.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCTE,2ZAiFE,SAAA,CACA,QAAA,CACA,QAAA,CACA,YAAA,CACA,cAAA,CACA,uBAAA,CAIF,6BAIE,eAAA,CACA,mBAAA,CAGF,4BACE,YAAA,CAIF,mFAYE,aAAA,CAGF,KACE,aAAA,CAGF,IACE,oBAAA,CAGF,IACE,kBAAA,CAGF,MAEE,eAAA,CAGF,aAEE,WAAA,CAGF,wDAIE,UAAA,CAGF,MACE,wBAAA,CACA,gBAAA,CAGF,EACE,qBAAA,CAIF,OACE,QAAA,CC3KJ,KACE,cAAA,CAGF,KC0CA,eAAA,CDvCE,gEAViB,CAWjB,iCAAA,CACA,kCAAA,CACA,iCAAA,CAGF,KACE,wGAhBiB,CAmBnB,OC6BA,eAAA,CCxDA,8CACE,IACE,eAAA,CAAA,CFkCJ,GGggBE,kBAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlrBxB,GG4fE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH9qBxB,GGwfE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH1qBxB,GGofE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CHtqBxB,GGgfE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlqBxB,GG4eE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CH9pBxB,EGweE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CH1pBxB,EAII,aAAA,CAMJ,GACE,iBAAA,CIkHF,kFACE,GACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,SAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,KACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAAA,CC3ON,0EACE,wBAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n@import './vendor/@carbon/elements/scss/type/reset';\\n@import './vendor/@carbon/elements/scss/icons/mixins';\\n\\n/// Resets default browser styling\\n/// @access public\\n/// @group global-reset\\n@mixin reset {\\n  @if variable-exists(css--reset) == false or $css--reset == false {\\n    box-sizing: border-box;\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    font-family: inherit;\\n    font-size: 100%;\\n    vertical-align: baseline;\\n\\n    *,\\n    *::before,\\n    *::after {\\n      box-sizing: inherit;\\n    }\\n  }\\n}\\n\\n@include exports('css--reset') {\\n  @if variable-exists(css--reset) == false or $css--reset == true {\\n    // http://cssreset.com/scripts/eric-meyer-reset-css/\\n    html,\\n    body,\\n    div,\\n    span,\\n    applet,\\n    object,\\n    iframe,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p,\\n    blockquote,\\n    pre,\\n    a,\\n    abbr,\\n    acronym,\\n    address,\\n    big,\\n    cite,\\n    code,\\n    del,\\n    dfn,\\n    em,\\n    img,\\n    ins,\\n    kbd,\\n    q,\\n    s,\\n    samp,\\n    small,\\n    strike,\\n    strong,\\n    sub,\\n    sup,\\n    tt,\\n    var,\\n    b,\\n    u,\\n    i,\\n    center,\\n    dl,\\n    dt,\\n    dd,\\n    ol,\\n    ul,\\n    li,\\n    fieldset,\\n    form,\\n    label,\\n    legend,\\n    table,\\n    caption,\\n    tbody,\\n    tfoot,\\n    thead,\\n    tr,\\n    th,\\n    td,\\n    article,\\n    aside,\\n    canvas,\\n    details,\\n    embed,\\n    figure,\\n    figcaption,\\n    footer,\\n    header,\\n    hgroup,\\n    menu,\\n    nav,\\n    output,\\n    ruby,\\n    section,\\n    summary,\\n    time,\\n    mark,\\n    audio,\\n    video {\\n      padding: 0;\\n      border: 0;\\n      margin: 0;\\n      font: inherit;\\n      font-size: 100%;\\n      vertical-align: baseline;\\n    }\\n\\n    // Chrome 62 fix\\n    button,\\n    select,\\n    input,\\n    textarea {\\n      border-radius: 0;\\n      font-family: inherit;\\n    }\\n\\n    input[type='text']::-ms-clear {\\n      display: none;\\n    }\\n\\n    /* HTML5 display-role reset for older browsers */\\n    article,\\n    aside,\\n    details,\\n    figcaption,\\n    figure,\\n    footer,\\n    header,\\n    hgroup,\\n    main,\\n    menu,\\n    nav,\\n    section {\\n      display: block;\\n    }\\n\\n    body {\\n      line-height: 1;\\n    }\\n\\n    sup {\\n      vertical-align: super;\\n    }\\n\\n    sub {\\n      vertical-align: sub;\\n    }\\n\\n    ol,\\n    ul {\\n      list-style: none;\\n    }\\n\\n    blockquote,\\n    q {\\n      quotes: none;\\n    }\\n\\n    blockquote::before,\\n    blockquote::after,\\n    q::before,\\n    q::after {\\n      content: '';\\n    }\\n\\n    table {\\n      border-collapse: collapse;\\n      border-spacing: 0;\\n    }\\n\\n    * {\\n      box-sizing: border-box;\\n    }\\n\\n    // Fix to remove added margins on buttons in safari (see #5155)\\n    button {\\n      margin: 0;\\n    }\\n\\n    @include carbon--type-reset;\\n    @include carbon--icons;\\n  }\\n}\\n\\n@include exports('css--default-type') {\\n  @if variable-exists(css--default-type) == false or $css--default-type == true\\n  {\\n    @include carbon--default-type;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/convert';\\n@import 'font-family';\\n@import 'styles';\\n\\n/// Include a type reset for a given body and mono font family\\n/// @param {String} $body-font-family [carbon--font-family('sans')] - The font family used on the `<body>` element\\n/// @param {String} $mono-font-family [carbon--font-family('mono')] - The font family used on elements that require mono fonts, like the `<code>` element\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-reset(\\n  // TODO: remove in next major release. This has been replaced with 100%\\n  $base-font-size: $carbon--base-font-size,\\n  $body-font-family: carbon--font-family('sans'),\\n  $mono-font-family: carbon--font-family('mono')\\n) {\\n  html {\\n    font-size: 100%;\\n  }\\n\\n  body {\\n    @include carbon--font-weight('regular');\\n\\n    font-family: $body-font-family;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-font-smoothing: antialiased;\\n    text-rendering: optimizeLegibility;\\n  }\\n\\n  code {\\n    font-family: $mono-font-family;\\n  }\\n\\n  strong {\\n    @include carbon--font-weight('semibold');\\n  }\\n}\\n\\n/// Include default type styles\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--default-type {\\n  h1 {\\n    @include carbon--type-style('productive-heading-06');\\n  }\\n\\n  h2 {\\n    @include carbon--type-style('productive-heading-05');\\n  }\\n\\n  h3 {\\n    @include carbon--type-style('productive-heading-04');\\n  }\\n\\n  h4 {\\n    @include carbon--type-style('productive-heading-03');\\n  }\\n\\n  h5 {\\n    @include carbon--type-style('productive-heading-02');\\n  }\\n\\n  h6 {\\n    @include carbon--type-style('productive-heading-01');\\n  }\\n\\n  p {\\n    @include carbon--type-style('body-long-02');\\n  }\\n\\n  a {\\n    @if global-variable-exists('carbon--theme') and\\n      map-has-key($carbon--theme, 'link-01')\\n    {\\n      color: map-get($carbon--theme, 'link-01');\\n    } @else {\\n      color: #0062fe;\\n    }\\n  }\\n\\n  em {\\n    font-style: italic;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\\n/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-families: (\\n  'mono':\\n    unquote(\\n      \\\"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\\\"\\n    ),\\n  'sans': unquote(\\\"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-condensed':\\n    unquote(\\\"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-hebrew':\\n    unquote(\\n      \\\"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\\\"\\n    ),\\n  'serif': unquote(\\\"'IBM Plex Serif', 'Georgia', Times, serif\\\"),\\n) !default;\\n\\n/// Get the font-family for an IBM Plex font\\n/// @param {String} $name\\n/// @return {String}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-family($name) {\\n  @return map-get($carbon--font-families, $name);\\n}\\n\\n/// Include the `font-family` definition for the given name in your selector\\n/// @param {String} $name\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-family($name) {\\n  font-family: carbon--font-family($name);\\n}\\n\\n/// Suggested font weights to be used in product\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-weights: (\\n  'light': 300,\\n  'regular': 400,\\n  'semibold': 600,\\n) !default;\\n\\n/// Retrieve the font-weight value for a given name\\n/// @param {String} $weight\\n/// @return {Number}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-weight($weight) {\\n  @return map-get($carbon--font-weights, $weight);\\n}\\n\\n/// Set the `font-weight` property with the value for a given name\\n/// @param {String} $weight\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-weight($weight) {\\n  font-weight: carbon--font-weight($weight);\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Makes SVGs accessible in high contrast mode\\n/// @link https://github.com/IBM/carbon-elements/issues/345#issuecomment-466577293 Carbon-elements #345\\n/// @access public\\n/// @group @carbon/icons\\n@mixin carbon--icons {\\n  @media screen and (-ms-high-contrast: active) {\\n    svg {\\n      fill: ButtonText;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n//----------------------------------------------\\n// Mixins\\n// ---------------------------------------------\\n//\\n//   Category             ||  Description\\n//   ===========================================\\n//   Misc                 ||  General helper @mixins\\n//   Deprecated           ||  Not used anymore\\n//   ===========================================\\n\\n//----------------------------------------------\\n// Misc\\n// ---------------------------------------------\\n\\n@import 'vars';\\n@import 'css--reset';\\n@import 'typography';\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n\\n/// Adds text overflow styling\\n/// @access public\\n/// @param {Number} $width [false] - Value of width if you want to set width, else nothing\\n/// @example @include text-overflow(300px);\\n/// @group global-helpers\\n@mixin text-overflow($width: false) {\\n  display: block;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n\\n  // apply a width if width parameter exists\\n  @if ($width) {\\n    width: $width;\\n  }\\n}\\n\\n/// Adds placeholder text color\\n/// @access public\\n/// @example @include placeholder-colors;\\n/// @group global-helpers\\n@mixin placeholder-colors {\\n  color: $text-05;\\n  opacity: 1;\\n}\\n\\n/// Adds box shadow\\n/// @access public\\n/// @example @include box-shadow;\\n/// @group global-helpers\\n@mixin box-shadow {\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\\n}\\n\\n/// Adds outline styles depending on specific type\\n/// @access public\\n/// @param {String} $type ['border'] - Type of outline from: `border`, `blurred`, `outline`, `invalid`, `reset`\\n/// @example @include focus-outline('outline');\\n/// @group global-helpers\\n@mixin focus-outline($type: 'border') {\\n  @if ($type == 'border') {\\n    outline: 1px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'blurred') {\\n    box-shadow: 0 0 0 3px $focus;\\n    outline: 1px solid transparent;\\n  }\\n\\n  @if ($type == 'outline') {\\n    outline: 2px solid $focus;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'outline-compat') {\\n    box-sizing: border-box;\\n    border: 2px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      border-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'invalid') {\\n    outline: 2px solid $support-01;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'reset') {\\n    outline: 2px solid transparent;\\n    outline-offset: -2px;\\n  }\\n}\\n\\n/// Adds rotational transformation\\n/// @access public\\n/// @param {Number} $deg - How many degrees to rotate\\n/// @param {Number} $speed - Speed of rotation\\n/// @param {Value} $origin [center] - `transform-origin`\\n/// @example @include rotate(90deg, 300ms);\\n/// @group global-helpers\\n@mixin rotate($deg, $speed, $origin: center) {\\n  transform: rotate($deg);\\n  transform-origin: $origin;\\n  transition: transform $speed;\\n}\\n\\n/// Adds styles to hide content\\n/// @access public\\n/// @group global-helpers\\n@mixin hidden {\\n  position: absolute;\\n  overflow: hidden;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  border: 0;\\n  margin: -1px;\\n  clip: rect(0, 0, 0, 0);\\n  visibility: inherit;\\n  white-space: nowrap;\\n}\\n\\n/// Resets button styles\\n/// @access public\\n/// @param {Bool} $width [true] - Sets width to 100% if true\\n/// @example @include button-reset($width: false);\\n/// @group global-helpers\\n@mixin button-reset($width: true) {\\n  @include reset;\\n\\n  display: inline-block;\\n  padding: 0;\\n  border: 0;\\n  appearance: none;\\n  background: none;\\n  cursor: pointer;\\n\\n  @if ($width == true) {\\n    width: 100%;\\n  }\\n\\n  &::-moz-focus-inner {\\n    border: 0;\\n  }\\n}\\n\\n/// Skeleton loading animation\\n/// @access public\\n/// @example @include skeleton;\\n/// @group global-helpers\\n@mixin skeleton {\\n  position: relative;\\n  padding: 0;\\n  border: none;\\n  background: $skeleton-01;\\n  box-shadow: none;\\n  pointer-events: none;\\n\\n  &:hover,\\n  &:focus,\\n  &:active {\\n    border: none;\\n    cursor: default;\\n    outline: none;\\n  }\\n\\n  &::before {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    animation: 3000ms ease-in-out skeleton infinite;\\n    background: $skeleton-02;\\n    content: '';\\n    will-change: transform-origin, transform, opacity;\\n\\n    @media (prefers-reduced-motion: reduce) {\\n      animation: none;\\n    }\\n  }\\n}\\n\\n@include exports('skeleton') {\\n  @keyframes skeleton {\\n    0% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    20% {\\n      opacity: 1;\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    28% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    51% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    58% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    82% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    83% {\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    96% {\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    100% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n  }\\n}\\n\\n/// Windows HCM Mixin\\n/// @access public\\n/// @example @include high-contrast-mode;\\n/// @group global-helpers\\n/// We should set HCM styles at the end of each file to ensure they are not overridden\\n@mixin high-contrast-mode($type: '') {\\n  @media screen and (-ms-high-contrast: active),\\n    (forced-colors: active),\\n    (prefers-contrast) {\\n    @if ($type == 'icon-fill') {\\n      fill: ButtonText;\\n    }\\n\\n    @if ($type == 'focus') {\\n      color: Highlight;\\n      outline: 1px solid Highlight;\\n    }\\n\\n    @if ($type == 'outline') {\\n      outline: 1px solid transparent;\\n    }\\n\\n    @if ($type == 'disabled') {\\n      color: GrayText;\\n      fill: GrayText;\\n    }\\n\\n    @content;\\n  }\\n}\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/mixins\\\";\\n\\n.widgetCard {\\n  border: 1px solid $ui-03;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"widgetCard\": \"-esm-patient-conditions__conditions-detailed-summary__widgetCard___j4cUS\",\n\t\"skeleton\": \"-esm-patient-conditions__conditions-detailed-summary__skeleton___ehaOl\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","symbolProto","symbolToString","toString","baseToString","value","isArray","array","iteratee","index","length","result","Array","isSymbol","call","start","end","reHasUnicode","RegExp","string","test","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsModifier","rsOptVar","rsSeq","join","rsSymbol","reUnicode","match","split","strSymbols","chr","charAt","trailing","slice","ConditionsContext","createContext","patientUuid","patient","t","useTranslation","useContext","displayText","headerTitle","data","conditions","isError","isLoading","isValidating","useConditions","id","headers","React","key","header","tableRows","map","condition","display","onsetDateTime","dayjs","format","status","clinicalStatus","toLowerCase","launchConditionsForm","launchPatientWorkspace","DataTableSkeleton","role","ErrorState","error","className","styles","CardHeader","title","InlineLoading","Button","kind","renderIcon","Add16","iconDescription","onClick","TableContainer","DataTable","rows","isSortable","size","getHeaderProps","getTableProps","Table","useZebraStyles","TableHead","TableRow","TableHeader","content","TableBody","row","cells","cell","TableCell","EmptyState","launchForm","Conditions","basePath","Provider","BrowserRouter","basename","window","spaBase","Switch","Route","exact","path","component","ConditionsDetailedSummary","useSWR","fhirBaseUrl","openmrsFetch","formattedConditions","total","entry","resource","mapConditionProperties","sort","a","b","searchConditionConcepts","searchTerm","openmrsObservableFetch","pipe","coding","code","conceptId","recordedDate","createPatientCondition","payload","abortController","method","body","signal","___CSS_LOADER_EXPORT___","push","module","locals","objectProto","Object","prototype","hasOwnProperty","nativeObjectToString","symToStringTag","isOwn","tag","unmasked","e","global","freeSelf","self","Function"],"sourceRoot":""}