(self.webpackChunk_openmrs_esm_patient_registration_app=self.webpackChunk_openmrs_esm_patient_registration_app||[]).push([[71],{8394:(e,t,i)=>{"use strict";i.d(t,{e1:()=>n,Kt:()=>r,QT:()=>s});var a=i(9035);const n="@openmrs/esm-patient-registration-app",r="patient-registration",s={[a.omrsOfflineCachingStrategyHttpHeaderName]:"network-first"}},3071:(e,t,i)=>{"use strict";i.r(t),i.d(t,{backendDependencies:()=>m,frontendDependencies:()=>f,importTranslation:()=>c,setupOpenMRS:()=>h});var a=i(9035),n=i(8394),r=i(7924),s=i(5741);class o{static async savePatientFormOffline(e,t,i,r,s,d,l,u,p){const c={fhirPatient:o.mapPatientToFhirPatient(o.getPatientToCreate(t,p,i,r,[])),_patientRegistrationData:{isNewPatient:e,formValues:t,patientUuidMap:i,initialAddressFieldValues:r,identifierTypes:s,capturePhotoProps:d,patientPhotoConceptUuid:l,currentLocation:u,personAttributeSections:p}};return await(0,a.queueSynchronizationItem)(n.Kt,c,{id:t.patientUuid,displayName:"Patient registration",dependencies:[]}),null}static async savePatientFormOnline(e,t,i,a,n,s,d,l,u,p){const c=await o.savePatientIdentifiers(t.patientUuid,t.identifiers,l,p),m=o.getPatientToCreate(t,u,i,a,c);o.getDeletedNames(t.patientUuid,i).forEach((async e=>{await(0,r.uO)(e.nameUuid,e.personUuid,p)}));const f=await(0,r.co)(p,m,e?void 0:t.patientUuid);return f.ok&&(await Promise.all(t.relationships.filter((e=>e.relationship)).map((e=>{let{relatedPerson:t,relationship:i}=e;const a=i.split("/")[0],n=i.split("/")[1],s=f.data.uuid,o="aIsToB"===n,d={personA:o?t:s,personB:o?s:t,relationshipType:a};return(0,r.bL)(p,d)}))),d&&s?.imageData&&await(0,r.oV)(f.data.uuid,s.imageData,"/ws/rest/v1/obs",s.dateTime||(new Date).toISOString(),d,p)),f.data.uuid}static async savePatientIdentifiers(e,t,i,a){let n=t.filter((e=>"DELETE"!==e.action&&"NONE"!==e.action)).map((async t=>{const{identifierTypeUuid:n,identifier:s,uuid:o,action:d,source:l,preferred:u,autoGeneration:p}=t;if(s||l&&p){const l={uuid:o,identifier:s||await(await(0,r.fX)(t.source.uuid,a)).data.identifier,identifierType:n,location:i,preferred:u};return e&&("ADD"===d?await(0,r.eb)(e,l,a):"UPDATE"===d&&await(0,r.nI)(e,o,l.identifier,a)),l}throw new Error("No approach for generating a patient identifier could be found.")}));return e&&t.filter((e=>"DELETE"===e.action)).forEach((async t=>await(0,r.ZB)(e,t.uuid,a))),Promise.all(n)}static getDeletedNames(e,t){return t?.additionalNameUuid?[{nameUuid:t.additionalNameUuid,personUuid:e}]:[]}static getPatientToCreate(e,t,i,a,n){let r=o.getPatientAddressField(e,a);return(0,s.Z)(a,r)&&(r={}),{uuid:e.patientUuid,person:{uuid:e.patientUuid,names:o.getNames(e,i),gender:e.gender.charAt(0),birthdate:e.birthdate,birthdateEstimated:e.birthdateEstimated,attributes:o.getPatientAttributes(e,t),addresses:[r],...o.getPatientDeathInfo(e)},identifiers:n}}static getNames(e,t){const i=[{uuid:t.preferredNameUuid,preferred:!0,givenName:e.givenName,middleName:e.middleName,familyName:e.familyName}];return e.addNameInLocalLanguage&&i.push({uuid:t.additionalNameUuid,preferred:!1,givenName:e.additionalGivenName,middleName:e.additionalMiddleName,familyName:e.additionalFamilyName}),i}static getPatientAttributes(e,t){const i=[];if(t)for(const a of t)for(const t of a.personAttributes)i.push({attributeType:t.uuid,value:e[t.name]});return i}static getPatientAddressField(e,t){return Object.keys(t).reduce(((t,i)=>({...t,[i]:e[i]})),{})}static getPatientDeathInfo(e){const{isDead:t,deathDate:i,deathCause:a}=e;return{dead:t,deathDate:t?i:void 0,causeOfDeath:t?a:void 0}}static mapPatientToFhirPatient(e){return{id:e.uuid,gender:{M:"male",F:"female",O:"other",U:"unknown"}[e.person?.gender],birthDate:e.person?.birthdate,deceasedBoolean:e.person.dead,deceasedDateTime:e.person.deathDate,name:e.person?.names?.map((e=>({given:[e.givenName,e.middleName].filter(Boolean),family:e.familyName}))),address:e.person?.addresses.map((e=>({city:e.cityVillage,country:e.country,postalCode:e.postalCode,state:e.stateProvince,use:"home"}))),telecom:e.person.attributes?.filter((e=>"Telephone Number"===e.attributeType))}}}var d=i(1424);const l={sections:{_type:a.Type.Array,_default:["demographics","contact","relationships"],_description:"An array of strings which are the keys from 'sectionDefinitions'",_elements:{_type:a.Type.String}},sectionDefinitions:{_type:a.Type.Object,_elements:{name:{_type:a.Type.String,_default:"",_description:"The title to display at the top of the section."},fields:{_type:a.Type.Array,_default:[],_description:`The parts to include in the section. Can be any of the following built-in fields: ${["name","gender","dob","address","id","death"].join(", ")}. Can also be any of the keys from the fieldDefinitions object, which you can use to define custom fields.`,_elements:{_type:a.Type.String}}},_default:{demographics:{name:"Basic Info",fields:["name","gender & dob","id"]},contact:{name:"Contact Details",fields:["address","phone & email"]},death:{name:"Death Info",fields:["death"]},relationships:{name:"Relationships"}}},fieldDefinitions:{_type:a.Type.Object,_elements:{label:{_type:a.Type.String,_description:"The label of the input"},uuid:{_type:a.Type.UUID,_description:"Person attributetype uuid used to save the attribute"},placeholder:{_type:a.Type.String,_default:"",_description:"Placeholder that will appear in the input."},validation:{required:{_type:a.Type.Boolean,_default:!1},matches:{_type:a.Type.String,_default:null,_description:"Optional RegEx for testing the validity of the input."}}},_default:{phone:{label:"Telephone Number",uuid:"14d4f066-15f5-102d-96e4-000c29c2a5d7",validation:{required:!0,matches:"^[0-9]*$"}}},_description:"Definitions for custom fields that can be used in sectionDefinitions. Can also be used to override built-in fields."},fieldConfigurations:{_type:a.Type.Object,_default:{name:{displayMiddleName:!0,unidentifiedPatient:!0}}},links:{submitButton:{_type:a.Type.String,_default:"${openmrsSpaBase}/patient/${patientUuid}/chart",_validators:[a.validators.isUrlWithTemplateParameters(["patientUuid"])]}},concepts:{patientPhotoUuid:{_type:a.Type.ConceptUuid,_default:"736e8771-e501-4615-bfa7-570c03f4bef5"}},personAttributeSections:{_type:a.Type.Array,_default:[{personAttributes:[{name:"phone",uuid:"14d4f066-15f5-102d-96e4-000c29c2a5d7"}]}],_elements:{_type:a.Type.Object,personAttributes:{_type:a.Type.Array,_elements:{_type:a.Type.Object,uuid:{_type:a.Type.UUID,_description:"Person attributetype uuid used to save the attribute"},name:{_type:a.Type.String,_default:""},_default:{phone:{name:"phone",uuid:"14d4f066-15f5-102d-96e4-000c29c2a5d7"}}}}}}};async function u(){await Promise.all([(0,d.X1)(),(0,d.Te)(),(0,d.mt)(),(0,d.St)()])}async function p(e,t){await o.savePatientFormOnline(e._patientRegistrationData.isNewPatient,e._patientRegistrationData.formValues,e._patientRegistrationData.patientUuidMap,e._patientRegistrationData.initialAddressFieldValues,e._patientRegistrationData.identifierTypes,e._patientRegistrationData.capturePhotoProps,e._patientRegistrationData.patientPhotoConceptUuid,e._patientRegistrationData.currentLocation,e._patientRegistrationData.personAttributeSections,t.abort)}const c=i(3979),m={"webservices.rest":"^2.24.0"},f={"@openmrs/esm-framework":"^3.1.15-pre.861"},y={currentSession:d.X1,addressTemplate:d.Te,relationshipTypes:d.mt,identifierTypes:d.St};function h(){const e={featureName:"Patient Registration",moduleName:n.e1};return(0,a.defineConfigSchema)(n.e1,l),(0,a.registerBreadcrumbs)([{path:`${window.spaBase}/${n.Kt}`,title:"Patient Registration",parent:`${window.spaBase}/home`}]),(0,a.setupOfflineSync)(n.Kt,[],p),(0,a.subscribePrecacheStaticDependencies)(u),(0,a.registerOfflinePatientHandler)("esm-patient-registration-app",{displayName:"Patient registration",async onOfflinePatientAdded(e){let{patientUuid:t}=e;await(0,a.fetchCurrentPatient)(t,{headers:n.QT})}}),{pages:[{load:(0,a.getAsyncLifecycle)((()=>Promise.all([i.e(30),i.e(401),i.e(831),i.e(924),i.e(479),i.e(916)]).then(i.bind(i,3916))),e),route:/^patient-registration/,online:{savePatientForm:o.savePatientFormOnline},offline:{savePatientForm:o.savePatientFormOffline},resources:y},{load:(0,a.getAsyncLifecycle)((()=>Promise.all([i.e(30),i.e(401),i.e(831),i.e(924),i.e(479),i.e(916)]).then(i.bind(i,3916))),{featureName:"edit-patient-details-form",moduleName:n.e1}),route:/^patient\/([a-zA-Z0-9\-]+)\/edit/,online:{savePatientForm:o.savePatientFormOnline},offline:{savePatientForm:o.savePatientFormOffline},resources:y}],extensions:[{id:"add-patient-action",slot:"top-nav-actions-slot",load:(0,a.getAsyncLifecycle)((()=>Promise.all([i.e(30),i.e(401),i.e(479),i.e(272)]).then(i.bind(i,9272))),e),online:!0,offline:!0},{id:"cancel-patient-edit-modal",load:(0,a.getAsyncLifecycle)((()=>Promise.all([i.e(30),i.e(924),i.e(479),i.e(38)]).then(i.bind(i,8038))),e),online:!0,offline:!0},{id:"patient-photo-widget",slot:"patient-photo-slot",load:(0,a.getAsyncLifecycle)((()=>Promise.all([i.e(295),i.e(664)]).then(i.bind(i,4664))),e),online:!0,offline:!0},{id:"edit-patient-details-button",slot:"patient-actions-slot",load:(0,a.getAsyncLifecycle)((()=>Promise.all([i.e(924),i.e(324)]).then(i.bind(i,7324))),e),online:!0,offline:!0},{id:"delete-identifier-confirmation-modal",load:(0,a.getAsyncLifecycle)((()=>Promise.all([i.e(30),i.e(924),i.e(479),i.e(258)]).then(i.bind(i,7258))),e),online:!0,offline:!0}]}}},1424:(e,t,i)=>{"use strict";i.d(t,{Cg:()=>p,Te:()=>m,mt:()=>f,X1:()=>c,St:()=>y});var a=i(9902),n=i.n(a),r=i(3662),s=i(2777),o=i(8407),d=i(9035);const l={results:[{uuid:"42ae5ce0-d64b-11ea-9064-5adc43bbdd24",location:null,source:{uuid:"691eed12-c0f1-11e2-94be-8c13b969e334"},manualEntryEnabled:!1,automaticGenerationEnabled:!0,resourceVersion:"1.8"},{uuid:"497b8b17-54ec-4726-87ec-3c4da8cdcaeb",location:null,source:{uuid:"691eed12-c0f1-11e2-94be-8c13b969e334"},manualEntryEnabled:!0,automaticGenerationEnabled:!1,resourceVersion:"1.8"},{uuid:"ed0529de-3530-4c49-921b-b4845a750b7e",location:null,source:{uuid:"75df804e-03c1-4964-842b-4fec585839e7"},manualEntryEnabled:!0,automaticGenerationEnabled:!1,resourceVersion:"1.8"}]};var u=i(8394);const p=n().createContext(null);async function c(e){const{data:t}=await P("/ws/rest/v1/session",e);return t}async function m(e){const{data:t}=await P("/ws/rest/v1/systemsetting?q=layout.address.format&v=custom:(value)",e);return t}async function f(e){const{data:t}=await P("/ws/rest/v1/relationshiptype?v=default",e);return t}async function y(e){const[t,i]=await Promise.all([h(e),g(e)]),a=[t,...i].filter(Boolean);for(const t of a){const[i,a]=await Promise.all([b(t.uuid,e),(t.uuid,Promise.resolve(l))]);t.identifierSources=i.data.results.map((e=>{const t=(0,r.Z)(a.results,{source:{uuid:e.uuid}});return e.autoGenerationOption=t,e}))}return a}async function h(e){const t=await P("/ws/rest/v1/metadatamapping/termmapping?v=full&code=emr.primaryIdentifierType",e),{data:i}=await P(`/ws/rest/v1/patientidentifiertype/${t.data.results[0].metadataUuid}`,e);return{name:i.name,fieldName:(0,s.Z)(i.name),required:i.required,uuid:i.uuid,format:i.format,isPrimary:!0}}async function g(e){const t=await P("/ws/rest/v1/metadatamapping/termmapping?v=full&code=emr.extraPatientIdentifierTypes",e);if(t.data.results){const i=t.data.results[0].metadataUuid,a=await P(`/ws/rest/v1/metadatamapping/metadataset/${i}/members`,e);if(a.data.results)return await Promise.all(a.data.results.map((async i=>{const a=await P(`/ws/rest/v1/patientidentifiertype/${i.metadataUuid}`,e);return{name:a.data.name,fieldName:(0,s.Z)(a.data.name),required:a.data.required,uuid:a.data.uuid,format:t.data.format,isPrimary:!1}})))}return[]}async function b(e,t){return await P(`/ws/rest/v1/idgen/identifiersource?v=full&identifierType=${e}`,t)}async function P(e,t){return await(0,d.messageOmrsServiceWorker)({type:"registerDynamicRoute",pattern:(0,o.Z)(e)}),await(0,d.openmrsFetch)(e,{headers:u.QT,signal:t?.signal})}},7924:(e,t,i)=>{"use strict";i.d(t,{co:()=>r,fX:()=>s,uO:()=>o,bL:()=>d,oV:()=>l,Uu:()=>u,M8:()=>p,eb:()=>c,nI:()=>m,ZB:()=>f});var a=i(9857),n=i(9035);function r(e,t,i){return(0,n.openmrsFetch)(`/ws/rest/v1/patient/${i||""}`,{headers:{"Content-Type":"application/json"},method:"POST",body:t,signal:e.signal})}function s(e,t){return(0,n.openmrsFetch)(`/ws/rest/v1/idgen/identifiersource/${e}/identifier`,{headers:{"Content-Type":"application/json"},method:"POST",body:{},signal:t.signal})}function o(e,t,i){return(0,n.openmrsFetch)(`/ws/rest/v1/person/${t}/name/${e}`,{method:"DELETE",signal:i.signal})}function d(e,t){return(0,n.openmrsFetch)("/ws/rest/v1/relationship",{headers:{"Content-Type":"application/json"},method:"POST",body:t,signal:e.signal})}async function l(e,t,i,a,r,s){const o=new FormData;return o.append("patient",e),o.append("file",function(e){const t=atob(e.split(",")[1]),i=e.split(",")[0].split(":")[1].split(";")[0],a=new Uint8Array(t.length);for(let e=0;e<t.length;e++)a[e]=t.charCodeAt(e);const n=new Blob([a],{type:i});return new File([n],"patient-photo.png")}(t)),o.append("json",JSON.stringify({person:e,concept:r,groupMembers:[],obsDatetime:a})),(0,n.openmrsFetch)(i,{method:"POST",signal:s.signal,body:o})}function u(e){const{concepts:{patientPhotoUuid:t}}=(0,n.useConfig)(),i=`/ws/rest/v1/obs?patient=${e}&concept=${t}&v=full`,{data:r,error:s}=(0,a.ZP)(e?i:null,n.openmrsFetch),o=r?.data?.results[0];return{data:o?{dateTime:o?.obsDatetime,imageSrc:o?.value?.links?.uri}:null,isError:s,isLoading:!r&&!s}}async function p(e,t){return(0,n.openmrsFetch)(`/ws/rest/v1/person?q=${e}`,{signal:t.signal})}async function c(e,t,i){return(0,n.openmrsFetch)(`/ws/rest/v1/patient/${e}/identifier/`,{method:"POST",headers:{"Content-Type":"application/json"},signal:i.signal,body:t})}async function m(e,t,i,a){return(0,n.openmrsFetch)(`/ws/rest/v1/patient/${e}/identifier/${t}`,{method:"POST",headers:{"Content-Type":"application/json"},signal:a.signal,body:{identifier:i}})}async function f(e,t,i){return(0,n.openmrsFetch)(`/ws/rest/v1/patient/${e}/identifier/${t}?purge`,{method:"DELETE",headers:{"Content-Type":"application/json"},signal:i.signal})}},3979:(e,t,i)=>{var a={"./en.json":[3574,574]};function n(e){if(!i.o(a,e))return Promise.resolve().then((()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=a[e],n=t[0];return i.e(t[1]).then((()=>i(n)))}n.keys=()=>Object.keys(a),n.id=3979,e.exports=n}}]);
//# sourceMappingURL=71.js.map