{"version":3,"file":"916.js","mappings":"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","sources":["webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/before-save-prompt.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/patient-registration.scss?0796","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/validation/patient-registration-validation.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/patient-registration-context.ts","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/input.scss?11d4","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/dummy-data/dummy-data-input.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/section.scss?cee8","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/demographics/demographics-section.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/contact-info/contact-info-section.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/patient-relationships/relationships.scss?b3be","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/custom-input/autosuggest/autosuggest.scss?549a","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/custom-input/autosuggest/autosuggest.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/patient-relationships/relationships-section.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/basic-input/input/input.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/basic-input/select/select-input.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/death-info/death-info-section.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/section-wrapper.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/field.scss?530c","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/address/address-field.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/phone/phone-field.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/email/email-field.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/name/name-field.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/dob/dob.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/date-util.ts","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/gender/gender-field.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/custom-input/identifier/identifier-input.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/id/identifier-selection.scss?cd2b","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/ui-components/overlay/overlay.scss?b44b","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/ui-components/overlay/index.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/id/identifier-selection-overlay.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/id/id-field.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/section-helper.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/patient-registration-utils.ts","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/patient-registration-hooks.ts","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/patient-registration.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/root.component.tsx","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/field.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/field/id/identifier-selection.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/custom-input/autosuggest/autosuggest.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/input/input.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/patient-registration.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/patient-relationships/relationships.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/section/section.scss","webpack://@openmrs/esm-patient-registration-app/./src/patient-registration/ui-components/overlay/overlay.scss"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { showModal } from '@openmrs/esm-framework';\nimport { useTranslation } from 'react-i18next';\n\nfunction getUrlWithoutPrefix(url: string) {\n  return url.split(window['getOpenmrsSpaBase']())?.[1];\n}\n\ninterface BeforeSavePromptProps {\n  when: boolean;\n  redirect?: string;\n}\n\nconst BeforeSavePrompt: React.FC<BeforeSavePromptProps> = ({ when, redirect }) => {\n  const history = useHistory();\n  const { t } = useTranslation();\n  const ref = useRef<boolean>(false);\n  const [localTarget, setTarget] = useState<string | undefined>();\n  const target = localTarget || redirect;\n  const cancelUnload = useCallback((e: BeforeUnloadEvent) => {\n    const message = t(\n      'discardModalBody',\n      \"The changes you made to this patient's details have not been saved. Discard changes?\",\n    );\n    e.preventDefault();\n    e.returnValue = message;\n    return message;\n  }, []);\n\n  const cancelNavigation = useCallback((evt: CustomEvent) => {\n    if (!evt.detail.navigationIsCanceled && !ref.current) {\n      ref.current = true;\n      evt.detail.cancelNavigation();\n      const dispose = showModal(\n        'cancel-patient-edit-modal',\n        {\n          onConfirm: () => {\n            setTarget(evt.detail.newUrl);\n            dispose();\n          },\n        },\n        () => {\n          ref.current = false;\n        },\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    if (when && typeof target === 'undefined') {\n      window.addEventListener('single-spa:before-routing-event', cancelNavigation);\n      window.addEventListener('beforeunload', cancelUnload);\n\n      return () => {\n        window.removeEventListener('beforeunload', cancelUnload);\n        window.removeEventListener('single-spa:before-routing-event', cancelNavigation);\n      };\n    }\n  }, [target, when, cancelUnload, cancelNavigation]);\n\n  useEffect(() => {\n    if (typeof target === 'string') {\n      history.push(`/${getUrlWithoutPrefix(target)}`);\n    }\n  }, [target]);\n\n  return null;\n};\n\nexport default BeforeSavePrompt;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./patient-registration.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./patient-registration.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import * as Yup from 'yup';\n\nexport const validationSchema = Yup.object({\n  givenName: Yup.string().required('givenNameRequired'),\n  familyName: Yup.string().required('familyNameRequired'),\n  additionalGivenName: Yup.string().when('addNameInLocalLanguage', {\n    is: true,\n    then: Yup.string().required('givenNameRequired'),\n    otherwise: Yup.string().notRequired(),\n  }),\n  additionalFamilyName: Yup.string().when('addNameInLocalLanguage', {\n    is: true,\n    then: Yup.string().required('familyNameRequired'),\n    otherwise: Yup.string().notRequired(),\n  }),\n  gender: Yup.string().oneOf(['Male', 'Female', 'Other', 'Unknown'], 'genderUnspecified').required('genderRequired'),\n  birthdate: Yup.date().required('birthdayRequired').max(Date(), 'birthdayNotInTheFuture').nullable(),\n  yearsEstimated: Yup.number().min(0, 'negativeYears'),\n  monthsEstimated: Yup.number().min(0, 'negativeMonths'),\n  deathDate: Yup.date().max(Date(), 'deathdayNotInTheFuture').nullable(),\n  email: Yup.string().optional().email('invalidEmail'),\n});\n","import { createContext, SetStateAction, useContext } from 'react';\nimport { FormValues, CapturePhotoProps } from './patient-registration-types';\n\nexport interface PatientRegistrationContextProps {\n  identifierTypes: Array<any>;\n  values: FormValues;\n  validationSchema: any;\n  setValidationSchema(value: any): void;\n  inEditMode: boolean;\n  fieldConfigs: Record<string, any>;\n  setFieldValue(field: string, value: any, shouldValidate?: boolean): void;\n  setCapturePhotoProps(value: SetStateAction<CapturePhotoProps>): void;\n  currentPhoto: string;\n}\n\nexport const PatientRegistrationContext = createContext<PatientRegistrationContextProps | undefined>(undefined);\n\nexport function useFieldConfig(field: string) {\n  const { fieldConfigs } = useContext(PatientRegistrationContext);\n  return fieldConfigs[field];\n}\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./input.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./input.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport { v4 } from 'uuid';\nimport { FormValues } from '../../patient-registration-types';\nimport styles from './../input.scss';\n\ninterface DummyDataInputProps {\n  setValues(values: FormValues, shouldValidate?: boolean): void;\n}\n\nexport const dummyFormValues: FormValues = {\n  patientUuid: v4(),\n  givenName: 'John',\n  middleName: '',\n  familyName: 'Smith',\n  unidentifiedPatient: false,\n  additionalGivenName: 'Joey',\n  additionalMiddleName: '',\n  additionalFamilyName: 'Smitty',\n  addNameInLocalLanguage: true,\n  gender: 'Male',\n  birthdate: new Date(2020, 1, 1) as any,\n  yearsEstimated: 1,\n  monthsEstimated: 2,\n  birthdateEstimated: true,\n  telephoneNumber: '0800001066',\n  address1: 'Bom Jesus Street',\n  address2: '',\n  cityVillage: 'Recife',\n  stateProvince: 'Pernambuco',\n  country: 'Brazil',\n  postalCode: '50030-310',\n  isDead: false,\n  deathDate: '',\n  deathCause: '',\n  relationships: [{ relatedPerson: '', relationship: '' }],\n  identifiers: [],\n};\n\nexport const DummyDataInput: React.FC<DummyDataInputProps> = ({ setValues }) => {\n  return (\n    <main>\n      <button\n        onClick={() => setValues(dummyFormValues)}\n        className={`omrs-btn omrs-filled-neutral ${styles.dummyData}`}\n        type=\"button\"\n        aria-label=\"Dummy Data Input\">\n        Input Dummy Data\n      </button>\n    </main>\n  );\n};\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./section.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./section.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useContext, useEffect } from 'react';\nimport styles from './../section.scss';\nimport { useField } from 'formik';\nimport { getField } from '../section-helper';\nimport { PatientRegistrationContext } from '../../patient-registration-context';\n\nexport interface DemographicsSectionProps {\n  id: 'demographics';\n  fields: Array<any>;\n}\n\nexport const DemographicsSection: React.FC<DemographicsSectionProps> = ({ fields }) => {\n  const [field, meta] = useField('addNameInLocalLanguage');\n  const { setFieldValue } = useContext(PatientRegistrationContext);\n\n  useEffect(() => {\n    if (!field.value && meta.touched) {\n      setFieldValue('additionalGivenName', '');\n      setFieldValue('additionalMiddleName', '');\n      setFieldValue('additionalFamilyName', '');\n    }\n  }, [field.value, meta.touched]);\n\n  return (\n    <section className={styles.formSection} aria-label=\"Demographics Section\">\n      {fields.map((field) => (\n        <div key={field}>{getField(field)}</div>\n      ))}\n    </section>\n  );\n};\n","import React from 'react';\nimport { getField } from '../section-helper';\n\nexport interface ContactInfoSectionProps {\n  id: 'contact';\n  fields: Array<string>;\n}\n\nexport const ContactInfoSection: React.FC<ContactInfoSectionProps> = ({ fields }) => {\n  return (\n    <section aria-label=\"Contact Info Section\">\n      {fields.map((fieldName) => (\n        <div key={fieldName}>{getField(fieldName)}</div>\n      ))}\n    </section>\n  );\n};\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./relationships.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./relationships.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./autosuggest.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./autosuggest.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Search } from 'carbon-components-react';\nimport styles from './autosuggest.scss';\nimport { useTranslation } from 'react-i18next';\n\ninterface AutosuggestProps {\n  name: string;\n  placeholder: string;\n  getDisplayValue: Function;\n  getFieldValue: Function;\n  getSearchResults: (query: string) => Promise<any>;\n  onSuggestionSelected: (field: string, value: string) => void;\n}\n\nexport const Autosuggest: React.FC<AutosuggestProps> = ({\n  name,\n  placeholder,\n  getDisplayValue,\n  getFieldValue,\n  getSearchResults,\n  onSuggestionSelected,\n}) => {\n  const [suggestions, setSuggestions] = useState([]);\n  const searchBox = useRef(null);\n  const wrapper = useRef(null);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutsideComponent);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutsideComponent);\n    };\n  }, [wrapper]);\n\n  const handleClickOutsideComponent = (e) => {\n    if (wrapper.current && !wrapper.current.contains(e.target)) {\n      setSuggestions([]);\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const query = e.target.value;\n    if (query) {\n      getSearchResults(query).then((suggestions) => {\n        setSuggestions(suggestions);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  const handleClick = (index: number) => {\n    const display = getDisplayValue(suggestions[index]);\n    const value = getFieldValue(suggestions[index]);\n    searchBox.current.input.value = display;\n    onSuggestionSelected(name, value);\n    setSuggestions([]);\n  };\n\n  return (\n    <div className={styles.autocomplete} ref={wrapper}>\n      <Search\n        name={name}\n        id=\"autosuggest\"\n        placeholder={placeholder}\n        labelText={t('fullName', 'Full Name')}\n        onChange={handleChange}\n        ref={searchBox}\n        className={styles.autocompleteSearch}\n        light\n        size=\"xl\"\n      />\n      {suggestions.length > 0 && (\n        <ul className={styles.suggestions}>\n          {suggestions.map((suggestion, index) => (\n            <li //eslint-disable-line jsx-a11y/no-noninteractive-element-interactions\n              key={index}\n              onClick={(e) => handleClick(index)}>\n              {getDisplayValue(suggestion)}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport sectionStyles from '../section.scss';\nimport styles from './relationships.scss';\nimport { Button, Select, SelectItem } from 'carbon-components-react';\nimport { FieldArray } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { Autosuggest } from '../../input/custom-input/autosuggest/autosuggest.component';\nimport { PatientRegistrationContext } from '../../patient-registration-context';\nimport { ResourcesContext } from '../../../offline.resources';\nimport { fetchPerson } from '../../patient-registration.resource';\n\ninterface RelationshipType {\n  display: string;\n  uuid: string;\n  direction: string;\n}\n\nasync function searchPerson(query: string) {\n  const abortController = new AbortController();\n  const searchResults = await fetchPerson(query, abortController);\n  return searchResults.data.results;\n}\n\nexport interface RelationshipsSectionProps {\n  id: 'relationships';\n}\n\nexport const RelationshipsSection: React.FC<RelationshipsSectionProps> = () => {\n  const { relationshipTypes } = useContext(ResourcesContext);\n  const [displayRelationshipTypes, setDisplayRelationshipTypes] = useState<RelationshipType[]>([]);\n  const { setFieldValue } = React.useContext(PatientRegistrationContext);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const tmp: RelationshipType[] = [];\n    relationshipTypes.results.forEach((type) => {\n      const aIsToB = {\n        display: type.aIsToB,\n        uuid: type.uuid,\n        direction: 'aIsToB',\n      };\n      const bIsToA = {\n        display: type.bIsToA,\n        uuid: type.uuid,\n        direction: 'bIsToA',\n      };\n      aIsToB.display === bIsToA.display ? tmp.push(aIsToB) : tmp.push(aIsToB, bIsToA);\n    });\n    setDisplayRelationshipTypes(tmp);\n  }, [relationshipTypes]);\n\n  const handleRelationshipTypeChange = (event) => {\n    const { target } = event;\n    const field = target.name;\n    const value = target.options[target.selectedIndex].value;\n    setFieldValue(field, value);\n  };\n\n  const handleSuggestionSelected = (field: string, selectedSuggestion: string) => {\n    setFieldValue(field, selectedSuggestion);\n  };\n\n  return (\n    <section className={sectionStyles.formSection} aria-label=\"Relationships Section\">\n      <section className={sectionStyles.fieldGroup}>\n        <FieldArray name=\"relationships\">\n          {({\n            push,\n            remove,\n            form: {\n              values: { relationships },\n            },\n          }) => (\n            <div>\n              {relationships && relationships.length > 0 ? (\n                <div>\n                  <br />\n                  {relationships.map((_relationship: any, index: React.Key) => (\n                    <div key={index} className={styles.relationship}>\n                      <div className={styles.searchBox} style={{ marginBottom: '1rem' }}>\n                        <Autosuggest\n                          name={`relationships[${index}].relatedPerson`}\n                          placeholder=\"Find person\"\n                          onSuggestionSelected={handleSuggestionSelected}\n                          getSearchResults={searchPerson}\n                          getDisplayValue={(item) => item.display}\n                          getFieldValue={(item) => item.uuid}\n                        />\n                      </div>\n                      <div className={`${styles.selectRelationshipType}`} style={{ marginBottom: '1rem' }}>\n                        <Select\n                          light={true}\n                          id=\"select\"\n                          defaultValue=\"placeholder-item\"\n                          labelText={t('relationship', 'Relationship')}\n                          onChange={handleRelationshipTypeChange}\n                          name={`relationships[${index}].relationship`}>\n                          <SelectItem\n                            disabled\n                            hidden\n                            value=\"placeholder-item\"\n                            text={t('relationshipToPatient', 'Relationship to patient')}\n                          />\n                          {displayRelationshipTypes.map((type) => (\n                            <SelectItem\n                              text={type.display}\n                              value={`${type.uuid}/${type.direction}`}\n                              key={type.display}\n                            />\n                          ))}\n                        </Select>\n                      </div>\n                      <div className={styles.actions}>\n                        {relationships.length - 1 === index && (\n                          <Button kind=\"ghost\" onClick={() => push({})}>\n                            {t('addRelationshipButtonText', 'Add Relationship')}\n                          </Button>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : null}\n            </div>\n          )}\n        </FieldArray>\n      </section>\n    </section>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { TextInput, TextInputProps } from 'carbon-components-react';\nimport { useField } from 'formik';\nimport { useTranslation } from 'react-i18next';\n\ninterface InputProps extends TextInputProps {\n  checkWarning?(value: string): string;\n}\n\nexport const Input: React.FC<InputProps> = ({ checkWarning, ...props }) => {\n  const [field, meta] = useField(props.name);\n  const { t } = useTranslation();\n  /*\n    t('givenNameRequired')\n    t('familyNameRequired')\n    t('genderUnspecified')\n    t('genderRequired')\n    t('birthdayRequired')\n    t('birthdayNotInTheFuture')\n    t('negativeYears')\n    t('negativeMonths')\n    t('deathdayNotInTheFuture')\n    t('invalidEmail')\n    t('numberInNameDubious')\n  */\n  const value = field.value || '';\n  const invalidText = meta.error && t(meta.error);\n  const warnText = useMemo(() => {\n    if (!invalidText && typeof checkWarning === 'function') {\n      const warning = checkWarning(value);\n      return warning && t(warning);\n    }\n\n    return undefined;\n  }, [checkWarning, invalidText, value, t]);\n\n  return (\n    <div style={{ marginBottom: '1rem' }}>\n      <TextInput\n        {...props}\n        {...field}\n        invalid={!!(meta.touched && meta.error)}\n        invalidText={invalidText}\n        warn={!!warnText}\n        warnText={warnText}\n        value={value}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Select, SelectItem } from 'carbon-components-react';\nimport { useField } from 'formik';\n\ninterface SelectInputProps {\n  name: string;\n  options: Array<string>;\n  label: string;\n}\n\nexport const SelectInput: React.FC<SelectInputProps> = ({ name, options, label }) => {\n  const [field, meta] = useField(name);\n  const selectOptions = [\n    <SelectItem disabled hidden text={`Select ${label}`} key=\"\" value=\"\" />,\n    ...options.map((currentOption, index) => <SelectItem text={currentOption} value={currentOption} key={index} />),\n  ];\n\n  return (\n    <div style={{ marginBottom: '1rem' }}>\n      <Select id=\"identifier\" {...field} labelText={label} light>\n        {selectOptions}\n      </Select>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Input } from '../../input/basic-input/input/input.component';\nimport { SelectInput } from '../../input/basic-input/select/select-input.component';\nimport { PatientRegistrationContext } from '../../patient-registration-context';\nimport { useTranslation } from 'react-i18next';\nimport styles from './../section.scss';\n\nexport interface DeathInfoSectionProps {\n  id: 'death';\n}\n\nexport const DeathInfoSection: React.FC<DeathInfoSectionProps> = () => {\n  const { values } = React.useContext(PatientRegistrationContext);\n  const { t } = useTranslation();\n\n  return (\n    <section className={styles.formSection} aria-label=\"Death Info Section\">\n      <h5 className={`omrs-type-title-5 ${styles.formSectionTitle}`}>Death Info</h5>\n      <section className={styles.fieldGroup}>\n        <Input labelText={t('isDeadInputLabel', 'Is Dead')} name=\"isDead\" id=\"isDead\" light />\n        {values.isDead && (\n          <>\n            <Input labelText={t('deathDateInputLabel', 'Date of Death')} name=\"deathDate\" id=\"deathDate\" light />\n            <SelectInput\n              options={[t('unknown', 'Unknown'), t('stroke', 'Stroke')]}\n              label={t('causeOfDeathInputLabel', 'Cause of Death')}\n              name=\"deathCause\"\n            />\n          </>\n        )}\n      </section>\n    </section>\n  );\n};\n","import React from 'react';\nimport styles from '../patient-registration.scss';\nimport { Tile } from 'carbon-components-react';\nimport { useTranslation } from 'react-i18next';\n\nexport const SectionWrapper = ({ id, children, name, index }) => {\n  const { t } = useTranslation();\n  return (\n    <div id={id}>\n      <h3 className={styles.productiveHeading02} style={{ color: '#161616' }}>\n        {index + 1}. {name}\n      </h3>\n      <span className={styles.label01}>\n        {t('allFieldsRequiredText', 'All fields are required unless marked optional')}\n      </span>\n      <div style={{ margin: '1rem 0 1rem' }}>\n        <Tile>{children}</Tile>\n      </div>\n    </div>\n  );\n};\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./field.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./field.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Input } from '../../input/basic-input/input/input.component';\nimport { ResourcesContext } from '../../../offline.resources';\nimport styles from '../field.scss';\n\nfunction parseString(xmlDockAsString: string) {\n  const parser = new DOMParser();\n  return parser.parseFromString(xmlDockAsString, 'text/xml');\n}\n\nfunction getTagAsDocument(tagName: string, template: XMLDocument) {\n  const tmp = template.getElementsByTagName(tagName)[0];\n  return tmp ? parseString(tmp.outerHTML) : parseString('');\n}\n\nfunction getFieldValue(field: string, doc: XMLDocument) {\n  const fieldElement = doc.getElementsByTagName(field)[0];\n  return fieldElement ? fieldElement.getAttribute('value') : null;\n}\n\nexport const AddressField: React.FC = () => {\n  const { addressTemplate } = useContext(ResourcesContext);\n  const [addressFields, setAddressFields] = useState([]);\n  const { t } = useTranslation();\n  const addressTemplateXml = addressTemplate.results[0].value;\n\n  useEffect(() => {\n    const templateXmlDoc = parseString(addressTemplateXml);\n    const nameMappings = getTagAsDocument('nameMappings', templateXmlDoc);\n    const elementDefaults = getTagAsDocument('elementdefaults', templateXmlDoc);\n    const properties = nameMappings.getElementsByTagName('property');\n    const propertiesObj = Array.prototype.map.call(properties, (property: Element) => {\n      const name = property.getAttribute('name');\n      /*\n        t('postalCode')\n        t('address1')\n        t('stateProvince')\n        t('cityVillage')\n        t('country')\n      */\n      const labelText = t(name, property.getAttribute('value'));\n      const value = getFieldValue(name, elementDefaults);\n      return {\n        id: name,\n        name,\n        labelText,\n        value,\n      };\n    });\n    setAddressFields(propertiesObj);\n  }, [t, addressTemplateXml]);\n\n  return (\n    <div>\n      <h4 className={styles.productiveHeading02Light}>{t('addressHeader', 'Address')}</h4>\n      <div>\n        {addressFields.map((attributes) => (\n          <Input key={attributes.name} {...attributes} light />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Input } from '../../input/basic-input/input/input.component';\nimport { useTranslation } from 'react-i18next';\n\nexport const PhoneField: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      <Input id=\"phone\" name=\"phone\" labelText={t('phoneNumberInputLabelText', 'Phone number (optional)')} light />\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from '../field.scss';\nimport { Input } from '../../input/basic-input/input/input.component';\nimport { useTranslation } from 'react-i18next';\nimport { PhoneField } from '../phone/phone-field.component';\n\nexport const PhoneEmailField: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      <h4 className={styles.productiveHeading02Light}>{t('phoneEmailLabelText', 'Phone & Email')}</h4>\n      <div className={styles.grid}>\n        <PhoneField />\n        <Input id=\"email\" name=\"email\" labelText={t('emailLabelText', 'Email')} light />\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useContext } from 'react';\nimport styles from '../field.scss';\nimport { Input } from '../../input/basic-input/input/input.component';\nimport { PatientRegistrationContext, useFieldConfig } from '../../patient-registration-context';\nimport { useTranslation } from 'react-i18next';\nimport { ExtensionSlot } from '@openmrs/esm-framework';\n\nconst containsNoNumbers = /^([^0-9]*)$/;\n\nfunction checkNumber(value: string) {\n  if (!containsNoNumbers.test(value)) {\n    return 'numberInNameDubious';\n  }\n\n  return undefined;\n}\n\nexport const NameField = () => {\n  const { t } = useTranslation();\n  const { setCapturePhotoProps, currentPhoto } = useContext(PatientRegistrationContext);\n\n  const onCapturePhoto = useCallback((dataUri: string, photoDateTime: string) => {\n    if (setCapturePhotoProps) {\n      setCapturePhotoProps({\n        imageData: dataUri,\n        dateTime: photoDateTime,\n      });\n    }\n  }, []);\n\n  const fieldConfigs = useFieldConfig('name');\n\n  return (\n    <div>\n      <h4 className={styles.productiveHeading02Light}>{t('fullNameLabelText', 'Full Name')}</h4>\n      <div className={styles.grid}>\n        <ExtensionSlot\n          className={styles.photoExtension}\n          extensionSlotName=\"capture-patient-photo-slot\"\n          state={{ onCapturePhoto, initialState: currentPhoto }}\n        />\n\n        <div className={styles.nameField}>\n          <Input\n            id=\"givenName\"\n            name=\"givenName\"\n            labelText={t('givenNameLabelText', 'Given Name')}\n            light\n            checkWarning={checkNumber}\n          />\n          {fieldConfigs.displayMiddleName && (\n            <Input\n              id=\"middleName\"\n              name=\"middleName\"\n              labelText={t('middleNameLabelText', 'Middle Name')}\n              light\n              checkWarning={checkNumber}\n            />\n          )}\n          <Input\n            id=\"familyName\"\n            name=\"familyName\"\n            labelText={t('familyNameLabelText', 'Family Name')}\n            light\n            checkWarning={checkNumber}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { DatePicker, DatePickerInput, TextInput } from 'carbon-components-react';\nimport { useTranslation } from 'react-i18next';\nimport { useField } from 'formik';\nimport { PatientRegistrationContext } from '../../patient-registration-context';\nimport { generateFormatting } from '../../date-util';\n\nexport const DobField: React.FC = () => {\n  const { t } = useTranslation();\n  const [field, meta] = useField('birthdate');\n  const [estimated] = useField('birthdateEstimated');\n  const { setFieldValue } = useContext(PatientRegistrationContext);\n  const { format, placeHolder, dateFormat } = generateFormatting(['d', 'm', 'Y'], '/');\n  const invalidText = meta.error && t(meta.error);\n\n  const onDateChange = ([birthdate]) => {\n    setFieldValue('birthdate', birthdate);\n    setFieldValue('birthdateEstimated', false);\n  };\n\n  return (\n    <div style={{ marginBottom: '1rem' }}>\n      <DatePicker dateFormat={dateFormat} datePickerType=\"single\" light onChange={onDateChange}>\n        <DatePickerInput\n          id=\"birthdate\"\n          placeholder={placeHolder}\n          labelText={t('dateOfBirthLabelText', 'Date of Birth')}\n          invalid={!!(meta.touched && meta.error)}\n          invalidText={invalidText}\n          {...field}\n          value={estimated.value ? '' : format(field.value)}\n        />\n      </DatePicker>\n    </div>\n  );\n};\n\nexport const EobField: React.FC = () => {\n  const { t } = useTranslation();\n  const today = new Date();\n  const [field] = useField('birthdate');\n  const [estimated] = useField('birthdateEstimated');\n  const { setFieldValue } = useContext(PatientRegistrationContext);\n\n  const onValueChange = (ev) => {\n    const years = +ev.target.value;\n\n    if (!isNaN(years) && years < 1000 && years >= 0) {\n      setFieldValue('birthdate', new Date(today.getFullYear() - years, 0, 1));\n      setFieldValue('birthdateEstimated', true);\n    }\n  };\n\n  return (\n    <div style={{ marginBottom: '1rem' }}>\n      <TextInput\n        id=\"birthdateEstimated\"\n        light\n        onChange={onValueChange}\n        labelText={t('estimatedYearsLabelText', 'Estimated Years')}\n        value={estimated.value && field.value ? `${today.getFullYear() - field.value.getFullYear()}` : ''}\n      />\n    </div>\n  );\n};\n","export const generateFormatting = (order: Array<string>, separator: string) => {\n  const parse = (value: string) => {\n    const parts = value.split(separator);\n    const date = new Date(null);\n\n    order.forEach((key, index) => {\n      switch (key) {\n        case 'd':\n          date.setDate(parseInt(parts[index]));\n          break;\n        case 'm':\n          date.setMonth(parseInt(parts[index]) - 1);\n          break;\n        case 'Y':\n          date.setFullYear(parseInt(parts[index]));\n          break;\n      }\n    });\n    return date;\n  };\n\n  const format = (date: Date) => {\n    if (date === null) {\n      return '';\n    } else if (!(date instanceof Date)) {\n      return date;\n    } else {\n      const parts = [];\n\n      order.forEach((key, index) => {\n        switch (key) {\n          case 'd':\n            parts[index] = date.getDate();\n            break;\n          case 'm':\n            parts[index] = date.getMonth() + 1;\n            break;\n          case 'Y':\n            parts[index] = date.getFullYear();\n            break;\n        }\n      });\n\n      return parts.join(separator);\n    }\n  };\n\n  const placeHolder = order.map((x) => (x === 'Y' ? 'YYYY' : x + x)).join(separator);\n  const dateFormat = order.join(separator);\n\n  return { parse, format, placeHolder, dateFormat };\n};\n","import React, { useContext } from 'react';\nimport { RadioButton, RadioButtonGroup } from 'carbon-components-react';\nimport styles from '../field.scss';\nimport { useTranslation } from 'react-i18next';\nimport { PatientRegistrationContext } from '../../patient-registration-context';\nimport { useField } from 'formik';\nimport { DobField, EobField } from '../dob/dob.component';\n\nexport const GenderBirthField: React.FC = () => {\n  const { t } = useTranslation();\n  const [field, meta] = useField('gender');\n  const { setFieldValue } = useContext(PatientRegistrationContext);\n\n  const setGender = (gender: string) => {\n    setFieldValue('gender', gender);\n  };\n\n  return (\n    <div>\n      <h4 className={styles.productiveHeading02Light}>{t('sexAndBirthLabel', 'Sex & Birth')}</h4>\n      <div className={styles.grid}>\n        <div className={styles.ageField}>\n          <DobField />\n          <EobField />\n        </div>\n        <div className={styles.sexField}>\n          <p className=\"bx--label\">{t('genderLabelText', 'Sex')}</p>\n          <RadioButtonGroup name=\"gender\" orientation=\"vertical\" onChange={setGender} valueSelected={field.value}>\n            <RadioButton id=\"male\" labelText={t('maleLabelText', 'Male')} value=\"Male\" />\n            <RadioButton id=\"female\" labelText={t('femaleLabelText', 'Female')} value=\"Female\" />\n            <RadioButton id=\"other\" labelText={t('otherLabelText', 'Other')} value=\"Other\" />\n            <RadioButton id=\"unknown\" labelText={t('unknownLabelText', 'Unknown')} value=\"Unknown\" />\n          </RadioButtonGroup>\n          {meta.touched && meta.error && (\n            <>\n              <input type=\"hidden\" data-invalid=\"true\" />\n              <div className=\"bx--form-requirement\">{t(meta.error)}</div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect, useCallback, useContext, useMemo } from 'react';\nimport styles from '../../input.scss';\nimport { useTranslation } from 'react-i18next';\nimport { Input } from '../../basic-input/input/input.component';\nimport { PatientIdentifierValue } from '../../../patient-registration-types';\nimport { PatientRegistrationContext } from '../../../patient-registration-context';\nimport { TrashCan16, Edit16 } from '@carbon/icons-react';\nimport { Button } from 'carbon-components-react';\nimport { ResourcesContext } from '../../../../offline.resources';\nimport { showModal } from '@openmrs/esm-framework';\n\ninterface IdentifierInputProps {\n  patientIdentifier: PatientIdentifierValue;\n  index: number;\n  remove: <T>(index: number) => T;\n}\n\nexport const IdentifierInput: React.FC<IdentifierInputProps> = ({ patientIdentifier, index, remove }) => {\n  const { identifierTypes } = useContext(ResourcesContext);\n  const identifierType = useMemo(\n    () => identifierTypes.find((identifierType) => identifierType.uuid === patientIdentifier.identifierTypeUuid),\n    [patientIdentifier, identifierTypes],\n  );\n\n  const { setFieldValue } = React.useContext(PatientRegistrationContext);\n  const { source, action, identifier } = patientIdentifier;\n  const identifierName = identifierType?.name;\n  const fieldName = `identifiers[${index}].identifier`;\n  const { t } = useTranslation();\n  const [option, setAutoGenerationOption] = useState({\n    manualEntryEnabled: source ? true : undefined,\n    automaticGenerationEnabled: undefined,\n  });\n\n  useEffect(() => {\n    if (source && source.autoGenerationOption && source.autoGenerationOption.automaticGenerationEnabled) {\n      setFieldValue(`identifiers[${index}].autoGeneration`, true);\n    }\n  }, [source]);\n\n  useEffect(() => {\n    if (source) {\n      if (source.autoGenerationOption) {\n        setAutoGenerationOption(source.autoGenerationOption);\n\n        if (source.autoGenerationOption.automaticGenerationEnabled) {\n          setFieldValue(`identifiers[${index}].autoGeneration`, true);\n          setFieldValue(`identifiers[${index}].identifier`, '');\n        }\n      } else {\n        setAutoGenerationOption({\n          manualEntryEnabled: true,\n          automaticGenerationEnabled: false,\n        });\n        setFieldValue(`identifiers[${index}].autoGeneration`, false);\n      }\n    } else {\n      setAutoGenerationOption({\n        manualEntryEnabled: true,\n        automaticGenerationEnabled: false,\n      });\n      setFieldValue(`identifiers[${index}].autoGeneration`, false);\n    }\n  }, [source]);\n\n  const handleEdit = useCallback(() => {\n    setFieldValue(`identifiers[${index}]`, {\n      ...patientIdentifier,\n      action: 'UPDATE',\n      source: identifierType?.identifierSources?.[0],\n    } as PatientIdentifierValue);\n  }, [patientIdentifier]);\n\n  const handleDelete = useCallback(() => {\n    if (action === 'ADD') {\n      remove(index);\n    } else {\n      const confirmDeleteIdentifierModal = showModal('delete-identifier-confirmation-modal', {\n        deleteIdentifier: (deleteIdentifier) => {\n          if (deleteIdentifier) {\n            setFieldValue(`identifiers[${index}].action`, 'DELETE');\n          }\n          confirmDeleteIdentifierModal();\n        },\n        identifierName,\n        identifierValue: identifier,\n      });\n    }\n  }, [action, patientIdentifier, identifierName, identifier]);\n\n  const autoGenerated = !option.manualEntryEnabled || (option.manualEntryEnabled && option.automaticGenerationEnabled);\n\n  return (\n    <div className={styles.IDInput}>\n      {option.manualEntryEnabled && (action === 'ADD' || action === 'UPDATE') ? (\n        <Input\n          id={identifierName}\n          light\n          placeholder={\n            autoGenerated\n              ? `${t('autoGeneratedPlaceholderText', 'Auto generated')}`\n              : `${t('enterIdentifierPlaceholderText', 'Enter Identifier')}`\n          }\n          labelText={identifierName}\n          name={fieldName}\n          disabled={!option.manualEntryEnabled}\n          required\n        />\n      ) : (\n        <div className={styles.textID}>\n          <p className={styles.label}>{identifierName}</p>\n          <p className={styles.bodyShort02}>\n            {identifier ? identifier : t('autoGeneratedPlaceholderText', 'Auto generated')}\n          </p>\n        </div>\n      )}\n      <div>\n        {!(identifierType.isPrimary || identifierType.required) && patientIdentifier.action === 'NONE' && (\n          <Button kind=\"ghost\" onClick={handleEdit} iconDescription={t('editIdentifierTooltip', 'Edit')} hasIconOnly>\n            <Edit16 />\n          </Button>\n        )}\n        {!(identifierType?.isPrimary || identifierType?.required) && (\n          <Button\n            kind=\"ghost\"\n            onClick={handleDelete}\n            iconDescription={t('deleteIdentifierTooltip', 'Delete')}\n            hasIconOnly>\n            <TrashCan16 className={styles.trashCan} />\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./identifier-selection.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./identifier-selection.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./overlay.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./overlay.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport { ArrowLeft16, Close16 } from '@carbon/icons-react';\nimport { Button, Header } from 'carbon-components-react';\nimport styles from './overlay.scss';\nimport { useLayoutType } from '@openmrs/esm-framework';\n\ninterface OverlayProps {\n  close: () => void;\n  header: string;\n  buttonsGroup?: React.ReactElement;\n}\n\nconst Overlay: React.FC<OverlayProps> = ({ close, children, header, buttonsGroup }) => {\n  const isDesktop = useLayoutType() === 'desktop';\n\n  return (\n    <div className={isDesktop ? styles.desktopOverlay : styles.tabletOverlay}>\n      {isDesktop ? (\n        <div className={styles.desktopHeader}>\n          <div className={styles.headerContent}>{header}</div>\n          <Button className={styles.closeButton} onClick={close} kind=\"ghost\" hasIconOnly>\n            <Close16 />\n          </Button>\n        </div>\n      ) : (\n        <Header className={styles.tabletOverlayHeader}>\n          <Button onClick={close} hasIconOnly>\n            <ArrowLeft16 onClick={close} />\n          </Button>\n          <div className={styles.headerContent}>{header}</div>\n        </Header>\n      )}\n      <div className={styles.overlayContent}>{children}</div>\n      <div className={styles.buttonsGroup}>{buttonsGroup}</div>\n    </div>\n  );\n};\n\nexport default Overlay;\n","import React, { useMemo, useCallback, useEffect, useState, Dispatch, SetStateAction, useContext } from 'react';\nimport styles from './identifier-selection.scss';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Checkbox, Search, RadioButtonGroup, RadioButton } from 'carbon-components-react';\nimport { PatientIdentifierType, PatientIdentifierValue } from '../../patient-registration-types';\nimport Overlay from '../../ui-components/overlay';\nimport { ResourcesContext } from '../../../offline.resources';\n\ninterface PatientIdentifierOverlayProps {\n  setFieldValue: (string, PatientIdentifierValue) => void;\n  closeOverlay: () => void;\n  push: (obj: PatientIdentifierValue) => void;\n  remove: <T>(index: number) => T;\n  identifiers: Array<PatientIdentifierValue>;\n}\n\nconst PatientIdentifierOverlay: React.FC<PatientIdentifierOverlayProps> = ({\n  closeOverlay,\n  push,\n  setFieldValue,\n  identifiers,\n  remove,\n}) => {\n  const { identifierTypes } = useContext(ResourcesContext);\n  const [unsavedIdentifierTypes, setUnsavedIdentifierTypes] = useState<Array<PatientIdentifierType>>([]);\n  const [searchString, setSearchString] = useState<string>('');\n  const { t } = useTranslation();\n  const getIdentifierByTypeUuid = (identifierTypeUuid: string) =>\n    identifiers.find((identifier) => identifier.identifierTypeUuid === identifierTypeUuid);\n\n  useEffect(() => {\n    if (identifierTypes) {\n      setUnsavedIdentifierTypes(\n        identifierTypes.map((identifierType) => {\n          const identifier = getIdentifierByTypeUuid(identifierType.uuid);\n          return {\n            ...identifierType,\n            checked: identifier ? identifier.action !== 'DELETE' : identifierType.isPrimary || identifierType.required,\n            source: identifier?.source ?? identifierType.identifierSources?.[0],\n          };\n        }),\n      );\n    }\n  }, [identifierTypes, identifiers]);\n\n  const handleSearch = useCallback((event) => setSearchString(event?.target?.value ?? ''), []);\n\n  const filteredIdentifiers = useMemo(\n    () =>\n      unsavedIdentifierTypes?.filter((identifier) =>\n        identifier?.name?.toLowerCase().includes(searchString.toLowerCase()),\n      ),\n    [unsavedIdentifierTypes, searchString],\n  );\n\n  const handleCheckingIdentifier = (uuid: string, checked: boolean) =>\n    setUnsavedIdentifierTypes((identifiers) =>\n      identifiers.map((identifier) =>\n        identifier.uuid === uuid\n          ? {\n              ...identifier,\n              checked: identifier.isPrimary || identifier.required || checked,\n            }\n          : identifier,\n      ),\n    );\n\n  const handleSelectingIdentifierSource = (identifierTypeUuid, sourceUuid) =>\n    setUnsavedIdentifierTypes((unsavedIdentifierTypes) =>\n      unsavedIdentifierTypes?.map((identifierType) =>\n        identifierType?.uuid === identifierTypeUuid\n          ? {\n              ...identifierType,\n              source: identifierType?.identifierSources.find((source) => source?.uuid === sourceUuid),\n            }\n          : identifierType,\n      ),\n    );\n\n  const identifierTypeFields = useMemo(\n    () =>\n      filteredIdentifiers.map((identifierType) => {\n        const identifier = getIdentifierByTypeUuid(identifierType.uuid);\n        const showIdentifierSources = !(identifier?.action === 'NONE');\n        return (\n          <div key={identifierType.uuid} className={styles.space05}>\n            <Checkbox\n              id={identifierType.uuid}\n              value={identifierType.uuid}\n              labelText={identifierType.name}\n              onChange={(checked) => handleCheckingIdentifier(identifierType?.uuid, checked)}\n              checked={identifierType.checked}\n              disabled={\n                identifier ? identifier.action !== 'DELETE' : identifierType.isPrimary || identifierType.required\n              }\n            />\n            {showIdentifierSources && identifierType.checked && identifierType?.identifierSources?.length > 0 && (\n              <div className={styles.radioGroup}>\n                <RadioButtonGroup\n                  legendText={t('source', 'Source')}\n                  name={`${identifierType?.fieldName}-identifier-sources`}\n                  defaultSelected={identifier?.source?.uuid}\n                  onChange={(sourceUuid: string) => handleSelectingIdentifierSource(identifierType?.uuid, sourceUuid)}\n                  orientation=\"vertical\">\n                  {identifierType?.identifierSources.map((source, ind) => (\n                    <RadioButton\n                      key={ind}\n                      labelText={source?.name}\n                      name={source?.uuid}\n                      value={source.uuid}\n                      className={styles.radioButton}\n                    />\n                  ))}\n                </RadioButtonGroup>\n              </div>\n            )}\n          </div>\n        );\n      }),\n    [filteredIdentifiers],\n  );\n\n  const handleConfiguringIdentifiers = useCallback(() => {\n    unsavedIdentifierTypes.forEach((identifierType) => {\n      const index = identifiers.findIndex((identifier) => identifier.identifierTypeUuid === identifierType.uuid);\n      if (index >= 0) {\n        const identifier = identifiers[index];\n        if (!identifierType.checked && identifiers[index].action === 'ADD') {\n          remove(index);\n        } else {\n          let action: PatientIdentifierValue['action'];\n\n          if (identifierType.checked) {\n            if (identifier.action === 'DELETE') {\n              action = 'UPDATE';\n            } else {\n              action = identifier.action;\n            }\n          } else {\n            if (identifier.action === 'UPDATE') {\n              action = 'DELETE';\n            }\n          }\n\n          setFieldValue(`identifiers[${index}]`, {\n            ...identifiers[index],\n            action: action,\n            source: action === 'ADD' || action === 'UPDATE' ? identifierType.source : null,\n          });\n        }\n      } else if (identifierType.checked) {\n        push({\n          identifier: '',\n          action: 'ADD',\n          source: identifierType.source,\n          identifierTypeUuid: identifierType.uuid,\n          preferred: identifierType.isPrimary,\n        });\n      }\n    });\n    closeOverlay();\n  }, [unsavedIdentifierTypes, identifiers]);\n\n  return (\n    <Overlay\n      close={closeOverlay}\n      header={t('configureIdentifiers', 'Configure identifiers')}\n      buttonsGroup={\n        <div className={styles.overlayButtons}>\n          <Button kind=\"secondary\" size=\"lg\" onClick={closeOverlay}>\n            {t('cancel', 'Cancel')}\n          </Button>\n          <Button kind=\"primary\" size=\"lg\" onClick={handleConfiguringIdentifiers}>\n            {t('configureIdentifiers', 'Configure identifiers')}\n          </Button>\n        </div>\n      }>\n      <div>\n        <p className={styles.bodyLong02}>\n          {t('IDInstructions', \"Select the identifiers you'd like to add for this patient:\")}\n        </p>\n        {unsavedIdentifierTypes.length > 7 && (\n          <div className={styles.space05}>\n            <Search\n              labelText={t('searchIdentifierPlaceholder', 'Search identifier')}\n              placeholder={t('searchIdentifierPlaceholder', 'Search identifier')}\n              onChange={handleSearch}\n              value={searchString}\n            />\n          </div>\n        )}\n        <fieldset>{identifierTypeFields}</fieldset>\n      </div>\n    </Overlay>\n  );\n};\n\nexport default PatientIdentifierOverlay;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { IdentifierInput } from '../../input/custom-input/identifier/identifier-input.component';\nimport styles from '../field.scss';\nimport { useTranslation } from 'react-i18next';\nimport { PatientRegistrationContext } from '../../patient-registration-context';\nimport { Button } from 'carbon-components-react';\nimport { ArrowRight16 } from '@carbon/icons-react';\nimport { useLayoutType } from '@openmrs/esm-framework';\nimport { PatientIdentifierValue } from '../../patient-registration-types';\nimport IdentifierSelectionOverlay from './identifier-selection-overlay';\nimport { FieldArray } from 'formik';\nimport { ResourcesContext } from '../../../offline.resources';\n\nexport const IdField: React.FC = () => {\n  const { identifierTypes } = useContext(ResourcesContext);\n  const { setFieldValue, inEditMode } = useContext(PatientRegistrationContext);\n  const { t } = useTranslation();\n  const desktop = useLayoutType() === 'desktop';\n  const [showIdentifierOverlay, setShowIdentifierOverlay] = useState(false);\n\n  useEffect(() => {\n    if (!inEditMode && identifierTypes) {\n      setFieldValue(\n        'identifiers',\n        identifierTypes\n          .filter((identifierType) => identifierType.isPrimary || identifierType.required)\n          .map(\n            (identifierType) =>\n              ({\n                action: 'ADD',\n                identifier: '',\n                identifierTypeUuid: identifierType.uuid,\n                source: identifierType.identifierSources?.[0],\n                preferred: identifierType.isPrimary,\n              } as PatientIdentifierValue),\n          ),\n      );\n    }\n  }, [identifierTypes, inEditMode]);\n\n  return (\n    <div>\n      <div className={styles.identifierLabelText}>\n        <h4 className={styles.productiveHeading02Light}>{t('idFieldLabelText', 'Identifiers')}</h4>\n        <Button\n          kind=\"ghost\"\n          className={styles.setIDNumberButton}\n          onClick={() => setShowIdentifierOverlay(true)}\n          size={desktop ? 'sm' : 'md'}>\n          {t('configure', 'Configure')} <ArrowRight16 />\n        </Button>\n      </div>\n      <div>\n        <FieldArray name=\"identifiers\">\n          {({\n            push,\n            remove,\n            form: {\n              values: { identifiers },\n            },\n          }) => (\n            <>\n              {identifiers\n                .filter((identifier) => identifier.action !== 'DELETE')\n                .map((identifier: PatientIdentifierValue, index) => (\n                  <IdentifierInput key={index} index={index} patientIdentifier={identifier} remove={remove} />\n                ))}\n              {showIdentifierOverlay && (\n                <IdentifierSelectionOverlay\n                  setFieldValue={setFieldValue}\n                  closeOverlay={() => setShowIdentifierOverlay(false)}\n                  push={push}\n                  identifiers={identifiers}\n                  remove={remove}\n                />\n              )}\n            </>\n          )}\n        </FieldArray>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { DemographicsSection, DemographicsSectionProps } from './demographics/demographics-section.component';\nimport { ContactInfoSection, ContactInfoSectionProps } from './contact-info/contact-info-section.component';\nimport {\n  RelationshipsSection,\n  RelationshipsSectionProps,\n} from './patient-relationships/relationships-section.component';\nimport { DeathInfoSection, DeathInfoSectionProps } from './death-info/death-info-section.component';\nimport { SectionWrapper } from './section-wrapper.component';\nimport { AddressField } from '../field/address/address-field.component';\nimport { PhoneEmailField } from '../field/email/email-field.component';\nimport { NameField } from '../field/name/name-field.component';\nimport { GenderBirthField } from '../field/gender/gender-field.component';\nimport { IdField } from '../field/id/id-field.component';\n\nexport function getField(fieldName: string) {\n  switch (fieldName) {\n    case 'address':\n      return <AddressField />;\n    case 'phone & email':\n      return <PhoneEmailField />;\n    case 'name':\n      return <NameField />;\n    case 'gender & dob':\n      return <GenderBirthField />;\n    case 'id':\n      return <IdField />;\n    default:\n      return <div>Unknown Field {fieldName} </div>;\n  }\n}\n\nfunction renderSection(sectionProps: SectionProps) {\n  switch (sectionProps.id) {\n    case 'demographics':\n      return <DemographicsSection {...sectionProps} />;\n    case 'contact':\n      return <ContactInfoSection {...sectionProps} />;\n    case 'death':\n      return <DeathInfoSection {...sectionProps} />;\n    case 'relationships':\n      return <RelationshipsSection {...sectionProps} />;\n    default:\n      return <div>Unknown Section {sectionProps.id}</div>;\n  }\n}\n\nexport interface DefaultSectionProps {\n  id: 'default';\n}\n\nexport type SectionProps =\n  | DemographicsSectionProps\n  | ContactInfoSectionProps\n  | DeathInfoSectionProps\n  | RelationshipsSectionProps\n  | DefaultSectionProps;\n\nexport function getSection(sectionProps: SectionProps & { name: string }, index: number) {\n  return (\n    <SectionWrapper {...sectionProps} index={index}>\n      {renderSection(sectionProps)}\n    </SectionWrapper>\n  );\n}\n","import { navigate, openmrsFetch } from '@openmrs/esm-framework';\nimport * as Yup from 'yup';\nimport {\n  AddressValidationSchemaType,\n  FormValues,\n  PatientIdentifier,\n  PatientUuidMapType,\n  PatientIdentifierValue,\n} from './patient-registration-types';\nimport camelCase from 'lodash-es/camelCase';\nimport capitalize from 'lodash-es/capitalize';\n\nexport function parseAddressTemplateXml(addressTemplate: string) {\n  const templateXmlDoc = new DOMParser().parseFromString(addressTemplate, 'text/xml');\n  const nameMappings = templateXmlDoc.querySelector('nameMappings').querySelectorAll('property');\n  const validationSchemaObjs: AddressValidationSchemaType[] = Array.prototype.map.call(\n    nameMappings,\n    (nameMapping: Element) => {\n      const name = nameMapping.getAttribute('name');\n      const label = nameMapping.getAttribute('value');\n      const regex = findElementValueInXmlDoc(name, 'elementRegex', templateXmlDoc) || '.*';\n      const regexFormat = findElementValueInXmlDoc(name, 'elementRegexFormats', templateXmlDoc) || '';\n\n      return {\n        name,\n        label,\n        regex,\n        regexFormat,\n      };\n    },\n  );\n\n  const addressValidationSchema = Yup.object(\n    validationSchemaObjs.reduce((final, current) => {\n      final[current.name] = Yup.string().matches(current.regex, current.regexFormat);\n      return final;\n    }, {}),\n  );\n\n  const addressFieldValues: Array<{ name: string; defaultValue: string }> = Array.prototype.map.call(\n    nameMappings,\n    (nameMapping: Element) => {\n      const name = nameMapping.getAttribute('name');\n      const defaultValue = findElementValueInXmlDoc(name, 'elementDefaults', templateXmlDoc) ?? '';\n      return { name, defaultValue };\n    },\n  );\n\n  return {\n    addressFieldValues,\n    addressValidationSchema,\n  };\n}\n\nfunction findElementValueInXmlDoc(fieldName: string, elementSelector: string, doc: XMLDocument) {\n  return doc.querySelector(elementSelector)?.querySelector(`[name=${fieldName}]`)?.getAttribute('value') ?? null;\n}\n\nexport function scrollIntoView(viewId: string) {\n  document.getElementById(viewId).scrollIntoView({\n    behavior: 'smooth',\n    block: 'center',\n    inline: 'center',\n  });\n}\n\nexport function cancelRegistration() {\n  navigate({ to: `${window.spaBase}/home` });\n}\n\nexport function getFormValuesFromFhirPatient(patient: fhir.Patient) {\n  const result = {} as FormValues;\n  const patientName = patient.name[0];\n  const additionalPatientName = patient.name[1];\n\n  result.patientUuid = patient.id;\n  result.givenName = patientName?.given[0];\n  result.middleName = patientName?.given[1];\n  result.familyName = patientName?.family;\n  result.unidentifiedPatient =\n    patientName.given[0] === 'UNKNOWN' && patientName.family === 'unknown' ? true : undefined;\n\n  result.addNameInLocalLanguage = !!additionalPatientName ? true : undefined;\n  result.additionalGivenName = additionalPatientName?.given[0];\n  result.additionalMiddleName = additionalPatientName?.given[1];\n  result.additionalFamilyName = additionalPatientName?.family;\n\n  result.gender = capitalize(patient.gender);\n  result.birthdate = patient.birthDate ? (new Date(patient.birthDate) as any) : undefined;\n  result.telephoneNumber = patient.telecom ? patient.telecom[0].value : '';\n\n  if (patient.deceasedBoolean || patient.deceasedDateTime) {\n    result.isDead = true;\n    result.deathDate = patient.deceasedDateTime ? patient.deceasedDateTime.split('T')[0] : '';\n  }\n\n  return {\n    ...result,\n    ...patient.identifier.map((identifier) => {\n      const key = camelCase(identifier.system || identifier.type.text);\n      return { [key]: identifier.value };\n    }),\n  };\n}\n\nexport function getAddressFieldValuesFromFhirPatient(patient: fhir.Patient) {\n  const result = {};\n  const address = patient.address?.[0];\n\n  if (address) {\n    for (const [key, value] of Object.entries(address)) {\n      switch (key) {\n        case 'city':\n          result['cityVillage'] = address[key];\n          break;\n        case 'state':\n          result['stateProvince'] = address[key];\n          break;\n        case 'district':\n          result['countyDistrict'] = address[key];\n          break;\n        case 'extension':\n          address[key].forEach((ext) => {\n            ext.extension.forEach((extension) => {\n              result[extension.url.split('#')[1]] = extension.valueString;\n            });\n          });\n          break;\n        default:\n          if (key === 'country' || key === 'postalCode') {\n            result[key] = address[key];\n          }\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function getPatientUuidMapFromFhirPatient(patient: fhir.Patient): PatientUuidMapType {\n  const patientName = patient.name[0];\n  const additionalPatientName = patient.name[1];\n  const address = patient.address?.[0];\n\n  return {\n    preferredNameUuid: patientName?.id,\n    additionalNameUuid: additionalPatientName?.id,\n    preferredAddressUuid: address?.id,\n    ...patient.identifier.map((identifier) => {\n      const key = camelCase(identifier.system || identifier.type.text);\n      return { [key]: { uuid: identifier.id, value: identifier.value } };\n    }),\n  };\n}\n\nexport function getPatientIdentifiersFromFhirPatient(patient: fhir.Patient): Array<PatientIdentifier> {\n  return patient.identifier.map((identifier) => {\n    return {\n      uuid: identifier.id,\n      identifier: identifier.value,\n    };\n  });\n}\n\nexport function getPhonePersonAttributeValueFromFhirPatient(patient: fhir.Patient) {\n  const result = {};\n  if (patient.telecom) {\n    result['phone'] = patient.telecom[0].value;\n  }\n  return result;\n}\n\nexport async function getInitialPatientIdentifiers(patientUuid: string): Promise<Array<PatientIdentifierValue>> {\n  const identifiers = await openmrsFetch<{ results: any[] }>(`/ws/rest/v1/patient/${patientUuid}/identifier?v=full`);\n  return identifiers.data.results.map((patientIdentifier) => ({\n    uuid: patientIdentifier.uuid,\n    identifier: patientIdentifier.identifier,\n    identifierTypeUuid: patientIdentifier.identifierType.uuid,\n    action: 'NONE',\n    source: null,\n    preferred: patientIdentifier.identifierType.isPrimary,\n  }));\n}\n","import { getSynchronizationItems, usePatient } from '@openmrs/esm-framework';\nimport { Dispatch, useEffect, useState } from 'react';\nimport { v4 } from 'uuid';\nimport { patientRegistration } from '../constants';\nimport { FormValues, PatientRegistration, PatientUuidMapType } from './patient-registration-types';\nimport {\n  getAddressFieldValuesFromFhirPatient,\n  getFormValuesFromFhirPatient,\n  getInitialPatientIdentifiers,\n  getPatientUuidMapFromFhirPatient,\n  getPhonePersonAttributeValueFromFhirPatient,\n} from './patient-registration-utils';\n\nexport function useInitialFormValues(patientUuid: string): [FormValues, Dispatch<FormValues>] {\n  const { isLoading: isLoadingPatientToEdit, patient: patientToEdit } = usePatient(patientUuid);\n  const [initialFormValues, setInitialFormValues] = useState<FormValues>({\n    patientUuid: v4(),\n    givenName: '',\n    middleName: '',\n    familyName: '',\n    unidentifiedPatient: false,\n    additionalGivenName: '',\n    additionalMiddleName: '',\n    additionalFamilyName: '',\n    addNameInLocalLanguage: false,\n    gender: '',\n    birthdate: null,\n    yearsEstimated: 0,\n    monthsEstimated: 0,\n    birthdateEstimated: false,\n    telephoneNumber: '',\n    address1: '',\n    address2: '',\n    cityVillage: '',\n    stateProvince: '',\n    country: '',\n    postalCode: '',\n    isDead: false,\n    deathDate: '',\n    deathCause: '',\n    relationships: [{ relatedPerson: '', relationship: '' }],\n    identifiers: [],\n  });\n\n  useEffect(() => {\n    (async () => {\n      if (patientToEdit) {\n        setInitialFormValues({\n          ...initialFormValues,\n          ...getFormValuesFromFhirPatient(patientToEdit),\n          ...getAddressFieldValuesFromFhirPatient(patientToEdit),\n          ...getPhonePersonAttributeValueFromFhirPatient(patientToEdit),\n        });\n      } else if (!isLoadingPatientToEdit && patientUuid) {\n        const registration = await getPatientRegistration(patientUuid);\n\n        if (!registration._patientRegistrationData.formValues) {\n          console.error(\n            `Found a queued offline patient registration for patient ${patientUuid}, but without form values. Not using these values.`,\n          );\n          return;\n        }\n\n        setInitialFormValues(registration._patientRegistrationData.formValues);\n      }\n    })();\n  }, [isLoadingPatientToEdit, patientToEdit, patientUuid]);\n\n  useEffect(() => {\n    if (patientUuid) {\n      getInitialPatientIdentifiers(patientUuid).then((identifiers) =>\n        setInitialFormValues((initialFormValues) => ({\n          ...initialFormValues,\n          identifiers,\n        })),\n      );\n    }\n  }, [patientUuid]);\n\n  return [initialFormValues, setInitialFormValues];\n}\n\nexport function useInitialAddressFieldValues(patientUuid: string, fallback = {}): [object, Dispatch<object>] {\n  const { isLoading, patient } = usePatient(patientUuid);\n  const [initialAddressFieldValues, setInitialAddressFieldValues] = useState<object>(fallback);\n\n  useEffect(() => {\n    (async () => {\n      if (patient) {\n        setInitialAddressFieldValues({\n          ...initialAddressFieldValues,\n          ...getAddressFieldValuesFromFhirPatient(patient),\n        });\n      } else if (!isLoading && patientUuid) {\n        const registration = await getPatientRegistration(patientUuid);\n        setInitialAddressFieldValues(registration?._patientRegistrationData.initialAddressFieldValues ?? fallback);\n      }\n    })();\n  }, [isLoading, patient, patientUuid]);\n\n  return [initialAddressFieldValues, setInitialAddressFieldValues];\n}\n\nexport function usePatientUuidMap(\n  patientUuid: string,\n  fallback: PatientUuidMapType = {},\n): [PatientUuidMapType, Dispatch<PatientUuidMapType>] {\n  const { isLoading: isLoadingPatientToEdit, patient: patientToEdit } = usePatient(patientUuid);\n  const [patientUuidMap, setPatientUuidMap] = useState(fallback);\n\n  useEffect(() => {\n    if (patientToEdit) {\n      setPatientUuidMap({ ...patientUuidMap, ...getPatientUuidMapFromFhirPatient(patientToEdit) });\n    } else if (!isLoadingPatientToEdit && patientUuid) {\n      getPatientRegistration(patientUuid).then((registration) =>\n        setPatientUuidMap(registration?._patientRegistrationData.initialAddressFieldValues ?? fallback),\n      );\n    }\n  }, [isLoadingPatientToEdit, patientToEdit, patientUuid]);\n\n  return [patientUuidMap, setPatientUuidMap];\n}\n\nasync function getPatientRegistration(patientUuid: string) {\n  const items = await getSynchronizationItems<PatientRegistration>(patientRegistration);\n  return items.find((item) => item._patientRegistrationData.formValues.patientUuid === patientUuid);\n}\n","import React, { useState, useEffect, useContext, useMemo } from 'react';\nimport XAxis16 from '@carbon/icons-react/es/x-axis/16';\nimport { Button, Grid, Link } from 'carbon-components-react';\nimport BeforeSavePrompt from './before-save-prompt';\nimport styles from './patient-registration.scss';\nimport { useLocation } from 'react-router-dom';\nimport { Formik, Form, FormikHelpers } from 'formik';\nimport {\n  createErrorHandler,\n  showToast,\n  useConfig,\n  interpolateString,\n  interpolateUrl,\n  usePatient,\n} from '@openmrs/esm-framework';\nimport { useTranslation } from 'react-i18next';\nimport { validationSchema as initialSchema } from './validation/patient-registration-validation';\nimport { FormValues, CapturePhotoProps } from './patient-registration-types';\nimport { PatientRegistrationContext } from './patient-registration-context';\nimport { SavePatientForm } from './form-manager';\nimport { usePatientPhoto } from './patient-registration.resource';\nimport { DummyDataInput } from './input/dummy-data/dummy-data-input.component';\nimport { getSection } from './section/section-helper';\nimport { cancelRegistration, parseAddressTemplateXml, scrollIntoView } from './patient-registration-utils';\nimport { useInitialAddressFieldValues, useInitialFormValues, usePatientUuidMap } from './patient-registration-hooks';\nimport { ResourcesContext } from '../offline.resources';\n\nlet exportedInitialFormValuesForTesting = {} as FormValues;\n\nexport interface PatientRegistrationProps {\n  savePatientForm: SavePatientForm;\n  match: any;\n}\n\nexport const PatientRegistration: React.FC<PatientRegistrationProps> = ({ savePatientForm, match }) => {\n  const { currentSession, addressTemplate, identifierTypes } = useContext(ResourcesContext);\n  const { search } = useLocation();\n  const config = useConfig();\n  const [sections, setSections] = useState([]);\n  const [target, setTarget] = useState<undefined | string>();\n  const [validationSchema, setValidationSchema] = useState(initialSchema);\n  const { patientUuid: uuidOfPatientToEdit } = match.params;\n  const { isLoading: isLoadingPatientToEdit, patient: patientToEdit } = usePatient(uuidOfPatientToEdit);\n  const { t } = useTranslation();\n  const [capturePhotoProps, setCapturePhotoProps] = useState<CapturePhotoProps | null>(null);\n  const [fieldConfigs, setFieldConfigs] = useState({});\n  const [initialFormValues, setInitialFormValues] = useInitialFormValues(uuidOfPatientToEdit);\n  const [initialAddressFieldValues] = useInitialAddressFieldValues(uuidOfPatientToEdit);\n  const [patientUuidMap] = usePatientUuidMap(uuidOfPatientToEdit);\n  const location = currentSession.sessionLocation?.uuid;\n  const inEditMode = isLoadingPatientToEdit ? undefined : !!(uuidOfPatientToEdit && patientToEdit);\n  const showDummyData = useMemo(() => localStorage.getItem('openmrs:devtools') === 'true' && !inEditMode, [inEditMode]);\n  const { data: photo } = usePatientPhoto(patientToEdit?.id);\n\n  useEffect(() => {\n    exportedInitialFormValuesForTesting = initialFormValues;\n  }, [initialFormValues]);\n\n  useEffect(() => {\n    if (config?.sections) {\n      const configuredSections = config.sections.map((section) => ({\n        id: section,\n        name: config.sectionDefinitions[section].name,\n        fields: config.sectionDefinitions[section].fields,\n      }));\n\n      setSections(configuredSections);\n      setFieldConfigs(config.fieldConfigurations);\n    }\n  }, [config.sections, config.fieldConfigurations, config.sectionDefinitions]);\n\n  useEffect(() => {\n    const addressTemplateXml = addressTemplate.results[0].value;\n\n    if (!addressTemplateXml) {\n      return;\n    }\n\n    const { addressFieldValues, addressValidationSchema } = parseAddressTemplateXml(addressTemplateXml);\n    setValidationSchema((validationSchema) => validationSchema.concat(addressValidationSchema));\n\n    // `=== false` is here on purpose (`inEditMode` is a triple state value).\n    // We *only* want to set initial address field values when *creating* a patient.\n    // We must wait until after loading for this info.\n    if (inEditMode === false) {\n      for (const { name, defaultValue } of addressFieldValues) {\n        if (!initialAddressFieldValues[name]) {\n          initialAddressFieldValues[name] = defaultValue;\n        }\n      }\n\n      setInitialFormValues({ ...initialFormValues, ...initialAddressFieldValues });\n    }\n  }, [inEditMode, addressTemplate]);\n\n  const onFormSubmit = async (values: FormValues, helpers: FormikHelpers<FormValues>) => {\n    const abortController = new AbortController();\n    helpers.setSubmitting(true);\n\n    try {\n      await savePatientForm(\n        !inEditMode,\n        values,\n        patientUuidMap,\n        initialAddressFieldValues,\n        identifierTypes,\n        capturePhotoProps,\n        config?.concepts?.patientPhotoUuid,\n        location,\n        config?.personAttributeSections,\n        abortController,\n      );\n\n      showToast({\n        description: inEditMode\n          ? t('updationSuccessToastDescription', \"The patient's information has been successfully updated\")\n          : t(\n              'registrationSuccessToastDescription',\n              'The patient can now be found by searching for them using their name or ID number',\n            ),\n        title: inEditMode\n          ? t('updationSuccessToastTitle', 'Patient Details Updated')\n          : t('registrationSuccessToastTitle', 'New Patient Created'),\n        kind: 'success',\n      });\n\n      const redirectUrl = interpolateUrl(\n        new URLSearchParams(search).get('afterUrl') ||\n          interpolateString(config.links.submitButton, { patientUuid: values.patientUuid }),\n      );\n\n      setTarget(redirectUrl);\n    } catch (error) {\n      if (error.responseBody?.error?.globalErrors) {\n        error.responseBody.error.globalErrors.forEach((error) => {\n          showToast({ description: error.message });\n        });\n      } else if (error.responseBody?.error?.message) {\n        showToast({ description: error.responseBody.error.message });\n      } else {\n        createErrorHandler()(error);\n      }\n\n      helpers.setSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={initialFormValues}\n      validationSchema={validationSchema}\n      onSubmit={onFormSubmit}>\n      {(props) => (\n        <Form className={styles.form}>\n          <BeforeSavePrompt when={props.dirty} redirect={target} />\n          <div className={styles.formContainer}>\n            <div>\n              <div className={styles.stickyColumn}>\n                <h4>\n                  {inEditMode ? t('edit', 'Edit') : t('createNew', 'Create New')} {t('patient', 'Patient')}\n                </h4>\n                {showDummyData && <DummyDataInput setValues={props.setValues} />}\n                <p className={styles.label01}>{t('jumpTo', 'Jump to')}</p>\n                {sections.map((section) => (\n                  <div className={`${styles.space05} ${styles.touchTarget}`} key={section.name}>\n                    <Link className={styles.linkName} onClick={() => scrollIntoView(section.id)}>\n                      <XAxis16 /> {section.name}\n                    </Link>\n                  </div>\n                ))}\n                <Button className={styles.submitButton} type=\"submit\">\n                  {inEditMode ? t('updatePatient', 'Update Patient') : t('registerPatient', 'Register Patient')}\n                </Button>\n                <Button className={styles.cancelButton} kind=\"tertiary\" onClick={cancelRegistration}>\n                  {t('cancel', 'Cancel')}\n                </Button>\n              </div>\n            </div>\n            <Grid className={styles.infoGrid}>\n              <PatientRegistrationContext.Provider\n                value={{\n                  identifierTypes: identifierTypes,\n                  validationSchema,\n                  setValidationSchema,\n                  fieldConfigs,\n                  values: props.values,\n                  inEditMode,\n                  setFieldValue: props.setFieldValue,\n                  setCapturePhotoProps,\n                  currentPhoto: photo?.imageSrc,\n                }}>\n                {sections.map((section, index) => (\n                  <div key={index}>{getSection(section, index)}</div>\n                ))}\n              </PatientRegistrationContext.Provider>\n            </Grid>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\n/**\n * @internal\n * Just exported for testing\n */\nexport { exportedInitialFormValuesForTesting as initialFormValues };\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Grid, Row } from 'carbon-components-react';\nimport { ExtensionSlot } from '@openmrs/esm-framework';\nimport { Resources, ResourcesContext } from './offline.resources';\nimport { SavePatientForm } from './patient-registration/form-manager';\nimport { PatientRegistration, PatientRegistrationProps } from './patient-registration/patient-registration.component';\n\nexport interface RootProps extends PatientRegistrationProps, Resources {\n  savePatientForm: SavePatientForm;\n}\n\nexport default function Root({\n  currentSession,\n  addressTemplate,\n  relationshipTypes,\n  identifierTypes,\n  savePatientForm,\n}: RootProps) {\n  const resources = {\n    currentSession,\n    addressTemplate,\n    relationshipTypes,\n    identifierTypes,\n  };\n\n  return (\n    <ResourcesContext.Provider value={resources}>\n      <BrowserRouter basename={window['getOpenmrsSpaBase']()}>\n        <main className=\"omrs-main-content\" style={{ backgroundColor: 'white' }}>\n          <Grid>\n            <Row>\n              <ExtensionSlot extensionSlotName=\"breadcrumbs-slot\" />\n            </Row>\n            <Route\n              exact\n              path=\"/patient-registration\"\n              render={(props) => <PatientRegistration savePatientForm={savePatientForm} {...props} />}\n            />\n            <Route\n              exact\n              path=\"/patient/:patientUuid/edit\"\n              render={(props) => <PatientRegistration savePatientForm={savePatientForm} {...props} />}\n            />\n          </Grid>\n        </main>\n      </BrowserRouter>\n    </ResourcesContext.Provider>\n  );\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".-esm-patient-registration__field__productiveHeading02___0\\\\+2Gm{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;margin-bottom:1rem}.-esm-patient-registration__field__productiveHeading02Light___bbKeq{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;margin-bottom:1rem;color:#525252}.-esm-patient-registration__field__grid___g21pQ{display:grid;grid-template-columns:1fr 1fr;column-gap:1rem}.-esm-patient-registration__field__patientPhoto___9mWMr{display:flex;justify-content:center}.-esm-patient-registration__field__nameField___uPmod{grid-row:1;grid-column:1}.-esm-patient-registration__field__photoExtension___IqCnX{margin-bottom:1rem;grid-row:1;grid-column:2;justify-self:center}.-esm-patient-registration__field__sexField___F8TIv{margin-bottom:1rem}.-esm-patient-registration__field__identifierLabelText___bdyJF{display:flex;align-items:center}.-esm-patient-registration__field__setIDNumberButton___XziAX{margin-bottom:1rem}.-esm-patient-registration__field__setIDNumberButton___XziAX>svg{margin-left:.5rem}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__grid___g21pQ{grid-template-columns:1fr;grid-template-rows:auto auto}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__sexField___F8TIv{grid-row:1}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__ageField___fRiK9{grid-row:2}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__nameField___uPmod{grid-row:2;grid-column:1}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__photoExtension___IqCnX{grid-column:1;grid-row:1;justify-self:start}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__radioButton___d7GuU label{height:3rem !important}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/patient-registration/field/field.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\"],\"names\":[],\"mappings\":\"AAGA,gEC4gBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD/rBxB,kBAAA,CAGF,oECugBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD1rBxB,kBAAA,CACA,aAAA,CAGF,gDACE,YAAA,CACA,6BAAA,CACA,eAAA,CAGF,wDACE,YAAA,CACA,sBAAA,CAGF,qDACE,UAAA,CACA,aAAA,CAGF,0DACE,kBAAA,CACA,UAAA,CACA,aAAA,CACA,mBAAA,CAGF,oDACE,kBEPmB,CFUrB,+DACE,YAAA,CACA,kBAAA,CAGF,6DACE,kBEhBmB,CFmBrB,iEACE,iBE9BmB,CFkCnB,4EACE,yBAAA,CACA,4BAAA,CAEF,gFACE,UAAA,CAEF,gFACE,UAAA,CAEF,iFACE,UAAA,CACA,aAAA,CAEF,sFACE,aAAA,CACA,UAAA,CACA,kBAAA,CAEF,yFACE,sBAAA\",\"sourcesContent\":[\"@import \\\"~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles\\\";\\n@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing\\\";\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n  margin-bottom: 1rem;\\n}\\n\\n.productiveHeading02Light {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n  margin-bottom: 1rem;\\n  color: #525252;\\n}\\n\\n.grid {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  column-gap: 1rem;\\n}\\n\\n.patientPhoto {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.nameField {\\n  grid-row: 1;\\n  grid-column: 1;\\n}\\n\\n.photoExtension {\\n  margin-bottom: 1rem;\\n  grid-row: 1;\\n  grid-column: 2;\\n  justify-self: center;\\n}\\n\\n.sexField {\\n  margin-bottom: $spacing-05;\\n}\\n\\n.identifierLabelText {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.setIDNumberButton {\\n  margin-bottom: $spacing-05;\\n}\\n\\n.setIDNumberButton > svg {\\n  margin-left: $spacing-03;\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop){\\n  .grid {\\n    grid-template-columns: 1fr;\\n    grid-template-rows: auto auto;\\n  }\\n  .sexField {\\n    grid-row: 1;\\n  }\\n  .ageField {\\n    grid-row: 2;\\n  }\\n  .nameField {\\n    grid-row: 2;\\n    grid-column: 1;\\n  }\\n  .photoExtension {\\n    grid-column: 1;\\n    grid-row: 1;\\n    justify-self: start;\\n  }\\n  .radioButton label {\\n    height: $spacing-09 !important;\\n  }\\n}\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"productiveHeading02\": \"-esm-patient-registration__field__productiveHeading02___0+2Gm\",\n\t\"productiveHeading02Light\": \"-esm-patient-registration__field__productiveHeading02Light___bbKeq\",\n\t\"grid\": \"-esm-patient-registration__field__grid___g21pQ\",\n\t\"patientPhoto\": \"-esm-patient-registration__field__patientPhoto___9mWMr\",\n\t\"nameField\": \"-esm-patient-registration__field__nameField___uPmod\",\n\t\"photoExtension\": \"-esm-patient-registration__field__photoExtension___IqCnX\",\n\t\"sexField\": \"-esm-patient-registration__field__sexField___F8TIv\",\n\t\"identifierLabelText\": \"-esm-patient-registration__field__identifierLabelText___bdyJF\",\n\t\"setIDNumberButton\": \"-esm-patient-registration__field__setIDNumberButton___XziAX\",\n\t\"ageField\": \"-esm-patient-registration__field__ageField___fRiK9\",\n\t\"radioButton\": \"-esm-patient-registration__field__radioButton___d7GuU\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__identifier-selection__title___fPIy3{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__identifier-selection__submit___WgYnV{width:250px}.-esm-patient-registration__identifier-selection__submit___WgYnV:hover{cursor:pointer}.-esm-patient-registration__identifier-selection__cancelButton___ar-za{width:11.688rem}.-esm-patient-registration__identifier-selection__submitButton___mJgTx{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__identifier-selection__infoGrid___5ovdR{width:100%;margin-bottom:40vh;margin-top:1rem}.-esm-patient-registration__identifier-selection__label01___sm7Rq{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__identifier-selection__productiveHeading02___aocJ0{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__identifier-selection__space05___pbxiU{margin:1rem 0 1rem 0}.-esm-patient-registration__identifier-selection__formContainer___XacnD{display:flex;width:100%}.-esm-patient-registration__identifier-selection__stickyColumn___H9Wbn{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__identifier-selection__touchTarget___heOv2 a:active{color:#161616}.-esm-patient-registration__identifier-selection__linkName___oKi4d{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__identifier-selection__linkName___oKi4d:active{text-decoration:none;color:#161616}.-esm-patient-registration__identifier-selection__linkName___oKi4d:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__identifier-selection__main___s9KQc{background-color:#fff}.-esm-patient-registration__identifier-selection__overlayButtons___frh9W{display:grid;grid-template-columns:1fr 1fr}.-esm-patient-registration__identifier-selection__overlayButtons___frh9W button{max-width:unset}.-esm-patient-registration__identifier-selection__radioGroup___n\\\\+7PW{background-color:#f4f4f4;padding:1rem}.-esm-patient-registration__identifier-selection__radioButton___yaoFj{margin:0 !important}.-esm-patient-registration__identifier-selection__radioButton___yaoFj label{height:2rem}.omrs-breakpoint-lt-desktop .-esm-patient-registration__identifier-selection__radioButton___yaoFj label{height:3rem !important}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/patient-registration/patient-registration.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\",\"webpack://./src/patient-registration/field/id/identifier-selection.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,gEACE,kCAAA,CAGF,iEACE,WAAA,CAGF,uEACE,cAAA,CAGF,uEACE,eAAA,CAGF,uEACE,kBAAA,CACA,eAAA,CACA,aAAA,CAGF,mEACE,UAAA,CACA,kBAAA,CACA,eAAA,CAGF,kEC+eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDlqBxB,eEHmB,CFInB,kBEJmB,CFKnB,aDjCM,CCoCR,8ECweI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD3pBxB,aDtCM,CCuCN,cAAA,CAGF,kEACE,oBAAA,CAGF,wEACE,YAAA,CACA,UAAA,CAGF,uEACE,eAAA,CACA,eAAA,CAEA,QAAA,CAGF,+EACE,aDpDe,CCuDjB,mEACE,aDzDc,CC0Dd,gBAAA,CACA,cAAA,CACA,eAAA,CAEA,0EACE,oBAAA,CACA,aD/Da,CCkEf,yEACE,oBAAA,CACA,aDpEa,CCqEb,cAAA,CAIJ,+DACE,qBAAA,CGlFF,yEACE,YAAA,CACA,6BAAA,CAGF,gFACE,eAAA,CAGF,sEACE,wBJZM,CIaN,YDkBmB,CCfrB,sEACE,mBAAA,CACA,4EACE,WDsBiB,CCjBnB,wGACE,sBAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import \\\"~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles\\\";\\n@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing\\\";\\n@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n\\n.title {\\n  color: var(--omrs-color-brand-teal);\\n}\\n\\n.submit {\\n  width: 250px;\\n}\\n\\n.submit:hover {\\n  cursor: pointer;\\n}\\n\\n.cancelButton {\\n  width: 11.688rem;\\n}\\n\\n.submitButton {\\n  margin-bottom: 1rem;\\n  width: 11.688rem;\\n  display: block;\\n}\\n\\n.infoGrid {\\n  width: 100%;\\n  margin-bottom: 40vh;\\n  margin-top: 1rem;\\n}\\n\\n.label01 {\\n  @include carbon--type-style(\\\"label-01\\\");\\n  margin-top: $spacing-05;\\n  margin-bottom: $spacing-05;\\n  color: $ui-04;\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n  color: $ui-04;\\n  cursor: pointer;\\n}\\n\\n.space05 {\\n  margin: $spacing-05 0 $spacing-05 0;\\n}\\n\\n.formContainer {\\n  display: flex;\\n  width: 100%;\\n}\\n\\n.stickyColumn {\\n  position: sticky;\\n  margin-top: 1rem;\\n  // 3rem for the nav height and 1rem for top margin\\n  top: 4rem;\\n}\\n\\n.touchTarget a:active {\\n  color: $color-gray-100;\\n}\\n\\n.linkName {\\n  color: $color-gray-70;\\n  line-height: 1.38;\\n  font-size: 1rem;\\n  font-weight: 600;\\n\\n  &:active {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n  }\\n\\n  &:hover {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n    cursor: pointer;\\n  }\\n}\\n\\n.main {\\n  background-color: white;\\n}\\n\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\",\"@import '../../patient-registration.scss';\\n\\n.overlayButtons {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n}\\n\\n.overlayButtons button {\\n  max-width: unset;\\n}\\n\\n.radioGroup {\\n  background-color: $ui-01;\\n  padding: $spacing-05;\\n}\\n\\n.radioButton {\\n  margin: 0 !important;\\n  label {\\n    height: $spacing-07;\\n  }\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop) { \\n  .radioButton label {\\n    height: $spacing-09 !important;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"title\": \"-esm-patient-registration__identifier-selection__title___fPIy3\",\n\t\"submit\": \"-esm-patient-registration__identifier-selection__submit___WgYnV\",\n\t\"cancelButton\": \"-esm-patient-registration__identifier-selection__cancelButton___ar-za\",\n\t\"submitButton\": \"-esm-patient-registration__identifier-selection__submitButton___mJgTx\",\n\t\"infoGrid\": \"-esm-patient-registration__identifier-selection__infoGrid___5ovdR\",\n\t\"label01\": \"-esm-patient-registration__identifier-selection__label01___sm7Rq\",\n\t\"productiveHeading02\": \"-esm-patient-registration__identifier-selection__productiveHeading02___aocJ0\",\n\t\"space05\": \"-esm-patient-registration__identifier-selection__space05___pbxiU\",\n\t\"formContainer\": \"-esm-patient-registration__identifier-selection__formContainer___XacnD\",\n\t\"stickyColumn\": \"-esm-patient-registration__identifier-selection__stickyColumn___H9Wbn\",\n\t\"touchTarget\": \"-esm-patient-registration__identifier-selection__touchTarget___heOv2\",\n\t\"linkName\": \"-esm-patient-registration__identifier-selection__linkName___oKi4d\",\n\t\"main\": \"-esm-patient-registration__identifier-selection__main___s9KQc\",\n\t\"overlayButtons\": \"-esm-patient-registration__identifier-selection__overlayButtons___frh9W\",\n\t\"radioGroup\": \"-esm-patient-registration__identifier-selection__radioGroup___n+7PW\",\n\t\"radioButton\": \"-esm-patient-registration__identifier-selection__radioButton___yaoFj\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".-esm-patient-registration__autosuggest__suggestions___v5o3w{position:relative;border-top-width:0;list-style:none;margin-top:0;max-height:143px;overflow-y:auto;padding-left:0;width:100%;position:absolute;left:0;background-color:#fff;margin-bottom:20px;z-index:99}.-esm-patient-registration__autosuggest__suggestions___v5o3w li{padding:1rem;line-height:1.29;color:#525252;border-bottom:1px solid #8d8d8d}.-esm-patient-registration__autosuggest__suggestions___v5o3w li:hover{background-color:#e5e5e5;color:#161616;cursor:pointer}.-esm-patient-registration__autosuggest__suggestions___v5o3w li:not(:last-of-type){border-bottom:1px solid #999}.-esm-patient-registration__autosuggest__autocomplete___it56z{position:relative}.-esm-patient-registration__autosuggest__autocompleteSearch___sc5fh{width:100%}.-esm-patient-registration__autosuggest__suggestions___v5o3w a{color:inherit;text-decoration:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/patient-registration/input/custom-input/autosuggest/autosuggest.scss\"],\"names\":[],\"mappings\":\"AAAA,6DACI,iBAAA,CACA,kBAAA,CACA,eAAA,CACA,YAAA,CACA,gBAAA,CACA,eAAA,CACA,cAAA,CACA,UAAA,CACA,iBAAA,CACA,MAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CAGJ,gEACI,YAAA,CACA,gBAAA,CACA,aAAA,CACA,+BAAA,CAGJ,sEACI,wBAAA,CACA,aAAA,CACA,cAAA,CAGJ,mFACI,4BAAA,CAGJ,8DACI,iBAAA,CAGJ,oEACI,UAAA,CAGJ,+DACI,aAAA,CACA,oBAAA\",\"sourcesContent\":[\".suggestions {\\n    position: relative;\\n    border-top-width: 0;\\n    list-style: none;\\n    margin-top: 0;\\n    max-height: 143px;\\n    overflow-y: auto;\\n    padding-left: 0;\\n    width: 100%;\\n    position: absolute;\\n    left: 0;\\n    background-color: #fff;\\n    margin-bottom: 20px;\\n    z-index: 99;\\n}\\n\\n.suggestions li {\\n    padding: 1rem;\\n    line-height: 1.29;\\n    color: #525252;\\n    border-bottom: 1px solid #8d8d8d;\\n}\\n\\n.suggestions li:hover {\\n    background-color: #e5e5e5;\\n    color: #161616;\\n    cursor: pointer;\\n}\\n\\n.suggestions li:not(:last-of-type) {\\n    border-bottom: 1px solid #999;\\n}\\n\\n.autocomplete {\\n    position: relative;\\n}\\n\\n.autocompleteSearch {\\n    width: 100%;\\n}\\n\\n.suggestions a {\\n    color: inherit;\\n    text-decoration: none;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"suggestions\": \"-esm-patient-registration__autosuggest__suggestions___v5o3w\",\n\t\"autocomplete\": \"-esm-patient-registration__autosuggest__autocomplete___it56z\",\n\t\"autocompleteSearch\": \"-esm-patient-registration__autosuggest__autocompleteSearch___sc5fh\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__input__title___4PKlg{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__input__submit___mloB4{width:250px}.-esm-patient-registration__input__submit___mloB4:hover{cursor:pointer}.-esm-patient-registration__input__cancelButton___blAcs{width:11.688rem}.-esm-patient-registration__input__submitButton___SofD2{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__input__infoGrid___xohlq{width:100%;margin-bottom:40vh;margin-top:1rem}.-esm-patient-registration__input__label01___fwQQq{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__input__productiveHeading02___7pE9K{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__input__space05___9oNC\\\\+{margin:1rem 0 1rem 0}.-esm-patient-registration__input__formContainer___YE8UP{display:flex;width:100%}.-esm-patient-registration__input__stickyColumn___KQudo{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__input__touchTarget___lFvgc a:active{color:#161616}.-esm-patient-registration__input__linkName___C8vKy{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__input__linkName___C8vKy:active{text-decoration:none;color:#161616}.-esm-patient-registration__input__linkName___C8vKy:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__input__main___rng6t{background-color:#fff}.-esm-patient-registration__input__fieldRow___5TD7U{display:flex;flex-direction:row;justify-content:flex-start;flex-wrap:wrap}.-esm-patient-registration__input__subFieldRow___zGAH4{margin-bottom:5px}.-esm-patient-registration__input__label___65tRW{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;color:#525252}.-esm-patient-registration__input__textID___F\\\\+F-t{margin-bottom:1rem}.-esm-patient-registration__input__requiredField___x0TVf{color:var(--omrs-color-danger)}.-esm-patient-registration__input__input___JYX4d{margin-right:5px}.-esm-patient-registration__input__checkboxField___gmx7u{display:flex;flex-direction:row;justify-content:flex-start;width:400px;margin-left:10px}.-esm-patient-registration__input__textInput___QJYjz{width:250px !important;height:40px !important}.-esm-patient-registration__input__numberInput___IGlx4{width:200px !important;height:40px !important}.-esm-patient-registration__input__checkboxInput___IVRIk{height:1.5rem !important;width:1.5rem !important;margin-top:8px}.-esm-patient-registration__input__selectInput___yrzZ-{width:150px !important;height:40px !important}.-esm-patient-registration__input__dateInput___2shrY{width:200px !important;height:40px !important;font-size:large !important}.-esm-patient-registration__input__telInput___HxQe3{width:250px !important;height:40px !important}.-esm-patient-registration__input__errorInput___aW2qL{border:2px solid var(--omrs-color-danger) !important;padding-left:.875rem !important}.-esm-patient-registration__input__errorMessage___cbdW2{color:var(--omrs-color-danger);align-self:center}.-esm-patient-registration__input__dummyData___GFQGF{cursor:pointer;margin-left:5px}.-esm-patient-registration__input__IDInput___6B3\\\\+s{display:grid;grid-template-columns:1fr auto;align-items:center;max-width:27rem}.-esm-patient-registration__input__trashCan___usc53{color:#da1e28}.omrs-breakpoint-lt-desktop .-esm-patient-registration__input__IDInput___6B3\\\\+s{max-width:unset;width:100%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/patient-registration/patient-registration.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\",\"webpack://./src/patient-registration/input/input.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,iDACE,kCAAA,CAGF,kDACE,WAAA,CAGF,wDACE,cAAA,CAGF,wDACE,eAAA,CAGF,wDACE,kBAAA,CACA,eAAA,CACA,aAAA,CAGF,oDACE,UAAA,CACA,kBAAA,CACA,eAAA,CAGF,mDC+eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDlqBxB,eEHmB,CFInB,kBEJmB,CFKnB,aDjCM,CCoCR,+DCweI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD3pBxB,aDtCM,CCuCN,cAAA,CAGF,oDACE,oBAAA,CAGF,yDACE,YAAA,CACA,UAAA,CAGF,wDACE,eAAA,CACA,eAAA,CAEA,QAAA,CAGF,gEACE,aDpDe,CCuDjB,oDACE,aDzDc,CC0Dd,gBAAA,CACA,cAAA,CACA,eAAA,CAEA,2DACE,oBAAA,CACA,aD/Da,CCkEf,0DACE,oBAAA,CACA,aDpEa,CCqEb,cAAA,CAIJ,gDACE,qBAAA,CGlFF,oDACE,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,cAAA,CAGF,uDACE,iBAAA,CAGF,iDFkgBI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CErrBxB,aJVQ,CIaV,mDACE,kBDYmB,CCTrB,yDACE,8BAAA,CAGF,iDACE,gBAAA,CAGF,yDACE,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,WAAA,CACA,gBAAA,CAGF,qDACE,sBAAA,CACA,sBAAA,CAGF,uDACE,sBAAA,CACA,sBAAA,CAGF,yDACE,wBAAA,CACA,uBAAA,CACA,cAAA,CAGF,uDACE,sBAAA,CACA,sBAAA,CAGF,qDACE,sBAAA,CACA,sBAAA,CACA,0BAAA,CAGF,oDACE,sBAAA,CACA,sBAAA,CAGF,sDACE,oDAAA,CACA,+BAAA,CAGF,wDACE,8BAAA,CACA,iBAAA,CAGF,qDACE,cAAA,CACA,eAAA,CAGF,oDACE,YAAA,CACA,8BAAA,CACA,kBAAA,CACA,eAAA,CAGF,oDACE,aJzEO,CI6EP,gFACE,eAAA,CACA,UAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import \\\"~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles\\\";\\n@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing\\\";\\n@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n\\n.title {\\n  color: var(--omrs-color-brand-teal);\\n}\\n\\n.submit {\\n  width: 250px;\\n}\\n\\n.submit:hover {\\n  cursor: pointer;\\n}\\n\\n.cancelButton {\\n  width: 11.688rem;\\n}\\n\\n.submitButton {\\n  margin-bottom: 1rem;\\n  width: 11.688rem;\\n  display: block;\\n}\\n\\n.infoGrid {\\n  width: 100%;\\n  margin-bottom: 40vh;\\n  margin-top: 1rem;\\n}\\n\\n.label01 {\\n  @include carbon--type-style(\\\"label-01\\\");\\n  margin-top: $spacing-05;\\n  margin-bottom: $spacing-05;\\n  color: $ui-04;\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n  color: $ui-04;\\n  cursor: pointer;\\n}\\n\\n.space05 {\\n  margin: $spacing-05 0 $spacing-05 0;\\n}\\n\\n.formContainer {\\n  display: flex;\\n  width: 100%;\\n}\\n\\n.stickyColumn {\\n  position: sticky;\\n  margin-top: 1rem;\\n  // 3rem for the nav height and 1rem for top margin\\n  top: 4rem;\\n}\\n\\n.touchTarget a:active {\\n  color: $color-gray-100;\\n}\\n\\n.linkName {\\n  color: $color-gray-70;\\n  line-height: 1.38;\\n  font-size: 1rem;\\n  font-weight: 600;\\n\\n  &:active {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n  }\\n\\n  &:hover {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n    cursor: pointer;\\n  }\\n}\\n\\n.main {\\n  background-color: white;\\n}\\n\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\",\"@import \\\"../../patient-registration/patient-registration.scss\\\";\\n\\n.fieldRow {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-start;\\n  flex-wrap: wrap;\\n}\\n\\n.subFieldRow {\\n  margin-bottom: 5px;\\n}\\n\\n.label {\\n  @include carbon--type-style(\\\"label-01\\\");\\n  color: $text-02;\\n}\\n\\n.textID {\\n  margin-bottom: $spacing-05;\\n}\\n\\n.requiredField {\\n  color: var(--omrs-color-danger);\\n}\\n\\n.input {\\n  margin-right: 5px;\\n}\\n\\n.checkboxField {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: flex-start;\\n  width: 400px;\\n  margin-left: 10px;\\n}\\n\\n.textInput {\\n  width: 250px !important;\\n  height: 40px !important;\\n}\\n\\n.numberInput {\\n  width: 200px !important;\\n  height: 40px !important;\\n}\\n\\n.checkboxInput {\\n  height: 1.5rem !important;\\n  width: 1.5rem !important;\\n  margin-top: 8px;\\n}\\n\\n.selectInput {\\n  width: 150px !important;\\n  height: 40px !important;\\n}\\n\\n.dateInput {\\n  width: 200px !important;\\n  height: 40px !important;\\n  font-size: large !important;\\n}\\n\\n.telInput {\\n  width: 250px !important;\\n  height: 40px !important;\\n}\\n\\n.errorInput {\\n  border: 2px solid var(--omrs-color-danger) !important;\\n  padding-left: 0.875rem !important;\\n}\\n\\n.errorMessage {\\n  color: var(--omrs-color-danger);\\n  align-self: center;\\n}\\n\\n.dummyData {\\n  cursor: pointer;\\n  margin-left: 5px;\\n}\\n\\n.IDInput {\\n  display: grid;\\n  grid-template-columns: 1fr auto;\\n  align-items: center;\\n  max-width: 27rem;\\n}\\n\\n.trashCan {\\n  color: $danger;\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .IDInput {\\n    max-width: unset;\\n    width: 100%;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"title\": \"-esm-patient-registration__input__title___4PKlg\",\n\t\"submit\": \"-esm-patient-registration__input__submit___mloB4\",\n\t\"cancelButton\": \"-esm-patient-registration__input__cancelButton___blAcs\",\n\t\"submitButton\": \"-esm-patient-registration__input__submitButton___SofD2\",\n\t\"infoGrid\": \"-esm-patient-registration__input__infoGrid___xohlq\",\n\t\"label01\": \"-esm-patient-registration__input__label01___fwQQq\",\n\t\"productiveHeading02\": \"-esm-patient-registration__input__productiveHeading02___7pE9K\",\n\t\"space05\": \"-esm-patient-registration__input__space05___9oNC+\",\n\t\"formContainer\": \"-esm-patient-registration__input__formContainer___YE8UP\",\n\t\"stickyColumn\": \"-esm-patient-registration__input__stickyColumn___KQudo\",\n\t\"touchTarget\": \"-esm-patient-registration__input__touchTarget___lFvgc\",\n\t\"linkName\": \"-esm-patient-registration__input__linkName___C8vKy\",\n\t\"main\": \"-esm-patient-registration__input__main___rng6t\",\n\t\"fieldRow\": \"-esm-patient-registration__input__fieldRow___5TD7U\",\n\t\"subFieldRow\": \"-esm-patient-registration__input__subFieldRow___zGAH4\",\n\t\"label\": \"-esm-patient-registration__input__label___65tRW\",\n\t\"textID\": \"-esm-patient-registration__input__textID___F+F-t\",\n\t\"requiredField\": \"-esm-patient-registration__input__requiredField___x0TVf\",\n\t\"input\": \"-esm-patient-registration__input__input___JYX4d\",\n\t\"checkboxField\": \"-esm-patient-registration__input__checkboxField___gmx7u\",\n\t\"textInput\": \"-esm-patient-registration__input__textInput___QJYjz\",\n\t\"numberInput\": \"-esm-patient-registration__input__numberInput___IGlx4\",\n\t\"checkboxInput\": \"-esm-patient-registration__input__checkboxInput___IVRIk\",\n\t\"selectInput\": \"-esm-patient-registration__input__selectInput___yrzZ-\",\n\t\"dateInput\": \"-esm-patient-registration__input__dateInput___2shrY\",\n\t\"telInput\": \"-esm-patient-registration__input__telInput___HxQe3\",\n\t\"errorInput\": \"-esm-patient-registration__input__errorInput___aW2qL\",\n\t\"errorMessage\": \"-esm-patient-registration__input__errorMessage___cbdW2\",\n\t\"dummyData\": \"-esm-patient-registration__input__dummyData___GFQGF\",\n\t\"IDInput\": \"-esm-patient-registration__input__IDInput___6B3+s\",\n\t\"trashCan\": \"-esm-patient-registration__input__trashCan___usc53\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__patient-registration__title___d6s20{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__patient-registration__submit___S6frc{width:250px}.-esm-patient-registration__patient-registration__submit___S6frc:hover{cursor:pointer}.-esm-patient-registration__patient-registration__cancelButton___2-E\\\\+5{width:11.688rem}.-esm-patient-registration__patient-registration__submitButton___Ps1do{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__patient-registration__infoGrid___2S1kw{width:100%;margin-bottom:40vh;margin-top:1rem}.-esm-patient-registration__patient-registration__label01___CxOgi{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__patient-registration__productiveHeading02___mBDux{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__patient-registration__space05___\\\\+IJfn{margin:1rem 0 1rem 0}.-esm-patient-registration__patient-registration__formContainer___ydkLz{display:flex;width:100%}.-esm-patient-registration__patient-registration__stickyColumn___2G55G{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__patient-registration__touchTarget___KxfOv a:active{color:#161616}.-esm-patient-registration__patient-registration__linkName___Ukv7z{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__patient-registration__linkName___Ukv7z:active{text-decoration:none;color:#161616}.-esm-patient-registration__patient-registration__linkName___Ukv7z:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__patient-registration__main___eiIwY{background-color:#fff}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/patient-registration/patient-registration.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,gEACE,kCAAA,CAGF,iEACE,WAAA,CAGF,uEACE,cAAA,CAGF,wEACE,eAAA,CAGF,uEACE,kBAAA,CACA,eAAA,CACA,aAAA,CAGF,mEACE,UAAA,CACA,kBAAA,CACA,eAAA,CAGF,kEC+eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDlqBxB,eEHmB,CFInB,kBEJmB,CFKnB,aDjCM,CCoCR,8ECweI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD3pBxB,aDtCM,CCuCN,cAAA,CAGF,mEACE,oBAAA,CAGF,wEACE,YAAA,CACA,UAAA,CAGF,uEACE,eAAA,CACA,eAAA,CAEA,QAAA,CAGF,+EACE,aDpDe,CCuDjB,mEACE,aDzDc,CC0Dd,gBAAA,CACA,cAAA,CACA,eAAA,CAEA,0EACE,oBAAA,CACA,aD/Da,CCkEf,yEACE,oBAAA,CACA,aDpEa,CCqEb,cAAA,CAIJ,+DACE,qBAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import \\\"~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles\\\";\\n@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing\\\";\\n@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n\\n.title {\\n  color: var(--omrs-color-brand-teal);\\n}\\n\\n.submit {\\n  width: 250px;\\n}\\n\\n.submit:hover {\\n  cursor: pointer;\\n}\\n\\n.cancelButton {\\n  width: 11.688rem;\\n}\\n\\n.submitButton {\\n  margin-bottom: 1rem;\\n  width: 11.688rem;\\n  display: block;\\n}\\n\\n.infoGrid {\\n  width: 100%;\\n  margin-bottom: 40vh;\\n  margin-top: 1rem;\\n}\\n\\n.label01 {\\n  @include carbon--type-style(\\\"label-01\\\");\\n  margin-top: $spacing-05;\\n  margin-bottom: $spacing-05;\\n  color: $ui-04;\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n  color: $ui-04;\\n  cursor: pointer;\\n}\\n\\n.space05 {\\n  margin: $spacing-05 0 $spacing-05 0;\\n}\\n\\n.formContainer {\\n  display: flex;\\n  width: 100%;\\n}\\n\\n.stickyColumn {\\n  position: sticky;\\n  margin-top: 1rem;\\n  // 3rem for the nav height and 1rem for top margin\\n  top: 4rem;\\n}\\n\\n.touchTarget a:active {\\n  color: $color-gray-100;\\n}\\n\\n.linkName {\\n  color: $color-gray-70;\\n  line-height: 1.38;\\n  font-size: 1rem;\\n  font-weight: 600;\\n\\n  &:active {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n  }\\n\\n  &:hover {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n    cursor: pointer;\\n  }\\n}\\n\\n.main {\\n  background-color: white;\\n}\\n\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"title\": \"-esm-patient-registration__patient-registration__title___d6s20\",\n\t\"submit\": \"-esm-patient-registration__patient-registration__submit___S6frc\",\n\t\"cancelButton\": \"-esm-patient-registration__patient-registration__cancelButton___2-E+5\",\n\t\"submitButton\": \"-esm-patient-registration__patient-registration__submitButton___Ps1do\",\n\t\"infoGrid\": \"-esm-patient-registration__patient-registration__infoGrid___2S1kw\",\n\t\"label01\": \"-esm-patient-registration__patient-registration__label01___CxOgi\",\n\t\"productiveHeading02\": \"-esm-patient-registration__patient-registration__productiveHeading02___mBDux\",\n\t\"space05\": \"-esm-patient-registration__patient-registration__space05___+IJfn\",\n\t\"formContainer\": \"-esm-patient-registration__patient-registration__formContainer___ydkLz\",\n\t\"stickyColumn\": \"-esm-patient-registration__patient-registration__stickyColumn___2G55G\",\n\t\"touchTarget\": \"-esm-patient-registration__patient-registration__touchTarget___KxfOv\",\n\t\"linkName\": \"-esm-patient-registration__patient-registration__linkName___Ukv7z\",\n\t\"main\": \"-esm-patient-registration__patient-registration__main___eiIwY\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__overlay__title___ovEFv{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__overlay__submit___MEU04{width:250px}.-esm-patient-registration__overlay__submit___MEU04:hover{cursor:pointer}.-esm-patient-registration__overlay__cancelButton___Kuq8k{width:11.688rem}.-esm-patient-registration__overlay__submitButton___koip2{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__overlay__infoGrid___IR-lJ{width:100%;margin-bottom:40vh;margin-top:1rem}.-esm-patient-registration__overlay__label01___UFjWe{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__overlay__productiveHeading02___0-7g8{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__overlay__space05___3-aCf{margin:1rem 0 1rem 0}.-esm-patient-registration__overlay__formContainer___0etfN{display:flex;width:100%}.-esm-patient-registration__overlay__stickyColumn___ZAq3J{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__overlay__touchTarget___eSQ3o a:active{color:#161616}.-esm-patient-registration__overlay__linkName___Kol4j{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__overlay__linkName___Kol4j:active{text-decoration:none;color:#161616}.-esm-patient-registration__overlay__linkName___Kol4j:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__overlay__main___pCgsu{background-color:#fff}.-esm-patient-registration__overlay__desktopOverlay___pTy0O{position:fixed;top:3rem;right:0;height:calc(100vh - 3rem);min-width:27rem;background-color:#fff;border-left:1px solid #a8a8a8;overflow:hidden;display:grid;grid-template-rows:auto 1fr auto;z-index:999}.-esm-patient-registration__overlay__tabletOverlay___\\\\+CQze{position:fixed;top:0;bottom:0;left:0;right:0;z-index:9999;background-color:#fff;overflow:hidden;padding-top:3rem;display:grid;grid-template-rows:1fr auto}.-esm-patient-registration__overlay__tabletOverlayHeader___omtl4 button{background-color:#005d5d !important}.-esm-patient-registration__overlay__tabletOverlayHeader___omtl4 .-esm-patient-registration__overlay__headerContent___S7vPL{color:#fff}.-esm-patient-registration__overlay__desktopHeader___X3NCa{display:flex;justify-content:space-between;align-items:center;background-color:#e0e0e0;border-bottom:1px solid #a8a8a8}.-esm-patient-registration__overlay__headerContent___S7vPL{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;padding:0 1rem;color:#161616}.-esm-patient-registration__overlay__closeButton___8Pcw1{background-color:#fff}.-esm-patient-registration__overlay__overlayContent___9V2UN{padding:1rem;overflow-y:auto}.-esm-patient-registration__overlay__buttonsGroup___5b3bz{align-self:end}.-esm-patient-registration__overlay__buttonsGroup___5b3bz button{max-width:unset !important}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/patient-registration/patient-registration.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\",\"webpack://./src/patient-registration/ui-components/overlay/overlay.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,mDACE,kCAAA,CAGF,oDACE,WAAA,CAGF,0DACE,cAAA,CAGF,0DACE,eAAA,CAGF,0DACE,kBAAA,CACA,eAAA,CACA,aAAA,CAGF,sDACE,UAAA,CACA,kBAAA,CACA,eAAA,CAGF,qDC+eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDlqBxB,eEHmB,CFInB,kBEJmB,CFKnB,aDjCM,CCoCR,iECweI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD3pBxB,aDtCM,CCuCN,cAAA,CAGF,qDACE,oBAAA,CAGF,2DACE,YAAA,CACA,UAAA,CAGF,0DACE,eAAA,CACA,eAAA,CAEA,QAAA,CAGF,kEACE,aDpDe,CCuDjB,sDACE,aDzDc,CC0Dd,gBAAA,CACA,cAAA,CACA,eAAA,CAEA,6DACE,oBAAA,CACA,aD/Da,CCkEf,4DACE,oBAAA,CACA,aDpEa,CCqEb,cAAA,CAIJ,kDACE,qBAAA,CGlFF,4DACE,cAAA,CACA,QD+CmB,CC9CnB,OAAA,CACA,yBAAA,CACA,eAAA,CACA,qBJPM,CIQN,6BAAA,CACA,eAAA,CACA,YAAA,CACA,gCAAA,CACA,WAAA,CAGF,4DACE,cAAA,CACA,KAAA,CACA,QAAA,CACA,MAAA,CACA,OAAA,CACA,YAAA,CACA,qBJtBM,CIuBN,eAAA,CACA,gBD0BmB,CCzBnB,YAAA,CACA,2BAAA,CAIA,wEACE,mCAAA,CAEF,4HACE,UJlCI,CIsCR,2DACE,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,wBJzCM,CI0CN,+BAAA,CAGF,2DFgeI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CEnpBxB,cAAA,CACA,aJ9CM,CIiDR,yDACE,qBJrDM,CIwDR,4DACE,YD3BmB,CC4BnB,eAAA,CAGF,0DACE,cAAA,CAGF,iEACE,0BAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import \\\"~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles\\\";\\n@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing\\\";\\n@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n\\n.title {\\n  color: var(--omrs-color-brand-teal);\\n}\\n\\n.submit {\\n  width: 250px;\\n}\\n\\n.submit:hover {\\n  cursor: pointer;\\n}\\n\\n.cancelButton {\\n  width: 11.688rem;\\n}\\n\\n.submitButton {\\n  margin-bottom: 1rem;\\n  width: 11.688rem;\\n  display: block;\\n}\\n\\n.infoGrid {\\n  width: 100%;\\n  margin-bottom: 40vh;\\n  margin-top: 1rem;\\n}\\n\\n.label01 {\\n  @include carbon--type-style(\\\"label-01\\\");\\n  margin-top: $spacing-05;\\n  margin-bottom: $spacing-05;\\n  color: $ui-04;\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n  color: $ui-04;\\n  cursor: pointer;\\n}\\n\\n.space05 {\\n  margin: $spacing-05 0 $spacing-05 0;\\n}\\n\\n.formContainer {\\n  display: flex;\\n  width: 100%;\\n}\\n\\n.stickyColumn {\\n  position: sticky;\\n  margin-top: 1rem;\\n  // 3rem for the nav height and 1rem for top margin\\n  top: 4rem;\\n}\\n\\n.touchTarget a:active {\\n  color: $color-gray-100;\\n}\\n\\n.linkName {\\n  color: $color-gray-70;\\n  line-height: 1.38;\\n  font-size: 1rem;\\n  font-weight: 600;\\n\\n  &:active {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n  }\\n\\n  &:hover {\\n    text-decoration: none;\\n    color: $color-gray-100;\\n    cursor: pointer;\\n  }\\n}\\n\\n.main {\\n  background-color: white;\\n}\\n\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\",\"@import '../../patient-registration.scss';\\n\\n.desktopOverlay {\\n  position: fixed;\\n  top: $spacing-09;\\n  right: 0;\\n  height: calc(100vh - 3rem);\\n  min-width: 27rem;\\n  background-color: $ui-02;\\n  border-left: 1px solid $text-03;\\n  overflow: hidden;\\n  display: grid;\\n  grid-template-rows: auto 1fr auto;\\n  z-index: 999;\\n}\\n\\n.tabletOverlay {\\n  position: fixed;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 9999;\\n  background-color: $ui-02;\\n  overflow: hidden;\\n  padding-top: $spacing-09;\\n  display: grid;\\n  grid-template-rows: 1fr auto;\\n}\\n\\n.tabletOverlayHeader {\\n  button {\\n    background-color: $brand-01 !important;\\n  }\\n  .headerContent {\\n    color: $ui-02;\\n  }\\n}\\n\\n.desktopHeader {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  background-color: $ui-03;\\n  border-bottom: 1px solid $text-03;\\n}\\n\\n.headerContent {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n  padding: 0 $spacing-05;\\n  color: $ui-05;\\n}\\n\\n.closeButton {\\n  background-color: $ui-02;\\n}\\n\\n.overlayContent {\\n  padding: $spacing-05;\\n  overflow-y: auto;\\n}\\n\\n.buttonsGroup {\\n  align-self: end;\\n}\\n\\n.buttonsGroup button {\\n  max-width: unset !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"title\": \"-esm-patient-registration__overlay__title___ovEFv\",\n\t\"submit\": \"-esm-patient-registration__overlay__submit___MEU04\",\n\t\"cancelButton\": \"-esm-patient-registration__overlay__cancelButton___Kuq8k\",\n\t\"submitButton\": \"-esm-patient-registration__overlay__submitButton___koip2\",\n\t\"infoGrid\": \"-esm-patient-registration__overlay__infoGrid___IR-lJ\",\n\t\"label01\": \"-esm-patient-registration__overlay__label01___UFjWe\",\n\t\"productiveHeading02\": \"-esm-patient-registration__overlay__productiveHeading02___0-7g8\",\n\t\"space05\": \"-esm-patient-registration__overlay__space05___3-aCf\",\n\t\"formContainer\": \"-esm-patient-registration__overlay__formContainer___0etfN\",\n\t\"stickyColumn\": \"-esm-patient-registration__overlay__stickyColumn___ZAq3J\",\n\t\"touchTarget\": \"-esm-patient-registration__overlay__touchTarget___eSQ3o\",\n\t\"linkName\": \"-esm-patient-registration__overlay__linkName___Kol4j\",\n\t\"main\": \"-esm-patient-registration__overlay__main___pCgsu\",\n\t\"desktopOverlay\": \"-esm-patient-registration__overlay__desktopOverlay___pTy0O\",\n\t\"tabletOverlay\": \"-esm-patient-registration__overlay__tabletOverlay___+CQze\",\n\t\"tabletOverlayHeader\": \"-esm-patient-registration__overlay__tabletOverlayHeader___omtl4\",\n\t\"headerContent\": \"-esm-patient-registration__overlay__headerContent___S7vPL\",\n\t\"desktopHeader\": \"-esm-patient-registration__overlay__desktopHeader___X3NCa\",\n\t\"closeButton\": \"-esm-patient-registration__overlay__closeButton___8Pcw1\",\n\t\"overlayContent\": \"-esm-patient-registration__overlay__overlayContent___9V2UN\",\n\t\"buttonsGroup\": \"-esm-patient-registration__overlay__buttonsGroup___5b3bz\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["when","redirect","history","useHistory","t","useTranslation","ref","useRef","localTarget","setTarget","useState","target","cancelUnload","useCallback","e","message","preventDefault","returnValue","cancelNavigation","evt","detail","navigationIsCanceled","current","dispose","showModal","onConfirm","newUrl","useEffect","window","addEventListener","removeEventListener","url","push","split","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","validationSchema","Yup","givenName","required","familyName","additionalGivenName","is","then","otherwise","notRequired","additionalFamilyName","gender","oneOf","birthdate","max","Date","nullable","yearsEstimated","min","monthsEstimated","deathDate","email","optional","PatientRegistrationContext","createContext","dummyFormValues","patientUuid","v4","middleName","unidentifiedPatient","additionalMiddleName","addNameInLocalLanguage","birthdateEstimated","telephoneNumber","address1","address2","cityVillage","stateProvince","country","postalCode","isDead","deathCause","relationships","relatedPerson","relationship","identifiers","DummyDataInput","setValues","onClick","className","styles","type","DemographicsSection","fields","field","meta","useField","setFieldValue","useContext","value","touched","map","key","getField","ContactInfoSection","fieldName","Autosuggest","name","placeholder","getDisplayValue","getFieldValue","getSearchResults","onSuggestionSelected","suggestions","setSuggestions","searchBox","wrapper","document","handleClickOutsideComponent","contains","Search","id","labelText","onChange","query","light","size","length","suggestion","index","display","input","handleClick","async","searchPerson","abortController","AbortController","fetchPerson","data","results","RelationshipsSection","relationshipTypes","ResourcesContext","displayRelationshipTypes","setDisplayRelationshipTypes","React","tmp","forEach","aIsToB","uuid","direction","bIsToA","handleRelationshipTypeChange","event","selectedIndex","handleSuggestionSelected","selectedSuggestion","sectionStyles","remove","form","values","_relationship","style","marginBottom","item","Select","defaultValue","SelectItem","disabled","hidden","text","Button","kind","Input","checkWarning","props","invalidText","error","warnText","useMemo","warning","TextInput","invalid","warn","SelectInput","label","selectOptions","currentOption","DeathInfoSection","SectionWrapper","children","color","margin","Tile","parseString","xmlDockAsString","DOMParser","parseFromString","getTagAsDocument","tagName","template","getElementsByTagName","outerHTML","AddressField","addressTemplate","addressFields","setAddressFields","addressTemplateXml","templateXmlDoc","nameMappings","elementDefaults","properties","propertiesObj","Array","prototype","call","property","getAttribute","doc","fieldElement","attributes","PhoneField","PhoneEmailField","containsNoNumbers","checkNumber","test","NameField","setCapturePhotoProps","currentPhoto","onCapturePhoto","dataUri","photoDateTime","imageData","dateTime","fieldConfigs","useFieldConfig","ExtensionSlot","extensionSlotName","state","initialState","displayMiddleName","DobField","estimated","format","placeHolder","dateFormat","separator","parse","parts","date","order","setDate","parseInt","setMonth","setFullYear","getDate","getMonth","getFullYear","join","x","DatePicker","datePickerType","DatePickerInput","EobField","today","ev","years","isNaN","GenderBirthField","RadioButtonGroup","orientation","valueSelected","RadioButton","IdentifierInput","patientIdentifier","identifierTypes","identifierType","find","identifierTypeUuid","source","action","identifier","identifierName","option","setAutoGenerationOption","manualEntryEnabled","automaticGenerationEnabled","autoGenerationOption","handleEdit","identifierSources","handleDelete","confirmDeleteIdentifierModal","deleteIdentifier","identifierValue","autoGenerated","isPrimary","iconDescription","hasIconOnly","close","header","buttonsGroup","isDesktop","useLayoutType","Header","closeOverlay","unsavedIdentifierTypes","setUnsavedIdentifierTypes","searchString","setSearchString","getIdentifierByTypeUuid","checked","handleSearch","filteredIdentifiers","filter","toLowerCase","includes","identifierTypeFields","showIdentifierSources","Checkbox","handleCheckingIdentifier","legendText","defaultSelected","sourceUuid","handleSelectingIdentifierSource","ind","handleConfiguringIdentifiers","findIndex","preferred","IdField","inEditMode","desktop","showIdentifierOverlay","setShowIdentifierOverlay","findElementValueInXmlDoc","elementSelector","querySelector","cancelRegistration","navigate","to","spaBase","getFormValuesFromFhirPatient","patient","result","patientName","additionalPatientName","given","family","capitalize","birthDate","telecom","deceasedBoolean","deceasedDateTime","camelCase","system","getAddressFieldValuesFromFhirPatient","address","Object","entries","ext","extension","valueString","getPatientUuidMapFromFhirPatient","preferredNameUuid","additionalNameUuid","preferredAddressUuid","getPhonePersonAttributeValueFromFhirPatient","getPatientRegistration","getSynchronizationItems","patientRegistration","_patientRegistrationData","formValues","exportedInitialFormValuesForTesting","PatientRegistration","savePatientForm","match","currentSession","search","useLocation","config","useConfig","sections","setSections","setValidationSchema","initialSchema","uuidOfPatientToEdit","params","isLoading","isLoadingPatientToEdit","patientToEdit","usePatient","capturePhotoProps","setFieldConfigs","initialFormValues","setInitialFormValues","registration","console","openmrsFetch","getInitialPatientIdentifiers","useInitialFormValues","initialAddressFieldValues","fallback","setInitialAddressFieldValues","useInitialAddressFieldValues","patientUuidMap","setPatientUuidMap","usePatientUuidMap","location","sessionLocation","showDummyData","localStorage","getItem","photo","usePatientPhoto","configuredSections","section","sectionDefinitions","fieldConfigurations","addressFieldValues","addressValidationSchema","querySelectorAll","validationSchemaObjs","nameMapping","regex","regexFormat","reduce","final","matches","parseAddressTemplateXml","concat","enableReinitialize","initialValues","onSubmit","helpers","setSubmitting","concepts","patientPhotoUuid","personAttributeSections","showToast","description","title","redirectUrl","interpolateUrl","URLSearchParams","get","interpolateString","links","submitButton","responseBody","globalErrors","createErrorHandler","dirty","Link","scrollIntoView","viewId","getElementById","behavior","block","inline","Grid","Provider","imageSrc","sectionProps","renderSection","getSection","Root","resources","BrowserRouter","basename","backgroundColor","Row","Route","exact","path","render","___CSS_LOADER_EXPORT___","module","locals"],"sourceRoot":""}