"use strict";(self.webpackChunk_openmrs_esm_patient_registration_app=self.webpackChunk_openmrs_esm_patient_registration_app||[]).push([[916],{3916:(e,n,t)=>{t.r(n),t.d(n,{default:()=>pn});var a=t(9902),i=t.n(a),o=t(9575),r=t(5653),s=t(707),l=t(9035),c=t(1424),p=t(9686),u=t(3277),g=t(7030),d=t(4924);const b=e=>{let{when:n,redirect:t}=e;const i=(0,o.useHistory)(),{t:r}=(0,d.useTranslation)(),s=(0,a.useRef)(!1),[c,p]=(0,a.useState)(),u=c||t,g=(0,a.useCallback)((e=>{const n=r("discardModalBody","The changes you made to this patient's details have not been saved. Discard changes?");return e.preventDefault(),e.returnValue=n,n}),[]),b=(0,a.useCallback)((e=>{if(!e.detail.navigationIsCanceled&&!s.current){s.current=!0,e.detail.cancelNavigation();const n=(0,l.showModal)("cancel-patient-edit-modal",{onConfirm:()=>{p(e.detail.newUrl),n()}},(()=>{s.current=!1}))}}),[]);return(0,a.useEffect)((()=>{if(n&&void 0===u)return window.addEventListener("single-spa:before-routing-event",b),window.addEventListener("beforeunload",g),()=>{window.removeEventListener("beforeunload",g),window.removeEventListener("single-spa:before-routing-event",b)}}),[u,n,g,b]),(0,a.useEffect)((()=>{var e;"string"==typeof u&&i.push(`/${e=u,e.split(window.getOpenmrsSpaBase())?.[1]}`)}),[u]),null};var m=t(6062),h=t.n(m),f=t(4036),y=t.n(f),_=t(6793),$=t.n(_),A=t(7892),v=t.n(A),k=t(1173),x=t.n(k),C=t(2464),w=t.n(C),z=t(7195),E={};E.styleTagTransform=w(),E.setAttributes=v(),E.insert=$().bind(null,"head"),E.domAPI=y(),E.insertStyleElement=x(),h()(z.Z,E);const B=z.Z&&z.Z.locals?z.Z.locals:void 0;var N=t(7065),D=t(6794);const M=D.Ry({givenName:D.Z_().required("givenNameRequired"),familyName:D.Z_().required("familyNameRequired"),additionalGivenName:D.Z_().when("addNameInLocalLanguage",{is:!0,then:D.Z_().required("givenNameRequired"),otherwise:D.Z_().notRequired()}),additionalFamilyName:D.Z_().when("addNameInLocalLanguage",{is:!0,then:D.Z_().required("familyNameRequired"),otherwise:D.Z_().notRequired()}),gender:D.Z_().oneOf(["Male","Female","Other","Unknown"],"genderUnspecified").required("genderRequired"),birthdate:D.hT().required("birthdayRequired").max(Date(),"birthdayNotInTheFuture").nullable(),yearsEstimated:D.Rx().min(0,"negativeYears"),monthsEstimated:D.Rx().min(0,"negativeMonths"),deathDate:D.hT().max(Date(),"deathdayNotInTheFuture").nullable(),email:D.Z_().optional().email("invalidEmail")}),T=(0,a.createContext)(void 0);var F=t(7924),I=t(9571),L=t(5333),q={};q.styleTagTransform=w(),q.setAttributes=v(),q.insert=$().bind(null,"head"),q.domAPI=y(),q.insertStyleElement=x(),h()(L.Z,q);const G=L.Z&&L.Z.locals?L.Z.locals:void 0,S={patientUuid:(0,I.Z)(),givenName:"John",middleName:"",familyName:"Smith",unidentifiedPatient:!1,additionalGivenName:"Joey",additionalMiddleName:"",additionalFamilyName:"Smitty",addNameInLocalLanguage:!0,gender:"Male",birthdate:new Date(2020,1,1),yearsEstimated:1,monthsEstimated:2,birthdateEstimated:!0,telephoneNumber:"0800001066",address1:"Bom Jesus Street",address2:"",cityVillage:"Recife",stateProvince:"Pernambuco",country:"Brazil",postalCode:"50030-310",isDead:!1,deathDate:"",deathCause:"",relationships:[{relatedPerson:"",relationship:""}],identifiers:[]},O=e=>{let{setValues:n}=e;return i().createElement("main",null,i().createElement("button",{onClick:()=>n(S),className:`omrs-btn omrs-filled-neutral ${G.dummyData}`,type:"button","aria-label":"Dummy Data Input"},"Input Dummy Data"))};var P=t(4957),Z={};Z.styleTagTransform=w(),Z.setAttributes=v(),Z.insert=$().bind(null,"head"),Z.domAPI=y(),Z.insertStyleElement=x(),h()(P.Z,Z);const U=P.Z&&P.Z.locals?P.Z.locals:void 0,R=e=>{let{fields:n}=e;const[t,o]=(0,N.U$)("addNameInLocalLanguage"),{setFieldValue:r}=(0,a.useContext)(T);return(0,a.useEffect)((()=>{!t.value&&o.touched&&(r("additionalGivenName",""),r("additionalMiddleName",""),r("additionalFamilyName",""))}),[t.value,o.touched]),i().createElement("section",{className:U.formSection,"aria-label":"Demographics Section"},n.map((e=>i().createElement("div",{key:e},Ye(e)))))},j=e=>{let{fields:n}=e;return i().createElement("section",{"aria-label":"Contact Info Section"},n.map((e=>i().createElement("div",{key:e},Ye(e)))))};var H=t(9299),W={};W.styleTagTransform=w(),W.setAttributes=v(),W.insert=$().bind(null,"head"),W.domAPI=y(),W.insertStyleElement=x(),h()(H.Z,W);const V=H.Z&&H.Z.locals?H.Z.locals:void 0;var Y=t(2810),J=t(5067),K=t(5300),Q=t(3998),X={};X.styleTagTransform=w(),X.setAttributes=v(),X.insert=$().bind(null,"head"),X.domAPI=y(),X.insertStyleElement=x(),h()(Q.Z,X);const ee=Q.Z&&Q.Z.locals?Q.Z.locals:void 0,ne=e=>{let{name:n,placeholder:t,getDisplayValue:o,getFieldValue:r,getSearchResults:s,onSuggestionSelected:l}=e;const[c,p]=(0,a.useState)([]),u=(0,a.useRef)(null),g=(0,a.useRef)(null),{t:b}=(0,d.useTranslation)();(0,a.useEffect)((()=>(document.addEventListener("mousedown",m),()=>{document.removeEventListener("mousedown",m)})),[g]);const m=e=>{g.current&&!g.current.contains(e.target)&&p([])};return i().createElement("div",{className:ee.autocomplete,ref:g},i().createElement(K.Z,{name:n,id:"autosuggest",placeholder:t,labelText:b("fullName","Full Name"),onChange:e=>{const n=e.target.value;n?s(n).then((e=>{p(e)})):p([])},ref:u,className:ee.autocompleteSearch,light:!0,size:"xl"}),c.length>0&&i().createElement("ul",{className:ee.suggestions},c.map(((e,t)=>i().createElement("li",{key:t,onClick:e=>(e=>{const t=o(c[e]),a=r(c[e]);u.current.input.value=t,l(n,a),p([])})(t)},o(e))))))};async function te(e){const n=new AbortController;return(await(0,F.M8)(e,n)).data.results}const ae=()=>{const{relationshipTypes:e}=(0,a.useContext)(c.Cg),[n,t]=(0,a.useState)([]),{setFieldValue:o}=i().useContext(T),{t:r}=(0,d.useTranslation)();(0,a.useEffect)((()=>{const n=[];e.results.forEach((e=>{const t={display:e.aIsToB,uuid:e.uuid,direction:"aIsToB"},a={display:e.bIsToA,uuid:e.uuid,direction:"bIsToA"};t.display===a.display?n.push(t):n.push(t,a)})),t(n)}),[e]);const s=e=>{const{target:n}=e,t=n.name,a=n.options[n.selectedIndex].value;o(t,a)},l=(e,n)=>{o(e,n)};return i().createElement("section",{className:U.formSection,"aria-label":"Relationships Section"},i().createElement("section",{className:U.fieldGroup},i().createElement(N.F2,{name:"relationships"},(e=>{let{push:t,remove:a,form:{values:{relationships:o}}}=e;return i().createElement("div",null,o&&o.length>0?i().createElement("div",null,i().createElement("br",null),o.map(((e,a)=>i().createElement("div",{key:a,className:V.relationship},i().createElement("div",{className:V.searchBox,style:{marginBottom:"1rem"}},i().createElement(ne,{name:`relationships[${a}].relatedPerson`,placeholder:"Find person",onSuggestionSelected:l,getSearchResults:te,getDisplayValue:e=>e.display,getFieldValue:e=>e.uuid})),i().createElement("div",{className:`${V.selectRelationshipType}`,style:{marginBottom:"1rem"}},i().createElement(Y.Z,{light:!0,id:"select",defaultValue:"placeholder-item",labelText:r("relationship","Relationship"),onChange:s,name:`relationships[${a}].relationship`},i().createElement(J.Z,{disabled:!0,hidden:!0,value:"placeholder-item",text:r("relationshipToPatient","Relationship to patient")}),n.map((e=>i().createElement(J.Z,{text:e.display,value:`${e.uuid}/${e.direction}`,key:e.display}))))),i().createElement("div",{className:V.actions},o.length-1===a&&i().createElement(g.Z,{kind:"ghost",onClick:()=>t({})},r("addRelationshipButtonText","Add Relationship"))))))):null)}))))};var ie=t(2512);function oe(){return oe=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},oe.apply(this,arguments)}const re=e=>{let{checkWarning:n,...t}=e;const[o,r]=(0,N.U$)(t.name),{t:s}=(0,d.useTranslation)(),l=o.value||"",c=r.error&&s(r.error),p=(0,a.useMemo)((()=>{if(!c&&"function"==typeof n){const e=n(l);return e&&s(e)}}),[n,c,l,s]);return i().createElement("div",{style:{marginBottom:"1rem"}},i().createElement(ie.Z,oe({},t,o,{invalid:!(!r.touched||!r.error),invalidText:c,warn:!!p,warnText:p,value:l})))};function se(){return se=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},se.apply(this,arguments)}const le=e=>{let{name:n,options:t,label:a}=e;const[o,r]=(0,N.U$)(n),s=[i().createElement(J.Z,{disabled:!0,hidden:!0,text:`Select ${a}`,key:"",value:""}),...t.map(((e,n)=>i().createElement(J.Z,{text:e,value:e,key:n})))];return i().createElement("div",{style:{marginBottom:"1rem"}},i().createElement(Y.Z,se({id:"identifier"},o,{labelText:a,light:!0}),s))},ce=()=>{const{values:e}=i().useContext(T),{t:n}=(0,d.useTranslation)();return i().createElement("section",{className:U.formSection,"aria-label":"Death Info Section"},i().createElement("h5",{className:`omrs-type-title-5 ${U.formSectionTitle}`},"Death Info"),i().createElement("section",{className:U.fieldGroup},i().createElement(re,{labelText:n("isDeadInputLabel","Is Dead"),name:"isDead",id:"isDead",light:!0}),e.isDead&&i().createElement(i().Fragment,null,i().createElement(re,{labelText:n("deathDateInputLabel","Date of Death"),name:"deathDate",id:"deathDate",light:!0}),i().createElement(le,{options:[n("unknown","Unknown"),n("stroke","Stroke")],label:n("causeOfDeathInputLabel","Cause of Death"),name:"deathCause"}))))};var pe=t(4350);const ue=e=>{let{id:n,children:t,name:a,index:o}=e;const{t:r}=(0,d.useTranslation)();return i().createElement("div",{id:n},i().createElement("h3",{className:B.productiveHeading02,style:{color:"#161616"}},o+1,". ",a),i().createElement("span",{className:B.label01},r("allFieldsRequiredText","All fields are required unless marked optional")),i().createElement("div",{style:{margin:"1rem 0 1rem"}},i().createElement(pe.n9,null,t)))};var ge=t(5166),de={};de.styleTagTransform=w(),de.setAttributes=v(),de.insert=$().bind(null,"head"),de.domAPI=y(),de.insertStyleElement=x(),h()(ge.Z,de);const be=ge.Z&&ge.Z.locals?ge.Z.locals:void 0;function me(){return me=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},me.apply(this,arguments)}function he(e){return(new DOMParser).parseFromString(e,"text/xml")}function fe(e,n){const t=n.getElementsByTagName(e)[0];return he(t?t.outerHTML:"")}const ye=()=>{const{addressTemplate:e}=(0,a.useContext)(c.Cg),[n,t]=(0,a.useState)([]),{t:o}=(0,d.useTranslation)(),r=e.results[0].value;return(0,a.useEffect)((()=>{const e=he(r),n=fe("nameMappings",e),a=fe("elementdefaults",e),i=n.getElementsByTagName("property"),s=Array.prototype.map.call(i,(e=>{const n=e.getAttribute("name"),t=o(n,e.getAttribute("value")),i=function(e,n){const t=n.getElementsByTagName(e)[0];return t?t.getAttribute("value"):null}(n,a);return{id:n,name:n,labelText:t,value:i}}));t(s)}),[o,r]),i().createElement("div",null,i().createElement("h4",{className:be.productiveHeading02Light},o("addressHeader","Address")),i().createElement("div",null,n.map((e=>i().createElement(re,me({key:e.name},e,{light:!0}))))))},_e=()=>{const{t:e}=(0,d.useTranslation)();return i().createElement("div",null,i().createElement(re,{id:"phone",name:"phone",labelText:e("phoneNumberInputLabelText","Phone number (optional)"),light:!0}))},$e=()=>{const{t:e}=(0,d.useTranslation)();return i().createElement("div",null,i().createElement("h4",{className:be.productiveHeading02Light},e("phoneEmailLabelText","Phone & Email")),i().createElement("div",{className:be.grid},i().createElement(_e,null),i().createElement(re,{id:"email",name:"email",labelText:e("emailLabelText","Email"),light:!0})))},Ae=/^([^0-9]*)$/;function ve(e){if(!Ae.test(e))return"numberInNameDubious"}const ke=()=>{const{t:e}=(0,d.useTranslation)(),{setCapturePhotoProps:n,currentPhoto:t}=(0,a.useContext)(T),o=(0,a.useCallback)(((e,t)=>{n&&n({imageData:e,dateTime:t})}),[]),r=function(e){const{fieldConfigs:n}=(0,a.useContext)(T);return n.name}();return i().createElement("div",null,i().createElement("h4",{className:be.productiveHeading02Light},e("fullNameLabelText","Full Name")),i().createElement("div",{className:be.grid},i().createElement(l.ExtensionSlot,{className:be.photoExtension,extensionSlotName:"capture-patient-photo-slot",state:{onCapturePhoto:o,initialState:t}}),i().createElement("div",{className:be.nameField},i().createElement(re,{id:"givenName",name:"givenName",labelText:e("givenNameLabelText","Given Name"),light:!0,checkWarning:ve}),r.displayMiddleName&&i().createElement(re,{id:"middleName",name:"middleName",labelText:e("middleNameLabelText","Middle Name"),light:!0,checkWarning:ve}),i().createElement(re,{id:"familyName",name:"familyName",labelText:e("familyNameLabelText","Family Name"),light:!0,checkWarning:ve}))))};var xe=t(8769),Ce=t(6086),we=t(3489),ze=t(3305);function Ee(){return Ee=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},Ee.apply(this,arguments)}const Be=()=>{const{t:e}=(0,d.useTranslation)(),[n,t]=(0,N.U$)("birthdate"),[o]=(0,N.U$)("birthdateEstimated"),{setFieldValue:r}=(0,a.useContext)(T),{format:s,placeHolder:l,dateFormat:c}=(u="/",{parse:e=>{const n=e.split(u),t=new Date(null);return p.forEach(((e,a)=>{switch(e){case"d":t.setDate(parseInt(n[a]));break;case"m":t.setMonth(parseInt(n[a])-1);break;case"Y":t.setFullYear(parseInt(n[a]))}})),t},format:e=>{if(null===e)return"";if(e instanceof Date){const n=[];return p.forEach(((t,a)=>{switch(t){case"d":n[a]=e.getDate();break;case"m":n[a]=e.getMonth()+1;break;case"Y":n[a]=e.getFullYear()}})),n.join(u)}return e},placeHolder:(p=["d","m","Y"]).map((e=>"Y"===e?"YYYY":e+e)).join(u),dateFormat:p.join(u)});var p,u;const g=t.error&&e(t.error);return i().createElement("div",{style:{marginBottom:"1rem"}},i().createElement(we.Z,{dateFormat:c,datePickerType:"single",light:!0,onChange:e=>{let[n]=e;r("birthdate",n),r("birthdateEstimated",!1)}},i().createElement(ze.Z,Ee({id:"birthdate",placeholder:l,labelText:e("dateOfBirthLabelText","Date of Birth"),invalid:!(!t.touched||!t.error),invalidText:g},n,{value:o.value?"":s(n.value)}))))},Ne=()=>{const{t:e}=(0,d.useTranslation)(),n=new Date,[t]=(0,N.U$)("birthdate"),[o]=(0,N.U$)("birthdateEstimated"),{setFieldValue:r}=(0,a.useContext)(T);return i().createElement("div",{style:{marginBottom:"1rem"}},i().createElement(ie.Z,{id:"birthdateEstimated",light:!0,onChange:e=>{const t=+e.target.value;!isNaN(t)&&t<1e3&&t>=0&&(r("birthdate",new Date(n.getFullYear()-t,0,1)),r("birthdateEstimated",!0))},labelText:e("estimatedYearsLabelText","Estimated Years"),value:o.value&&t.value?""+(n.getFullYear()-t.value.getFullYear()):""}))},De=()=>{const{t:e}=(0,d.useTranslation)(),[n,t]=(0,N.U$)("gender"),{setFieldValue:o}=(0,a.useContext)(T);return i().createElement("div",null,i().createElement("h4",{className:be.productiveHeading02Light},e("sexAndBirthLabel","Sex & Birth")),i().createElement("div",{className:be.grid},i().createElement("div",{className:be.ageField},i().createElement(Be,null),i().createElement(Ne,null)),i().createElement("div",{className:be.sexField},i().createElement("p",{className:"bx--label"},e("genderLabelText","Sex")),i().createElement(xe.Z,{name:"gender",orientation:"vertical",onChange:e=>{o("gender",e)},valueSelected:n.value},i().createElement(Ce.Z,{id:"male",labelText:e("maleLabelText","Male"),value:"Male"}),i().createElement(Ce.Z,{id:"female",labelText:e("femaleLabelText","Female"),value:"Female"}),i().createElement(Ce.Z,{id:"other",labelText:e("otherLabelText","Other"),value:"Other"}),i().createElement(Ce.Z,{id:"unknown",labelText:e("unknownLabelText","Unknown"),value:"Unknown"})),t.touched&&t.error&&i().createElement(i().Fragment,null,i().createElement("input",{type:"hidden","data-invalid":"true"}),i().createElement("div",{className:"bx--form-requirement"},e(t.error))))))};var Me=t(618),Te=t(5055);const Fe=e=>{let{patientIdentifier:n,index:t,remove:o}=e;const{identifierTypes:r}=(0,a.useContext)(c.Cg),s=(0,a.useMemo)((()=>r.find((e=>e.uuid===n.identifierTypeUuid))),[n,r]),{setFieldValue:p}=i().useContext(T),{source:u,action:b,identifier:m}=n,h=s?.name,f=`identifiers[${t}].identifier`,{t:y}=(0,d.useTranslation)(),[_,$]=(0,a.useState)({manualEntryEnabled:!!u||void 0,automaticGenerationEnabled:void 0});(0,a.useEffect)((()=>{u&&u.autoGenerationOption&&u.autoGenerationOption.automaticGenerationEnabled&&p(`identifiers[${t}].autoGeneration`,!0)}),[u]),(0,a.useEffect)((()=>{u&&u.autoGenerationOption?($(u.autoGenerationOption),u.autoGenerationOption.automaticGenerationEnabled&&(p(`identifiers[${t}].autoGeneration`,!0),p(`identifiers[${t}].identifier`,""))):($({manualEntryEnabled:!0,automaticGenerationEnabled:!1}),p(`identifiers[${t}].autoGeneration`,!1))}),[u]);const A=(0,a.useCallback)((()=>{p(`identifiers[${t}]`,{...n,action:"UPDATE",source:s?.identifierSources?.[0]})}),[n]),v=(0,a.useCallback)((()=>{if("ADD"===b)o(t);else{const e=(0,l.showModal)("delete-identifier-confirmation-modal",{deleteIdentifier:n=>{n&&p(`identifiers[${t}].action`,"DELETE"),e()},identifierName:h,identifierValue:m})}}),[b,n,h,m]),k=!_.manualEntryEnabled||_.manualEntryEnabled&&_.automaticGenerationEnabled;return i().createElement("div",{className:G.IDInput},!_.manualEntryEnabled||"ADD"!==b&&"UPDATE"!==b?i().createElement("div",{className:G.textID},i().createElement("p",{className:G.label},h),i().createElement("p",{className:G.bodyShort02},m||y("autoGeneratedPlaceholderText","Auto generated"))):i().createElement(re,{id:h,light:!0,placeholder:k?`${y("autoGeneratedPlaceholderText","Auto generated")}`:`${y("enterIdentifierPlaceholderText","Enter Identifier")}`,labelText:h,name:f,disabled:!_.manualEntryEnabled,required:!0}),i().createElement("div",null,!(s.isPrimary||s.required)&&"NONE"===n.action&&i().createElement(g.Z,{kind:"ghost",onClick:A,iconDescription:y("editIdentifierTooltip","Edit"),hasIconOnly:!0},i().createElement(Me.dr6,null)),!(s?.isPrimary||s?.required)&&i().createElement(g.Z,{kind:"ghost",onClick:v,iconDescription:y("deleteIdentifierTooltip","Delete"),hasIconOnly:!0},i().createElement(Te.XqF,{className:G.trashCan}))))};var Ie=t(4673),Le=t(1761),qe={};qe.styleTagTransform=w(),qe.setAttributes=v(),qe.insert=$().bind(null,"head"),qe.domAPI=y(),qe.insertStyleElement=x(),h()(Le.Z,qe);const Ge=Le.Z&&Le.Z.locals?Le.Z.locals:void 0;var Se=t(4868),Oe=t(8358),Pe=t(3342),Ze=t(4045),Ue={};Ue.styleTagTransform=w(),Ue.setAttributes=v(),Ue.insert=$().bind(null,"head"),Ue.domAPI=y(),Ue.insertStyleElement=x(),h()(Ze.Z,Ue);const Re=Ze.Z&&Ze.Z.locals?Ze.Z.locals:void 0,je=e=>{let{close:n,children:t,header:a,buttonsGroup:o}=e;const r="desktop"===(0,l.useLayoutType)();return i().createElement("div",{className:r?Re.desktopOverlay:Re.tabletOverlay},r?i().createElement("div",{className:Re.desktopHeader},i().createElement("div",{className:Re.headerContent},a),i().createElement(g.Z,{className:Re.closeButton,onClick:n,kind:"ghost",hasIconOnly:!0},i().createElement(Oe.PcV,null))):i().createElement(Pe.Z,{className:Re.tabletOverlayHeader},i().createElement(g.Z,{onClick:n,hasIconOnly:!0},i().createElement(Ie._V8,{onClick:n})),i().createElement("div",{className:Re.headerContent},a)),i().createElement("div",{className:Re.overlayContent},t),i().createElement("div",{className:Re.buttonsGroup},o))},He=e=>{let{closeOverlay:n,push:t,setFieldValue:o,identifiers:r,remove:s}=e;const{identifierTypes:l}=(0,a.useContext)(c.Cg),[p,u]=(0,a.useState)([]),[b,m]=(0,a.useState)(""),{t:h}=(0,d.useTranslation)(),f=e=>r.find((n=>n.identifierTypeUuid===e));(0,a.useEffect)((()=>{l&&u(l.map((e=>{const n=f(e.uuid);return{...e,checked:n?"DELETE"!==n.action:e.isPrimary||e.required,source:n?.source??e.identifierSources?.[0]}})))}),[l,r]);const y=(0,a.useCallback)((e=>m(e?.target?.value??"")),[]),_=(0,a.useMemo)((()=>p?.filter((e=>e?.name?.toLowerCase().includes(b.toLowerCase())))),[p,b]),$=(0,a.useMemo)((()=>_.map((e=>{const n=f(e.uuid),t=!("NONE"===n?.action);return i().createElement("div",{key:e.uuid,className:Ge.space05},i().createElement(Se.Z,{id:e.uuid,value:e.uuid,labelText:e.name,onChange:n=>((e,n)=>u((t=>t.map((t=>t.uuid===e?{...t,checked:t.isPrimary||t.required||n}:t)))))(e?.uuid,n),checked:e.checked,disabled:n?"DELETE"!==n.action:e.isPrimary||e.required}),t&&e.checked&&e?.identifierSources?.length>0&&i().createElement("div",{className:Ge.radioGroup},i().createElement(xe.Z,{legendText:h("source","Source"),name:`${e?.fieldName}-identifier-sources`,defaultSelected:n?.source?.uuid,onChange:n=>((e,n)=>u((t=>t?.map((t=>t?.uuid===e?{...t,source:t?.identifierSources.find((e=>e?.uuid===n))}:t)))))(e?.uuid,n),orientation:"vertical"},e?.identifierSources.map(((e,n)=>i().createElement(Ce.Z,{key:n,labelText:e?.name,name:e?.uuid,value:e.uuid,className:Ge.radioButton}))))))}))),[_]),A=(0,a.useCallback)((()=>{p.forEach((e=>{const n=r.findIndex((n=>n.identifierTypeUuid===e.uuid));if(n>=0){const t=r[n];if(e.checked||"ADD"!==r[n].action){let a;e.checked?a="DELETE"===t.action?"UPDATE":t.action:"UPDATE"===t.action&&(a="DELETE"),o(`identifiers[${n}]`,{...r[n],action:a,source:"ADD"===a||"UPDATE"===a?e.source:null})}else s(n)}else e.checked&&t({identifier:"",action:"ADD",source:e.source,identifierTypeUuid:e.uuid,preferred:e.isPrimary})})),n()}),[p,r]);return i().createElement(je,{close:n,header:h("configureIdentifiers","Configure identifiers"),buttonsGroup:i().createElement("div",{className:Ge.overlayButtons},i().createElement(g.Z,{kind:"secondary",size:"lg",onClick:n},h("cancel","Cancel")),i().createElement(g.Z,{kind:"primary",size:"lg",onClick:A},h("configureIdentifiers","Configure identifiers")))},i().createElement("div",null,i().createElement("p",{className:Ge.bodyLong02},h("IDInstructions","Select the identifiers you'd like to add for this patient:")),p.length>7&&i().createElement("div",{className:Ge.space05},i().createElement(K.Z,{labelText:h("searchIdentifierPlaceholder","Search identifier"),placeholder:h("searchIdentifierPlaceholder","Search identifier"),onChange:y,value:b})),i().createElement("fieldset",null,$)))},We=()=>{const{identifierTypes:e}=(0,a.useContext)(c.Cg),{setFieldValue:n,inEditMode:t}=(0,a.useContext)(T),{t:o}=(0,d.useTranslation)(),r="desktop"===(0,l.useLayoutType)(),[s,p]=(0,a.useState)(!1);return(0,a.useEffect)((()=>{!t&&e&&n("identifiers",e.filter((e=>e.isPrimary||e.required)).map((e=>({action:"ADD",identifier:"",identifierTypeUuid:e.uuid,source:e.identifierSources?.[0],preferred:e.isPrimary}))))}),[e,t]),i().createElement("div",null,i().createElement("div",{className:be.identifierLabelText},i().createElement("h4",{className:be.productiveHeading02Light},o("idFieldLabelText","Identifiers")),i().createElement(g.Z,{kind:"ghost",className:be.setIDNumberButton,onClick:()=>p(!0),size:r?"sm":"md"},o("configure","Configure")," ",i().createElement(Ie.i9_,null))),i().createElement("div",null,i().createElement(N.F2,{name:"identifiers"},(e=>{let{push:t,remove:a,form:{values:{identifiers:o}}}=e;return i().createElement(i().Fragment,null,o.filter((e=>"DELETE"!==e.action)).map(((e,n)=>i().createElement(Fe,{key:n,index:n,patientIdentifier:e,remove:a}))),s&&i().createElement(He,{setFieldValue:n,closeOverlay:()=>p(!1),push:t,identifiers:o,remove:a}))}))))};function Ve(){return Ve=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},Ve.apply(this,arguments)}function Ye(e){switch(e){case"address":return i().createElement(ye,null);case"phone & email":return i().createElement($e,null);case"name":return i().createElement(ke,null);case"gender & dob":return i().createElement(De,null);case"id":return i().createElement(We,null);default:return i().createElement("div",null,"Unknown Field ",e," ")}}var Je=t(2777),Ke=t(1525);function Qe(e,n,t){return t.querySelector(n)?.querySelector(`[name=${e}]`)?.getAttribute("value")??null}function Xe(){(0,l.navigate)({to:`${window.spaBase}/home`})}function en(e){const n={},t=e.name[0],a=e.name[1];return n.patientUuid=e.id,n.givenName=t?.given[0],n.middleName=t?.given[1],n.familyName=t?.family,n.unidentifiedPatient="UNKNOWN"===t.given[0]&&"unknown"===t.family||void 0,n.addNameInLocalLanguage=!!a||void 0,n.additionalGivenName=a?.given[0],n.additionalMiddleName=a?.given[1],n.additionalFamilyName=a?.family,n.gender=(0,Ke.Z)(e.gender),n.birthdate=e.birthDate?new Date(e.birthDate):void 0,n.telephoneNumber=e.telecom?e.telecom[0].value:"",(e.deceasedBoolean||e.deceasedDateTime)&&(n.isDead=!0,n.deathDate=e.deceasedDateTime?e.deceasedDateTime.split("T")[0]:""),{...n,...e.identifier.map((e=>({[(0,Je.Z)(e.system||e.type.text)]:e.value})))}}function nn(e){const n={},t=e.address?.[0];if(t)for(const[e,a]of Object.entries(t))switch(e){case"city":n.cityVillage=t[e];break;case"state":n.stateProvince=t[e];break;case"district":n.countyDistrict=t[e];break;case"extension":t[e].forEach((e=>{e.extension.forEach((e=>{n[e.url.split("#")[1]]=e.valueString}))}));break;default:"country"!==e&&"postalCode"!==e||(n[e]=t[e])}return n}function tn(e){const n=e.name[0],t=e.name[1],a=e.address?.[0];return{preferredNameUuid:n?.id,additionalNameUuid:t?.id,preferredAddressUuid:a?.id,...e.identifier.map((e=>({[(0,Je.Z)(e.system||e.type.text)]:{uuid:e.id,value:e.value}})))}}function an(e){const n={};return e.telecom&&(n.phone=e.telecom[0].value),n}var on=t(8394);async function rn(e){return(await(0,l.getSynchronizationItems)(on.Kt)).find((n=>n._patientRegistrationData.formValues.patientUuid===e))}let sn={};const ln=e=>{let{savePatientForm:n,match:t}=e;const{currentSession:s,addressTemplate:m,identifierTypes:h}=(0,a.useContext)(c.Cg),{search:f}=(0,o.useLocation)(),y=(0,l.useConfig)(),[_,$]=(0,a.useState)([]),[A,v]=(0,a.useState)(),[k,x]=(0,a.useState)(M),{patientUuid:C}=t.params,{isLoading:w,patient:z}=(0,l.usePatient)(C),{t:E}=(0,d.useTranslation)(),[L,q]=(0,a.useState)(null),[G,S]=(0,a.useState)({}),[P,Z]=function(e){const{isLoading:n,patient:t}=(0,l.usePatient)(e),[i,o]=(0,a.useState)({patientUuid:(0,I.Z)(),givenName:"",middleName:"",familyName:"",unidentifiedPatient:!1,additionalGivenName:"",additionalMiddleName:"",additionalFamilyName:"",addNameInLocalLanguage:!1,gender:"",birthdate:null,yearsEstimated:0,monthsEstimated:0,birthdateEstimated:!1,telephoneNumber:"",address1:"",address2:"",cityVillage:"",stateProvince:"",country:"",postalCode:"",isDead:!1,deathDate:"",deathCause:"",relationships:[{relatedPerson:"",relationship:""}],identifiers:[]});return(0,a.useEffect)((()=>{(async()=>{if(t)o({...i,...en(t),...nn(t),...an(t)});else if(!n&&e){const n=await rn(e);if(!n._patientRegistrationData.formValues)return void console.error(`Found a queued offline patient registration for patient ${e}, but without form values. Not using these values.`);o(n._patientRegistrationData.formValues)}})()}),[n,t,e]),(0,a.useEffect)((()=>{e&&async function(e){return(await(0,l.openmrsFetch)(`/ws/rest/v1/patient/${e}/identifier?v=full`)).data.results.map((e=>({uuid:e.uuid,identifier:e.identifier,identifierTypeUuid:e.identifierType.uuid,action:"NONE",source:null,preferred:e.identifierType.isPrimary})))}(e).then((e=>o((n=>({...n,identifiers:e})))))}),[e]),[i,o]}(C),[U]=function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{isLoading:t,patient:i}=(0,l.usePatient)(e),[o,r]=(0,a.useState)(n);return(0,a.useEffect)((()=>{(async()=>{if(i)r({...o,...nn(i)});else if(!t&&e){const t=await rn(e);r(t?._patientRegistrationData.initialAddressFieldValues??n)}})()}),[t,i,e]),[o,r]}(C),[H]=function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const{isLoading:t,patient:i}=(0,l.usePatient)(e),[o,r]=(0,a.useState)(n);return(0,a.useEffect)((()=>{i?r({...o,...tn(i)}):!t&&e&&rn(e).then((e=>r(e?._patientRegistrationData.initialAddressFieldValues??n)))}),[t,i,e]),[o,r]}(C),W=s.sessionLocation?.uuid,V=w?void 0:!(!C||!z),Y=(0,a.useMemo)((()=>"true"===localStorage.getItem("openmrs:devtools")&&!V),[V]),{data:J}=(0,F.Uu)(z?.id);return(0,a.useEffect)((()=>{sn=P}),[P]),(0,a.useEffect)((()=>{if(y?.sections){const e=y.sections.map((e=>({id:e,name:y.sectionDefinitions[e].name,fields:y.sectionDefinitions[e].fields})));$(e),S(y.fieldConfigurations)}}),[y.sections,y.fieldConfigurations,y.sectionDefinitions]),(0,a.useEffect)((()=>{const e=m.results[0].value;if(!e)return;const{addressFieldValues:n,addressValidationSchema:t}=function(e){const n=(new DOMParser).parseFromString(e,"text/xml"),t=n.querySelector("nameMappings").querySelectorAll("property"),a=Array.prototype.map.call(t,(e=>{const t=e.getAttribute("name");return{name:t,label:e.getAttribute("value"),regex:Qe(t,"elementRegex",n)||".*",regexFormat:Qe(t,"elementRegexFormats",n)||""}})),i=D.Ry(a.reduce(((e,n)=>(e[n.name]=D.Z_().matches(n.regex,n.regexFormat),e)),{}));return{addressFieldValues:Array.prototype.map.call(t,(e=>{const t=e.getAttribute("name");return{name:t,defaultValue:Qe(t,"elementDefaults",n)??""}})),addressValidationSchema:i}}(e);if(x((e=>e.concat(t))),!1===V){for(const{name:e,defaultValue:t}of n)U[e]||(U[e]=t);Z({...P,...U})}}),[V,m]),i().createElement(N.J9,{enableReinitialize:!0,initialValues:P,validationSchema:k,onSubmit:async(e,t)=>{const a=new AbortController;t.setSubmitting(!0);try{await n(!V,e,H,U,h,L,y?.concepts?.patientPhotoUuid,W,y?.personAttributeSections,a),(0,l.showToast)({description:V?E("updationSuccessToastDescription","The patient's information has been successfully updated"):E("registrationSuccessToastDescription","The patient can now be found by searching for them using their name or ID number"),title:V?E("updationSuccessToastTitle","Patient Details Updated"):E("registrationSuccessToastTitle","New Patient Created"),kind:"success"});const t=(0,l.interpolateUrl)(new URLSearchParams(f).get("afterUrl")||(0,l.interpolateString)(y.links.submitButton,{patientUuid:e.patientUuid}));v(t)}catch(e){e.responseBody?.error?.globalErrors?e.responseBody.error.globalErrors.forEach((e=>{(0,l.showToast)({description:e.message})})):e.responseBody?.error?.message?(0,l.showToast)({description:e.responseBody.error.message}):(0,l.createErrorHandler)()(e),t.setSubmitting(!1)}}},(e=>i().createElement(N.l0,{className:B.form},i().createElement(b,{when:e.dirty,redirect:A}),i().createElement("div",{className:B.formContainer},i().createElement("div",null,i().createElement("div",{className:B.stickyColumn},i().createElement("h4",null,V?E("edit","Edit"):E("createNew","Create New")," ",E("patient","Patient")),Y&&i().createElement(O,{setValues:e.setValues}),i().createElement("p",{className:B.label01},E("jumpTo","Jump to")),_.map((e=>i().createElement("div",{className:`${B.space05} ${B.touchTarget}`,key:e.name},i().createElement(u.Z,{className:B.linkName,onClick:()=>{return n=e.id,void document.getElementById(n).scrollIntoView({behavior:"smooth",block:"center",inline:"center"});var n}},i().createElement(p.Z,null)," ",e.name)))),i().createElement(g.Z,{className:B.submitButton,type:"submit"},V?E("updatePatient","Update Patient"):E("registerPatient","Register Patient")),i().createElement(g.Z,{className:B.cancelButton,kind:"tertiary",onClick:Xe},E("cancel","Cancel")))),i().createElement(r.Z,{className:B.infoGrid},i().createElement(T.Provider,{value:{identifierTypes:h,validationSchema:k,setValidationSchema:x,fieldConfigs:G,values:e.values,inEditMode:V,setFieldValue:e.setFieldValue,setCapturePhotoProps:q,currentPhoto:J?.imageSrc}},_.map(((e,n)=>i().createElement("div",{key:n},function(e,n){return i().createElement(ue,Ve({},e,{index:n}),function(e){switch(e.id){case"demographics":return i().createElement(R,e);case"contact":return i().createElement(j,e);case"death":return i().createElement(ce,e);case"relationships":return i().createElement(ae,e);default:return i().createElement("div",null,"Unknown Section ",e.id)}}(e))}(e,n))))))))))};function cn(){return cn=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},cn.apply(this,arguments)}function pn(e){let{currentSession:n,addressTemplate:t,relationshipTypes:a,identifierTypes:p,savePatientForm:u}=e;const g={currentSession:n,addressTemplate:t,relationshipTypes:a,identifierTypes:p};return i().createElement(c.Cg.Provider,{value:g},i().createElement(o.BrowserRouter,{basename:window.getOpenmrsSpaBase()},i().createElement("main",{className:"omrs-main-content",style:{backgroundColor:"white"}},i().createElement(r.Z,null,i().createElement(s.Z,null,i().createElement(l.ExtensionSlot,{extensionSlotName:"breadcrumbs-slot"})),i().createElement(o.Route,{exact:!0,path:"/patient-registration",render:e=>i().createElement(ln,cn({savePatientForm:u},e))}),i().createElement(o.Route,{exact:!0,path:"/patient/:patientUuid/edit",render:e=>i().createElement(ln,cn({savePatientForm:u},e))})))))}},5166:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(1799),i=t.n(a),o=t(2609),r=t.n(o)()(i());r.push([e.id,".-esm-patient-registration__field__productiveHeading02___0\\+2Gm{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;margin-bottom:1rem}.-esm-patient-registration__field__productiveHeading02Light___bbKeq{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;margin-bottom:1rem;color:#525252}.-esm-patient-registration__field__grid___g21pQ{display:grid;grid-template-columns:1fr 1fr;column-gap:1rem}.-esm-patient-registration__field__patientPhoto___9mWMr{display:flex;justify-content:center}.-esm-patient-registration__field__nameField___uPmod{grid-row:1;grid-column:1}.-esm-patient-registration__field__photoExtension___IqCnX{margin-bottom:1rem;grid-row:1;grid-column:2;justify-self:center}.-esm-patient-registration__field__sexField___F8TIv{margin-bottom:1rem}.-esm-patient-registration__field__identifierLabelText___bdyJF{display:flex;align-items:center}.-esm-patient-registration__field__setIDNumberButton___XziAX{margin-bottom:1rem}.-esm-patient-registration__field__setIDNumberButton___XziAX>svg{margin-left:.5rem}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__grid___g21pQ{grid-template-columns:1fr;grid-template-rows:auto auto}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__sexField___F8TIv{grid-row:1}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__ageField___fRiK9{grid-row:2}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__nameField___uPmod{grid-row:2;grid-column:1}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__photoExtension___IqCnX{grid-column:1;grid-row:1;justify-self:start}.omrs-breakpoint-lt-desktop .-esm-patient-registration__field__radioButton___d7GuU label{height:3rem !important}","",{version:3,sources:["webpack://./src/patient-registration/field/field.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss"],names:[],mappings:"AAGA,gEC4gBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD/rBxB,kBAAA,CAGF,oECugBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD1rBxB,kBAAA,CACA,aAAA,CAGF,gDACE,YAAA,CACA,6BAAA,CACA,eAAA,CAGF,wDACE,YAAA,CACA,sBAAA,CAGF,qDACE,UAAA,CACA,aAAA,CAGF,0DACE,kBAAA,CACA,UAAA,CACA,aAAA,CACA,mBAAA,CAGF,oDACE,kBEPmB,CFUrB,+DACE,YAAA,CACA,kBAAA,CAGF,6DACE,kBEhBmB,CFmBrB,iEACE,iBE9BmB,CFkCnB,4EACE,yBAAA,CACA,4BAAA,CAEF,gFACE,UAAA,CAEF,gFACE,UAAA,CAEF,iFACE,UAAA,CACA,aAAA,CAEF,sFACE,aAAA,CACA,UAAA,CACA,kBAAA,CAEF,yFACE,sBAAA",sourcesContent:['@import "~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles";\n@import "~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing";\n\n.productiveHeading02 {\n  @include carbon--type-style("productive-heading-02");\n  margin-bottom: 1rem;\n}\n\n.productiveHeading02Light {\n  @include carbon--type-style("productive-heading-02");\n  margin-bottom: 1rem;\n  color: #525252;\n}\n\n.grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 1rem;\n}\n\n.patientPhoto {\n  display: flex;\n  justify-content: center;\n}\n\n.nameField {\n  grid-row: 1;\n  grid-column: 1;\n}\n\n.photoExtension {\n  margin-bottom: 1rem;\n  grid-row: 1;\n  grid-column: 2;\n  justify-self: center;\n}\n\n.sexField {\n  margin-bottom: $spacing-05;\n}\n\n.identifierLabelText {\n  display: flex;\n  align-items: center;\n}\n\n.setIDNumberButton {\n  margin-bottom: $spacing-05;\n}\n\n.setIDNumberButton > svg {\n  margin-left: $spacing-03;\n}\n\n:global(.omrs-breakpoint-lt-desktop){\n  .grid {\n    grid-template-columns: 1fr;\n    grid-template-rows: auto auto;\n  }\n  .sexField {\n    grid-row: 1;\n  }\n  .ageField {\n    grid-row: 2;\n  }\n  .nameField {\n    grid-row: 2;\n    grid-column: 1;\n  }\n  .photoExtension {\n    grid-column: 1;\n    grid-row: 1;\n    justify-self: start;\n  }\n  .radioButton label {\n    height: $spacing-09 !important;\n  }\n}',"//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n"],sourceRoot:""}]),r.locals={productiveHeading02:"-esm-patient-registration__field__productiveHeading02___0+2Gm",productiveHeading02Light:"-esm-patient-registration__field__productiveHeading02Light___bbKeq",grid:"-esm-patient-registration__field__grid___g21pQ",patientPhoto:"-esm-patient-registration__field__patientPhoto___9mWMr",nameField:"-esm-patient-registration__field__nameField___uPmod",photoExtension:"-esm-patient-registration__field__photoExtension___IqCnX",sexField:"-esm-patient-registration__field__sexField___F8TIv",identifierLabelText:"-esm-patient-registration__field__identifierLabelText___bdyJF",setIDNumberButton:"-esm-patient-registration__field__setIDNumberButton___XziAX",ageField:"-esm-patient-registration__field__ageField___fRiK9",radioButton:"-esm-patient-registration__field__radioButton___d7GuU"};const s=r},1761:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(1799),i=t.n(a),o=t(2609),r=t.n(o)()(i());r.push([e.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__identifier-selection__title___fPIy3{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__identifier-selection__submit___WgYnV{width:250px}.-esm-patient-registration__identifier-selection__submit___WgYnV:hover{cursor:pointer}.-esm-patient-registration__identifier-selection__cancelButton___ar-za{width:11.688rem}.-esm-patient-registration__identifier-selection__submitButton___mJgTx{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__identifier-selection__infoGrid___5ovdR{width:100%;margin-bottom:40vh;margin-top:1rem}.-esm-patient-registration__identifier-selection__label01___sm7Rq{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__identifier-selection__productiveHeading02___aocJ0{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__identifier-selection__space05___pbxiU{margin:1rem 0 1rem 0}.-esm-patient-registration__identifier-selection__formContainer___XacnD{display:flex;width:100%}.-esm-patient-registration__identifier-selection__stickyColumn___H9Wbn{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__identifier-selection__touchTarget___heOv2 a:active{color:#161616}.-esm-patient-registration__identifier-selection__linkName___oKi4d{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__identifier-selection__linkName___oKi4d:active{text-decoration:none;color:#161616}.-esm-patient-registration__identifier-selection__linkName___oKi4d:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__identifier-selection__main___s9KQc{background-color:#fff}.-esm-patient-registration__identifier-selection__overlayButtons___frh9W{display:grid;grid-template-columns:1fr 1fr}.-esm-patient-registration__identifier-selection__overlayButtons___frh9W button{max-width:unset}.-esm-patient-registration__identifier-selection__radioGroup___n\\+7PW{background-color:#f4f4f4;padding:1rem}.-esm-patient-registration__identifier-selection__radioButton___yaoFj{margin:0 !important}.-esm-patient-registration__identifier-selection__radioButton___yaoFj label{height:2rem}.omrs-breakpoint-lt-desktop .-esm-patient-registration__identifier-selection__radioButton___yaoFj label{height:3rem !important}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/patient-registration/patient-registration.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss","webpack://./src/patient-registration/field/id/identifier-selection.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,gEACE,kCAAA,CAGF,iEACE,WAAA,CAGF,uEACE,cAAA,CAGF,uEACE,eAAA,CAGF,uEACE,kBAAA,CACA,eAAA,CACA,aAAA,CAGF,mEACE,UAAA,CACA,kBAAA,CACA,eAAA,CAGF,kEC+eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDlqBxB,eEHmB,CFInB,kBEJmB,CFKnB,aDjCM,CCoCR,8ECweI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD3pBxB,aDtCM,CCuCN,cAAA,CAGF,kEACE,oBAAA,CAGF,wEACE,YAAA,CACA,UAAA,CAGF,uEACE,eAAA,CACA,eAAA,CAEA,QAAA,CAGF,+EACE,aDpDe,CCuDjB,mEACE,aDzDc,CC0Dd,gBAAA,CACA,cAAA,CACA,eAAA,CAEA,0EACE,oBAAA,CACA,aD/Da,CCkEf,yEACE,oBAAA,CACA,aDpEa,CCqEb,cAAA,CAIJ,+DACE,qBAAA,CGlFF,yEACE,YAAA,CACA,6BAAA,CAGF,gFACE,eAAA,CAGF,sEACE,wBJZM,CIaN,YDkBmB,CCfrB,sEACE,mBAAA,CACA,4EACE,WDsBiB,CCjBnB,wGACE,sBAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n",'@import "~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles";\n@import "~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing";\n@import "~@openmrs/esm-styleguide/src/vars";\n\n.title {\n  color: var(--omrs-color-brand-teal);\n}\n\n.submit {\n  width: 250px;\n}\n\n.submit:hover {\n  cursor: pointer;\n}\n\n.cancelButton {\n  width: 11.688rem;\n}\n\n.submitButton {\n  margin-bottom: 1rem;\n  width: 11.688rem;\n  display: block;\n}\n\n.infoGrid {\n  width: 100%;\n  margin-bottom: 40vh;\n  margin-top: 1rem;\n}\n\n.label01 {\n  @include carbon--type-style("label-01");\n  margin-top: $spacing-05;\n  margin-bottom: $spacing-05;\n  color: $ui-04;\n}\n\n.productiveHeading02 {\n  @include carbon--type-style("productive-heading-02");\n  color: $ui-04;\n  cursor: pointer;\n}\n\n.space05 {\n  margin: $spacing-05 0 $spacing-05 0;\n}\n\n.formContainer {\n  display: flex;\n  width: 100%;\n}\n\n.stickyColumn {\n  position: sticky;\n  margin-top: 1rem;\n  // 3rem for the nav height and 1rem for top margin\n  top: 4rem;\n}\n\n.touchTarget a:active {\n  color: $color-gray-100;\n}\n\n.linkName {\n  color: $color-gray-70;\n  line-height: 1.38;\n  font-size: 1rem;\n  font-weight: 600;\n\n  &:active {\n    text-decoration: none;\n    color: $color-gray-100;\n  }\n\n  &:hover {\n    text-decoration: none;\n    color: $color-gray-100;\n    cursor: pointer;\n  }\n}\n\n.main {\n  background-color: white;\n}\n\n',"//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n","@import '../../patient-registration.scss';\n\n.overlayButtons {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.overlayButtons button {\n  max-width: unset;\n}\n\n.radioGroup {\n  background-color: $ui-01;\n  padding: $spacing-05;\n}\n\n.radioButton {\n  margin: 0 !important;\n  label {\n    height: $spacing-07;\n  }\n}\n\n:global(.omrs-breakpoint-lt-desktop) { \n  .radioButton label {\n    height: $spacing-09 !important;\n  }\n}"],sourceRoot:""}]),r.locals={title:"-esm-patient-registration__identifier-selection__title___fPIy3",submit:"-esm-patient-registration__identifier-selection__submit___WgYnV",cancelButton:"-esm-patient-registration__identifier-selection__cancelButton___ar-za",submitButton:"-esm-patient-registration__identifier-selection__submitButton___mJgTx",infoGrid:"-esm-patient-registration__identifier-selection__infoGrid___5ovdR",label01:"-esm-patient-registration__identifier-selection__label01___sm7Rq",productiveHeading02:"-esm-patient-registration__identifier-selection__productiveHeading02___aocJ0",space05:"-esm-patient-registration__identifier-selection__space05___pbxiU",formContainer:"-esm-patient-registration__identifier-selection__formContainer___XacnD",stickyColumn:"-esm-patient-registration__identifier-selection__stickyColumn___H9Wbn",touchTarget:"-esm-patient-registration__identifier-selection__touchTarget___heOv2",linkName:"-esm-patient-registration__identifier-selection__linkName___oKi4d",main:"-esm-patient-registration__identifier-selection__main___s9KQc",overlayButtons:"-esm-patient-registration__identifier-selection__overlayButtons___frh9W",radioGroup:"-esm-patient-registration__identifier-selection__radioGroup___n+7PW",radioButton:"-esm-patient-registration__identifier-selection__radioButton___yaoFj"};const s=r},3998:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(1799),i=t.n(a),o=t(2609),r=t.n(o)()(i());r.push([e.id,".-esm-patient-registration__autosuggest__suggestions___v5o3w{position:relative;border-top-width:0;list-style:none;margin-top:0;max-height:143px;overflow-y:auto;padding-left:0;width:100%;position:absolute;left:0;background-color:#fff;margin-bottom:20px;z-index:99}.-esm-patient-registration__autosuggest__suggestions___v5o3w li{padding:1rem;line-height:1.29;color:#525252;border-bottom:1px solid #8d8d8d}.-esm-patient-registration__autosuggest__suggestions___v5o3w li:hover{background-color:#e5e5e5;color:#161616;cursor:pointer}.-esm-patient-registration__autosuggest__suggestions___v5o3w li:not(:last-of-type){border-bottom:1px solid #999}.-esm-patient-registration__autosuggest__autocomplete___it56z{position:relative}.-esm-patient-registration__autosuggest__autocompleteSearch___sc5fh{width:100%}.-esm-patient-registration__autosuggest__suggestions___v5o3w a{color:inherit;text-decoration:none}","",{version:3,sources:["webpack://./src/patient-registration/input/custom-input/autosuggest/autosuggest.scss"],names:[],mappings:"AAAA,6DACI,iBAAA,CACA,kBAAA,CACA,eAAA,CACA,YAAA,CACA,gBAAA,CACA,eAAA,CACA,cAAA,CACA,UAAA,CACA,iBAAA,CACA,MAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CAGJ,gEACI,YAAA,CACA,gBAAA,CACA,aAAA,CACA,+BAAA,CAGJ,sEACI,wBAAA,CACA,aAAA,CACA,cAAA,CAGJ,mFACI,4BAAA,CAGJ,8DACI,iBAAA,CAGJ,oEACI,UAAA,CAGJ,+DACI,aAAA,CACA,oBAAA",sourcesContent:[".suggestions {\n    position: relative;\n    border-top-width: 0;\n    list-style: none;\n    margin-top: 0;\n    max-height: 143px;\n    overflow-y: auto;\n    padding-left: 0;\n    width: 100%;\n    position: absolute;\n    left: 0;\n    background-color: #fff;\n    margin-bottom: 20px;\n    z-index: 99;\n}\n\n.suggestions li {\n    padding: 1rem;\n    line-height: 1.29;\n    color: #525252;\n    border-bottom: 1px solid #8d8d8d;\n}\n\n.suggestions li:hover {\n    background-color: #e5e5e5;\n    color: #161616;\n    cursor: pointer;\n}\n\n.suggestions li:not(:last-of-type) {\n    border-bottom: 1px solid #999;\n}\n\n.autocomplete {\n    position: relative;\n}\n\n.autocompleteSearch {\n    width: 100%;\n}\n\n.suggestions a {\n    color: inherit;\n    text-decoration: none;\n}"],sourceRoot:""}]),r.locals={suggestions:"-esm-patient-registration__autosuggest__suggestions___v5o3w",autocomplete:"-esm-patient-registration__autosuggest__autocomplete___it56z",autocompleteSearch:"-esm-patient-registration__autosuggest__autocompleteSearch___sc5fh"};const s=r},5333:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(1799),i=t.n(a),o=t(2609),r=t.n(o)()(i());r.push([e.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__input__title___4PKlg{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__input__submit___mloB4{width:250px}.-esm-patient-registration__input__submit___mloB4:hover{cursor:pointer}.-esm-patient-registration__input__cancelButton___blAcs{width:11.688rem}.-esm-patient-registration__input__submitButton___SofD2{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__input__infoGrid___xohlq{width:100%;margin-bottom:40vh;margin-top:1rem}.-esm-patient-registration__input__label01___fwQQq{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__input__productiveHeading02___7pE9K{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__input__space05___9oNC\\+{margin:1rem 0 1rem 0}.-esm-patient-registration__input__formContainer___YE8UP{display:flex;width:100%}.-esm-patient-registration__input__stickyColumn___KQudo{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__input__touchTarget___lFvgc a:active{color:#161616}.-esm-patient-registration__input__linkName___C8vKy{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__input__linkName___C8vKy:active{text-decoration:none;color:#161616}.-esm-patient-registration__input__linkName___C8vKy:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__input__main___rng6t{background-color:#fff}.-esm-patient-registration__input__fieldRow___5TD7U{display:flex;flex-direction:row;justify-content:flex-start;flex-wrap:wrap}.-esm-patient-registration__input__subFieldRow___zGAH4{margin-bottom:5px}.-esm-patient-registration__input__label___65tRW{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;color:#525252}.-esm-patient-registration__input__textID___F\\+F-t{margin-bottom:1rem}.-esm-patient-registration__input__requiredField___x0TVf{color:var(--omrs-color-danger)}.-esm-patient-registration__input__input___JYX4d{margin-right:5px}.-esm-patient-registration__input__checkboxField___gmx7u{display:flex;flex-direction:row;justify-content:flex-start;width:400px;margin-left:10px}.-esm-patient-registration__input__textInput___QJYjz{width:250px !important;height:40px !important}.-esm-patient-registration__input__numberInput___IGlx4{width:200px !important;height:40px !important}.-esm-patient-registration__input__checkboxInput___IVRIk{height:1.5rem !important;width:1.5rem !important;margin-top:8px}.-esm-patient-registration__input__selectInput___yrzZ-{width:150px !important;height:40px !important}.-esm-patient-registration__input__dateInput___2shrY{width:200px !important;height:40px !important;font-size:large !important}.-esm-patient-registration__input__telInput___HxQe3{width:250px !important;height:40px !important}.-esm-patient-registration__input__errorInput___aW2qL{border:2px solid var(--omrs-color-danger) !important;padding-left:.875rem !important}.-esm-patient-registration__input__errorMessage___cbdW2{color:var(--omrs-color-danger);align-self:center}.-esm-patient-registration__input__dummyData___GFQGF{cursor:pointer;margin-left:5px}.-esm-patient-registration__input__IDInput___6B3\\+s{display:grid;grid-template-columns:1fr auto;align-items:center;max-width:27rem}.-esm-patient-registration__input__trashCan___usc53{color:#da1e28}.omrs-breakpoint-lt-desktop .-esm-patient-registration__input__IDInput___6B3\\+s{max-width:unset;width:100%}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/patient-registration/patient-registration.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss","webpack://./src/patient-registration/input/input.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,iDACE,kCAAA,CAGF,kDACE,WAAA,CAGF,wDACE,cAAA,CAGF,wDACE,eAAA,CAGF,wDACE,kBAAA,CACA,eAAA,CACA,aAAA,CAGF,oDACE,UAAA,CACA,kBAAA,CACA,eAAA,CAGF,mDC+eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDlqBxB,eEHmB,CFInB,kBEJmB,CFKnB,aDjCM,CCoCR,+DCweI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD3pBxB,aDtCM,CCuCN,cAAA,CAGF,oDACE,oBAAA,CAGF,yDACE,YAAA,CACA,UAAA,CAGF,wDACE,eAAA,CACA,eAAA,CAEA,QAAA,CAGF,gEACE,aDpDe,CCuDjB,oDACE,aDzDc,CC0Dd,gBAAA,CACA,cAAA,CACA,eAAA,CAEA,2DACE,oBAAA,CACA,aD/Da,CCkEf,0DACE,oBAAA,CACA,aDpEa,CCqEb,cAAA,CAIJ,gDACE,qBAAA,CGlFF,oDACE,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,cAAA,CAGF,uDACE,iBAAA,CAGF,iDFkgBI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CErrBxB,aJVQ,CIaV,mDACE,kBDYmB,CCTrB,yDACE,8BAAA,CAGF,iDACE,gBAAA,CAGF,yDACE,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,WAAA,CACA,gBAAA,CAGF,qDACE,sBAAA,CACA,sBAAA,CAGF,uDACE,sBAAA,CACA,sBAAA,CAGF,yDACE,wBAAA,CACA,uBAAA,CACA,cAAA,CAGF,uDACE,sBAAA,CACA,sBAAA,CAGF,qDACE,sBAAA,CACA,sBAAA,CACA,0BAAA,CAGF,oDACE,sBAAA,CACA,sBAAA,CAGF,sDACE,oDAAA,CACA,+BAAA,CAGF,wDACE,8BAAA,CACA,iBAAA,CAGF,qDACE,cAAA,CACA,eAAA,CAGF,oDACE,YAAA,CACA,8BAAA,CACA,kBAAA,CACA,eAAA,CAGF,oDACE,aJzEO,CI6EP,gFACE,eAAA,CACA,UAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n",'@import "~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles";\n@import "~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing";\n@import "~@openmrs/esm-styleguide/src/vars";\n\n.title {\n  color: var(--omrs-color-brand-teal);\n}\n\n.submit {\n  width: 250px;\n}\n\n.submit:hover {\n  cursor: pointer;\n}\n\n.cancelButton {\n  width: 11.688rem;\n}\n\n.submitButton {\n  margin-bottom: 1rem;\n  width: 11.688rem;\n  display: block;\n}\n\n.infoGrid {\n  width: 100%;\n  margin-bottom: 40vh;\n  margin-top: 1rem;\n}\n\n.label01 {\n  @include carbon--type-style("label-01");\n  margin-top: $spacing-05;\n  margin-bottom: $spacing-05;\n  color: $ui-04;\n}\n\n.productiveHeading02 {\n  @include carbon--type-style("productive-heading-02");\n  color: $ui-04;\n  cursor: pointer;\n}\n\n.space05 {\n  margin: $spacing-05 0 $spacing-05 0;\n}\n\n.formContainer {\n  display: flex;\n  width: 100%;\n}\n\n.stickyColumn {\n  position: sticky;\n  margin-top: 1rem;\n  // 3rem for the nav height and 1rem for top margin\n  top: 4rem;\n}\n\n.touchTarget a:active {\n  color: $color-gray-100;\n}\n\n.linkName {\n  color: $color-gray-70;\n  line-height: 1.38;\n  font-size: 1rem;\n  font-weight: 600;\n\n  &:active {\n    text-decoration: none;\n    color: $color-gray-100;\n  }\n\n  &:hover {\n    text-decoration: none;\n    color: $color-gray-100;\n    cursor: pointer;\n  }\n}\n\n.main {\n  background-color: white;\n}\n\n',"//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n",'@import "../../patient-registration/patient-registration.scss";\n\n.fieldRow {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n}\n\n.subFieldRow {\n  margin-bottom: 5px;\n}\n\n.label {\n  @include carbon--type-style("label-01");\n  color: $text-02;\n}\n\n.textID {\n  margin-bottom: $spacing-05;\n}\n\n.requiredField {\n  color: var(--omrs-color-danger);\n}\n\n.input {\n  margin-right: 5px;\n}\n\n.checkboxField {\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  width: 400px;\n  margin-left: 10px;\n}\n\n.textInput {\n  width: 250px !important;\n  height: 40px !important;\n}\n\n.numberInput {\n  width: 200px !important;\n  height: 40px !important;\n}\n\n.checkboxInput {\n  height: 1.5rem !important;\n  width: 1.5rem !important;\n  margin-top: 8px;\n}\n\n.selectInput {\n  width: 150px !important;\n  height: 40px !important;\n}\n\n.dateInput {\n  width: 200px !important;\n  height: 40px !important;\n  font-size: large !important;\n}\n\n.telInput {\n  width: 250px !important;\n  height: 40px !important;\n}\n\n.errorInput {\n  border: 2px solid var(--omrs-color-danger) !important;\n  padding-left: 0.875rem !important;\n}\n\n.errorMessage {\n  color: var(--omrs-color-danger);\n  align-self: center;\n}\n\n.dummyData {\n  cursor: pointer;\n  margin-left: 5px;\n}\n\n.IDInput {\n  display: grid;\n  grid-template-columns: 1fr auto;\n  align-items: center;\n  max-width: 27rem;\n}\n\n.trashCan {\n  color: $danger;\n}\n\n:global(.omrs-breakpoint-lt-desktop) {\n  .IDInput {\n    max-width: unset;\n    width: 100%;\n  }\n}'],sourceRoot:""}]),r.locals={title:"-esm-patient-registration__input__title___4PKlg",submit:"-esm-patient-registration__input__submit___mloB4",cancelButton:"-esm-patient-registration__input__cancelButton___blAcs",submitButton:"-esm-patient-registration__input__submitButton___SofD2",infoGrid:"-esm-patient-registration__input__infoGrid___xohlq",label01:"-esm-patient-registration__input__label01___fwQQq",productiveHeading02:"-esm-patient-registration__input__productiveHeading02___7pE9K",space05:"-esm-patient-registration__input__space05___9oNC+",formContainer:"-esm-patient-registration__input__formContainer___YE8UP",stickyColumn:"-esm-patient-registration__input__stickyColumn___KQudo",touchTarget:"-esm-patient-registration__input__touchTarget___lFvgc",linkName:"-esm-patient-registration__input__linkName___C8vKy",main:"-esm-patient-registration__input__main___rng6t",fieldRow:"-esm-patient-registration__input__fieldRow___5TD7U",subFieldRow:"-esm-patient-registration__input__subFieldRow___zGAH4",label:"-esm-patient-registration__input__label___65tRW",textID:"-esm-patient-registration__input__textID___F+F-t",requiredField:"-esm-patient-registration__input__requiredField___x0TVf",input:"-esm-patient-registration__input__input___JYX4d",checkboxField:"-esm-patient-registration__input__checkboxField___gmx7u",textInput:"-esm-patient-registration__input__textInput___QJYjz",numberInput:"-esm-patient-registration__input__numberInput___IGlx4",checkboxInput:"-esm-patient-registration__input__checkboxInput___IVRIk",selectInput:"-esm-patient-registration__input__selectInput___yrzZ-",dateInput:"-esm-patient-registration__input__dateInput___2shrY",telInput:"-esm-patient-registration__input__telInput___HxQe3",errorInput:"-esm-patient-registration__input__errorInput___aW2qL",errorMessage:"-esm-patient-registration__input__errorMessage___cbdW2",dummyData:"-esm-patient-registration__input__dummyData___GFQGF",IDInput:"-esm-patient-registration__input__IDInput___6B3+s",trashCan:"-esm-patient-registration__input__trashCan___usc53"};const s=r},7195:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(1799),i=t.n(a),o=t(2609),r=t.n(o)()(i());r.push([e.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__patient-registration__title___d6s20{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__patient-registration__submit___S6frc{width:250px}.-esm-patient-registration__patient-registration__submit___S6frc:hover{cursor:pointer}.-esm-patient-registration__patient-registration__cancelButton___2-E\\+5{width:11.688rem}.-esm-patient-registration__patient-registration__submitButton___Ps1do{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__patient-registration__infoGrid___2S1kw{width:100%;margin-bottom:40vh;margin-top:1rem}.-esm-patient-registration__patient-registration__label01___CxOgi{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__patient-registration__productiveHeading02___mBDux{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__patient-registration__space05___\\+IJfn{margin:1rem 0 1rem 0}.-esm-patient-registration__patient-registration__formContainer___ydkLz{display:flex;width:100%}.-esm-patient-registration__patient-registration__stickyColumn___2G55G{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__patient-registration__touchTarget___KxfOv a:active{color:#161616}.-esm-patient-registration__patient-registration__linkName___Ukv7z{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__patient-registration__linkName___Ukv7z:active{text-decoration:none;color:#161616}.-esm-patient-registration__patient-registration__linkName___Ukv7z:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__patient-registration__main___eiIwY{background-color:#fff}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/patient-registration/patient-registration.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,gEACE,kCAAA,CAGF,iEACE,WAAA,CAGF,uEACE,cAAA,CAGF,wEACE,eAAA,CAGF,uEACE,kBAAA,CACA,eAAA,CACA,aAAA,CAGF,mEACE,UAAA,CACA,kBAAA,CACA,eAAA,CAGF,kEC+eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDlqBxB,eEHmB,CFInB,kBEJmB,CFKnB,aDjCM,CCoCR,8ECweI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD3pBxB,aDtCM,CCuCN,cAAA,CAGF,mEACE,oBAAA,CAGF,wEACE,YAAA,CACA,UAAA,CAGF,uEACE,eAAA,CACA,eAAA,CAEA,QAAA,CAGF,+EACE,aDpDe,CCuDjB,mEACE,aDzDc,CC0Dd,gBAAA,CACA,cAAA,CACA,eAAA,CAEA,0EACE,oBAAA,CACA,aD/Da,CCkEf,yEACE,oBAAA,CACA,aDpEa,CCqEb,cAAA,CAIJ,+DACE,qBAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n",'@import "~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles";\n@import "~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing";\n@import "~@openmrs/esm-styleguide/src/vars";\n\n.title {\n  color: var(--omrs-color-brand-teal);\n}\n\n.submit {\n  width: 250px;\n}\n\n.submit:hover {\n  cursor: pointer;\n}\n\n.cancelButton {\n  width: 11.688rem;\n}\n\n.submitButton {\n  margin-bottom: 1rem;\n  width: 11.688rem;\n  display: block;\n}\n\n.infoGrid {\n  width: 100%;\n  margin-bottom: 40vh;\n  margin-top: 1rem;\n}\n\n.label01 {\n  @include carbon--type-style("label-01");\n  margin-top: $spacing-05;\n  margin-bottom: $spacing-05;\n  color: $ui-04;\n}\n\n.productiveHeading02 {\n  @include carbon--type-style("productive-heading-02");\n  color: $ui-04;\n  cursor: pointer;\n}\n\n.space05 {\n  margin: $spacing-05 0 $spacing-05 0;\n}\n\n.formContainer {\n  display: flex;\n  width: 100%;\n}\n\n.stickyColumn {\n  position: sticky;\n  margin-top: 1rem;\n  // 3rem for the nav height and 1rem for top margin\n  top: 4rem;\n}\n\n.touchTarget a:active {\n  color: $color-gray-100;\n}\n\n.linkName {\n  color: $color-gray-70;\n  line-height: 1.38;\n  font-size: 1rem;\n  font-weight: 600;\n\n  &:active {\n    text-decoration: none;\n    color: $color-gray-100;\n  }\n\n  &:hover {\n    text-decoration: none;\n    color: $color-gray-100;\n    cursor: pointer;\n  }\n}\n\n.main {\n  background-color: white;\n}\n\n',"//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n"],sourceRoot:""}]),r.locals={title:"-esm-patient-registration__patient-registration__title___d6s20",submit:"-esm-patient-registration__patient-registration__submit___S6frc",cancelButton:"-esm-patient-registration__patient-registration__cancelButton___2-E+5",submitButton:"-esm-patient-registration__patient-registration__submitButton___Ps1do",infoGrid:"-esm-patient-registration__patient-registration__infoGrid___2S1kw",label01:"-esm-patient-registration__patient-registration__label01___CxOgi",productiveHeading02:"-esm-patient-registration__patient-registration__productiveHeading02___mBDux",space05:"-esm-patient-registration__patient-registration__space05___+IJfn",formContainer:"-esm-patient-registration__patient-registration__formContainer___ydkLz",stickyColumn:"-esm-patient-registration__patient-registration__stickyColumn___2G55G",touchTarget:"-esm-patient-registration__patient-registration__touchTarget___KxfOv",linkName:"-esm-patient-registration__patient-registration__linkName___Ukv7z",main:"-esm-patient-registration__patient-registration__main___eiIwY"};const s=r},9299:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(1799),i=t.n(a),o=t(2609),r=t.n(o)()(i());r.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]),r.locals={};const s=r},4957:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(1799),i=t.n(a),o=t(2609),r=t.n(o)()(i());r.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]),r.locals={};const s=r},4045:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(1799),i=t.n(a),o=t(2609),r=t.n(o)()(i());r.push([e.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-registration__overlay__title___ovEFv{color:var(--omrs-color-brand-teal)}.-esm-patient-registration__overlay__submit___MEU04{width:250px}.-esm-patient-registration__overlay__submit___MEU04:hover{cursor:pointer}.-esm-patient-registration__overlay__cancelButton___Kuq8k{width:11.688rem}.-esm-patient-registration__overlay__submitButton___koip2{margin-bottom:1rem;width:11.688rem;display:block}.-esm-patient-registration__overlay__infoGrid___IR-lJ{width:100%;margin-bottom:40vh;margin-top:1rem}.-esm-patient-registration__overlay__label01___UFjWe{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;margin-top:1rem;margin-bottom:1rem;color:#8d8d8d}.-esm-patient-registration__overlay__productiveHeading02___0-7g8{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#8d8d8d;cursor:pointer}.-esm-patient-registration__overlay__space05___3-aCf{margin:1rem 0 1rem 0}.-esm-patient-registration__overlay__formContainer___0etfN{display:flex;width:100%}.-esm-patient-registration__overlay__stickyColumn___ZAq3J{position:sticky;margin-top:1rem;top:4rem}.-esm-patient-registration__overlay__touchTarget___eSQ3o a:active{color:#161616}.-esm-patient-registration__overlay__linkName___Kol4j{color:#525252;line-height:1.38;font-size:1rem;font-weight:600}.-esm-patient-registration__overlay__linkName___Kol4j:active{text-decoration:none;color:#161616}.-esm-patient-registration__overlay__linkName___Kol4j:hover{text-decoration:none;color:#161616;cursor:pointer}.-esm-patient-registration__overlay__main___pCgsu{background-color:#fff}.-esm-patient-registration__overlay__desktopOverlay___pTy0O{position:fixed;top:3rem;right:0;height:calc(100vh - 3rem);min-width:27rem;background-color:#fff;border-left:1px solid #a8a8a8;overflow:hidden;display:grid;grid-template-rows:auto 1fr auto;z-index:999}.-esm-patient-registration__overlay__tabletOverlay___\\+CQze{position:fixed;top:0;bottom:0;left:0;right:0;z-index:9999;background-color:#fff;overflow:hidden;padding-top:3rem;display:grid;grid-template-rows:1fr auto}.-esm-patient-registration__overlay__tabletOverlayHeader___omtl4 button{background-color:#005d5d !important}.-esm-patient-registration__overlay__tabletOverlayHeader___omtl4 .-esm-patient-registration__overlay__headerContent___S7vPL{color:#fff}.-esm-patient-registration__overlay__desktopHeader___X3NCa{display:flex;justify-content:space-between;align-items:center;background-color:#e0e0e0;border-bottom:1px solid #a8a8a8}.-esm-patient-registration__overlay__headerContent___S7vPL{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;padding:0 1rem;color:#161616}.-esm-patient-registration__overlay__closeButton___8Pcw1{background-color:#fff}.-esm-patient-registration__overlay__overlayContent___9V2UN{padding:1rem;overflow-y:auto}.-esm-patient-registration__overlay__buttonsGroup___5b3bz{align-self:end}.-esm-patient-registration__overlay__buttonsGroup___5b3bz button{max-width:unset !important}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/patient-registration/patient-registration.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss","webpack://./src/patient-registration/ui-components/overlay/overlay.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,mDACE,kCAAA,CAGF,oDACE,WAAA,CAGF,0DACE,cAAA,CAGF,0DACE,eAAA,CAGF,0DACE,kBAAA,CACA,eAAA,CACA,aAAA,CAGF,sDACE,UAAA,CACA,kBAAA,CACA,eAAA,CAGF,qDC+eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDlqBxB,eEHmB,CFInB,kBEJmB,CFKnB,aDjCM,CCoCR,iECweI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD3pBxB,aDtCM,CCuCN,cAAA,CAGF,qDACE,oBAAA,CAGF,2DACE,YAAA,CACA,UAAA,CAGF,0DACE,eAAA,CACA,eAAA,CAEA,QAAA,CAGF,kEACE,aDpDe,CCuDjB,sDACE,aDzDc,CC0Dd,gBAAA,CACA,cAAA,CACA,eAAA,CAEA,6DACE,oBAAA,CACA,aD/Da,CCkEf,4DACE,oBAAA,CACA,aDpEa,CCqEb,cAAA,CAIJ,kDACE,qBAAA,CGlFF,4DACE,cAAA,CACA,QD+CmB,CC9CnB,OAAA,CACA,yBAAA,CACA,eAAA,CACA,qBJPM,CIQN,6BAAA,CACA,eAAA,CACA,YAAA,CACA,gCAAA,CACA,WAAA,CAGF,4DACE,cAAA,CACA,KAAA,CACA,QAAA,CACA,MAAA,CACA,OAAA,CACA,YAAA,CACA,qBJtBM,CIuBN,eAAA,CACA,gBD0BmB,CCzBnB,YAAA,CACA,2BAAA,CAIA,wEACE,mCAAA,CAEF,4HACE,UJlCI,CIsCR,2DACE,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,wBJzCM,CI0CN,+BAAA,CAGF,2DFgeI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CEnpBxB,cAAA,CACA,aJ9CM,CIiDR,yDACE,qBJrDM,CIwDR,4DACE,YD3BmB,CC4BnB,eAAA,CAGF,0DACE,cAAA,CAGF,iEACE,0BAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n",'@import "~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles";\n@import "~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing";\n@import "~@openmrs/esm-styleguide/src/vars";\n\n.title {\n  color: var(--omrs-color-brand-teal);\n}\n\n.submit {\n  width: 250px;\n}\n\n.submit:hover {\n  cursor: pointer;\n}\n\n.cancelButton {\n  width: 11.688rem;\n}\n\n.submitButton {\n  margin-bottom: 1rem;\n  width: 11.688rem;\n  display: block;\n}\n\n.infoGrid {\n  width: 100%;\n  margin-bottom: 40vh;\n  margin-top: 1rem;\n}\n\n.label01 {\n  @include carbon--type-style("label-01");\n  margin-top: $spacing-05;\n  margin-bottom: $spacing-05;\n  color: $ui-04;\n}\n\n.productiveHeading02 {\n  @include carbon--type-style("productive-heading-02");\n  color: $ui-04;\n  cursor: pointer;\n}\n\n.space05 {\n  margin: $spacing-05 0 $spacing-05 0;\n}\n\n.formContainer {\n  display: flex;\n  width: 100%;\n}\n\n.stickyColumn {\n  position: sticky;\n  margin-top: 1rem;\n  // 3rem for the nav height and 1rem for top margin\n  top: 4rem;\n}\n\n.touchTarget a:active {\n  color: $color-gray-100;\n}\n\n.linkName {\n  color: $color-gray-70;\n  line-height: 1.38;\n  font-size: 1rem;\n  font-weight: 600;\n\n  &:active {\n    text-decoration: none;\n    color: $color-gray-100;\n  }\n\n  &:hover {\n    text-decoration: none;\n    color: $color-gray-100;\n    cursor: pointer;\n  }\n}\n\n.main {\n  background-color: white;\n}\n\n',"//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n","@import '../../patient-registration.scss';\n\n.desktopOverlay {\n  position: fixed;\n  top: $spacing-09;\n  right: 0;\n  height: calc(100vh - 3rem);\n  min-width: 27rem;\n  background-color: $ui-02;\n  border-left: 1px solid $text-03;\n  overflow: hidden;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  z-index: 999;\n}\n\n.tabletOverlay {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 9999;\n  background-color: $ui-02;\n  overflow: hidden;\n  padding-top: $spacing-09;\n  display: grid;\n  grid-template-rows: 1fr auto;\n}\n\n.tabletOverlayHeader {\n  button {\n    background-color: $brand-01 !important;\n  }\n  .headerContent {\n    color: $ui-02;\n  }\n}\n\n.desktopHeader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: $ui-03;\n  border-bottom: 1px solid $text-03;\n}\n\n.headerContent {\n  @include carbon--type-style(\"productive-heading-02\");\n  padding: 0 $spacing-05;\n  color: $ui-05;\n}\n\n.closeButton {\n  background-color: $ui-02;\n}\n\n.overlayContent {\n  padding: $spacing-05;\n  overflow-y: auto;\n}\n\n.buttonsGroup {\n  align-self: end;\n}\n\n.buttonsGroup button {\n  max-width: unset !important;\n}\n"],sourceRoot:""}]),r.locals={title:"-esm-patient-registration__overlay__title___ovEFv",submit:"-esm-patient-registration__overlay__submit___MEU04",cancelButton:"-esm-patient-registration__overlay__cancelButton___Kuq8k",submitButton:"-esm-patient-registration__overlay__submitButton___koip2",infoGrid:"-esm-patient-registration__overlay__infoGrid___IR-lJ",label01:"-esm-patient-registration__overlay__label01___UFjWe",productiveHeading02:"-esm-patient-registration__overlay__productiveHeading02___0-7g8",space05:"-esm-patient-registration__overlay__space05___3-aCf",formContainer:"-esm-patient-registration__overlay__formContainer___0etfN",stickyColumn:"-esm-patient-registration__overlay__stickyColumn___ZAq3J",touchTarget:"-esm-patient-registration__overlay__touchTarget___eSQ3o",linkName:"-esm-patient-registration__overlay__linkName___Kol4j",main:"-esm-patient-registration__overlay__main___pCgsu",desktopOverlay:"-esm-patient-registration__overlay__desktopOverlay___pTy0O",tabletOverlay:"-esm-patient-registration__overlay__tabletOverlay___+CQze",tabletOverlayHeader:"-esm-patient-registration__overlay__tabletOverlayHeader___omtl4",headerContent:"-esm-patient-registration__overlay__headerContent___S7vPL",desktopHeader:"-esm-patient-registration__overlay__desktopHeader___X3NCa",closeButton:"-esm-patient-registration__overlay__closeButton___8Pcw1",overlayContent:"-esm-patient-registration__overlay__overlayContent___9V2UN",buttonsGroup:"-esm-patient-registration__overlay__buttonsGroup___5b3bz"};const s=r}}]);
//# sourceMappingURL=916.js.map