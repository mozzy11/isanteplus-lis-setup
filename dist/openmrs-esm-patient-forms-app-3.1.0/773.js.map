{"version":3,"file":"773.js","mappings":"4PAAO,MAAMA,EAAgB,CAC3BC,KAAM,QACNC,KAAM,oCACNC,OAAQ,CAAEC,QAAS,EAAGC,KAAM,QAC5BC,MAAO,iB,uBCCT,MAAMC,EAAoBC,EAAAA,MAEpBC,EAAsB,CAC1B,mBAAoB,UAGtB,SAASC,IACP,MAAMC,EAAa,iCAEbC,EAAU,CACdC,YAAa,gBACbF,WAAAA,GAaF,OAVAG,EAAAA,EAAAA,oBAAmBH,EAAY,KAE/BI,EAAAA,EAAAA,qBAAoB,CAClB,CACEC,KAAO,GAAEC,OAAOC,8BAChBZ,MAAO,gBACPa,OAAS,GAAEF,OAAOC,2BAIf,CACLE,WAAY,CACV,CACEC,GAAI,+BACJC,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,+BAAwCX,GACtEY,KAAM,CACJlB,MAAO,cAETmB,QAAQ,EACRC,SAAS,GAEX,CACEL,GAAI,eACJnB,KAAM,uCACNyB,MAAO,EACPL,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,+HAA4CX,GAC1EY,KAAM,CACJI,WAAY,GAEdH,OAAQ,CACNI,WAAW,GAEbH,QAAS,CACPG,WAAW,IAGf,CACER,GAAI,yBACJM,MAAO,EACPzB,KAAMF,EAAcE,KACpBoB,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,+HAAqDX,GACnFa,OAAQ,CACNI,WAAW,GAEbH,QAAS,CACPG,WAAW,IAGf,CACER,GAAI,0BACJnB,KAAM,+BACNyB,MAAO,GACPL,MAAMQ,EAAAA,EAAAA,mBAAiBC,EAAAA,EAAAA,qBAAoB/B,GAAgBY,GAC3DY,KAAMxB,EACNyB,QAAQ,EACRC,SAAS,GAEX,CACEL,GAAI,qCACJnB,KAAM,gCACNoB,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,iFAAiEX,GAC/Fa,QAAQ,EACRC,SAAS,GAEX,CACEL,GAAI,gCACJnB,KAAM,0BACNoB,MAAMQ,EAAAA,EAAAA,mBAAiB,IC9EhB,YAAwE,IAA3C,KAAEE,EAAF,MAAQ1B,GD8EK,CAAE0B,KAAM,QAAS1B,MAAO,iBC7E/E,OACE,yBAAK2B,IAAKD,GACR,kBAAC,EAAAE,iBAAD,CACEC,GAAI,mCAA0CH,EAAQ,IAAGA,IAAS,IAClEI,UAAU,sBAET9B,IDuE4B+B,IAAgEzB,GAC7FY,KAAM,CACJvB,KAAM,QACNC,KAAM,iCAERuB,QAAQ,EACRC,SAAS,GAEX,CACEL,GAAI,2BACJnB,KAAM,gCACNoB,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,2FAAmDX,GACjFa,OAAQ,CACNa,uBAAuB,GAEzBZ,QAAS,CACPY,uBAAuB,Q,eEtGjC,IAAIC,EAAM,CACT,YAAa,CACZ,KACA,KAED,YAAa,CACZ,KACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMpB,EAAK6B,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,IAClCJ,EAAoBrB,KAG7BmB,EAAoBW,KAAO,IAAOC,OAAOD,KAAKZ,GAC9CC,EAAoBnB,GAAK,KACzBgC,EAAOC,QAAUd","sources":["webpack://@openmrs/esm-patient-forms-app/./src/dashboard.meta.tsx","webpack://@openmrs/esm-patient-forms-app/./src/index.ts","webpack://@openmrs/esm-patient-forms-app/./src/offline-forms/offline-tools-nav-link.component.tsx","webpack://@openmrs/esm-patient-forms-app//home/runner/work/openmrs-esm-patient-chart/openmrs-esm-patient-chart/packages/esm-patient-forms-app/translations|lazy|nonrecursive|/.json$/"],"sourcesContent":["export const dashboardMeta = {\n  name: 'forms',\n  slot: 'patient-chart-form-dashboard-slot',\n  config: { columns: 1, type: 'grid' },\n  title: 'Forms & Notes',\n};\n","import { defineConfigSchema, getAsyncLifecycle, getSyncLifecycle, registerBreadcrumbs } from '@openmrs/esm-framework';\nimport { createDashboardLink } from '@openmrs/esm-patient-common-lib';\nimport { dashboardMeta } from './dashboard.meta';\nimport OfflineToolsNavLink from './offline-forms/offline-tools-nav-link.component';\n\nconst importTranslation = require.context('../translations', false, /.json$/, 'lazy');\n\nconst backendDependencies = {\n  'webservices.rest': '^2.2.0',\n};\n\nfunction setupOpenMRS() {\n  const moduleName = '@openmrs/esm-patient-forms-app';\n\n  const options = {\n    featureName: 'patient-forms',\n    moduleName,\n  };\n\n  defineConfigSchema(moduleName, {});\n\n  registerBreadcrumbs([\n    {\n      path: `${window.spaBase}/offline-tools/forms`,\n      title: 'Offline forms',\n      parent: `${window.spaBase}/offline-tools`,\n    },\n  ]);\n\n  return {\n    extensions: [\n      {\n        id: 'patient-form-entry-workspace',\n        load: getAsyncLifecycle(() => import('./forms/form-entry.component'), options),\n        meta: {\n          title: 'Form Entry',\n        },\n        online: true,\n        offline: true,\n      },\n      {\n        id: 'forms-widget',\n        slot: 'patient-chart-summary-dashboard-slot',\n        order: 5,\n        load: getAsyncLifecycle(() => import('./forms/forms-overview.component'), options),\n        meta: {\n          columnSpan: 4,\n        },\n        online: {\n          isOffline: false,\n        },\n        offline: {\n          isOffline: true,\n        },\n      },\n      {\n        id: 'patient-form-dashboard',\n        order: 0,\n        slot: dashboardMeta.slot,\n        load: getAsyncLifecycle(() => import('./forms/forms-detailed-overview.component'), options),\n        online: {\n          isOffline: false,\n        },\n        offline: {\n          isOffline: true,\n        },\n      },\n      {\n        id: 'forms-summary-dashboard',\n        slot: 'patient-chart-dashboard-slot',\n        order: 12,\n        load: getSyncLifecycle(createDashboardLink(dashboardMeta), options),\n        meta: dashboardMeta,\n        online: true,\n        offline: true,\n      },\n      {\n        id: 'offline-tools-dashboard-forms-card',\n        slot: 'offline-tools-dashboard-cards',\n        load: getAsyncLifecycle(() => import('./offline-forms/offline-forms-overview-card.component'), options),\n        online: true,\n        offline: true,\n      },\n      {\n        id: 'offline-tools-page-forms-link',\n        slot: 'offline-tools-page-slot',\n        load: getSyncLifecycle(() => OfflineToolsNavLink({ page: 'forms', title: 'Offline forms' }), options),\n        meta: {\n          name: 'forms',\n          slot: 'offline-tools-page-forms-slot',\n        },\n        online: true,\n        offline: true,\n      },\n      {\n        id: 'offline-tools-page-forms',\n        slot: 'offline-tools-page-forms-slot',\n        load: getAsyncLifecycle(() => import('./offline-forms/offline-forms.component'), options),\n        online: {\n          canMarkFormsAsOffline: true,\n        },\n        offline: {\n          canMarkFormsAsOffline: false,\n        },\n      },\n    ],\n  };\n}\n\nexport { backendDependencies, importTranslation, setupOpenMRS };\n","import { ConfigurableLink } from '@openmrs/esm-framework';\nimport React from 'react';\n\ninterface OfflineToolsNavLinkProps {\n  page?: string;\n  title: string;\n}\n\nexport default function OfflineToolsNavLink({ page, title }: OfflineToolsNavLinkProps) {\n  return (\n    <div key={page}>\n      <ConfigurableLink\n        to={'${openmrsSpaBase}' + '/offline-tools' + (page ? `/${page}` : '')}\n        className=\"bx--side-nav__link\"\n      >\n        {title}\n      </ConfigurableLink>\n    </div>\n  );\n}\n","var map = {\n\t\"./en.json\": [\n\t\t3574,\n\t\t574\n\t],\n\t\"./fr.json\": [\n\t\t2757,\n\t\t757\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3979;\nmodule.exports = webpackAsyncContext;"],"names":["dashboardMeta","name","slot","config","columns","type","title","importTranslation","require","backendDependencies","setupOpenMRS","moduleName","options","featureName","defineConfigSchema","registerBreadcrumbs","path","window","spaBase","parent","extensions","id","load","getAsyncLifecycle","meta","online","offline","order","columnSpan","isOffline","getSyncLifecycle","createDashboardLink","page","key","ConfigurableLink","to","className","OfflineToolsNavLink","canMarkFormsAsOffline","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","keys","Object","module","exports"],"sourceRoot":""}