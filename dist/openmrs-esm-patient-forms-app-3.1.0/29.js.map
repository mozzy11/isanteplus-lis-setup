{"version":3,"file":"29.js","mappings":"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","sources":["webpack://@openmrs/esm-patient-forms-app/./src/constants.ts","webpack://@openmrs/esm-patient-forms-app/./src/core-html-forms.ts","webpack://@openmrs/esm-patient-forms-app/./src/hooks/use-forms.ts","webpack://@openmrs/esm-patient-forms-app/./src/offline-forms/offline-form-helpers.ts","webpack://@openmrs/esm-patient-forms-app/../../node_modules/carbon-components-react/es/components/SkeletonText/SkeletonText.js","webpack://@openmrs/esm-patient-forms-app/./src/offline-forms/offline-forms-overview-card.styles.scss?0f50","webpack://@openmrs/esm-patient-forms-app/../../node_modules/@carbon/icons-react/es/arrow--right/16.js","webpack://@openmrs/esm-patient-forms-app/./src/offline-forms/offline-forms-overview-card.component.tsx","webpack://@openmrs/esm-patient-forms-app/./src/offline-forms/use-offline-form-encounters.ts","webpack://@openmrs/esm-patient-forms-app/./src/offline-forms/offline-forms-overview-card.styles.scss","webpack://@openmrs/esm-patient-forms-app/../../node_modules/lodash-es/_baseToString.js","webpack://@openmrs/esm-patient-forms-app/../../node_modules/lodash-es/_arrayMap.js","webpack://@openmrs/esm-patient-forms-app/../../node_modules/lodash-es/escapeRegExp.js","webpack://@openmrs/esm-patient-forms-app/../../node_modules/lodash-es/toString.js","webpack://@openmrs/esm-patient-forms-app/../../node_modules/lodash-es/isSymbol.js"],"sourcesContent":["export const customFormRepresentation =\n  '(uuid,name,encounterType:(uuid,name),version,published,retired,resources:(uuid,name,dataType,valueReference))';\nexport const customEncounterRepresentation = `custom:(uuid,encounterDatetime,encounterType:(uuid,name),form:${customFormRepresentation}`;\n\nexport const formEncounterUrl = `/ws/rest/v1/form?v=custom:${customFormRepresentation}`;\n","interface HTMLForm {\n  formUuid: string;\n  formName: string;\n  formAppUrl: string;\n  UIPage: 'enterHtmlFormWithSimpleUi' | 'enterHtmlFormWithStandardUi';\n}\n\nexport const CoreHTMLForms: Array<HTMLForm> = [\n  {\n    formUuid: 'd2c7532c-fb01-11e2-8ff2-fd54ab5fdb2a',\n    formName: 'Admission (Simple)',\n    formAppUrl: 'simpleAdmission',\n    UIPage: 'enterHtmlFormWithStandardUi',\n  },\n  {\n    formUuid: 'b5f8ffd8-fbde-11e2-8ff2-fd54ab5fdb2a',\n    formName: 'Discharge (Simple)',\n    formAppUrl: 'simpleDischarge',\n    UIPage: 'enterHtmlFormWithStandardUi',\n  },\n  {\n    formUuid: 'a007bbfe-fbe5-11e2-8ff2-fd54ab5fdb2a',\n    formName: 'Transfer Within Hospital (Simple)',\n    formAppUrl: 'simpleTransfer',\n    UIPage: 'enterHtmlFormWithStandardUi',\n  },\n  {\n    formUuid: 'c75f120a-04ec-11e3-8780-2b40bef9a44b',\n    formName: 'Visit Note',\n    formAppUrl: 'simpleVisitNote',\n    UIPage: 'enterHtmlFormWithStandardUi',\n  },\n  {\n    formUuid: 'a000cb34-9ec1-4344-a1c8-f692232f6edd',\n    formName: 'Vitals',\n    formAppUrl: 'vitals',\n    UIPage: 'enterHtmlFormWithSimpleUi',\n  },\n];\n","import dayjs from 'dayjs';\nimport useSWR from 'swr';\nimport { openmrsFetch } from '@openmrs/esm-framework';\nimport { ListResponse, FormEncounter, EncounterWithFormRef, CompletedFormInfo } from '../types';\nimport { customEncounterRepresentation, formEncounterUrl } from '../constants';\nimport { isFormFullyCached } from '../offline-forms/offline-form-helpers';\n\nexport function useFormEncounters(cachedOfflineFormsOnly = false) {\n  return useSWR([formEncounterUrl, cachedOfflineFormsOnly], async () => {\n    const res = await openmrsFetch<ListResponse<FormEncounter>>(formEncounterUrl);\n    // Only show published forms\n    const forms = res.data?.results?.filter((form) => form.published) ?? [];\n\n    if (!cachedOfflineFormsOnly) {\n      return forms;\n    }\n\n    const offlineForms = await Promise.all(forms.map(async (form) => ((await isFormFullyCached(form)) ? form : null)));\n    return offlineForms.filter(Boolean);\n  });\n}\n\nexport function useEncountersWithFormRef(\n  patientUuid: string,\n  startDate: Date = dayjs(new Date()).startOf('day').subtract(500, 'day').toDate(),\n  endDate: Date = dayjs(new Date()).endOf('day').toDate(),\n) {\n  const url = `/ws/rest/v1/encounter?v=${customEncounterRepresentation}&patient=${patientUuid}&fromdate=${startDate.toISOString()}&todate=${endDate.toISOString()}`;\n  return useSWR(url, (url) => openmrsFetch<ListResponse<EncounterWithFormRef>>(url));\n}\n\nexport function useForms(patientUuid: string, startDate?: Date, endDate?: Date, cachedOfflineFormsOnly = false) {\n  const allFormsRes = useFormEncounters(cachedOfflineFormsOnly);\n  const encountersRes = useEncountersWithFormRef(patientUuid, startDate, endDate);\n  const pastEncounters = encountersRes.data?.data?.results ?? [];\n  const data = allFormsRes.data ? mapToFormCompletedInfo(allFormsRes.data, pastEncounters) : undefined;\n  // Note:\n  // `pastEncounters` is currently considered as optional (i.e. any errors are ignored) since it's only used for display\n  // and doesn't change any functional flows. This makes offline mode much easier to implement since the past encounters\n  // don't have to be cached regularly.\n  // If this ever becomes a problem for online mode (i.e. if an error should be rendered there when past encounters\n  // for determining filled out forms can't be loaded) this should ideally be conditionally controlled via a flag\n  // such that the current offline behavior doesn't change.\n\n  return {\n    data,\n    error: allFormsRes.error,\n    isValidating: allFormsRes.isValidating || encountersRes.isValidating,\n  };\n}\n\nfunction mapToFormCompletedInfo(\n  allForms: Array<FormEncounter>,\n  encounters: Array<EncounterWithFormRef>,\n): Array<CompletedFormInfo> {\n  return allForms.map((form) => {\n    const associatedEncounters = encounters\n      .filter((encounter) => encounter.form?.uuid === form?.uuid)\n      .sort((a, b) => new Date(b.encounterDatetime).getTime() - new Date(a.encounterDatetime).getTime());\n    const lastCompleted =\n      associatedEncounters.length > 0 ? new Date(associatedEncounters?.[0].encounterDatetime) : undefined;\n\n    return {\n      form,\n      associatedEncounters,\n      lastCompleted,\n    };\n  });\n}\n","import {\n  OmrsOfflineHttpHeaders,\n  omrsOfflineCachingStrategyHttpHeaderName,\n  openmrsFetch,\n  messageOmrsServiceWorker,\n} from '@openmrs/esm-framework';\nimport { formEncounterUrl } from '../constants';\nimport { CoreHTMLForms } from '../core-html-forms';\nimport { FormEncounter, FormEncounterResource } from '../types';\nimport escapeRegExp from 'lodash-es/escapeRegExp';\n\n/**\n * Returns whether the given form encounter is valid for offline mode and can be cached.\n * @param form The form encounter.\n */\nexport function isValidOfflineFormEncounter(form: FormEncounter) {\n  const isHtmlForm = CoreHTMLForms.some((htmlForm) => htmlForm.formUuid === form.uuid);\n  const hasJsonSchema = form.resources.some(isFormJsonSchema);\n  return !isHtmlForm && hasJsonSchema;\n}\n\n/**\n * Returns whether a form resource is a valid form JSON schema that can be utilized for the purpose\n * of offline mode.\n * @param formResource A resource of a form.\n */\nexport function isFormJsonSchema(formResource: FormEncounterResource) {\n  return formResource.dataType === 'AmpathJsonSchema' || formResource.name === 'JSON schema';\n}\n\nexport async function addFormToCache(form: FormEncounter) {\n  const urlsToCache = getCacheableFormUrls(form);\n  const headers: OmrsOfflineHttpHeaders = {\n    [omrsOfflineCachingStrategyHttpHeaderName]: 'network-first',\n  };\n\n  await Promise.allSettled(\n    urlsToCache.map(async (urlToCache) => {\n      await messageOmrsServiceWorker({\n        type: 'registerDynamicRoute',\n        pattern: escapeRegExp(urlToCache),\n        strategy: 'network-first',\n      });\n      await openmrsFetch(urlToCache, { headers });\n    }),\n  );\n}\n\nexport async function isFormFullyCached(form: FormEncounter) {\n  const expectedUrls = getCacheableFormUrls(form);\n  const cache = await caches.open('omrs-spa-cache-v1'); // TODO: Ideally add the cache name as const to esm-offline.\n  const keys = await cache.keys();\n  return expectedUrls.every((expectedUrl) => keys.some((key) => new RegExp(escapeRegExp(expectedUrl)).test(key.url)));\n}\n\nfunction getCacheableFormUrls(form: FormEncounter) {\n  // TODO: Enhance with URLs that are required for offline form-entry to work (on a per-form basis).\n  // \"Global\" data (i.e. data shared by forms) may or may not be added depending on how frequently it is updated.\n  // Doing so doesn't hurt though.\n  const clobDataResource = form.resources?.find(isFormJsonSchema);\n\n  const result = [\n    formEncounterUrl,\n    `/ws/rest/v1/form/${form.uuid}?v=full`,\n    clobDataResource ? `/ws/rest/v1/clobdata/${clobDataResource.valueReference}?v=full` : null,\n  ].filter(Boolean);\n\n  return result;\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"paragraph\", \"lineCount\", \"width\", \"heading\", \"className\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix';\nvar randoms = [0.973051493507435, 0.15334737213558558, 0.5671034553053769];\n\nfunction getRandomInt(min, max, n) {\n  return Math.floor(randoms[n % 3] * (max - min + 1)) + min;\n}\n\nvar SkeletonText = function SkeletonText(_ref) {\n  var _classNames;\n\n  var paragraph = _ref.paragraph,\n      lineCount = _ref.lineCount,\n      width = _ref.width,\n      heading = _ref.heading,\n      className = _ref.className,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var skeletonTextClasses = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton__text\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton__heading\"), heading), _defineProperty(_classNames, className, className), _classNames));\n  var widthNum = parseInt(width, 10);\n  var widthPx = width.includes('px');\n  var widthPercent = width.includes('%');\n\n  if (widthPercent && paragraph) {\n    var lines = [];\n\n    for (var i = 0; i < lineCount; i++) {\n      var randomWidth = getRandomInt(0, 75, i) + 'px';\n      lines.push( /*#__PURE__*/React.createElement(\"p\", _extends({\n        className: skeletonTextClasses,\n        style: {\n          width: \"calc(\".concat(width, \" - \").concat(randomWidth, \")\")\n        },\n        key: i\n      }, other)));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", null, lines);\n  }\n\n  if (widthPx && paragraph) {\n    var _lines = [];\n\n    for (var j = 0; j < lineCount; j++) {\n      var _randomWidth = getRandomInt(widthNum - 75, widthNum, j) + 'px';\n\n      _lines.push( /*#__PURE__*/React.createElement(\"p\", _extends({\n        className: skeletonTextClasses,\n        style: {\n          width: _randomWidth\n        },\n        key: j\n      }, other)));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", null, _lines);\n  }\n\n  return /*#__PURE__*/React.createElement(\"p\", _extends({\n    className: skeletonTextClasses,\n    style: {\n      width: width\n    }\n  }, other));\n};\n\nSkeletonText.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * generates skeleton text at a larger size\n   */\n  heading: PropTypes.bool,\n\n  /**\n   * the number of lines in a paragraph\n   */\n  lineCount: PropTypes.number,\n\n  /**\n   * will generate multiple lines of text\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * width (in px or %) of single line of text or max-width of paragraph lines\n   */\n  width: PropTypes.string\n};\nSkeletonText.defaultProps = {\n  paragraph: false,\n  width: '100%',\n  heading: false,\n  lineCount: 3\n};\nexport default SkeletonText;","\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./offline-forms-overview-card.styles.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./offline-forms-overview-card.styles.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * Copyright IBM Corp. 2019, 2020\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Code generated by @carbon/icon-build-helpers. DO NOT EDIT.\n */\nimport { _ as _objectWithoutProperties, I as Icon, a as _extends } from '../Icon-9ecdf98c.js';\nimport React from 'react';\nimport '@carbon/icon-helpers';\nimport 'prop-types';\n\nvar _path;\n\nvar _excluded = [\"children\"];\nvar ArrowRight16 = /*#__PURE__*/React.forwardRef(function ArrowRight16(_ref, ref) {\n  var children = _ref.children,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"currentColor\",\n    ref: ref\n  }, rest), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.3 3.7L13.1 7.5 1 7.5 1 8.5 13.1 8.5 9.3 12.3 10 13 15 8 10 3z\"\n  })), children);\n});\n\nexport { ArrowRight16 as default };\n","import { navigate } from '@openmrs/esm-framework';\nimport { Tile, Button, SkeletonText } from 'carbon-components-react';\nimport React, { ReactNode } from 'react';\nimport styles from './offline-forms-overview-card.styles.scss';\nimport ArrowRight16 from '@carbon/icons-react/es/arrow--right/16';\nimport { useTranslation } from 'react-i18next';\nimport { useValidOfflineFormEncounters } from './use-offline-form-encounters';\nimport useSWR from 'swr';\nimport { isFormFullyCached } from './offline-form-helpers';\n\nfunction useCountOfFormsAvailableOffline() {\n  const { data: forms } = useValidOfflineFormEncounters();\n  const key = forms ? ['offlineForms', 'count', ...forms.map((form) => form.uuid).sort()] : null;\n\n  return useSWR(forms ? 'foo' : null, async () => {\n    const isFormCachedResults = await Promise.all(forms.map((form) => isFormFullyCached(form)));\n    return isFormCachedResults.filter(Boolean).length;\n  });\n}\n\nconst OfflineFormsOverviewCard: React.FC = () => {\n  const { t } = useTranslation();\n  const { data: availableFormsCount, error } = useCountOfFormsAvailableOffline();\n\n  return (\n    <Tile light className={`${styles.overviewCard}`}>\n      <div className={styles.headerContainer}>\n        <h3 className={styles.productiveHeading01}>Forms</h3>\n        <Button\n          kind=\"ghost\"\n          renderIcon={ArrowRight16}\n          size=\"sm\"\n          onClick={() => navigate({ to: `\\${openmrsSpaBase}/offline-tools/forms` })}\n        >\n          {t('homeOverviewCardView', 'View')}\n        </Button>\n      </div>\n      <div className={styles.contentContainer}>\n        <HeaderedQuickInfo\n          header={t('offlineFormsOverviewCardAvailableOffline', 'Available offline')}\n          isLoading={!error && (availableFormsCount === undefined || availableFormsCount === null)}\n        >\n          {error ? 'Unknown' : availableFormsCount}\n        </HeaderedQuickInfo>\n      </div>\n    </Tile>\n  );\n};\n\nexport interface HeaderedQuickInfoProps {\n  header: string;\n  isLoading?: boolean;\n  children?: ReactNode;\n}\n\nconst HeaderedQuickInfo: React.FC<HeaderedQuickInfoProps> = ({ header, children, isLoading = false }) => {\n  return (\n    <div>\n      <h4 className={styles.label01}>{header}</h4>\n      {isLoading ? <SkeletonText heading /> : <span className={styles.productiveHeading04}>{children}</span>}\n    </div>\n  );\n};\n\nexport default OfflineFormsOverviewCard;\n","import { useFormEncounters } from '../hooks/use-forms';\nimport { isValidOfflineFormEncounter } from './offline-form-helpers';\n\n/**\n * Returns an `SWRResult` of those form encounters that work with offline mode.\n */\nexport function useValidOfflineFormEncounters() {\n  const formEncountersSwr = useFormEncounters();\n\n  return {\n    ...formEncountersSwr,\n    data: formEncountersSwr.data?.filter(isValidOfflineFormEncounter),\n  };\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-forms__offline-forms-overview-card-styles__productiveHeading01___h9b3-{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px;margin-bottom:.5rem}.-esm-patient-forms__offline-forms-overview-card-styles__productiveHeading03___EbRNO{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0;margin-bottom:.5rem}.-esm-patient-forms__offline-forms-overview-card-styles__productiveHeading04___yLA\\\\+Z{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-patient-forms__offline-forms-overview-card-styles__bodyLong01___TID\\\\+n{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-patient-forms__offline-forms-overview-card-styles__bodyShort01___6HN3Y{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.-esm-patient-forms__offline-forms-overview-card-styles__label01___IFe6D{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-patient-forms__offline-forms-overview-card-styles__overviewCard___hkU\\\\+l{border:1px solid #e0e0e0}.-esm-patient-forms__offline-forms-overview-card-styles__overviewCard___hkU\\\\+l .-esm-patient-forms__offline-forms-overview-card-styles__headerContainer___3Ip59{display:flex;justify-content:space-between;align-items:center}.-esm-patient-forms__offline-forms-overview-card-styles__overviewCard___hkU\\\\+l .-esm-patient-forms__offline-forms-overview-card-styles__contentContainer___\\\\+wgDc{display:flex;justify-content:space-between;margin-top:1rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/root.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\",\"webpack://./src/offline-forms/offline-forms-overview-card.styles.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,qFC4iBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CDhuBxB,mBEemB,CFZrB,qFCuiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CD3tBxB,mBEUmB,CFPrB,sFCkiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CDptB1B,6EC8hBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CDhtB1B,6EC0hBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CD5sB1B,yECshBI,gBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CEpuB1B,+EACE,wBAAA,CAEA,gKACE,YAAA,CACA,6BAAA,CACA,kBAAA,CAGF,kKACE,YAAA,CACA,6BAAA,CACA,eDiBiB\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import \\\"~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles\\\";\\n@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing\\\";\\n@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n\\n.productiveHeading01 {\\n  @include carbon--type-style(\\\"productive-heading-01\\\");\\n  margin-bottom: $spacing-03;\\n}\\n\\n.productiveHeading03 {\\n  @include carbon--type-style(\\\"productive-heading-03\\\");\\n  margin-bottom: $spacing-03;\\n}\\n\\n.productiveHeading04 {\\n  @include carbon--type-style(\\\"productive-heading-04\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\\n.bodyShort01 {\\n  @include carbon--type-style(\\\"body-short-01\\\");\\n}\\n\\n.label01 {\\n  @include carbon--type-style(\\\"label-01\\\");\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-13: 10rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12,\\n  $carbon--spacing-13\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-13\\n$spacing-13: $carbon--spacing-13 !default;\\n\",\"@import \\\"../root.scss\\\";\\n\\n.overviewCard {\\n  border: 1px solid $ui-03;\\n\\n  .headerContainer {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n  }\\n\\n  .contentContainer {\\n    display: flex;\\n    justify-content: space-between;\\n    margin-top: $spacing-05;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"productiveHeading01\": \"-esm-patient-forms__offline-forms-overview-card-styles__productiveHeading01___h9b3-\",\n\t\"productiveHeading03\": \"-esm-patient-forms__offline-forms-overview-card-styles__productiveHeading03___EbRNO\",\n\t\"productiveHeading04\": \"-esm-patient-forms__offline-forms-overview-card-styles__productiveHeading04___yLA+Z\",\n\t\"bodyLong01\": \"-esm-patient-forms__offline-forms-overview-card-styles__bodyLong01___TID+n\",\n\t\"bodyShort01\": \"-esm-patient-forms__offline-forms-overview-card-styles__bodyShort01___6HN3Y\",\n\t\"label01\": \"-esm-patient-forms__offline-forms-overview-card-styles__label01___IFe6D\",\n\t\"overviewCard\": \"-esm-patient-forms__offline-forms-overview-card-styles__overviewCard___hkU+l\",\n\t\"headerContainer\": \"-esm-patient-forms__offline-forms-overview-card-styles__headerContainer___3Ip59\",\n\t\"contentContainer\": \"-esm-patient-forms__offline-forms-overview-card-styles__contentContainer___+wgDc\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import toString from './toString.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nexport default escapeRegExp;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n"],"names":["customFormRepresentation","customEncounterRepresentation","formEncounterUrl","CoreHTMLForms","formUuid","formName","formAppUrl","UIPage","useFormEncounters","cachedOfflineFormsOnly","useSWR","async","forms","openmrsFetch","data","results","filter","form","published","Promise","all","map","isFormFullyCached","Boolean","useEncountersWithFormRef","patientUuid","startDate","dayjs","Date","startOf","subtract","toDate","endDate","endOf","url","toISOString","useForms","allFormsRes","encountersRes","pastEncounters","mapToFormCompletedInfo","undefined","error","isValidating","allForms","encounters","associatedEncounters","encounter","uuid","sort","a","b","encounterDatetime","getTime","lastCompleted","length","isValidOfflineFormEncounter","isHtmlForm","htmlForm","hasJsonSchema","resources","some","isFormJsonSchema","formResource","dataType","name","addFormToCache","urlsToCache","getCacheableFormUrls","headers","omrsOfflineCachingStrategyHttpHeaderName","allSettled","messageOmrsServiceWorker","type","pattern","escapeRegExp","urlToCache","strategy","expectedUrls","cache","caches","open","keys","every","expectedUrl","key","RegExp","test","clobDataResource","find","valueReference","_excluded","randoms","getRandomInt","min","max","n","Math","floor","SkeletonText","_ref","_classNames","paragraph","lineCount","width","heading","className","other","prefix","usePrefix","skeletonTextClasses","concat","widthNum","parseInt","widthPx","includes","lines","i","randomWidth","push","style","_lines","j","_randomWidth","propTypes","defaultProps","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","_path","ArrowRight16","ref","children","rest","_","I","height","viewBox","xmlns","fill","d","HeaderedQuickInfo","header","isLoading","styles","t","useTranslation","availableFormsCount","useValidOfflineFormEncounters","useCountOfFormsAvailableOffline","Tile","light","Button","kind","renderIcon","size","onClick","navigate","to","formEncountersSwr","___CSS_LOADER_EXPORT___","module","id","locals","symbolProto","symbolToString","toString","baseToString","value","isArray","array","iteratee","index","result","Array","isSymbol","call","reRegExpChar","reHasRegExpChar","source","string","replace"],"sourceRoot":""}