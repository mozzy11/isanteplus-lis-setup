"use strict";(self.webpackChunk_openmrs_esm_patient_forms_app=self.webpackChunk_openmrs_esm_patient_forms_app||[]).push([[29],{8394:(n,e,t)=>{t.d(e,{_V:()=>i,lA:()=>o});const a="(uuid,name,encounterType:(uuid,name),version,published,retired,resources:(uuid,name,dataType,valueReference))",i=`custom:(uuid,encounterDatetime,encounterType:(uuid,name),form:${a}`,o=`/ws/rest/v1/form?v=custom:${a}`},6780:(n,e,t)=>{t.d(e,{Z:()=>a});const a=[{formUuid:"d2c7532c-fb01-11e2-8ff2-fd54ab5fdb2a",formName:"Admission (Simple)",formAppUrl:"simpleAdmission",UIPage:"enterHtmlFormWithStandardUi"},{formUuid:"b5f8ffd8-fbde-11e2-8ff2-fd54ab5fdb2a",formName:"Discharge (Simple)",formAppUrl:"simpleDischarge",UIPage:"enterHtmlFormWithStandardUi"},{formUuid:"a007bbfe-fbe5-11e2-8ff2-fd54ab5fdb2a",formName:"Transfer Within Hospital (Simple)",formAppUrl:"simpleTransfer",UIPage:"enterHtmlFormWithStandardUi"},{formUuid:"c75f120a-04ec-11e3-8780-2b40bef9a44b",formName:"Visit Note",formAppUrl:"simpleVisitNote",UIPage:"enterHtmlFormWithStandardUi"},{formUuid:"a000cb34-9ec1-4344-a1c8-f692232f6edd",formName:"Vitals",formAppUrl:"vitals",UIPage:"enterHtmlFormWithSimpleUi"}]},4649:(n,e,t)=>{t.d(e,{cq:()=>p,MS:()=>u});var a=t(3565),i=t.n(a),o=t(9857),r=t(9035),s=t(8394),c=t(6423);function p(){let n=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return(0,o.ZP)([s.lA,n],(async()=>{const e=(await(0,r.openmrsFetch)(s.lA)).data?.results?.filter((n=>n.published))??[];return n?(await Promise.all(e.map((async n=>await(0,c.UB)(n)?n:null)))).filter(Boolean):e}))}function l(n){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i()(new Date).startOf("day").subtract(500,"day").toDate(),t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i()(new Date).endOf("day").toDate();const a=`/ws/rest/v1/encounter?v=${s._V}&patient=${n}&fromdate=${e.toISOString()}&todate=${t.toISOString()}`;return(0,o.ZP)(a,(n=>(0,r.openmrsFetch)(n)))}function u(n,e,t){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=p(a),o=l(n,e,t),r=o.data?.data?.results??[],s=i.data?f(i.data,r):void 0;return{data:s,error:i.error,isValidating:i.isValidating||o.isValidating}}function f(n,e){return n.map((n=>{const t=e.filter((e=>e.form?.uuid===n?.uuid)).sort(((n,e)=>new Date(e.encounterDatetime).getTime()-new Date(n.encounterDatetime).getTime())),a=t.length>0?new Date(t?.[0].encounterDatetime):void 0;return{form:n,associatedEncounters:t,lastCompleted:a}}))}},6423:(n,e,t)=>{t.d(e,{LD:()=>s,zX:()=>p,UB:()=>l});var a=t(9035),i=t(8394),o=t(6780),r=t(5);function s(n){const e=o.Z.some((e=>e.formUuid===n.uuid)),t=n.resources.some(c);return!e&&t}function c(n){return"AmpathJsonSchema"===n.dataType||"JSON schema"===n.name}async function p(n){const e=u(n),t={[a.omrsOfflineCachingStrategyHttpHeaderName]:"network-first"};await Promise.allSettled(e.map((async n=>{await(0,a.messageOmrsServiceWorker)({type:"registerDynamicRoute",pattern:(0,r.Z)(n),strategy:"network-first"}),await(0,a.openmrsFetch)(n,{headers:t})})))}async function l(n){const e=u(n),t=await caches.open("omrs-spa-cache-v1"),a=await t.keys();return e.every((n=>a.some((e=>new RegExp((0,r.Z)(n)).test(e.url)))))}function u(n){const e=n.resources?.find(c);return[i.lA,`/ws/rest/v1/form/${n.uuid}?v=full`,e?`/ws/rest/v1/clobdata/${e.valueReference}?v=full`:null].filter(Boolean)}},2029:(n,e,t)=>{t.r(e),t.d(e,{default:()=>V});var a=t(9035),i=t(7896),o=t(6666),r=t(2159),s=t(3980),c=t.n(s),p=t(9902),l=t.n(p),u=t(2779),f=t.n(u),d=t(330),g=["paragraph","lineCount","width","heading","className"],b=[.973051493507435,.15334737213558558,.5671034553053769];function h(n,e,t){return Math.floor(b[t%3]*(e-n+1))+n}var m=function(n){var e,t=n.paragraph,a=n.lineCount,s=n.width,c=n.heading,p=n.className,u=(0,r.Z)(n,g),b=(0,d.A)(),m=f()((e={},(0,o.Z)(e,"".concat(b,"--skeleton__text"),!0),(0,o.Z)(e,"".concat(b,"--skeleton__heading"),c),(0,o.Z)(e,p,p),e)),y=parseInt(s,10),$=s.includes("px");if(s.includes("%")&&t){for(var v=[],w=0;w<a;w++){var _=h(0,75,w)+"px";v.push(l().createElement("p",(0,i.Z)({className:m,style:{width:"calc(".concat(s," - ").concat(_,")")},key:w},u)))}return l().createElement("div",null,v)}if($&&t){for(var k=[],x=0;x<a;x++){var A=h(y-75,y,x)+"px";k.push(l().createElement("p",(0,i.Z)({className:m,style:{width:A},key:x},u)))}return l().createElement("div",null,k)}return l().createElement("p",(0,i.Z)({className:m,style:{width:s}},u))};m.propTypes={className:c().string,heading:c().bool,lineCount:c().number,paragraph:c().bool,width:c().string},m.defaultProps={paragraph:!1,width:"100%",heading:!1,lineCount:3};const y=m;var $=t(4350),v=t(7030),w=t(1354),_=t.n(w),k=t(1583),x=t.n(k),A=t(7378),z=t.n(A),B=t(5993),C=t.n(B),N=t(4154),L=t.n(N),M=t(8141),E=t.n(M),I=t(5201),S={};S.styleTagTransform=E(),S.setAttributes=C(),S.insert=z().bind(null,"head"),S.domAPI=x(),S.insertStyleElement=L(),_()(I.Z,S);const U=I.Z&&I.Z.locals?I.Z.locals:void 0;var D,Z=t(5495),T=["children"],H=l().forwardRef((function(n,e){var t=n.children,a=(0,Z._)(n,T);return l().createElement(Z.I,(0,Z.a)({width:16,height:16,viewBox:"0 0 16 16",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",ref:e},a),D||(D=l().createElement("path",{d:"M9.3 3.7L13.1 7.5 1 7.5 1 8.5 13.1 8.5 9.3 12.3 10 13 15 8 10 3z"})),t)})),F=t(4924),O=t(612),P=t(9857),q=t(6423);const W=n=>{let{header:e,children:t,isLoading:a=!1}=n;return l().createElement("div",null,l().createElement("h4",{className:U.label01},e),a?l().createElement(y,{heading:!0}):l().createElement("span",{className:U.productiveHeading04},t))},V=()=>{const{t:n}=(0,F.useTranslation)(),{data:e,error:t}=function(){const{data:n}=(0,O.K)();return n&&n.map((n=>n.uuid)).sort(),(0,P.ZP)(n?"foo":null,(async()=>(await Promise.all(n.map((n=>(0,q.UB)(n))))).filter(Boolean).length))}();return l().createElement($.n9,{light:!0,className:`${U.overviewCard}`},l().createElement("div",{className:U.headerContainer},l().createElement("h3",{className:U.productiveHeading01},"Forms"),l().createElement(v.Z,{kind:"ghost",renderIcon:H,size:"sm",onClick:()=>(0,a.navigate)({to:"${openmrsSpaBase}/offline-tools/forms"})},n("homeOverviewCardView","View"))),l().createElement("div",{className:U.contentContainer},l().createElement(W,{header:n("offlineFormsOverviewCardAvailableOffline","Available offline"),isLoading:!t&&null==e},t?"Unknown":e)))}},612:(n,e,t)=>{t.d(e,{K:()=>o});var a=t(4649),i=t(6423);function o(){const n=(0,a.cq)();return{...n,data:n.data?.filter(i.LD)}}},5201:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(1799),i=t.n(a),o=t(2609),r=t.n(o)()(i());r.push([n.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-forms__offline-forms-overview-card-styles__productiveHeading01___h9b3-{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px;margin-bottom:.5rem}.-esm-patient-forms__offline-forms-overview-card-styles__productiveHeading03___EbRNO{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0;margin-bottom:.5rem}.-esm-patient-forms__offline-forms-overview-card-styles__productiveHeading04___yLA\\+Z{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-patient-forms__offline-forms-overview-card-styles__bodyLong01___TID\\+n{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-patient-forms__offline-forms-overview-card-styles__bodyShort01___6HN3Y{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.-esm-patient-forms__offline-forms-overview-card-styles__label01___IFe6D{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-patient-forms__offline-forms-overview-card-styles__overviewCard___hkU\\+l{border:1px solid #e0e0e0}.-esm-patient-forms__offline-forms-overview-card-styles__overviewCard___hkU\\+l .-esm-patient-forms__offline-forms-overview-card-styles__headerContainer___3Ip59{display:flex;justify-content:space-between;align-items:center}.-esm-patient-forms__offline-forms-overview-card-styles__overviewCard___hkU\\+l .-esm-patient-forms__offline-forms-overview-card-styles__contentContainer___\\+wgDc{display:flex;justify-content:space-between;margin-top:1rem}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/root.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss","webpack://./src/offline-forms/offline-forms-overview-card.styles.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,qFC4iBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CDhuBxB,mBEemB,CFZrB,qFCuiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CD3tBxB,mBEUmB,CFPrB,sFCkiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CDptB1B,6EC8hBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CDhtB1B,6EC0hBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CD5sB1B,yECshBI,gBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CEpuB1B,+EACE,wBAAA,CAEA,gKACE,YAAA,CACA,6BAAA,CACA,kBAAA,CAGF,kKACE,YAAA,CACA,6BAAA,CACA,eDiBiB",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n",'@import "~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles";\n@import "~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing";\n@import "~@openmrs/esm-styleguide/src/vars";\n\n.productiveHeading01 {\n  @include carbon--type-style("productive-heading-01");\n  margin-bottom: $spacing-03;\n}\n\n.productiveHeading03 {\n  @include carbon--type-style("productive-heading-03");\n  margin-bottom: $spacing-03;\n}\n\n.productiveHeading04 {\n  @include carbon--type-style("productive-heading-04");\n}\n\n.bodyLong01 {\n  @include carbon--type-style("body-long-01");\n}\n\n.bodyShort01 {\n  @include carbon--type-style("body-short-01");\n}\n\n.label01 {\n  @include carbon--type-style("label-01");\n}\n',"//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-02: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-02: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-02: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  caption-02: $caption-02,\n  label-01: $label-01,\n  label-02: $label-02,\n  helper-text-01: $helper-text-01,\n  helper-text-02: $helper-text-02,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  // Otherwise remove token breakpoints\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-13: 10rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12,\n  $carbon--spacing-13\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-13\n$spacing-13: $carbon--spacing-13 !default;\n",'@import "../root.scss";\n\n.overviewCard {\n  border: 1px solid $ui-03;\n\n  .headerContainer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .contentContainer {\n    display: flex;\n    justify-content: space-between;\n    margin-top: $spacing-05;\n  }\n}\n'],sourceRoot:""}]),r.locals={productiveHeading01:"-esm-patient-forms__offline-forms-overview-card-styles__productiveHeading01___h9b3-",productiveHeading03:"-esm-patient-forms__offline-forms-overview-card-styles__productiveHeading03___EbRNO",productiveHeading04:"-esm-patient-forms__offline-forms-overview-card-styles__productiveHeading04___yLA+Z",bodyLong01:"-esm-patient-forms__offline-forms-overview-card-styles__bodyLong01___TID+n",bodyShort01:"-esm-patient-forms__offline-forms-overview-card-styles__bodyShort01___6HN3Y",label01:"-esm-patient-forms__offline-forms-overview-card-styles__label01___IFe6D",overviewCard:"-esm-patient-forms__offline-forms-overview-card-styles__overviewCard___hkU+l",headerContainer:"-esm-patient-forms__offline-forms-overview-card-styles__headerContainer___3Ip59",contentContainer:"-esm-patient-forms__offline-forms-overview-card-styles__contentContainer___+wgDc"};const s=r},5:(n,e,t)=>{t.d(e,{Z:()=>u});var a=t(187);var i=t(7885),o=t(2758),r=a.Z?a.Z.prototype:void 0,s=r?r.toString:void 0;const c=function n(e){if("string"==typeof e)return e;if((0,i.Z)(e))return function(n,e){for(var t=-1,a=null==n?0:n.length,i=Array(a);++t<a;)i[t]=e(n[t],t,n);return i}(e,n)+"";if((0,o.Z)(e))return s?s.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t};var p=/[\\^$.*+?()[\]{}|]/g,l=RegExp(p.source);const u=function(n){return(n=null==(e=n)?"":c(e))&&l.test(n)?n.replace(p,"\\$&"):n;var e}},2758:(n,e,t)=>{t.d(e,{Z:()=>o});var a=t(9001),i=t(3391);const o=function(n){return"symbol"==typeof n||(0,i.Z)(n)&&"[object Symbol]"==(0,a.Z)(n)}}}]);
//# sourceMappingURL=29.js.map