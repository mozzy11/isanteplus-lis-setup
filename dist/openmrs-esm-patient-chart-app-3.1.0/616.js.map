{"version":3,"file":"616.js","mappings":"iRAGIA,EAAY,CAAC,UAAW,WAAY,cAAe,QAAS,UAAW,YAAa,aAAc,eAYlGC,EAAS,EAAAC,SAAA,OAETC,EAAoB,SAA2BC,GAsBjD,IArBA,IAAIC,EAEAC,EAAUF,EAAKE,QACfC,EAAWH,EAAKG,SAChBC,EAAcJ,EAAKI,YACnBC,EAAQL,EAAKK,MACbC,EAAUN,EAAKM,QACfC,EAAYP,EAAKO,UACjBC,EAAaR,EAAKQ,WAClBC,EAAcT,EAAKS,YACnBC,GAAO,OAAyBV,EAAMJ,GAEtCe,EAA2B,IAAGJ,GAAYN,EAAM,IAAI,OAAgBA,EAAK,GAAGW,OAAOf,EAAQ,eAAe,IAAO,OAAgBI,EAAK,GAAGW,OAAOf,EAAQ,iBAAiB,IAAO,OAAgBI,EAAK,GAAGW,OAAOf,EAAQ,uBAAwBQ,IAAQ,OAAgBJ,EAAK,GAAGW,OAAOf,EAAQ,yBAA0BS,GAAUL,IAClUY,EAAYV,EACZW,EAAOC,MAAMF,GACbG,EAAeD,MAAME,KAAK,CAC5BC,OAAQd,IACP,SAAUe,EAAGC,GACd,OAAOA,KAGAC,EAAI,EAAGA,EAAIR,EAAWQ,IAC7BP,EAAKO,GAAkB,kBAAoB,KAAM,CAC/CC,IAAKD,GACJL,EAAaO,KAAI,SAAUC,GAC5B,OAAoB,kBAAoB,KAAM,CAC5CF,IAAKE,GACS,kBAAoB,OAAQ,WAIhD,OAAoB,kBAAoB,MAAO,CAC7CjB,UAAW,GAAGK,OAAOf,EAAQ,eAAee,OAAOf,EAAQ,2BAC1DW,EAA0B,kBAAoB,MAAO,CACtDD,UAAW,GAAGK,OAAOf,EAAQ,wBACf,kBAAoB,MAAO,CACzCU,UAAW,GAAGK,OAAOf,EAAQ,gCACd,kBAAoB,MAAO,CAC1CU,UAAW,GAAGK,OAAOf,EAAQ,uCACzB,KAAMY,EAA2B,kBAAoB,UAAW,CACpE,aAAc,qBACdF,UAAW,GAAGK,OAAOf,EAAQ,oBACf,kBAAoB,MAAO,CACzCU,UAAW,GAAGK,OAAOf,EAAQ,sBACf,kBAAoB,OAAQ,CAC1CU,UAAW,GAAGK,OAAOf,EAAQ,eAAee,OAAOf,EAAQ,UAAUe,OAAOf,EAAQ,iBAC/E,KAAmB,kBAAoB,SAAS,OAAS,CAC9DU,UAAWI,GACVD,GAAoB,kBAAoB,QAAS,KAAmB,kBAAoB,KAAM,KAAMM,EAAaO,KAAI,SAAUF,GAChI,IAAII,EAEJ,OAAoB,kBAAoB,KAAM,CAC5CH,IAAKD,GACJnB,EAAuB,kBAAoB,MAAO,CACnDK,UAAW,0BACoB,QAA7BkB,EAAavB,EAAQmB,UAA+B,IAAfI,OAAwB,EAASA,EAAWC,QAAuB,kBAAoB,OAAQ,YACvH,kBAAoB,QAAS,KAAMZ,MAGxDf,EAAkB4B,UAAY,CAI5BpB,UAAW,WAKXH,YAAa,WAMbE,QAAS,SAKTJ,QAAS,cAAoB,CAAC,UAAiB,UAAgB,CAC7DoB,IAAK,eAMPnB,SAAU,WAKVK,WAAY,SAKZC,YAAa,SAKbJ,MAAO,UAETN,EAAkB6B,aAAe,CAC/BzB,SAAU,EACVC,YAAa,EACbC,OAAO,EACPC,SAAS,EACTE,YAAY,EACZC,aAAa,GAEf,U,oRCtHIoB,EAAU,GAEdA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKnB,QAAe,KAAW,WAAiB,gBAAiBM,E,gNCAnE,MAsGA,EAtG4D,IAAqB,IAApB,YAAEC,GAAkB,EAC/E,MAAM,OAAKC,IAASC,EAAAA,EAAAA,kBACdC,EAASF,EAAKG,SAASC,cAAcC,QAAQ,IAAK,MAEhDC,KAAMC,EAAR,QAAoBC,EAApB,UAA6BC,IAAcC,EAAAA,EAAAA,IAAcX,GAEzDY,GAAqCC,EAAAA,EAAAA,UACzC,IAAM,CACJ,CAAE3B,IAAK,YAAaI,OAAQwB,EAAE,YAAa,eAC3C,CAAE5B,IAAK,YAAaI,OAAQwB,EAAE,OAAQ,SACtC,CAAE5B,IAAK,WAAYI,OAAQwB,EAAE,WAAY,aACzC,CAAE5B,IAAK,UAAWI,OAAQwB,EAAE,UAAW,YAAaC,QAAS,KAE/D,CAACD,IAGGE,GAAUH,EAAAA,EAAAA,UAAQ,IACfL,GAAYrB,KAAI,CAAC8B,EAAOjC,KAAR,CACrBkC,GAAK,GAAElC,IACPmC,UAAW,IAAIC,KAAKH,EAAMI,eAAeC,mBAAmBnB,EAAQ,CAAEoB,UAAW,WACjFC,UAAWP,EAAMO,UAAUC,QAC3BC,SAAUT,EAAMS,UAAUD,QAC1BE,QAASV,EAAMW,aACX,IAAIR,KAAKH,EAAMI,eAAeC,mBAAmBnB,EAAQ,CAAEoB,UAAW,WACtE,GACJN,MAAOA,OAER,CAACd,EAAQK,IAENqB,GAAcC,EAAAA,EAAAA,cAAY,MAC9BC,EAAAA,EAAAA,QAAO,+BAAgC,0BACtC,IAEGC,GAAsBF,EAAAA,EAAAA,cAAY,MACtCG,EAAAA,EAAAA,wBAAuB,8BACvBJ,MACC,CAACA,IAEJ,OAAInB,EACK,kBAAC,EAAD,CAAmBwB,KAAK,gBAE7BzB,EACK,kBAAC,EAAA0B,WAAD,CAAYC,MAAO3B,EAAS4B,YAAavB,EAAE,qBAAsB,sBAEtEN,GAAY1B,OAEZ,yBAAKX,UAAWmE,EAAAA,WACd,kBAACC,EAAA,GAAD,CAAWzE,QAAS8C,EAAYlC,KAAMsC,IACnC,QAAC,KAAEtC,EAAF,QAAQZ,EAAR,cAAiB0E,EAAjB,eAAgCC,EAAhC,YAAgDC,GAAjD,SACC,kBAACC,EAAA,EAAD,CAAgBC,MAAO9B,EAAE,aAAc,gBACrC,kBAAC+B,EAAA,EAAD,KAAWL,IAAX,CAA4BM,gBAAc,IACxC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGlF,EAAQqB,KAAKG,GACZ,kBAAC2D,EAAA,EACKR,EAAe,CACjBnD,OAAAA,EACA4D,WAAY5D,EAAO4D,aAGpB5D,EAAOA,UAGZ,kBAAC2D,EAAA,EAAD,QAGJ,kBAACE,EAAA,EAAD,KACGzE,EAAKS,KAAI,CAACiE,EAAKC,IACd,kBAACL,EAAA,EAAaN,EAAY,CAAEU,IAAAA,IACzBA,EAAIE,MAAMnE,KAAKoE,GACd,kBAACC,EAAA,EAAD,CAAWtE,IAAKqE,EAAKrC,IAAKqC,EAAKE,OAAOC,SAAWH,EAAKE,SAExD,kBAACD,EAAA,EAAD,CAAWrF,UAAU,yBACnB,kBAACwF,EAAA,EAAD,CAAcC,SAAO,EAACC,qBAAqB,cACzC,kBAACC,EAAA,EAAD,CAAkBC,QAAS/B,EAAqBgC,SAAUlD,EAAE,OAAQ,UACpE,kBAACgD,EAAA,EAAD,CACEC,QAAS,KACPE,EAAAA,gBAAAA,KAAqB,CACnBC,KAAMC,EAAAA,UAAAA,QACNC,UAAWpD,EAAQqC,GAAUpC,MAC7BoD,OAAQC,EAAAA,YAAAA,WAGZN,SAAUlD,EAAE,gBAAiB,gCAWjD,kBAACyD,EAAA,EAAD,CAAQpG,UAAWmE,EAAAA,OAAeyB,QAASlC,EAAa2C,KAAK,aAC1D1D,EAAE,SAAU,iBAnDrB,I,2ECnEK,SAAS2D,EAAUzE,GACxB,MASM,KAAEO,EAAF,MAAQ6B,EAAR,aAAesC,IAAiBC,EAAAA,EAAAA,IACnC,6BAA4B3E,yZAC7B4E,EAAAA,cAGF,MAAO,CACLrE,KAAMA,EAAOA,EAAKA,KAAKsE,QAAU,KACjCpE,QAAS2B,EACT1B,WAAYH,IAAS6B,EACrBsC,aAAAA,GAIG,SAAS/D,EAAcX,GAC5B,MAQM,KAAEO,EAAF,MAAQ6B,EAAR,aAAesC,IAAiBC,EAAAA,EAAAA,IACnC,6BAA4B3E,4SAC7B4E,EAAAA,cAGF,MAAO,CACLrE,KAAMA,EAAOA,EAAKA,KAAKsE,QAAU,KACjCpE,QAAS2B,EACT1B,WAAYH,IAAS6B,EACrBsC,aAAAA,GAoIG,SAASI,EAAUC,EAAkBC,GAC1C,IAAKD,IAAaC,EAChB,MAAO,GAGT,MAAM/F,EAAI8F,EAASE,OAAO,MACpBC,EAAmBC,SAASJ,EAASK,UAAU,EAAGnG,IAElDoG,EAA0BN,EAASE,OAAO,MAEhD,IAAIK,EAAgBP,EAASK,UAAUnG,GAEvC,GAAIoG,GAA2B,EAAG,CAChCC,EAAgBP,EAASK,UAAUnG,EAAGoG,GACtC,MAAMjG,EAAI2F,EAASK,UAAUC,EAA0B,GAAGJ,OAAO,MAGjE,MAAQ,GAAED,KAAcM,MACrBN,EAAaE,EAHcC,SAASJ,EAASQ,OAAOF,EAA0B,EAAGjG,OACzD2F,EAASK,UAAUC,EAA0B,EAAIjG,MAK5E,MAAQ,GAAE8F,EAAmBF,KAAcM,M,iEClM3CE,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOxE,GAAI,06FAA26F,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,wEAAwE,qFAAqF,kHAAkH,wHAAwH,mHAAmH,mHAAmH,wFAAwF,kDAAkD,MAAQ,GAAG,SAAW,u1CAAu1C,eAAiB,CAAC,8xCAA8xC,4sGAA4sG,6mEAA6mE,uiEAAuiE,igBAAigB,srnBAAsrnB,0mMAA0mM,imBAAumB,WAAa,MAExnxCsE,EAAwBG,OAAS,CAChC,OAAU,0DACV,UAAa,6DACb,SAAY,6DAEb","sources":["webpack://@openmrs/esm-patient-chart-app/../../node_modules/carbon-components-react/es/components/DataTableSkeleton/DataTableSkeleton.js","webpack://@openmrs/esm-patient-chart-app/./src/visit/past-visit-overview.scss?35a4","webpack://@openmrs/esm-patient-chart-app/./src/visit/past-visit-overview.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/visit/visits-widget/visit.resource.tsx","webpack://@openmrs/esm-patient-chart-app/./src/visit/past-visit-overview.scss"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"headers\", \"rowCount\", \"columnCount\", \"zebra\", \"compact\", \"className\", \"showHeader\", \"showToolbar\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cx from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar DataTableSkeleton = function DataTableSkeleton(_ref) {\n  var _cx;\n\n  var headers = _ref.headers,\n      rowCount = _ref.rowCount,\n      columnCount = _ref.columnCount,\n      zebra = _ref.zebra,\n      compact = _ref.compact,\n      className = _ref.className,\n      showHeader = _ref.showHeader,\n      showToolbar = _ref.showToolbar,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var dataTableSkeletonClasses = cx(className, (_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--data-table\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--data-table--zebra\"), zebra), _defineProperty(_cx, \"\".concat(prefix, \"--data-table--compact\"), compact), _cx));\n  var rowRepeat = rowCount;\n  var rows = Array(rowRepeat);\n  var columnsArray = Array.from({\n    length: columnCount\n  }, function (_, index) {\n    return index;\n  });\n\n  for (var i = 0; i < rowRepeat; i++) {\n    rows[i] = /*#__PURE__*/React.createElement(\"tr\", {\n      key: i\n    }, columnsArray.map(function (j) {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: j\n      }, /*#__PURE__*/React.createElement(\"span\", null));\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--skeleton \").concat(prefix, \"--data-table-container\")\n  }, showHeader ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--data-table-header\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--data-table-header__title\")\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--data-table-header__description\")\n  })) : null, showToolbar ? /*#__PURE__*/React.createElement(\"section\", {\n    \"aria-label\": \"data table toolbar\",\n    className: \"\".concat(prefix, \"--table-toolbar\")\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--toolbar-content\")\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--skeleton \").concat(prefix, \"--btn \").concat(prefix, \"--btn--sm\")\n  }))) : null, /*#__PURE__*/React.createElement(\"table\", _extends({\n    className: dataTableSkeletonClasses\n  }, rest), /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", null, columnsArray.map(function (i) {\n    var _headers$i;\n\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: i\n    }, headers ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bx--table-header-label\"\n    }, (_headers$i = headers[i]) === null || _headers$i === void 0 ? void 0 : _headers$i.header) : /*#__PURE__*/React.createElement(\"span\", null));\n  }))), /*#__PURE__*/React.createElement(\"tbody\", null, rows)));\n};\n\nDataTableSkeleton.propTypes = {\n  /**\n   * Specify an optional className to add.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the number of columns that you want to render in the skeleton state\n   */\n  columnCount: PropTypes.number,\n\n  /**\n   * Optionally specify whether you want the Skeleton to be rendered as a\n   * compact DataTable\n   */\n  compact: PropTypes.bool,\n\n  /**\n   * Optionally specify the displayed headers\n   */\n  headers: PropTypes.oneOfType([PropTypes.array, PropTypes.shape({\n    key: PropTypes.string\n  })]),\n\n  /**\n   * Specify the number of rows that you want to render in the skeleton state\n   */\n  rowCount: PropTypes.number,\n\n  /**\n   * Specify if the table header should be rendered as part of the skeleton.\n   */\n  showHeader: PropTypes.bool,\n\n  /**\n   * Specify if the table toolbar should be rendered as part of the skeleton.\n   */\n  showToolbar: PropTypes.bool,\n\n  /**\n   * Optionally specify whether you want the DataTable to be zebra striped\n   */\n  zebra: PropTypes.bool\n};\nDataTableSkeleton.defaultProps = {\n  rowCount: 5,\n  columnCount: 5,\n  zebra: false,\n  compact: false,\n  showHeader: true,\n  showToolbar: true\n};\nexport default DataTableSkeleton;","\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./past-visit-overview.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./past-visit-overview.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useMemo, useCallback } from 'react';\nimport {\n  Button,\n  DataTable,\n  DataTableSkeleton,\n  OverflowMenu,\n  OverflowMenuItem,\n  TableContainer,\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableCell,\n  DataTableHeader,\n} from 'carbon-components-react';\nimport { useTranslation } from 'react-i18next';\nimport { ErrorState, launchPatientWorkspace } from '@openmrs/esm-patient-common-lib';\nimport { detach, getStartedVisit, VisitMode, VisitStatus } from '@openmrs/esm-framework';\nimport { usePastVisits } from './visits-widget/visit.resource';\nimport styles from './past-visit-overview.scss';\n\ninterface PastVisitOverviewProps {\n  patientUuid: string;\n}\n\nconst PastVisitOverview: React.FC<PastVisitOverviewProps> = ({ patientUuid }) => {\n  const { t, i18n } = useTranslation();\n  const locale = i18n.language.toLowerCase().replace('_', '-');\n\n  const { data: pastVisits, isError, isLoading } = usePastVisits(patientUuid);\n\n  const headerData: Array<DataTableHeader> = useMemo(\n    () => [\n      { key: 'startDate', header: t('startDate', 'Start Date') },\n      { key: 'visitType', header: t('type', 'Type') },\n      { key: 'location', header: t('location', 'Location') },\n      { key: 'endDate', header: t('endDate', 'End Date'), colSpan: 2 },\n    ],\n    [t],\n  );\n\n  const rowData = useMemo(() => {\n    return pastVisits?.map((visit, index) => ({\n      id: `${index}`,\n      startDate: new Date(visit.startDatetime).toLocaleDateString(locale, { dateStyle: 'medium' }),\n      visitType: visit.visitType.display,\n      location: visit.location?.display,\n      endDate: visit.stopDatetime\n        ? new Date(visit.startDatetime).toLocaleDateString(locale, { dateStyle: 'medium' })\n        : '',\n      visit: visit,\n    }));\n  }, [locale, pastVisits]);\n\n  const handleClose = useCallback(() => {\n    detach('patient-chart-workspace-slot', 'past-visits-overview');\n  }, []);\n\n  const handleOpenVisitForm = useCallback(() => {\n    launchPatientWorkspace('start-visit-workspace-form');\n    handleClose();\n  }, [handleClose]);\n\n  if (isLoading) {\n    return <DataTableSkeleton role=\"progressbar\" />;\n  }\n  if (isError) {\n    return <ErrorState error={isError} headerTitle={t('pastVisitErrorText', 'Past Visit Error')} />;\n  }\n  if (pastVisits?.length) {\n    return (\n      <div className={styles.container}>\n        <DataTable headers={headerData} rows={rowData}>\n          {({ rows, headers, getTableProps, getHeaderProps, getRowProps }) => (\n            <TableContainer title={t('pastVisits', 'Past Visits')}>\n              <Table {...getTableProps()} useZebraStyles>\n                <TableHead>\n                  <TableRow>\n                    {headers.map((header) => (\n                      <TableHeader\n                        {...getHeaderProps({\n                          header,\n                          isSortable: header.isSortable,\n                        })}\n                      >\n                        {header.header}\n                      </TableHeader>\n                    ))}\n                    <TableHeader />\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {rows.map((row, rowIndex) => (\n                    <TableRow {...getRowProps({ row })}>\n                      {row.cells.map((cell) => (\n                        <TableCell key={cell.id}>{cell.value?.content ?? cell.value}</TableCell>\n                      ))}\n                      <TableCell className=\"bx--table-column-menu\">\n                        <OverflowMenu flipped selectorPrimaryFocus=\"option-two\">\n                          <OverflowMenuItem onClick={handleOpenVisitForm} itemText={t('edit', 'Edit')} />\n                          <OverflowMenuItem\n                            onClick={() => {\n                              getStartedVisit.next({\n                                mode: VisitMode.LOADING,\n                                visitData: rowData[rowIndex].visit,\n                                status: VisitStatus.ONGOING,\n                              });\n                            }}\n                            itemText={t('loadVisitInfo', 'Load Visit Info')}\n                          />\n                        </OverflowMenu>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n        <Button className={styles.button} onClick={handleClose} kind=\"secondary\">\n          {t('cancel', 'Cancel')}\n        </Button>\n      </div>\n    );\n  }\n};\n\nexport default PastVisitOverview;\n","import useSWR from 'swr';\nimport { openmrsFetch, OpenmrsResource, Visit } from '@openmrs/esm-framework';\n\nexport function useVisits(patientUuid: string) {\n  const customRepresentation =\n    'custom:(uuid,encounters:(uuid,form:(uuid,display),encounterDatetime,' +\n    'orders:full,' +\n    'obs:(uuid,concept:(uuid,display,conceptClass:(uuid,display)),' +\n    'display,groupMembers:(uuid,concept:(uuid,display),' +\n    'value:(uuid,display)),value),encounterType:(uuid,display),' +\n    'encounterProviders:(uuid,display,encounterRole:(uuid,display),' +\n    'provider:(uuid,person:(uuid,display)))),visitType:(uuid,name,display),startDatetime,patient';\n\n  const { data, error, isValidating } = useSWR<{ data: { results: Array<Visit> } }, Error>(\n    `/ws/rest/v1/visit?patient=${patientUuid}&v=${customRepresentation}`,\n    openmrsFetch,\n  );\n\n  return {\n    data: data ? data.data.results : null,\n    isError: error,\n    isLoading: !data && !error,\n    isValidating,\n  };\n}\n\nexport function usePastVisits(patientUuid: string) {\n  const customRepresentation =\n    'custom:(uuid,encounters:(uuid,encounterDatetime,' +\n    'form:(uuid,name),location:ref,' +\n    'encounterType:ref,encounterProviders:(uuid,display,' +\n    'provider:(uuid,display))),patient:(uuid,uuid),' +\n    'visitType:(uuid,name,display),attributes:(uuid,display,value),location:(uuid,name,display),startDatetime,' +\n    'stopDatetime)';\n\n  const { data, error, isValidating } = useSWR<{ data: { results: Array<Visit> } }, Error>(\n    `/ws/rest/v1/visit?patient=${patientUuid}&v=${customRepresentation}`,\n    openmrsFetch,\n  );\n\n  return {\n    data: data ? data.data.results : null,\n    isError: error,\n    isLoading: !data && !error,\n    isValidating,\n  };\n}\n\nexport interface Encounter {\n  uuid: string;\n  encounterDatetime: string;\n  encounterProviders: Array<{\n    uuid: string;\n    display: string;\n    encounterRole: {\n      uuid: string;\n      display: string;\n    };\n    provider: {\n      uuid: string;\n      person: {\n        uuid: string;\n        display: string;\n      };\n    };\n  }>;\n  encounterType: {\n    uuid: string;\n    display: string;\n  };\n  obs: Array<Observation>;\n  orders: Array<Order>;\n  form: OpenmrsResource;\n  patient: OpenmrsResource;\n}\n\nexport interface EncounterProvider {\n  uuid: string;\n  display: string;\n  encounterRole: {\n    uuid: string;\n    display: string;\n  };\n  provider: {\n    uuid: string;\n    person: {\n      uuid: string;\n      display: string;\n    };\n  };\n}\n\nexport interface Observation {\n  uuid: string;\n  concept: {\n    uuid: string;\n    display: string;\n    conceptClass: {\n      uuid: string;\n      display: string;\n    };\n  };\n  display: string;\n  groupMembers: null | Array<{\n    uuid: string;\n    concept: {\n      uuid: string;\n      display: string;\n    };\n    value: {\n      uuid: string;\n      display: string;\n    };\n  }>;\n  value: any;\n  obsDatetime: string;\n}\n\nexport interface Order {\n  uuid: string;\n  dateActivated: string;\n  dose: number;\n  doseUnits: {\n    uuid: string;\n    display: string;\n  };\n  drug: {\n    uuid: string;\n    name: string;\n    strength: string;\n  };\n  duration: number;\n  durationUnits: {\n    uuid: string;\n    display: string;\n  };\n  frequency: {\n    uuid: string;\n    display: string;\n  };\n  numRefills: number;\n  orderer: {\n    uuid: string;\n    person: {\n      uuid: string;\n      display: string;\n    };\n  };\n  orderType: {\n    uuid: string;\n    display: string;\n  };\n  route: {\n    uuid: string;\n    display: string;\n  };\n}\n\nexport interface Note {\n  concept: OpenmrsResource;\n  note: string;\n  provider: {\n    name: string;\n    role: string;\n  };\n  time: string;\n}\n\nexport interface OrderItem {\n  order: Order;\n  provider: {\n    name: string;\n    role: string;\n  };\n}\n\nexport function getDosage(strength: string, doseNumber: number) {\n  if (!strength || !doseNumber) {\n    return '';\n  }\n\n  const i = strength.search(/\\D/);\n  const strengthQuantity = parseInt(strength.substring(0, i));\n\n  const concentrationStartIndex = strength.search(/\\//);\n\n  let strengthUnits = strength.substring(i);\n\n  if (concentrationStartIndex >= 0) {\n    strengthUnits = strength.substring(i, concentrationStartIndex);\n    const j = strength.substring(concentrationStartIndex + 1).search(/\\D/);\n    const concentrationQuantity = parseInt(strength.substr(concentrationStartIndex + 1, j));\n    const concentrationUnits = strength.substring(concentrationStartIndex + 1 + j);\n    return `${doseNumber} ${strengthUnits} (${\n      (doseNumber / strengthQuantity) * concentrationQuantity\n    } ${concentrationUnits})`;\n  } else {\n    return `${strengthQuantity * doseNumber} ${strengthUnits}`;\n  }\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{padding:0;border:0;margin:0;font:inherit;font-size:100%;vertical-align:baseline}button,select,input,textarea{border-radius:0;font-family:inherit}input[type=text]::-ms-clear{display:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}body{line-height:1}sup{vertical-align:super}sub{vertical-align:sub}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:\\\"\\\"}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}button{margin:0}html{font-size:100%}body{font-weight:400;font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility}code{font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace}strong{font-weight:600}@media screen and (-ms-high-contrast: active){svg{fill:ButtonText}}h1{font-size:2.625rem;font-weight:300;line-height:1.199;letter-spacing:0}h2{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}h3{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}h4{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}h5{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}h6{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}p{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}a{color:#0f62fe}em{font-style:italic}@keyframes -esm-patient-chart__past-visit-overview__skeleton___7XdO4{0%{opacity:.3;transform:scaleX(0);transform-origin:left}20%{opacity:1;transform:scaleX(1);transform-origin:left}28%{transform:scaleX(1);transform-origin:right}51%{transform:scaleX(0);transform-origin:right}58%{transform:scaleX(0);transform-origin:right}82%{transform:scaleX(1);transform-origin:right}83%{transform:scaleX(1);transform-origin:left}96%{transform:scaleX(0);transform-origin:left}100%{opacity:.3;transform:scaleX(0);transform-origin:left}}.-esm-patient-chart__past-visit-overview__button___ClBSo{height:4rem;display:flex;align-content:flex-start;align-items:baseline;min-width:50%}.-esm-patient-chart__past-visit-overview__container___mk5fc{display:flex;flex-direction:column;justify-content:space-between}.omrs-breakpoint-gt-tablet .-esm-patient-chart__past-visit-overview__container___mk5fc{height:calc(100vh - 6rem)}.omrs-breakpoint-lt-desktop .-esm-patient-chart__past-visit-overview__container___mk5fc{height:calc(100vh - 3rem)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_css--reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_font-family.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/icons/mixins.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_helper-mixins.scss\",\"webpack://./src/visit/past-visit-overview.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCTE,2ZAiFE,SAAA,CACA,QAAA,CACA,QAAA,CACA,YAAA,CACA,cAAA,CACA,uBAAA,CAIF,6BAIE,eAAA,CACA,mBAAA,CAGF,4BACE,YAAA,CAIF,mFAYE,aAAA,CAGF,KACE,aAAA,CAGF,IACE,oBAAA,CAGF,IACE,kBAAA,CAGF,MAEE,eAAA,CAGF,aAEE,WAAA,CAGF,wDAIE,UAAA,CAGF,MACE,wBAAA,CACA,gBAAA,CAGF,EACE,qBAAA,CAIF,OACE,QAAA,CC3KJ,KACE,cAAA,CAGF,KC0CA,eAAA,CDvCE,gEAViB,CAWjB,iCAAA,CACA,kCAAA,CACA,iCAAA,CAGF,KACE,wGAhBiB,CAmBnB,OC6BA,eAAA,CCxDA,8CACE,IACE,eAAA,CAAA,CFkCJ,GGggBE,kBAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlrBxB,GG4fE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH9qBxB,GGwfE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH1qBxB,GGofE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CHtqBxB,GGgfE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlqBxB,GG4eE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CH9pBxB,EGweE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CH1pBxB,EAII,aAAA,CAMJ,GACE,iBAAA,CIkHF,qEACE,GACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,SAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,KACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAAA,CC3ON,yDACE,WAAA,CACA,YAAA,CACA,wBAAA,CACA,oBAAA,CACA,aAAA,CAGF,4DACE,YAAA,CACA,qBAAA,CACA,6BAAA,CAKA,uFACE,yBAAA,CAMF,wFACE,yBAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n@import './vendor/@carbon/elements/scss/type/reset';\\n@import './vendor/@carbon/elements/scss/icons/mixins';\\n\\n/// Resets default browser styling\\n/// @access public\\n/// @group global-reset\\n@mixin reset {\\n  @if variable-exists(css--reset) == false or $css--reset == false {\\n    box-sizing: border-box;\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    font-family: inherit;\\n    font-size: 100%;\\n    vertical-align: baseline;\\n\\n    *,\\n    *::before,\\n    *::after {\\n      box-sizing: inherit;\\n    }\\n  }\\n}\\n\\n@include exports('css--reset') {\\n  @if variable-exists(css--reset) == false or $css--reset == true {\\n    // http://cssreset.com/scripts/eric-meyer-reset-css/\\n    html,\\n    body,\\n    div,\\n    span,\\n    applet,\\n    object,\\n    iframe,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p,\\n    blockquote,\\n    pre,\\n    a,\\n    abbr,\\n    acronym,\\n    address,\\n    big,\\n    cite,\\n    code,\\n    del,\\n    dfn,\\n    em,\\n    img,\\n    ins,\\n    kbd,\\n    q,\\n    s,\\n    samp,\\n    small,\\n    strike,\\n    strong,\\n    sub,\\n    sup,\\n    tt,\\n    var,\\n    b,\\n    u,\\n    i,\\n    center,\\n    dl,\\n    dt,\\n    dd,\\n    ol,\\n    ul,\\n    li,\\n    fieldset,\\n    form,\\n    label,\\n    legend,\\n    table,\\n    caption,\\n    tbody,\\n    tfoot,\\n    thead,\\n    tr,\\n    th,\\n    td,\\n    article,\\n    aside,\\n    canvas,\\n    details,\\n    embed,\\n    figure,\\n    figcaption,\\n    footer,\\n    header,\\n    hgroup,\\n    menu,\\n    nav,\\n    output,\\n    ruby,\\n    section,\\n    summary,\\n    time,\\n    mark,\\n    audio,\\n    video {\\n      padding: 0;\\n      border: 0;\\n      margin: 0;\\n      font: inherit;\\n      font-size: 100%;\\n      vertical-align: baseline;\\n    }\\n\\n    // Chrome 62 fix\\n    button,\\n    select,\\n    input,\\n    textarea {\\n      border-radius: 0;\\n      font-family: inherit;\\n    }\\n\\n    input[type='text']::-ms-clear {\\n      display: none;\\n    }\\n\\n    /* HTML5 display-role reset for older browsers */\\n    article,\\n    aside,\\n    details,\\n    figcaption,\\n    figure,\\n    footer,\\n    header,\\n    hgroup,\\n    main,\\n    menu,\\n    nav,\\n    section {\\n      display: block;\\n    }\\n\\n    body {\\n      line-height: 1;\\n    }\\n\\n    sup {\\n      vertical-align: super;\\n    }\\n\\n    sub {\\n      vertical-align: sub;\\n    }\\n\\n    ol,\\n    ul {\\n      list-style: none;\\n    }\\n\\n    blockquote,\\n    q {\\n      quotes: none;\\n    }\\n\\n    blockquote::before,\\n    blockquote::after,\\n    q::before,\\n    q::after {\\n      content: '';\\n    }\\n\\n    table {\\n      border-collapse: collapse;\\n      border-spacing: 0;\\n    }\\n\\n    * {\\n      box-sizing: border-box;\\n    }\\n\\n    // Fix to remove added margins on buttons in safari (see #5155)\\n    button {\\n      margin: 0;\\n    }\\n\\n    @include carbon--type-reset;\\n    @include carbon--icons;\\n  }\\n}\\n\\n@include exports('css--default-type') {\\n  @if variable-exists(css--default-type) == false or $css--default-type == true\\n  {\\n    @include carbon--default-type;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/convert';\\n@import 'font-family';\\n@import 'styles';\\n\\n/// Include a type reset for a given body and mono font family\\n/// @param {String} $body-font-family [carbon--font-family('sans')] - The font family used on the `<body>` element\\n/// @param {String} $mono-font-family [carbon--font-family('mono')] - The font family used on elements that require mono fonts, like the `<code>` element\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-reset(\\n  // TODO: remove in next major release. This has been replaced with 100%\\n  $base-font-size: $carbon--base-font-size,\\n  $body-font-family: carbon--font-family('sans'),\\n  $mono-font-family: carbon--font-family('mono')\\n) {\\n  html {\\n    font-size: 100%;\\n  }\\n\\n  body {\\n    @include carbon--font-weight('regular');\\n\\n    font-family: $body-font-family;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-font-smoothing: antialiased;\\n    text-rendering: optimizeLegibility;\\n  }\\n\\n  code {\\n    font-family: $mono-font-family;\\n  }\\n\\n  strong {\\n    @include carbon--font-weight('semibold');\\n  }\\n}\\n\\n/// Include default type styles\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--default-type {\\n  h1 {\\n    @include carbon--type-style('productive-heading-06');\\n  }\\n\\n  h2 {\\n    @include carbon--type-style('productive-heading-05');\\n  }\\n\\n  h3 {\\n    @include carbon--type-style('productive-heading-04');\\n  }\\n\\n  h4 {\\n    @include carbon--type-style('productive-heading-03');\\n  }\\n\\n  h5 {\\n    @include carbon--type-style('productive-heading-02');\\n  }\\n\\n  h6 {\\n    @include carbon--type-style('productive-heading-01');\\n  }\\n\\n  p {\\n    @include carbon--type-style('body-long-02');\\n  }\\n\\n  a {\\n    @if global-variable-exists('carbon--theme') and\\n      map-has-key($carbon--theme, 'link-01')\\n    {\\n      color: map-get($carbon--theme, 'link-01');\\n    } @else {\\n      color: #0062fe;\\n    }\\n  }\\n\\n  em {\\n    font-style: italic;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\\n/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-families: (\\n  'mono':\\n    unquote(\\n      \\\"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\\\"\\n    ),\\n  'sans': unquote(\\\"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-condensed':\\n    unquote(\\\"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-hebrew':\\n    unquote(\\n      \\\"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\\\"\\n    ),\\n  'serif': unquote(\\\"'IBM Plex Serif', 'Georgia', Times, serif\\\"),\\n) !default;\\n\\n/// Get the font-family for an IBM Plex font\\n/// @param {String} $name\\n/// @return {String}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-family($name) {\\n  @return map-get($carbon--font-families, $name);\\n}\\n\\n/// Include the `font-family` definition for the given name in your selector\\n/// @param {String} $name\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-family($name) {\\n  font-family: carbon--font-family($name);\\n}\\n\\n/// Suggested font weights to be used in product\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-weights: (\\n  'light': 300,\\n  'regular': 400,\\n  'semibold': 600,\\n) !default;\\n\\n/// Retrieve the font-weight value for a given name\\n/// @param {String} $weight\\n/// @return {Number}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-weight($weight) {\\n  @return map-get($carbon--font-weights, $weight);\\n}\\n\\n/// Set the `font-weight` property with the value for a given name\\n/// @param {String} $weight\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-weight($weight) {\\n  font-weight: carbon--font-weight($weight);\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Makes SVGs accessible in high contrast mode\\n/// @link https://github.com/IBM/carbon-elements/issues/345#issuecomment-466577293 Carbon-elements #345\\n/// @access public\\n/// @group @carbon/icons\\n@mixin carbon--icons {\\n  @media screen and (-ms-high-contrast: active) {\\n    svg {\\n      fill: ButtonText;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n//----------------------------------------------\\n// Mixins\\n// ---------------------------------------------\\n//\\n//   Category             ||  Description\\n//   ===========================================\\n//   Misc                 ||  General helper @mixins\\n//   Deprecated           ||  Not used anymore\\n//   ===========================================\\n\\n//----------------------------------------------\\n// Misc\\n// ---------------------------------------------\\n\\n@import 'vars';\\n@import 'css--reset';\\n@import 'typography';\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n\\n/// Adds text overflow styling\\n/// @access public\\n/// @param {Number} $width [false] - Value of width if you want to set width, else nothing\\n/// @example @include text-overflow(300px);\\n/// @group global-helpers\\n@mixin text-overflow($width: false) {\\n  display: block;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n\\n  // apply a width if width parameter exists\\n  @if ($width) {\\n    width: $width;\\n  }\\n}\\n\\n/// Adds placeholder text color\\n/// @access public\\n/// @example @include placeholder-colors;\\n/// @group global-helpers\\n@mixin placeholder-colors {\\n  color: $text-05;\\n  opacity: 1;\\n}\\n\\n/// Adds box shadow\\n/// @access public\\n/// @example @include box-shadow;\\n/// @group global-helpers\\n@mixin box-shadow {\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\\n}\\n\\n/// Adds outline styles depending on specific type\\n/// @access public\\n/// @param {String} $type ['border'] - Type of outline from: `border`, `blurred`, `outline`, `invalid`, `reset`\\n/// @example @include focus-outline('outline');\\n/// @group global-helpers\\n@mixin focus-outline($type: 'border') {\\n  @if ($type == 'border') {\\n    outline: 1px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'blurred') {\\n    box-shadow: 0 0 0 3px $focus;\\n    outline: 1px solid transparent;\\n  }\\n\\n  @if ($type == 'outline') {\\n    outline: 2px solid $focus;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'outline-compat') {\\n    box-sizing: border-box;\\n    border: 2px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      border-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'invalid') {\\n    outline: 2px solid $support-01;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'reset') {\\n    outline: 2px solid transparent;\\n    outline-offset: -2px;\\n  }\\n}\\n\\n/// Adds rotational transformation\\n/// @access public\\n/// @param {Number} $deg - How many degrees to rotate\\n/// @param {Number} $speed - Speed of rotation\\n/// @param {Value} $origin [center] - `transform-origin`\\n/// @example @include rotate(90deg, 300ms);\\n/// @group global-helpers\\n@mixin rotate($deg, $speed, $origin: center) {\\n  transform: rotate($deg);\\n  transform-origin: $origin;\\n  transition: transform $speed;\\n}\\n\\n/// Adds styles to hide content\\n/// @access public\\n/// @group global-helpers\\n@mixin hidden {\\n  position: absolute;\\n  overflow: hidden;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  border: 0;\\n  margin: -1px;\\n  clip: rect(0, 0, 0, 0);\\n  visibility: inherit;\\n  white-space: nowrap;\\n}\\n\\n/// Resets button styles\\n/// @access public\\n/// @param {Bool} $width [true] - Sets width to 100% if true\\n/// @example @include button-reset($width: false);\\n/// @group global-helpers\\n@mixin button-reset($width: true) {\\n  @include reset;\\n\\n  display: inline-block;\\n  padding: 0;\\n  border: 0;\\n  appearance: none;\\n  background: none;\\n  cursor: pointer;\\n\\n  @if ($width == true) {\\n    width: 100%;\\n  }\\n\\n  &::-moz-focus-inner {\\n    border: 0;\\n  }\\n}\\n\\n/// Skeleton loading animation\\n/// @access public\\n/// @example @include skeleton;\\n/// @group global-helpers\\n@mixin skeleton {\\n  position: relative;\\n  padding: 0;\\n  border: none;\\n  background: $skeleton-01;\\n  box-shadow: none;\\n  pointer-events: none;\\n\\n  &:hover,\\n  &:focus,\\n  &:active {\\n    border: none;\\n    cursor: default;\\n    outline: none;\\n  }\\n\\n  &::before {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    animation: 3000ms ease-in-out skeleton infinite;\\n    background: $skeleton-02;\\n    content: '';\\n    will-change: transform-origin, transform, opacity;\\n\\n    @media (prefers-reduced-motion: reduce) {\\n      animation: none;\\n    }\\n  }\\n}\\n\\n@include exports('skeleton') {\\n  @keyframes skeleton {\\n    0% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    20% {\\n      opacity: 1;\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    28% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    51% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    58% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    82% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    83% {\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    96% {\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    100% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n  }\\n}\\n\\n/// Windows HCM Mixin\\n/// @access public\\n/// @example @include high-contrast-mode;\\n/// @group global-helpers\\n/// We should set HCM styles at the end of each file to ensure they are not overridden\\n@mixin high-contrast-mode($type: '') {\\n  @media screen and (-ms-high-contrast: active),\\n    (forced-colors: active),\\n    (prefers-contrast) {\\n    @if ($type == 'icon-fill') {\\n      fill: ButtonText;\\n    }\\n\\n    @if ($type == 'focus') {\\n      color: Highlight;\\n      outline: 1px solid Highlight;\\n    }\\n\\n    @if ($type == 'outline') {\\n      outline: 1px solid transparent;\\n    }\\n\\n    @if ($type == 'disabled') {\\n      color: GrayText;\\n      fill: GrayText;\\n    }\\n\\n    @content;\\n  }\\n}\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/mixins\\\";\\n\\n.button {\\n  height: 4rem;\\n  display: flex;\\n  align-content: flex-start;\\n  align-items: baseline;\\n  min-width: 50%;\\n}\\n\\n.container {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n}\\n\\n/* Desktop */\\n:global(.omrs-breakpoint-gt-tablet) {\\n  .container {\\n    height: calc(100vh - 6rem);\\n  }\\n}\\n\\n/* Tablet */\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .container {\\n    height: calc(100vh - 3rem);\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"button\": \"-esm-patient-chart__past-visit-overview__button___ClBSo\",\n\t\"container\": \"-esm-patient-chart__past-visit-overview__container___mk5fc\",\n\t\"skeleton\": \"-esm-patient-chart__past-visit-overview__skeleton___7XdO4\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["_excluded","prefix","settings","DataTableSkeleton","_ref","_cx","headers","rowCount","columnCount","zebra","compact","className","showHeader","showToolbar","rest","dataTableSkeletonClasses","concat","rowRepeat","rows","Array","columnsArray","from","length","_","index","i","key","map","j","_headers$i","header","propTypes","defaultProps","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","patientUuid","i18n","useTranslation","locale","language","toLowerCase","replace","data","pastVisits","isError","isLoading","usePastVisits","headerData","useMemo","t","colSpan","rowData","visit","id","startDate","Date","startDatetime","toLocaleDateString","dateStyle","visitType","display","location","endDate","stopDatetime","handleClose","useCallback","detach","handleOpenVisitForm","launchPatientWorkspace","role","ErrorState","error","headerTitle","styles","DataTable","getTableProps","getHeaderProps","getRowProps","TableContainer","title","Table","useZebraStyles","TableHead","TableRow","TableHeader","isSortable","TableBody","row","rowIndex","cells","cell","TableCell","value","content","OverflowMenu","flipped","selectorPrimaryFocus","OverflowMenuItem","onClick","itemText","getStartedVisit","mode","VisitMode","visitData","status","VisitStatus","Button","kind","useVisits","isValidating","useSWR","openmrsFetch","results","getDosage","strength","doseNumber","search","strengthQuantity","parseInt","substring","concentrationStartIndex","strengthUnits","substr","___CSS_LOADER_EXPORT___","push","module","locals"],"sourceRoot":""}