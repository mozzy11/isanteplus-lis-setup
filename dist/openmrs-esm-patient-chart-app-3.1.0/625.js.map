{"version":3,"file":"625.js","mappings":"sNAiBO,SAASA,IACd,MAAMC,GAAaC,EAAAA,EAAAA,yBAAwBC,EAAAA,IAErCC,GAAQC,EAAAA,EAAAA,UAAQ,KACpB,GAA0B,IAAtBJ,EAAWK,OACb,MAAO,GACF,GAA0B,IAAtBL,EAAWK,OAAc,CAClC,MAAMC,EAAQC,EAAAA,eAAAA,WACd,OAAOC,EAAAA,EAAAA,IAASF,EAAMN,WAAWA,EAAW,KAE5C,MAAQ,eAAcA,EAAWK,YAElC,CAACL,IAEES,GAAcL,EAAAA,EAAAA,UAAQ,KAC1B,GAA0B,IAAtBJ,EAAWK,OACb,OAAOK,EAAAA,EAAAA,OACF,GAA0B,IAAtBV,EAAWK,OAAc,CAClC,MAAMC,EAAQC,EAAAA,eAAAA,WACd,OAAOI,EAAAA,EAAAA,IAAqBL,EAAMN,WAAWA,EAAW,QAEzD,CAACA,IAEEY,GAAiBC,EAAAA,EAAAA,cAAY,KAAMC,EAAAA,EAAAA,WAAUZ,EAAAA,KAA4B,IAE/E,MAAO,CACLa,OAAQf,EAAWK,OAAS,EAC5BO,eAAAA,EACAZ,WAAAA,EACAG,MAAAA,EACAM,YAAAA,K,4UCpCAO,EAAU,GAEdA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKnB,QAAe,KAAW,WAAiB,gBAAiBM,EC0EnE,EAjFgF,IAAe,IAAd,MAAEC,GAAY,EAC7F,MAAM,IAAQC,EAAAA,EAAAA,kBACRC,GAASC,EAAAA,EAAAA,iBACTC,EAAsB,WAAXF,GAEX,YAAEG,GAAgBL,EAAMM,QACxB,OAAEd,EAAF,MAAUZ,EAAV,eAAiBS,EAAjB,WAAiCZ,IAAeD,EAAAA,EAAAA,MAChD,WAAE+B,EAAF,iBAAcC,IAAqBC,EAAAA,EAAAA,uBACnC,KAAEC,GAASH,EAEXI,EAASD,IAASvB,EAAAA,EAAAA,OAClByB,EAAYF,IAASvB,EAAAA,EAAAA,UACrB0B,EAASH,IAASvB,EAAAA,EAAAA,OAElB2B,EAAQC,IAAAA,SACZ,KAAM,CAAG1B,eAAAA,EAAgBgB,YAAAA,EAAaD,SAAAA,KACtC,CAACf,EAAgBe,EAAUC,KAGtBW,EAAiBC,IAAsBC,EAAAA,EAAAA,WAAS,GAkBvD,OAhBAC,EAAAA,EAAAA,YAAU,KACJ1C,EAAWK,SAAW8B,GAAaC,GACrCI,GAAmB,IACVxC,EAAWK,OACpBmC,GAAmB,MAIpB,CAACxC,EAAWK,OAAQ6B,EAAQC,EAAWC,KAE1CO,EAAAA,EAAAA,mBAAkB5B,KAAW6B,EAAAA,EAAAA,IAAUnB,IAOrC,2BACEoB,UAAY,GAAEC,EAAAA,aAAoBX,EAAa,GAAEW,EAAAA,iBAAqBxB,KACpEiB,EACK,GAAEO,EAAAA,OACF,GAAEA,EAAAA,mBAIT,kBAACC,EAAA,EAAD,CACE,aAAW,kBACXF,UAAY,GAAEC,EAAAA,UAAiBX,EAAa,GAAEW,EAAAA,YAAsB,GAAEA,EAAAA,kBAEtE,kBAACE,EAAA,EAAD,CAAYC,OAAO,IAAI9C,GACvB,kBAAC+C,EAAA,EAAD,KACE,kBAAC,EAAAC,cAAD,CAAeC,kBAAmBC,EAAAA,GAAiC/C,MAAO+B,IAC1E,kBAACiB,EAAA,EAAD,CACEC,gBAAiBpB,EAAYqB,EAAE,WAAY,YAAcA,EAAE,WAAY,YACvEC,aAAW,EACXC,KAAK,QACLC,QAxBgB,KACZ5B,EAAZI,EAA6BzB,EAAAA,EAAAA,UAAmDA,EAAAA,EAAAA,YAwBxEkD,WAAYzB,EAAY0B,EAAAA,EAAaC,EAAAA,EACrCC,gBAAgB,WAElB,kBAACT,EAAA,EAAD,CACEC,gBAAiBC,EAAE,OAAQ,QAC3BC,aAAW,EACXC,KAAK,QACLC,QAAS,IAAM5B,EAAiBrB,EAAAA,EAAAA,QAChCkD,WAAYI,EAAAA,EACZD,gBAAgB,SAChBE,iBAAiB,UAIvB,kBAAC,EAAAd,cAAD,CACEN,UAAY,GAAEC,EAAAA,SAAgBX,IAAcR,EAAY,GAAEmB,EAAAA,YAAsB,GAAEA,EAAAA,iBAClFM,kBAAmBlD,EAAAA,GACnBI,MAAO+B,M,cCnFX,EAAU,GAEd,EAAQpB,kBAAoB,IAC5B,EAAQC,cAAgB,IAElB,EAAQC,OAAS,SAAc,KAAM,QAE3C,EAAQC,OAAS,IACjB,EAAQC,mBAAqB,IAEhB,IAAI,IAAS,GAKnB,QAAe,KAAW,WAAiB,gBAAiBC,E,cCf/D,EAAU,GAEd,EAAQL,kBAAoB,IAC5B,EAAQC,cAAgB,IAElB,EAAQC,OAAS,SAAc,KAAM,QAE3C,EAAQC,OAAS,IACjB,EAAQC,mBAAqB,IAEhB,IAAI,IAAS,GAKnB,QAAe,KAAW,WAAiB,gBAAiBC,E,cCrBnE,MAKA,EALyB,KACvB,MAAM,EAAEkC,IAAMhC,EAAAA,EAAAA,kBACd,OAAO,kBAAC0C,EAAA,EAAD,CAAerB,UAAWC,EAAAA,QAAgBqB,YAAc,GAAEX,EAAE,UAAW,oB,cCKjE,SAASY,EAAT,GAAqE,IAAjD,KAAEC,EAAF,QAAQC,EAAR,YAAiB1C,GAAgC,EAClF,MAAM,IAAE2C,IAAQC,EAAAA,EAAAA,eAAcC,EAAAA,IAExBnE,EAAQgC,IAAAA,SACZ,KAAM,CACJmC,SAAUF,EACVD,QAAAA,EACA1C,YAAAA,KAEF,CAAC2C,EAAK3C,EAAa0C,IAGrB,OAAO,kBAAC,EAAAnB,cAAD,CAAeuB,IAAKL,EAAM/D,MAAOA,EAAO8C,kBAAmBiB,I,aCbhE,EAAU,GAEd,EAAQpD,kBAAoB,IAC5B,EAAQC,cAAgB,IAElB,EAAQC,OAAS,SAAc,KAAM,QAE3C,EAAQC,OAAS,IACjB,EAAQC,mBAAqB,IAEhB,IAAI,IAAS,GAKnB,QAAe,KAAW,WAAiB,gBAAiBC,ECNpD,SAASqD,EAAT,GAAyE,IAAvD,KAAEN,EAAF,OAAQ5C,EAAR,QAAgB6C,EAAhB,YAAyB1C,GAA8B,EACtF,MAAMgD,GAAQC,EAAAA,EAAAA,sBACR,IAAEN,IAAQC,EAAAA,EAAAA,eAAcC,EAAAA,IAExBnE,EAAQgC,IAAAA,SACZ,KAAM,CACJmC,SAAUF,EACVD,QAAAA,EACA1C,YAAAA,KAEF,CAAC2C,EAAK3C,EAAa0C,IAGfQ,EAAWxC,IAAAA,aACf,CAAC+B,EAAuBU,KACtB,MAAM,WAAEC,EAAa,GAAMJ,EAAM5E,WAAW+E,EAAUE,aAAaC,KACnE,OAAO,yBAAKC,MAAO,CAAEC,WAAa,QAAOJ,MAAiBX,KAE5D,CAACO,EAAM5E,aAGHqF,EAlCR,SAA+B5D,GAE7B,MAAO,OAAO6D,OADU7D,GAAQ8D,SAAW,GACLC,YAgCVC,CAAsBhE,GAElD,OACE,kBAAC,EAAA0B,cAAD,CAAeuB,IAAKL,EAAMjB,kBAAmBiB,EAAMxB,UAAWC,EAAAA,UAAkBqC,MAAO,CAAEE,oBAAAA,IACvF,kBAAC,EAAAK,UAAD,CAAWpF,MAAOA,EAAOqF,KAAMb,K,cClCjC,EAAU,GAEd,EAAQ7D,kBAAoB,IAC5B,EAAQC,cAAgB,IAElB,EAAQC,OAAS,SAAc,KAAM,QAE3C,EAAQC,OAAS,IACjB,EAAQC,mBAAqB,IAEhB,IAAI,IAAS,GAKnB,QAAe,KAAW,WAAiB,gBAAiBC,ECN7DsE,EAAoC,IAA8B,IAA7B,KAAEvB,EAAF,KAAQwB,EAAR,SAAcC,GAAe,EACtE,MAAM9F,GAAaC,EAAAA,EAAAA,yBAAwBoE,GACrC0B,EAAmB/F,EAAW,GAC9BM,EAAQC,EAAAA,eAAAA,WAYd,OAVAmC,EAAAA,EAAAA,YAAU,KACR,IAAKmD,GAAQE,EAAkB,CAC7B,MACMhB,EADQxE,EAAAA,eAAAA,WACUP,WAAW+F,IACnCC,EAAAA,EAAAA,UAAS,CACPC,GAAK,GAAEH,KAAYf,EAAUG,KAAKW,YAGrC,CAACA,EAAME,EAAkBD,IAG1B,4BACGD,GACC7F,EAAWkG,KAAKC,IACd,MAAMpB,EAAYzE,EAAMN,WAAWmG,GACnC,OACE,wBAAIzB,IAAKyB,GACP,yBAAKtD,UAAckC,EAAUG,KAAKW,OAASA,EAAO,WAAa,cAC7D,kBAAC,EAAAO,iBAAD,CAAkBH,GAAK,GAAEH,KAAYf,EAAUG,KAAKW,QAClD,4BAAQhD,UAAU,kBAAiBrC,EAAAA,EAAAA,IAASuE,YAgD9D,EA7B8C,IAA+C,IAA9C,KAAEsB,EAAF,KAAQhC,EAAR,QAAcC,EAAd,YAAuB1C,EAAvB,IAAoC0E,GAAU,EAC3F,MAAM,IAAE/B,IAAQC,EAAAA,EAAAA,eAAcC,EAAAA,IACxBqB,EAAY,GAAES,OAAOC,UAAUjC,KAAO8B,IACtC/F,EAAQgC,IAAAA,SACZ,KAAM,CACJmC,SAAUF,EACVuB,SAAAA,EACAlE,YAAAA,EACA0C,QAAAA,EACAuB,KAAMS,KAER,CAAC1E,EAAa0C,EAASgC,EAAKR,EAAUvB,IAGxC,OACE,oCACE,yBAAK1B,UAAWC,EAAAA,cACd,kBAAC8C,EAAD,CAAUvB,KAAMA,EAAMwB,KAAMS,EAAKR,SAAUA,KAE7C,kBAAC,EAAA3C,cAAD,CACEN,UAAWC,EAAAA,gBACXM,kBAAmBiB,EACnB/D,MAAOA,EACPmG,OAASzG,GAAeA,EAAW0G,QAAQC,GAAQA,EAAIzB,KAAKW,OAASS,Q,eC3EzE,GAAU,GAEd,GAAQrF,kBAAoB,IAC5B,GAAQC,cAAgB,IAElB,GAAQC,OAAS,SAAc,KAAM,QAE3C,GAAQC,OAAS,IACjB,GAAQC,mBAAqB,IAEhB,IAAI,KAAS,IAKnB,SAAe,MAAW,YAAiB,iBAAiBC,EChBnE,SAASsF,GAASC,GAA8D,IAArChF,EAAqC,uDAAJ,GAC1E,MAAMiF,EAAS,GAAErC,EAAAA,MAAYoC,EAAOR,iBAAiBU,MAAM,KAU3D,OARAC,OAAOC,KAAKpF,GAAQqF,SAASxC,IAC3B,IAAK,IAAIyC,EAAI,EAAGA,EAAIL,EAAMzG,OAAQ8G,IACZ,MAAhBL,EAAMK,GAAG,IAAwC,IAA1BL,EAAMK,GAAGC,QAAQ1C,KAC1CoC,EAAMK,GAAKtF,EAAO6C,OAKjBoC,EAAMO,KAAK,KAUpB,MA8CA,GA9CgD,IAA6C,IAA5C,YAAEzF,EAAF,QAAe0C,EAAf,KAAwBuB,EAAxB,QAA8ByB,GAAc,EAC3F,MAAMpC,GAAOqC,EAAAA,EAAAA,sBAAqB,gCAC5BC,EAAaR,OAAOS,OAAOvC,GAC3BwC,EAAmBF,EAAW,GAC9BG,EAAYH,EAAWI,MAAMD,GAAcA,EAAUtB,OAASR,IAEpE,OAAK6B,EAEOC,EASyB,SAA1BA,EAAUE,OAAOC,KAExB,oCACGH,EAAUxH,OAAS,wBAAI0C,UAAWC,GAAAA,gBAAwB6E,EAAUxH,OACrE,kBAACwE,EAAD,CACEN,KAAMsD,EAAUtD,KAChB5C,OAAQkG,EAAUE,OAClBxB,KAAMsB,EAAUtB,KAChB/B,QAASA,EACT1C,YAAaA,KAIgB,SAA1B+F,EAAUE,OAAOC,KAExB,kBAAC,EAAD,CACEzD,KAAMsD,EAAUtD,KAChB5C,OAAQkG,EAAUE,OAClBxB,KAAMsB,EAAUtB,KAChBzE,YAAaA,EACb0C,QAASA,EACTgC,IAAKgB,IAIF,kBAAClD,EAAD,CAAYC,KAAMsD,EAAUtD,KAAMgC,KAAMsB,EAAUtB,KAAMzE,YAAaA,EAAa0C,QAASA,IAhChG,kBAAC,EAAAyD,SAAD,CACE9B,GAAIW,GAASc,EAAkB,CAC7B9F,YAAAA,EACA0F,QAAS,OANR,M,oCC3BP,GAAU,GAEd,GAAQrG,kBAAoB,IAC5B,GAAQC,cAAgB,IAElB,GAAQC,OAAS,SAAc,KAAM,QAE3C,GAAQC,OAAS,IACjB,GAAQC,mBAAqB,IAEhB,IAAI,KAAS,IAKnB,SAAe,MAAW,YAAiB,iBAAiBC,ECoCnE,GAlD0D,IAAwC,IAAvC,YAAE0G,EAAF,WAAeC,EAAf,MAA2B3H,GAAY,EAChG,MAAM,EAAEkD,IAAMhC,EAAAA,EAAAA,kBAER0G,GAAsBrH,EAAAA,EAAAA,cAAY,MACtCsH,EAAAA,EAAAA,wBAAuB,wBACvBF,MACC,CAACA,IAEEG,GAAsBvH,EAAAA,EAAAA,cAAY,MACtCsH,EAAAA,EAAAA,wBAAuB,8BACvBF,MACC,CAACA,IAEEI,EACY,SAAhB/H,GAAOwH,KAAkBtE,EAAE,eAAgB,oBAAsBA,EAAE,gBAAiB,mBAEhF8E,EACY,SAAhBhI,GAAOwH,KACHtE,EACE,mBACA,wGAEFA,EACE,oBACA,sHAGR,OACE,kBAAC+E,GAAA,GAAD,CAAeC,KAAMR,EAAaS,QAASR,GACzC,kBAAC,MAAD,KACE,0BAAMpF,UAAWC,GAAAA,QAAgBuF,IAEnC,kBAAC,MAAD,KACE,uBAAGxF,UAAWC,GAAAA,MAAcwF,IAE9B,kBAAC,MAAD,CAAazF,UAAWC,GAAAA,QACtB,kBAACQ,EAAA,EAAD,CAAQI,KAAK,YAAYC,QAASsE,GAC/BzE,EAAE,SAAU,WAEf,kBAACF,EAAA,EAAD,CAAQI,KAAK,YAAYC,QAASuE,GAC/B1E,EAAE,gBAAiB,oBAEtB,kBAACF,EAAA,EAAD,CAAQI,KAAK,UAAUC,QAASyE,GAC7B5E,EAAE,gBAAiB,uB,eC5C1B,GAAU,GAEd,GAAQvC,kBAAoB,IAC5B,GAAQC,cAAgB,IAElB,GAAQC,OAAS,SAAc,KAAM,QAE3C,GAAQC,OAAS,IACjB,GAAQC,mBAAqB,IAEhB,IAAI,KAAS,IAKnB,SAAe,MAAW,YAAiB,iBAAiBC,E,eCbnE,MAoEA,GApEsD,IAA8C,IAA7C,YAAEM,EAAF,YAAeoG,EAAf,WAA4BC,GAAiB,EAClG,MAAM,EAAEzE,EAAF,KAAKkF,IAASlH,EAAAA,EAAAA,kBACdmH,EAASD,EAAKE,SAASC,cAAcC,QAAQ,IAAK,MAClD,aAAEC,IAAiBC,EAAAA,EAAAA,UAASpH,GAoClC,OACE,kBAAC2G,GAAA,GAAD,CAAeC,KAAMR,EAAaS,QAASR,GACzC,kBAAC,MAAD,KACE,0BAAMpF,UAAWC,GAAAA,QAAgBU,EAAE,iBAAkB,sBAEvD,kBAAC,MAAD,CAAWX,UAAWC,GAAAA,MACpB,uBAAGD,UAAWC,GAAAA,aACZ,8BAAOU,EAAE,YAAa,eACtB,8BAAO,IAAIyF,KAAKF,GAAcG,eAAeC,mBAAmBR,EAAQ,CAAES,UAAW,aAEvF,uBAAGvG,UAAWC,GAAAA,aACZ,8BAAOU,EAAE,YAAa,eADxB,IAC8C,8BAAOuF,GAAcM,WAAWC,UAE9E,uBAAGzG,UAAWC,GAAAA,aACZ,8BAAOU,EAAE,gBAAiB,mBAD5B,IACsD,8BAAOuF,GAAcQ,UAAUD,WAGvF,kBAAC,MAAD,KACE,kBAAChG,EAAA,EAAD,CAAQI,KAAK,YAAYC,QAASsE,GAC/BzE,EAAE,SAAU,WAEf,kBAACF,EAAA,EAAD,CAAQI,KAAK,SAASC,QAvDJ,KACtB,MAAM6F,EAAkB,CACtBD,SAAUR,EAAaQ,SAASE,KAChCP,eAAeQ,EAAAA,EAAAA,WAAUX,EAAaG,eACtCG,UAAWN,EAAaM,UAAUI,KAClCE,aAAc,IAAIV,MAGdW,EAAkB,IAAIC,iBAC5BC,EAAAA,EAAAA,aAAYf,EAAaU,KAAMD,EAAiBI,GAC7CG,MAAKC,EAAAA,GAAAA,MACLC,WACEC,IACyB,MAApBA,EAASC,SACXC,EAAAA,gBAAAA,KAAqB,MACrBnC,KAEAoC,EAAAA,EAAAA,WAAU,CACR3G,KAAM,UACNS,YAAaX,EAAE,uBAAwB,yCAI5C8G,KACCC,EAAAA,EAAAA,kBAAiB,CACfpK,MAAOqD,EAAE,gBAAiB,6BAC1BE,KAAM,QACN8G,UAAU,EACVrG,YAAamG,GAAOG,eA4BrBjH,EAAE,WAAY,iBCnDzB,GAdgD,IAAqB,IAApB,YAAE5B,GAAkB,EACnE,MAAM,KAAEkG,EAAF,MAAQxH,GCHT,SAAwBsB,GAC7B,MAAO8I,EAAiBC,IAAsBlI,EAAAA,EAAAA,UAA0B,CAAEqF,KAAM,QAASxH,MAAO,KAWhG,OATAgC,IAAAA,WAAgB,KACd,MAAMsI,EAAWC,IACf,MAAM,KAAE/C,EAAF,MAAQxH,EAAQ,IAAOuK,EAAGC,OAChCH,EAAmB,CAAE7C,KAAAA,EAAMxH,MAAAA,KAG7B,OADAiG,OAAOwE,iBAAiB,eAAgBH,GACjC,IAAMrE,OAAOyE,oBAAoB,eAAgBJ,KACvD,CAAChJ,IAEG8I,EDTiBO,CAAerJ,GACjCqG,EAAa,KACjB1B,OAAO2E,cAAc,IAAIC,YAAY,eAAgB,CAAEL,OAAQ,CAAEhD,KAAM,aAGzE,OACE,oCACE,kBAAC,GAAD,CAAkBE,YAAqB,UAARF,EAAkBG,WAAYA,EAAY3H,MAAOA,IAChF,kBAAC,GAAD,CAAgB0H,YAAsB,QAATF,EAAgBlG,YAAaA,EAAaqG,WAAYA,M,2DEDlF,MA2DP,GAxDyD,IAAc,IAAb,KAAEO,GAAW,EACrE,MAAM,IAAQhH,EAAAA,EAAAA,kBACRC,GAASC,EAAAA,EAAAA,kBACPjB,YAAa2K,EAAf,OAA2BrK,IAAWhB,EAAAA,EAAAA,MACtC,YAAEsL,EAAF,iBAAetJ,EAAf,WAAiCD,IAAeE,EAAAA,EAAAA,sBAchDsJ,GAAO1I,EAAAA,EAAAA,IAAUnB,GACrB,2BAAOoB,UAAWC,GAAAA,EAAAA,cAChB,kBAAC,EAAAK,cAAD,CAAeC,kBAtBwB,2BAuBvC,kBAACE,EAAA,EAAD,CACEK,QAhBgB,KAChB5C,IACEe,EAAWG,OAASvB,EAAAA,EAAAA,WAEboB,EAAWG,OAASvB,EAAAA,EAAAA,OAD7BqB,EAAiBrB,EAAAA,EAAAA,QAIjBqB,EAAiBqJ,KAUjB7H,gBAAiBC,EAAE,iBAAkB,mBACrCX,UAAY,GAAEC,GAAAA,EAAAA,cAAqBuI,EAAc,GAAKvI,GAAAA,EAAAA,oBACtDY,KAAK,QACLD,aAAW,EACXM,gBAAgB,SAChBE,iBAAiB,OAEjB,oCACE,kBAAC,KAAD,MAAU,IACTnC,EAAWG,OAASvB,EAAAA,EAAAA,QAA+B,kBAAC,KAAD,CAAiBmC,UAAWC,GAAAA,EAAAA,mBAKtF,kBAACQ,EAAA,EAAD,CAAQT,UAAWC,GAAAA,EAAAA,WACjB,6BACE,kBAAC,KAAD,MACChB,EAAWG,OAASvB,EAAAA,EAAAA,QAA+B,kBAAC,KAAD,CAAiBmC,UAAWC,GAAAA,EAAAA,iBAElF,8BAAOU,EAAE,iBAAkB,qBAI/B,OACE,oCACG8H,EACD,kBAACC,GAAA,EAAD,CAAa1I,UAAWC,GAAAA,EAAAA,YAAoB0I,SAAUhD,EAAM,aAAW,UACrE,kBAAC,EAAArF,cAAD,CAAeC,kBArDW,mB,0BCN9B,GAAU,GAEd,GAAQnC,kBAAoB,IAC5B,GAAQC,cAAgB,IAElB,GAAQC,OAAS,SAAc,KAAM,QAE3C,GAAQC,OAAS,IACjB,GAAQC,mBAAqB,IAEhB,IAAI,KAAS,IAKnB,SAAe,MAAW,YAAiB,iBAAiBC,ECiDnE,GAnEwC,KACtC,MAAM,EAAEkC,IAAMhC,EAAAA,EAAAA,mBACPwG,EAAayD,IAAkBhJ,EAAAA,EAAAA,WAAS,IACxCW,EAAmBsI,IAAwBjJ,EAAAA,EAAAA,UAAS,IACrDzC,GAAaC,EAAAA,EAAAA,yBAAwBC,EAAAA,IAErCyL,GAAWvL,EAAAA,EAAAA,UAAQ,KACvB,GAA0B,IAAtBJ,EAAWK,OAAc,CAC3B,MAAMC,EAAQC,EAAAA,eAAAA,WACd,OAAOC,EAAAA,EAAAA,IAASF,EAAMN,WAAWA,EAAW,KAE5C,MAAO,KAER,CAACA,IAEE4L,EAAe,KACnBH,GAAgBI,IAAeA,KAyBjC,OAtBAnJ,EAAAA,EAAAA,YAAU,KACR,MAAMkI,EAAWC,IACf,MAAM,MAAEvK,EAAQ,IAAOuK,EAAGC,QACpB,kBAAE1H,GAAsB9C,EAC9BoL,EAAqBtI,GACjBpD,EAAWK,OAAS,EACtBoL,GAAe,IAEfK,EAAAA,EAAAA,QAAO5L,EAAAA,GAA2BkD,IAKtC,OADAmD,OAAOwE,iBAAiB,mBAAoBH,GACrC,IAAMrE,OAAOyE,oBAAoB,mBAAoBJ,KAC3D,CAAC5K,EAAWK,SASb,kBAACkI,GAAA,GAAD,CAAeC,KAAMR,EAAaS,QAASmD,GACzC,kBAAC,MAAD,CACEG,MAAOvI,EAAE,mBAAoB,qBAC7BrD,MAAOqD,EAAE,oBAAqB,mDAEhC,kBAAC,MAAD,KACE,uBAAGX,UAAWC,GAAAA,aACZ,kBAAC,EAAAkJ,MAAD,CAAOC,QAAQ,qBAAqBxE,OAAQ,CAAEkE,SAAUA,IAAxD,oFACoF,IAClF,gCAASA,GAFX,YAMJ,kBAAC,MAAD,KACE,kBAACrI,EAAA,EAAD,CAAQI,KAAK,YAAYC,QAASiI,GAC/BpI,EAAE,SAAU,WAEf,kBAACF,EAAA,EAAD,CAAQI,KAAK,SAASC,QAxBF,MACxB7C,EAAAA,EAAAA,WAAUZ,EAAAA,KACV4L,EAAAA,EAAAA,QAAO5L,EAAAA,GAA2BkD,GAClCwI,MAsBOpI,EAAE,aAAc,mB,mNCjD3B,MAgDA,GAhDwE,IAAe,IAAd,MAAEjC,GAAY,EACrF,MAAM,YAAEK,EAAF,KAAeiE,EAAf,QAAqByB,GAAY/F,EAAMM,QACvC,UAAEqK,EAAF,QAAa5H,IAAY6H,EAAAA,GAAAA,IAAqCvK,GAC9DwK,GAAcC,EAAAA,EAAAA,kBACd/L,GAAQF,EAAAA,EAAAA,UAAQ,KAAM,CAAGkE,QAAAA,EAAS1C,YAAAA,KAAgB,CAAC0C,EAAS1C,KAC5D,WAAEE,EAAF,YAAcuJ,IAAgBrJ,EAAAA,EAAAA,uBAEpCU,EAAAA,EAAAA,YAAU,MACR5B,EAAAA,EAAAA,WAAU,kCACT,CAACc,IAEJ,MAAM0K,EAAiB,qBAAoBxJ,EAAAA,iBAI3C,OAFAyJ,EAAAA,GAAAA,IAA0B3K,EAAawK,GAAaI,iBAAiB/C,MAGnE,0BAAM5G,UAAWyJ,GACdJ,EACC,kBAAC,EAAD,MAEA,oCACE,yBACErJ,UAAY,GAAEC,EAAAA,uBACZhB,EAAWG,OAASvB,EAAAA,EAAAA,QAA+B2K,EAAc,EAC7DvI,EAAAA,eACAA,EAAAA,mBAGN,kBAAC,EAAAK,cAAD,CAAeC,kBAAkB,qBACjC,+BACE,kBAAC,EAAAD,cAAD,CAAeC,kBAAkB,sBAAsB9C,MAAOA,IAC9D,kBAAC,EAAA6C,cAAD,CAAeC,kBAAkB,oBAAoB9C,MAAOA,KAE9D,yBAAKuC,UAAWC,EAAAA,MACd,yBAAKD,UAAWC,EAAAA,aACd,kBAAC,GAAD,MAAiBxC,EAAjB,CAAwBuF,KAAMA,EAAMyB,QAASA,KAC7C,kBAAC,GAAD,CAAa1F,YAAaA,IAC1B,kBAAC,GAAD,SAIN,kBAAC,GAAD,CAAY4G,MAAM,O,eCjDxB,GAAU,GAEd,GAAQvH,kBAAoB,IAC5B,GAAQC,cAAgB,IAElB,GAAQC,OAAS,SAAc,KAAM,QAE3C,GAAQC,OAAS,IACjB,GAAQC,mBAAqB,IAEhB,IAAI,KAAS,IAKnB,SAAe,MAAW,YAAiB,iBAAiBC,E,eCjBnE,MAaA,GAboD,KAClD,MAAMG,GAASC,EAAAA,EAAAA,iBAGf,OCTAgB,EAAAA,EAAAA,YAAU,MACRoJ,EAAAA,EAAAA,QAAO,gBAAiB,2BACjB,KAAMW,EAAAA,EAAAA,QAAO,gBAAiB,6BACpC,KDOD7J,EAAAA,EAAAA,IAAUnB,IACR,kBAACiL,GAAA,EAAD,CAASlB,UAAQ,EAAC,aAAW,OAAO3I,UAAWC,GAAAA,MAC7C,kBAAC,EAAAK,cAAD,CAAeC,kBAAkB,oB,cELrC,GAAU,GAEd,GAAQnC,kBAAoB,IAC5B,GAAQC,cAAgB,IAElB,GAAQC,OAAS,SAAc,KAAM,QAE3C,GAAQC,OAAS,IACjB,GAAQC,mBAAqB,IAEhB,IAAI,KAAS,IAKnB,SAAe,MAAW,YAAiB,iBAAiBC,E,eChBnE,MAAMqL,GAAmB,CAEvBC,gBAAiB,GAGJ,SAASC,KACtB,OACE,kBAAC,MAAD,CAAWC,MAAOH,IAChB,kBAAC,EAAAI,cAAD,CAAeC,SAAUC,EAAAA,IACvB,kBAAC,EAAAC,4BAAD,KACE,yBAAKrK,UAAWC,GAAAA,qBACd,kBAAC,GAAD,MACA,kBAAC,EAAAqK,MAAD,CAAOC,KAAMC,EAAAA,GAAeC,UAAWC,KACvC,kBAAC,EAAAJ,MAAD,CAAOC,KAAM3I,EAAAA,GAAU6I,UAAWE,U,eCtBvC,IAAK9M,E,0BAAAA,GAAAA,EAAAA,UAAAA,YAAAA,EAAAA,UAAAA,YAAAA,EAAAA,OAAAA,SAAAA,EAAAA,SAAAA,WAAAA,EAAAA,OAAAA,S,CAAAA,IAAAA,EAAAA,M,2ECEL,SAASkC,EAAUnB,GACxB,MAAkB,YAAXA,EAGF,SAASjB,EAASmG,GACvB,MAAMxG,EAAQwG,GAAKzB,MAAM/E,MAEzB,MAAqB,iBAAVA,EACFA,EACEA,GAA0B,iBAAVA,GAClBsN,EAAAA,EAAAA,eAAc9G,EAAI+G,WAAYvN,EAAMuE,IAAKvE,EAAMwN,SAGjDhH,EAAIN,KAGN,SAAS1F,EAAqBgG,GACnC,MAAMyE,EAAmCzE,EAAIzB,MAAM0I,WAEnD,MAA0B,iBAAfxC,EACFA,EAGF1K,EAAAA,EAAAA,Y,gECvBLmN,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAO5H,GAAI,8tBAA+tB,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,iDAAiD,MAAQ,GAAG,SAAW,8NAA8N,eAAiB,CAAC,gkBAAgkB,WAAa,MAEvqD0H,EAAwBG,OAAS,CAChC,UAAa,mDACb,UAAa,oDAEd,W,iECRIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAO5H,GAAI,+2DAAg3D,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,mDAAmD,MAAQ,GAAG,SAAW,kjBAAkjB,eAAiB,CAAC,s5CAAs5C,WAAa,MAEp+H0H,EAAwBG,OAAS,CAChC,aAAgB,wDAChB,WAAc,sDACd,gBAAmB,4DAEpB,W,gECTIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAO5H,GAAI,smGAAumG,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,wEAAwE,qFAAqF,kHAAkH,wHAAwH,mHAAmH,mHAAmH,wFAAwF,6BAA6B,MAAQ,GAAG,SAAW,+jDAA+jD,eAAiB,CAAC,8xCAA8xC,4sGAA4sG,6mEAA6mE,uiEAAuiE,igBAAigB,srnBAAsrnB,0mMAA0mM,goBAAgpB,WAAa,MAEhjyC0H,EAAwBG,OAAS,CAChC,oBAAuB,wDACvB,oBAAuB,wDACvB,oBAAuB,wDACvB,oBAAuB,wDACvB,oBAAuB,wDACvB,WAAc,+CACd,SAAY,8CAEb,W,iECbIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAO5H,GAAI,yMAA0M,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,wEAAwE,sDAAsD,gIAAgI,MAAQ,GAAG,SAAW,6FAA6F,eAAiB,CAAC,8xCAA8xC,gPAAoP,0z1FAA0z1F,WAAa,MAE1+5F0H,EAAwBG,OAAS,CAChC,QAAW,yDAEZ,W,iECPIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAO5H,GAAI,8nCAA+nC,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,6DAA6D,wHAAwH,MAAQ,GAAG,SAAW,mUAAmU,eAAiB,CAAC,+nCAAioC,6wHAA6wH,WAAa,MAE9nN0H,EAAwBG,OAAS,CAChC,KAAQ,4DACR,YAAe,mEACf,eAAkB,sEAClB,oBAAuB,2EACvB,eAAkB,sEAClB,gBAAmB,wEAEpB,W,iECZIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAO5H,GAAI,q3GAAs3G,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,wEAAwE,qFAAqF,kHAAkH,wHAAwH,mHAAmH,mHAAmH,wFAAwF,6BAA6B,MAAQ,GAAG,SAAW,+jDAA+jD,eAAiB,CAAC,8xCAA8xC,4sGAA4sG,6mEAA6mE,uiEAAuiE,igBAAigB,srnBAAsrnB,0mMAA0mM,goBAAgpB,WAAa,MAE/zyC0H,EAAwBG,OAAS,CAChC,oBAAuB,oFACvB,oBAAuB,oFACvB,oBAAuB,oFACvB,YAAe,4EACf,oBAAuB,oFACvB,oBAAuB,oFACvB,WAAc,2EACd,SAAY,0EAEb,W,iECdIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAO5H,GAAI,24GAA44G,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,wEAAwE,qFAAqF,kHAAkH,wHAAwH,mHAAmH,mHAAmH,wFAAwF,4BAA4B,oDAAoD,gIAAgI,MAAQ,GAAG,SAAW,isDAAisD,eAAiB,CAAC,8xCAA8xC,4sGAA4sG,6mEAA6mE,uiEAAuiE,igBAAigB,srnBAAsrnB,0mMAA0mM,+nBAA+oB,uQAA+Q,0z1FAA0z1F,WAAa,MAEltpI0H,EAAwBG,OAAS,CAChC,oBAAuB,gEACvB,oBAAuB,gEACvB,oBAAuB,gEACvB,oBAAuB,gEACvB,oBAAuB,gEACvB,WAAc,uDACd,eAAkB,2DAClB,SAAY,sDAEb,W,iECdIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAO5H,GAAI,6+HAA8+H,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,wEAAwE,qFAAqF,kHAAkH,wHAAwH,mHAAmH,mHAAmH,wFAAwF,4BAA4B,2DAA2D,gIAAgI,MAAQ,GAAG,SAAW,0wDAA0wD,eAAiB,CAAC,8xCAA8xC,4sGAA4sG,6mEAA6mE,uiEAAuiE,igBAAigB,srnBAAsrnB,0mMAA0mM,+nBAA+oB,sqBAAwqB,0z1FAA0z1F,WAAa,MAE7xrI0H,EAAwBG,OAAS,CAChC,oBAAuB,uEACvB,oBAAuB,uEACvB,KAAQ,wDACR,oBAAuB,uEACvB,oBAAuB,uEACvB,oBAAuB,uEACvB,WAAc,8DACd,SAAY,6DAEb,W,iECdIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAO5H,GAAI,siHAAuiH,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,wEAAwE,qFAAqF,kHAAkH,wHAAwH,mHAAmH,mHAAmH,wFAAwF,8DAA8D,gIAAgI,MAAQ,GAAG,SAAW,yrDAAyrD,eAAiB,CAAC,8xCAA8xC,4sGAA4sG,6mEAA6mE,uiEAAuiE,igBAAigB,srnBAAsrnB,0mMAA0mM,uyBAAizB,0z1FAA0z1F,WAAa,MAEtupI0H,EAAwBG,OAAS,CAChC,OAAU,0DACV,KAAQ,wDACR,YAAe,+DACf,YAAe,+DACf,YAAe,+DACf,WAAc,8DACd,WAAc,8DACd,SAAY,6DAEb,W,iECdIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAO5H,GAAI,ozFAAqzF,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,wEAAwE,qFAAqF,kHAAkH,wHAAwH,mHAAmH,mHAAmH,wFAAwF,gEAAgE,gIAAgI,MAAQ,GAAG,SAAW,+4CAA+4C,eAAiB,CAAC,8xCAA8xC,4sGAA4sG,6mEAA6mE,uiEAAuiE,igBAAigB,srnBAAsrnB,0mMAA0mM,wYAA0Y,0z1FAA0z1F,WAAa,MAErymI0H,EAAwBG,OAAS,CAChC,OAAU,4DACV,KAAQ,0DACR,OAAU,4DACV,SAAY,+DAEb,W,iECVIH,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAO5H,GAAI,k2JAAm2J,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,wEAAwE,qFAAqF,kHAAkH,wHAAwH,mHAAmH,mHAAmH,wFAAwF,4BAA4B,mDAAmD,gIAAgI,MAAQ,GAAG,SAAW,umEAAumE,eAAiB,CAAC,8xCAA8xC,4sGAA4sG,6mEAA6mE,uiEAAuiE,igBAAigB,srnBAAsrnB,0mMAA0mM,+nBAA+oB,4yCAA4yC,0z1FAA0z1F,WAAa,MAE3mvI0H,EAAwBG,OAAS,CAChC,oBAAuB,qEACvB,oBAAuB,qEACvB,oBAAuB,qEACvB,oBAAuB,qEACvB,oBAAuB,qEACvB,WAAc,4DACd,OAAU,wDACV,UAAa,2DACb,KAAQ,sDACR,KAAQ,sDACR,MAAS,uDACT,UAAa,2DACb,aAAgB,8DAChB,UAAa,2DACb,SAAY,2DAEb","sources":["webpack://@openmrs/esm-patient-chart-app/./src/hooks/useWorkspace.tsx","webpack://@openmrs/esm-patient-chart-app/./src/workspace/context-workspace.scss?5ac5","webpack://@openmrs/esm-patient-chart-app/./src/workspace/context-workspace.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/ui-components/patient-chart.component.scss?33cc","webpack://@openmrs/esm-patient-chart-app/./src/ui-components/loader.component.scss?7f77","webpack://@openmrs/esm-patient-chart-app/./src/ui-components/loader.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/view-components/custom-view.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/view-components/grid-view.css?84be","webpack://@openmrs/esm-patient-chart-app/./src/view-components/grid-view.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/view-components/tabbed-view.css?74df","webpack://@openmrs/esm-patient-chart-app/./src/view-components/tabbed-view.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/view-components/chart-review.scss?287a","webpack://@openmrs/esm-patient-chart-app/./src/view-components/chart-review.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/visit/visit-prompt/start-visit.component.scss?e8f5","webpack://@openmrs/esm-patient-chart-app/./src/visit/visit-prompt/start-visit.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/visit/visit-prompt/end-visit.component.scss?432d","webpack://@openmrs/esm-patient-chart-app/./src/visit/visit-prompt/end-visit.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/visit/visit-dialog.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/hooks/useVisitDialog.tsx","webpack://@openmrs/esm-patient-chart-app/./src/ui-components/action-menu.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/ui-components/workspace-notification.component.scss?1488","webpack://@openmrs/esm-patient-chart-app/./src/ui-components/workspace-notification.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/ui-components/patient-chart.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/view-components/side-menu.component.scss?ff72","webpack://@openmrs/esm-patient-chart-app/./src/view-components/side-menu.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/hooks/useNavMenu.tsx","webpack://@openmrs/esm-patient-chart-app/./src/root.scss?f19b","webpack://@openmrs/esm-patient-chart-app/./src/root.component.tsx","webpack://@openmrs/esm-patient-chart-app/./src/types/index.ts","webpack://@openmrs/esm-patient-chart-app/./src/utils.ts","webpack://@openmrs/esm-patient-chart-app/./src/view-components/grid-view.css","webpack://@openmrs/esm-patient-chart-app/./src/view-components/tabbed-view.css","webpack://@openmrs/esm-patient-chart-app/./src/root.scss","webpack://@openmrs/esm-patient-chart-app/./src/ui-components/loader.component.scss","webpack://@openmrs/esm-patient-chart-app/./src/ui-components/patient-chart.component.scss","webpack://@openmrs/esm-patient-chart-app/./src/ui-components/workspace-notification.component.scss","webpack://@openmrs/esm-patient-chart-app/./src/view-components/chart-review.scss","webpack://@openmrs/esm-patient-chart-app/./src/view-components/side-menu.component.scss","webpack://@openmrs/esm-patient-chart-app/./src/visit/visit-prompt/end-visit.component.scss","webpack://@openmrs/esm-patient-chart-app/./src/visit/visit-prompt/start-visit.component.scss","webpack://@openmrs/esm-patient-chart-app/./src/workspace/context-workspace.scss"],"sourcesContent":["import { useCallback, useMemo } from 'react';\nimport { detachAll, extensionStore, useAssignedExtensionIds } from '@openmrs/esm-framework';\nimport { patientChartWorkspaceSlot } from '../constants';\nimport { getTitle, determineWindowState } from '../utils';\nimport { WorkspaceWindowState } from '../types';\n\nexport interface WorkspaceState {\n  active: boolean;\n  title: string;\n  windowState: WorkspaceWindowState;\n}\n\nexport interface WorkspaceDetails extends WorkspaceState {\n  closeWorkspace(): void;\n  extensions: Array<string>;\n}\n\nexport function useWorkspace(): WorkspaceDetails {\n  const extensions = useAssignedExtensionIds(patientChartWorkspaceSlot);\n\n  const title = useMemo(() => {\n    if (extensions.length === 0) {\n      return '';\n    } else if (extensions.length === 1) {\n      const state = extensionStore.getState();\n      return getTitle(state.extensions[extensions[0]]);\n    } else {\n      return `Workspaces (${extensions.length})`;\n    }\n  }, [extensions]);\n\n  const windowState = useMemo(() => {\n    if (extensions.length === 0) {\n      return WorkspaceWindowState.hidden;\n    } else if (extensions.length === 1) {\n      const state = extensionStore.getState();\n      return determineWindowState(state.extensions[extensions[0]]);\n    }\n  }, [extensions]);\n\n  const closeWorkspace = useCallback(() => detachAll(patientChartWorkspaceSlot), []);\n\n  return {\n    active: extensions.length > 0,\n    closeWorkspace,\n    extensions,\n    title,\n    windowState,\n  };\n}\n","\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./context-workspace.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./context-workspace.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Button, Header, HeaderGlobalBar, HeaderName } from 'carbon-components-react';\nimport ArrowRight16 from '@carbon/icons-react/es/arrow--right/16';\nimport Maximize16 from '@carbon/icons-react/es/maximize/16';\nimport Minimize16 from '@carbon/icons-react/es/minimize/16';\nimport { ExtensionSlot, useLayoutType, useBodyScrollLock } from '@openmrs/esm-framework';\nimport { isDesktop } from '../utils';\nimport { useWorkspaceWindow } from '@openmrs/esm-patient-common-lib';\nimport { useWorkspace } from '../hooks/useWorkspace';\nimport { patientChartWorkspaceHeaderSlot, patientChartWorkspaceSlot } from '../constants';\nimport { WorkspaceWindowState } from '../types';\nimport styles from './context-workspace.scss';\n\ninterface ContextWorkspaceParams {\n  patientUuid: string;\n}\n\nconst ContextWorkspace: React.FC<RouteComponentProps<ContextWorkspaceParams>> = ({ match }) => {\n  const { t } = useTranslation();\n  const layout = useLayoutType();\n  const isTablet = layout === 'tablet';\n\n  const { patientUuid } = match.params;\n  const { active, title, closeWorkspace, extensions } = useWorkspace();\n  const { windowSize, updateWindowSize } = useWorkspaceWindow();\n  const { size } = windowSize;\n\n  const hidden = size === WorkspaceWindowState.hidden;\n  const maximized = size === WorkspaceWindowState.maximized;\n  const normal = size === WorkspaceWindowState.normal;\n\n  const props = React.useMemo(\n    () => ({ closeWorkspace, patientUuid, isTablet }),\n    [closeWorkspace, isTablet, patientUuid],\n  );\n\n  const [isWorkspaceOpen, setIsWorkspaceOpen] = useState(false);\n\n  useEffect(() => {\n    if (extensions.length && (maximized || normal)) {\n      setIsWorkspaceOpen(true);\n    } else if (extensions.length && hidden) {\n      setIsWorkspaceOpen(false);\n    } else {\n      setIsWorkspaceOpen(false);\n    }\n  }, [extensions.length, hidden, maximized, normal]);\n\n  useBodyScrollLock(active && !isDesktop(layout));\n\n  const toggleWindowState = () => {\n    maximized ? updateWindowSize(WorkspaceWindowState.minimized) : updateWindowSize(WorkspaceWindowState.maximized);\n  };\n\n  return (\n    <aside\n      className={`${styles.container} ${maximized ? `${styles.maximized}` : undefined} ${\n        isWorkspaceOpen\n          ? `${styles.show}`\n          : `${styles.hide}\n      }`\n      }`}\n    >\n      <Header\n        aria-label=\"Workspace Title\"\n        className={`${styles.header} ${maximized ? `${styles.fullWidth}` : `${styles.dynamicWidth}`}`}\n      >\n        <HeaderName prefix=\"\">{title}</HeaderName>\n        <HeaderGlobalBar>\n          <ExtensionSlot extensionSlotName={patientChartWorkspaceHeaderSlot} state={props} />\n          <Button\n            iconDescription={maximized ? t('minimize', 'Minimize') : t('maximize', 'Maximize')}\n            hasIconOnly\n            kind=\"ghost\"\n            onClick={toggleWindowState}\n            renderIcon={maximized ? Minimize16 : Maximize16}\n            tooltipPosition=\"bottom\"\n          />\n          <Button\n            iconDescription={t('hide', 'Hide')}\n            hasIconOnly\n            kind=\"ghost\"\n            onClick={() => updateWindowSize(WorkspaceWindowState.hidden)}\n            renderIcon={ArrowRight16}\n            tooltipPosition=\"bottom\"\n            tooltipAlignment=\"end\"\n          />\n        </HeaderGlobalBar>\n      </Header>\n      <ExtensionSlot\n        className={`${styles.fixed} ${maximized && !isTablet ? `${styles.fullWidth}` : `${styles.dynamicWidth}`}`}\n        extensionSlotName={patientChartWorkspaceSlot}\n        state={props}\n      />\n    </aside>\n  );\n};\n\nexport default ContextWorkspace;\n","\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./patient-chart.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./patient-chart.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./loader.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./loader.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport styles from './loader.component.scss';\nimport { InlineLoading } from 'carbon-components-react';\nimport { useTranslation } from 'react-i18next';\n\nconst Loader: React.FC = () => {\n  const { t } = useTranslation();\n  return <InlineLoading className={styles.loading} description={`${t('loading', 'Loading')} ...`} />;\n};\n\nexport default Loader;\n","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { ExtensionSlot } from '@openmrs/esm-framework';\nimport { basePath } from '../constants';\n\nexport interface CustomViewProps {\n  name: string;\n  slot: string;\n  patient: fhir.Patient;\n  patientUuid: string;\n}\n\nexport default function CustomView({ slot, patient, patientUuid }: CustomViewProps) {\n  const { url } = useRouteMatch(basePath);\n\n  const state = React.useMemo(\n    () => ({\n      basePath: url,\n      patient,\n      patientUuid,\n    }),\n    [url, patientUuid, patient],\n  );\n\n  return <ExtensionSlot key={slot} state={state} extensionSlotName={slot} />;\n}\n","\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./grid-view.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./grid-view.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport styles from './grid-view.css';\nimport { useRouteMatch } from 'react-router-dom';\nimport { Extension, ExtensionData, ExtensionSlot, useExtensionStore } from '@openmrs/esm-framework';\nimport { DashbardGridConfig } from '../config-schemas';\nimport { basePath } from '../constants';\n\nfunction getColumnsLayoutStyle(layout: DashbardGridConfig) {\n  const numberOfColumns = layout?.columns ?? 2;\n  return '1fr '.repeat(numberOfColumns).trimRight();\n}\n\nexport interface GridViewProps {\n  name: string;\n  slot: string;\n  patient: fhir.Patient;\n  patientUuid: string;\n  layout: DashbardGridConfig;\n}\n\nexport default function GridView({ slot, layout, patient, patientUuid }: GridViewProps) {\n  const store = useExtensionStore();\n  const { url } = useRouteMatch(basePath);\n\n  const state = React.useMemo(\n    () => ({\n      basePath: url,\n      patient,\n      patientUuid,\n    }),\n    [url, patientUuid, patient],\n  );\n\n  const wrapItem = React.useCallback(\n    (slot: React.ReactNode, extension: ExtensionData) => {\n      const { columnSpan = 1 } = store.extensions[extension.extensionId].meta;\n      return <div style={{ gridColumn: `span ${columnSpan}` }}>{slot}</div>;\n    },\n    [store.extensions],\n  );\n\n  const gridTemplateColumns = getColumnsLayoutStyle(layout);\n\n  return (\n    <ExtensionSlot key={slot} extensionSlotName={slot} className={styles.dashboard} style={{ gridTemplateColumns }}>\n      <Extension state={state} wrap={wrapItem} />\n    </ExtensionSlot>\n  );\n}\n","\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./tabbed-view.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./tabbed-view.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect } from 'react';\nimport styles from './tabbed-view.css';\nimport {\n  ConfigurableLink,\n  ExtensionSlot,\n  navigate,\n  extensionStore,\n  useAssignedExtensionIds,\n} from '@openmrs/esm-framework';\nimport { useRouteMatch } from 'react-router-dom';\nimport { DashboardTabConfig } from '../config-schemas';\nimport { basePath } from '../constants';\nimport { getTitle } from '../utils';\n\ninterface ShowTabsProps {\n  slot: string;\n  view: string;\n  fullPath: string;\n}\n\nconst ShowTabs: React.FC<ShowTabsProps> = ({ slot, view, fullPath }) => {\n  const extensions = useAssignedExtensionIds(slot);\n  const defaultExtension = extensions[0];\n  const state = extensionStore.getState();\n\n  useEffect(() => {\n    if (!view && defaultExtension) {\n      const state = extensionStore.getState();\n      const extension = state.extensions[defaultExtension];\n      navigate({\n        to: `${fullPath}/${extension.meta.view}`,\n      });\n    }\n  }, [view, defaultExtension, fullPath]);\n\n  return (\n    <ul>\n      {view &&\n        extensions.map((id) => {\n          const extension = state.extensions[id];\n          return (\n            <li key={id}>\n              <div className={`${extension.meta.view === view ? 'selected' : 'unselected'}`}>\n                <ConfigurableLink to={`${fullPath}/${extension.meta.view}`}>\n                  <button className=\"omrs-unstyled\">{getTitle(extension)}</button>\n                </ConfigurableLink>\n              </div>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport interface TabbedViewProps {\n  name: string;\n  slot: string;\n  patientUuid: string;\n  patient: fhir.Patient;\n  tab: string;\n  layout: DashboardTabConfig;\n}\n\nconst TabbedView: React.FC<TabbedViewProps> = ({ name, slot, patient, patientUuid, tab }) => {\n  const { url } = useRouteMatch(basePath);\n  const fullPath = `${window.spaBase}${url}/${name}`;\n  const state = React.useMemo(\n    () => ({\n      basePath: url,\n      fullPath,\n      patientUuid,\n      patient,\n      view: tab,\n    }),\n    [patientUuid, patient, tab, fullPath, url],\n  );\n\n  return (\n    <>\n      <nav className={styles.summariesnav}>\n        <ShowTabs slot={slot} view={tab} fullPath={fullPath} />\n      </nav>\n      <ExtensionSlot\n        className={styles.routesContainer}\n        extensionSlotName={slot}\n        state={state}\n        select={(extensions) => extensions.filter((ext) => ext.meta.view === tab)}\n      />\n    </>\n  );\n};\n\nexport default TabbedView;\n","\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./chart-review.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./chart-review.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport CustomView from './custom-view.component';\nimport GridView from './grid-view.component';\nimport TabbedView from './tabbed-view.component';\nimport { Redirect } from 'react-router-dom';\nimport { useExtensionSlotMeta } from '@openmrs/esm-framework';\nimport { DashboardConfig } from '../config-schemas';\nimport { basePath } from '../constants';\nimport styles from './chart-review.scss';\n\nfunction makePath(target: DashboardConfig, params: Record<string, string> = {}) {\n  const parts = `${basePath}/${target.name}/:subview?`.split('/');\n\n  Object.keys(params).forEach((key) => {\n    for (let i = 0; i < parts.length; i++) {\n      if (parts[i][0] === ':' && parts[i].indexOf(key) === 1) {\n        parts[i] = params[key];\n      }\n    }\n  });\n\n  return parts.join('/');\n}\n\ninterface ChartReviewProps {\n  patientUuid: string;\n  patient: fhir.Patient;\n  view: string;\n  subview: string;\n}\n\nconst ChartReview: React.FC<ChartReviewProps> = ({ patientUuid, patient, view, subview }) => {\n  const meta = useExtensionSlotMeta('patient-chart-dashboard-slot');\n  const dashboards = Object.values(meta) as Array<DashboardConfig>;\n  const defaultDashboard = dashboards[0];\n  const dashboard = dashboards.find((dashboard) => dashboard.name === view);\n\n  if (!defaultDashboard) {\n    return null;\n  } else if (!dashboard) {\n    return (\n      <Redirect\n        to={makePath(defaultDashboard, {\n          patientUuid,\n          subview: '',\n        })}\n      />\n    );\n  } else if (dashboard.config.type === 'grid') {\n    return (\n      <>\n        {dashboard.title && <h1 className={styles.dashboardTitle}>{dashboard.title}</h1>}\n        <GridView\n          slot={dashboard.slot}\n          layout={dashboard.config}\n          name={dashboard.name}\n          patient={patient}\n          patientUuid={patientUuid}\n        />\n      </>\n    );\n  } else if (dashboard.config.type === 'tabs') {\n    return (\n      <TabbedView\n        slot={dashboard.slot}\n        layout={dashboard.config}\n        name={dashboard.name}\n        patientUuid={patientUuid}\n        patient={patient}\n        tab={subview}\n      />\n    );\n  } else {\n    return <CustomView slot={dashboard.slot} name={dashboard.name} patientUuid={patientUuid} patient={patient} />;\n  }\n};\n\nexport default ChartReview;\n","\n      import API from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./start-visit.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./start-visit.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ComposedModal, Button, ModalBody, ModalHeader, ModalFooter } from 'carbon-components-react';\nimport { launchPatientWorkspace } from '@openmrs/esm-patient-common-lib';\nimport styles from './start-visit.component.scss';\n\ninterface StartVisitPromptProps {\n  isModalOpen: boolean;\n  closeModal: () => void;\n  state: any;\n}\n\nconst StartVisitPrompt: React.FC<StartVisitPromptProps> = ({ isModalOpen, closeModal, state }) => {\n  const { t } = useTranslation();\n\n  const handleEditPastVisit = useCallback(() => {\n    launchPatientWorkspace('past-visits-overview');\n    closeModal();\n  }, [closeModal]);\n\n  const handleStartNewVisit = useCallback(() => {\n    launchPatientWorkspace('start-visit-workspace-form');\n    closeModal();\n  }, [closeModal]);\n\n  const modalHeaderText =\n    state?.type === 'past' ? t('addPastVisit', 'Add a past visit') : t('noActiveVisit', 'No active visit');\n\n  const modalBodyText =\n    state?.type === 'past'\n      ? t(\n          'addPastVisitText',\n          'You can add a new past visit or update an old one. Choose from one of the options below to continue.',\n        )\n      : t(\n          'noActiveVisitText',\n          \"You can't add data to the patient chart without an active visit. Choose from one of the options below to continue.\",\n        );\n\n  return (\n    <ComposedModal open={isModalOpen} onClose={closeModal}>\n      <ModalHeader>\n        <span className={styles.header}>{modalHeaderText}</span>\n      </ModalHeader>\n      <ModalBody>\n        <p className={styles.body}>{modalBodyText}</p>\n      </ModalBody>\n      <ModalFooter className={styles.footer}>\n        <Button kind=\"secondary\" onClick={closeModal}>\n          {t('cancel', 'Cancel')}\n        </Button>\n        <Button kind=\"secondary\" onClick={handleEditPastVisit}>\n          {t('editPastVisit', 'Edit past visit')}\n        </Button>\n        <Button kind=\"primary\" onClick={handleStartNewVisit}>\n          {t('startNewVisit', 'Start new visit')}\n        </Button>\n      </ModalFooter>\n    </ComposedModal>\n  );\n};\n\nexport default StartVisitPrompt;\n","\n      import API from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./end-visit.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./end-visit.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport styles from './end-visit.component.scss';\nimport { ComposedModal, Button, ModalBody, ModalFooter, ModalHeader } from 'carbon-components-react';\nimport { useTranslation } from 'react-i18next';\nimport { getStartedVisit, parseDate, showNotification, showToast, updateVisit, useVisit } from '@openmrs/esm-framework';\nimport { first } from 'rxjs/operators';\n\ninterface EndVisitPromptProps {\n  patientUuid: string;\n  isModalOpen: boolean;\n  closeModal: () => void;\n}\n\nconst EndVisitPrompt: React.FC<EndVisitPromptProps> = ({ patientUuid, isModalOpen, closeModal }) => {\n  const { t, i18n } = useTranslation();\n  const locale = i18n.language.toLowerCase().replace('_', '-');\n  const { currentVisit } = useVisit(patientUuid);\n\n  const endCurrentVisit = () => {\n    const endVisitPayload = {\n      location: currentVisit.location.uuid,\n      startDatetime: parseDate(currentVisit.startDatetime),\n      visitType: currentVisit.visitType.uuid,\n      stopDatetime: new Date(),\n    };\n\n    const abortController = new AbortController();\n    updateVisit(currentVisit.uuid, endVisitPayload, abortController)\n      .pipe(first())\n      .subscribe(\n        (response) => {\n          if (response.status === 200) {\n            getStartedVisit.next(null);\n            closeModal();\n\n            showToast({\n              kind: 'success',\n              description: t('visitEndSuccessfully', 'Ended active visit successfully'),\n            });\n          }\n        },\n        (error) => {\n          showNotification({\n            title: t('endVisitError', 'Error ending active visit'),\n            kind: 'error',\n            critical: true,\n            description: error?.message,\n          });\n        },\n      );\n  };\n\n  return (\n    <ComposedModal open={isModalOpen} onClose={closeModal}>\n      <ModalHeader>\n        <span className={styles.header}>{t('endActiveVisit', 'End active visit')}</span>\n      </ModalHeader>\n      <ModalBody className={styles.body}>\n        <p className={styles.customLabel}>\n          <span>{t('startDate', 'Start Date')}</span>\n          <span>{new Date(currentVisit?.startDatetime).toLocaleDateString(locale, { dateStyle: 'medium' })}</span>\n        </p>\n        <p className={styles.customLabel}>\n          <span>{t('visitType', 'Visit Type')}</span> <span>{currentVisit?.visitType?.display}</span>\n        </p>\n        <p className={styles.customLabel}>\n          <span>{t('visitLocation', 'Visit Location')}</span> <span>{currentVisit?.location?.display}</span>\n        </p>\n      </ModalBody>\n      <ModalFooter>\n        <Button kind=\"secondary\" onClick={closeModal}>\n          {t('cancel', 'Cancel')}\n        </Button>\n        <Button kind=\"danger\" onClick={endCurrentVisit}>\n          {t('endVisit', 'End Visit')}\n        </Button>\n      </ModalFooter>\n    </ComposedModal>\n  );\n};\n\nexport default EndVisitPrompt;\n","import React from 'react';\nimport { useVisitDialog } from '../hooks/useVisitDialog';\nimport StartVisitPrompt from './visit-prompt/start-visit.component';\nimport EndVisitPrompt from './visit-prompt/end-visit.component';\n\ninterface VisitDialogProps {\n  patientUuid: string;\n}\n\nconst VisitDialog: React.FC<VisitDialogProps> = ({ patientUuid }) => {\n  const { type, state } = useVisitDialog(patientUuid);\n  const closeModal = () => {\n    window.dispatchEvent(new CustomEvent('visit-dialog', { detail: { type: 'close' } }));\n  };\n\n  return (\n    <>\n      <StartVisitPrompt isModalOpen={type == 'prompt'} closeModal={closeModal} state={state} />\n      <EndVisitPrompt isModalOpen={type === 'end'} patientUuid={patientUuid} closeModal={closeModal} />\n    </>\n  );\n};\n\nexport default VisitDialog;\n","import React, { useState } from 'react';\n\ninterface VisitDialogType {\n  type: 'start' | 'prompt' | 'end' | 'close';\n  state?: {};\n}\n\nexport function useVisitDialog(patientUuid: string) {\n  const [visitDialogType, setVisitDialogType] = useState<VisitDialogType>({ type: 'close', state: {} });\n\n  React.useEffect(() => {\n    const handler = (ev: CustomEvent) => {\n      const { type, state = {} } = ev.detail;\n      setVisitDialogType({ type, state });\n    };\n    window.addEventListener('visit-dialog', handler);\n    return () => window.removeEventListener('visit-dialog', handler);\n  }, [patientUuid]);\n\n  return visitDialogType;\n}\n","import React from 'react';\nimport Edit20 from '@carbon/icons-react/es/edit/20';\nimport Pen20 from '@carbon/icons-react/es/pen/20';\nimport WarningFilled16 from '@carbon/icons-react/es/warning--filled/16';\nimport styles from './action-menu.component.scss';\nimport { ExtensionSlot, useLayoutType } from '@openmrs/esm-framework';\nimport { HeaderPanel, Button } from 'carbon-components-react';\nimport { isDesktop } from '../utils';\nimport { useWorkspaceWindow } from '@openmrs/esm-patient-common-lib';\nimport { useWorkspace } from '../hooks/useWorkspace';\nimport { useTranslation } from 'react-i18next';\nimport { WorkspaceWindowState } from '../types';\n\ninterface ActionMenuInterface {\n  open: boolean;\n}\n\nexport const CHARTS_DRAWER_SLOT = 'drawer-slot';\nexport const CHARTS_ACTION_MENU_ITEMS_SLOT = 'action-menu-items-slot';\n\nexport const ActionMenu: React.FC<ActionMenuInterface> = ({ open }) => {\n  const { t } = useTranslation();\n  const layout = useLayoutType();\n  const { windowState: screenMode, active } = useWorkspace();\n  const { openWindows, updateWindowSize, windowSize } = useWorkspaceWindow();\n\n  const checkViewMode = () => {\n    if (active) {\n      if (windowSize.size === WorkspaceWindowState.maximized) {\n        updateWindowSize(WorkspaceWindowState.hidden);\n      } else if (windowSize.size === WorkspaceWindowState.normal) {\n        updateWindowSize(WorkspaceWindowState.hidden);\n      } else {\n        updateWindowSize(screenMode);\n      }\n    }\n  };\n\n  const menu = isDesktop(layout) ? (\n    <aside className={styles.rightSideNav}>\n      <ExtensionSlot extensionSlotName={CHARTS_ACTION_MENU_ITEMS_SLOT} />\n      <Button\n        onClick={checkViewMode}\n        iconDescription={t('workspaceItems', 'Workspace items')}\n        className={`${styles.iconButton} ${openWindows > 0 && styles.activeIconButton} `}\n        kind=\"ghost\"\n        hasIconOnly\n        tooltipPosition=\"bottom\"\n        tooltipAlignment=\"end\"\n      >\n        <>\n          <Pen20 />{' '}\n          {windowSize.size === WorkspaceWindowState.hidden && <WarningFilled16 className={styles.warningButton} />}\n        </>\n      </Button>\n    </aside>\n  ) : (\n    <Button className={styles.actionBtn}>\n      <div>\n        <Edit20 />\n        {windowSize.size === WorkspaceWindowState.hidden && <WarningFilled16 className={styles.warningButton} />}\n      </div>\n      <span>{t('careActivities', 'Care Activities')}</span>\n    </Button>\n  );\n\n  return (\n    <>\n      {menu}\n      <HeaderPanel className={styles.actionPanel} expanded={open} aria-label=\"Drawer\">\n        <ExtensionSlot extensionSlotName={CHARTS_DRAWER_SLOT} />\n      </HeaderPanel>\n    </>\n  );\n};\n\nexport default ActionMenu;\n","\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./workspace-notification.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./workspace-notification.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { useTranslation, Trans } from 'react-i18next';\nimport styles from './workspace-notification.component.scss';\nimport { Button, ComposedModal, ModalBody, ModalFooter, ModalHeader } from 'carbon-components-react';\nimport { patientChartWorkspaceSlot } from '../constants';\nimport { useAssignedExtensionIds, attach, detachAll, extensionStore } from '@openmrs/esm-framework';\nimport { getTitle } from '../utils';\n\nconst WorkspaceNotification: React.FC = () => {\n  const { t } = useTranslation();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [extensionSlotName, setExtensionSlotName] = useState('');\n  const extensions = useAssignedExtensionIds(patientChartWorkspaceSlot);\n\n  const formName = useMemo(() => {\n    if (extensions.length === 1) {\n      const state = extensionStore.getState();\n      return getTitle(state.extensions[extensions[0]]);\n    } else {\n      return '';\n    }\n  }, [extensions]);\n\n  const toggleActive = () => {\n    setIsModalOpen((prevState) => !prevState);\n  };\n\n  useEffect(() => {\n    const handler = (ev: CustomEvent) => {\n      const { state = {} } = ev.detail;\n      const { extensionSlotName } = state;\n      setExtensionSlotName(extensionSlotName);\n      if (extensions.length > 0) {\n        setIsModalOpen(true);\n      } else {\n        attach(patientChartWorkspaceSlot, extensionSlotName);\n      }\n    };\n\n    window.addEventListener('workspace-dialog', handler);\n    return () => window.removeEventListener('workspace-dialog', handler);\n  }, [extensions.length]);\n\n  const handleOpenNewForm = () => {\n    detachAll(patientChartWorkspaceSlot);\n    attach(patientChartWorkspaceSlot, extensionSlotName);\n    toggleActive();\n  };\n\n  return (\n    <ComposedModal open={isModalOpen} onClose={toggleActive}>\n      <ModalHeader\n        label={t('workspaceWarning', 'Workspace warning')}\n        title={t('activeFormWarning', 'There is an active form open in the workspace')}\n      ></ModalHeader>\n      <ModalBody>\n        <p className={styles.messageBody}>\n          <Trans i18nKey=\"workspaceModalText\" values={{ formName: formName }}>\n            Launching a new form in the workspace could cause you to lose unsaved work on the{' '}\n            <strong>{formName}</strong> form.\n          </Trans>\n        </p>\n      </ModalBody>\n      <ModalFooter>\n        <Button kind=\"secondary\" onClick={toggleActive}>\n          {t('cancel', 'Cancel')}\n        </Button>\n        <Button kind=\"danger\" onClick={handleOpenNewForm}>\n          {t('openAnyway', 'Open anyway')}\n        </Button>\n      </ModalFooter>\n    </ComposedModal>\n  );\n};\n\nexport default WorkspaceNotification;\n","import React, { useMemo, useEffect } from 'react';\nimport styles from './patient-chart.component.scss';\nimport Loader from './loader.component';\nimport ChartReview from '../view-components/chart-review.component';\nimport VisitDialog from '../visit/visit-dialog.component';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { detachAll, ExtensionSlot, useSessionUser } from '@openmrs/esm-framework';\nimport ActionMenu from './action-menu.component';\nimport { useOfflineVisitForPatient, usePatientOrOfflineRegisteredPatient } from '../offline';\nimport { useWorkspaceWindow } from '@openmrs/esm-patient-common-lib';\nimport { WorkspaceWindowState } from '../types';\nimport WorkspaceNotification from './workspace-notification.component';\n\ninterface PatientChartParams {\n  patientUuid: string;\n  view: string;\n  subview: string;\n}\n\nconst PatientChart: React.FC<RouteComponentProps<PatientChartParams>> = ({ match }) => {\n  const { patientUuid, view, subview } = match.params;\n  const { isLoading, patient } = usePatientOrOfflineRegisteredPatient(patientUuid);\n  const sessionUser = useSessionUser();\n  const state = useMemo(() => ({ patient, patientUuid }), [patient, patientUuid]);\n  const { windowSize, openWindows } = useWorkspaceWindow();\n\n  useEffect(() => {\n    detachAll('patient-chart-workspace-slot');\n  }, [patientUuid]);\n\n  const mainClassName = `omrs-main-content ${styles.chartContainer}`;\n\n  useOfflineVisitForPatient(patientUuid, sessionUser?.sessionLocation?.uuid);\n\n  return (\n    <main className={mainClassName}>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <div\n            className={`${styles.innerChartContainer} ${\n              windowSize.size === WorkspaceWindowState.normal && openWindows > 0\n                ? styles.closeWorkspace\n                : styles.activeWorkspace\n            }`}\n          >\n            <ExtensionSlot extensionSlotName=\"breadcrumbs-slot\" />\n            <aside>\n              <ExtensionSlot extensionSlotName=\"patient-header-slot\" state={state} />\n              <ExtensionSlot extensionSlotName=\"patient-info-slot\" state={state} />\n            </aside>\n            <div className={styles.grid}>\n              <div className={styles.chartreview}>\n                <ChartReview {...state} view={view} subview={subview} />\n                <VisitDialog patientUuid={patientUuid} />\n                <WorkspaceNotification />\n              </div>\n            </div>\n          </div>\n          <ActionMenu open={false} />\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default PatientChart;\n","\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./side-menu.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./side-menu.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport styles from './side-menu.component.scss';\nimport { SideNav, SideNavProps } from 'carbon-components-react';\nimport { ExtensionSlot, useLayoutType } from '@openmrs/esm-framework';\nimport { useNavMenu } from '../hooks/useNavMenu';\nimport { isDesktop } from '../utils';\n\ninterface SideMenuPanelProps extends SideNavProps {}\n\nconst SideMenuPanel: React.FC<SideMenuPanelProps> = () => {\n  const layout = useLayoutType();\n  useNavMenu();\n\n  return (\n    isDesktop(layout) && (\n      <SideNav expanded aria-label=\"Menu\" className={styles.link}>\n        <ExtensionSlot extensionSlotName=\"nav-menu-slot\" />\n      </SideNav>\n    )\n  );\n};\n\nexport default SideMenuPanel;\n","import { attach, detach } from '@openmrs/esm-framework';\nimport { useEffect } from 'react';\n\nexport function useNavMenu() {\n  useEffect(() => {\n    attach('nav-menu-slot', 'patient-chart-nav-items');\n    return () => detach('nav-menu-slot', 'patient-chart-nav-items');\n  }, []);\n}\n","\n      import API from \"!../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./root.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./root.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport ContextWorkspace from './workspace/context-workspace.component';\nimport PatientChart from './ui-components/patient-chart.component';\nimport SideMenu from './view-components/side-menu.component';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { basePath, dashboardPath, spaRoot } from './constants';\nimport styles from './root.scss';\nimport { WorkspaceWindowSizeProvider } from '@openmrs/esm-patient-common-lib';\nimport { SWRConfig } from 'swr';\n\nconst swrConfiguration = {\n  // Maximum number of retries when the backend returns an error\n  errorRetryCount: 3,\n};\n\nexport default function Root() {\n  return (\n    <SWRConfig value={swrConfiguration}>\n      <BrowserRouter basename={spaRoot}>\n        <WorkspaceWindowSizeProvider>\n          <div className={styles.patientChartWrapper}>\n            <SideMenu />\n            <Route path={dashboardPath} component={PatientChart} />\n            <Route path={basePath} component={ContextWorkspace} />\n          </div>\n        </WorkspaceWindowSizeProvider>\n      </BrowserRouter>\n    </SWRConfig>\n  );\n}\n","/* The possible states a workspace window can be opened in. */\nexport enum WorkspaceWindowState {\n  minimized = 'minimized',\n  maximized = 'maximized',\n  hidden = 'hidden',\n  reopened = 'reopened',\n  normal = 'normal',\n}\n","import { ExtensionInfo, LayoutType, translateFrom } from '@openmrs/esm-framework';\nimport { WorkspaceWindowState } from './types';\n\nexport function isDesktop(layout: LayoutType) {\n  return layout === 'desktop';\n}\n\nexport function getTitle(ext: ExtensionInfo) {\n  const title = ext?.meta?.title;\n\n  if (typeof title === 'string') {\n    return title;\n  } else if (title && typeof title === 'object') {\n    return translateFrom(ext.moduleName, title.key, title.default);\n  }\n\n  return ext.name;\n}\n\nexport function determineWindowState(ext: ExtensionInfo): WorkspaceWindowState {\n  const screenMode: WorkspaceWindowState = ext.meta?.screenSize;\n\n  if (typeof screenMode === 'string') {\n    return screenMode;\n  }\n\n  return WorkspaceWindowState.minimized;\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".-esm-patient-chart__grid-view__dashboard___RgLRB {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  grid-auto-rows: auto;\\n  grid-auto-columns: auto;\\n  grid-gap: 25px;\\n  margin: 1.3125rem;\\n}\\n\\n.omrs-breakpoint-lt-desktop .-esm-patient-chart__grid-view__dashboard___RgLRB {\\n  grid-template-columns: 1fr;\\n}\\n\\n.omrs-breakpoint-lt-tablet .-esm-patient-chart__grid-view__container___SrKkW {\\n  margin: 5px;\\n  overflow-x: auto;\\n  justify-content: center;\\n}\\n\\n.omrs-breakpoint-lt-tablet .-esm-patient-chart__grid-view__dashboard___RgLRB {\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: wrap;\\n}\\n\\n.omrs-breakpoint-lt-tablet .-esm-patient-chart__grid-view__dashboard___RgLRB > div {\\n  margin: 2px 0px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/view-components/grid-view.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa;EACb,8BAA8B;EAC9B,oBAAoB;EACpB,uBAAuB;EACvB,cAAc;EACd,iBAAiB;AACnB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,WAAW;EACX,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB\",\"sourcesContent\":[\".dashboard {\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  grid-auto-rows: auto;\\n  grid-auto-columns: auto;\\n  grid-gap: 25px;\\n  margin: 1.3125rem;\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop) .dashboard {\\n  grid-template-columns: 1fr;\\n}\\n\\n:global(.omrs-breakpoint-lt-tablet) .container {\\n  margin: 5px;\\n  overflow-x: auto;\\n  justify-content: center;\\n}\\n\\n:global(.omrs-breakpoint-lt-tablet) .dashboard {\\n  display: flex;\\n  flex-direction: column;\\n  flex-wrap: wrap;\\n}\\n\\n:global(.omrs-breakpoint-lt-tablet) .dashboard > div {\\n  margin: 2px 0px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"dashboard\": \"-esm-patient-chart__grid-view__dashboard___RgLRB\",\n\t\"container\": \"-esm-patient-chart__grid-view__container___SrKkW\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".-esm-patient-chart__tabbed-view__summariesnav___ZNKUy {\\n  display: flex;\\n  position: sticky;\\n  top: 3rem;\\n  flex-direction: row;\\n  align-items: left;\\n  justify-content: flex-start;\\n  width: 100%;\\n  background-color: var(--omrs-color-bg-low-contrast);\\n  height: 3.125rem;\\n  padding: 0 1.3125rem;\\n  flex-wrap: nowrap;\\n  -webkit-overflow-scrolling: touch;\\n  border-bottom: 1px solid var(--omrs-color-bg-lowest-contrast);\\n}\\n\\n.-esm-patient-chart__tabbed-view__summariesnav___ZNKUy::-webkit-scrollbar {\\n  display: none;\\n}\\n\\n.-esm-patient-chart__tabbed-view__summariesnav___ZNKUy ul {\\n  flex: 0 0 auto;\\n  margin-block-start: 0;\\n  margin-block-end: 0;\\n  margin-inline-start: 0;\\n  margin-inline-end: 0;\\n  padding-inline-start: 0;\\n}\\n\\n.-esm-patient-chart__tabbed-view__summariesnav___ZNKUy ul li {\\n  float: left;\\n  list-style-type: none;\\n  text-align: center;\\n}\\n\\n.-esm-patient-chart__tabbed-view__summariesnav___ZNKUy button {\\n  padding: 0.9rem;\\n  cursor: pointer;\\n  border: none;\\n}\\n\\n.-esm-patient-chart__tabbed-view__summariesnav___ZNKUy button:focus {\\n  outline: none !important;\\n}\\n\\n.-esm-patient-chart__tabbed-view__summariesnav___ZNKUy ul li div.selected {\\n  color: var(--omrs-color-ink-high-contrast);\\n  background-color: var(--omrs-color-bg-low-contrast);\\n  border-bottom: medium solid var(--omrs-color-ink-high-contrast);\\n\\n  border-radius: 1.5px 1.5px 0px 0px;\\n  font-weight: 500;\\n}\\n\\n.-esm-patient-chart__tabbed-view__summariesnav___ZNKUy ul li :gobal(div.-esm-patient-chart__tabbed-view__unselected___kBJ2h) {\\n  color: var(--omrs-color-ink-medium-contrast);\\n}\\n\\n.-esm-patient-chart__tabbed-view__summariesnav___ZNKUy a {\\n  color: inherit;\\n}\\n\\n.-esm-patient-chart__tabbed-view__routesContainer___R-JNc {\\n  margin: 1.3125rem;\\n}\\n\\n.omrs-breakpoint-lt-tablet .-esm-patient-chart__tabbed-view__routesContainer___R-JNc {\\n  margin: 0.625rem;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/view-components/tabbed-view.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa;EACb,gBAAgB;EAChB,SAAS;EACT,mBAAmB;EACnB,iBAAiB;EACjB,2BAA2B;EAC3B,WAAW;EACX,mDAAmD;EACnD,gBAAgB;EAChB,oBAAoB;EACpB,iBAAiB;EACjB,iCAAiC;EACjC,6DAA6D;AAC/D;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;EACd,qBAAqB;EACrB,mBAAmB;EACnB,sBAAsB;EACtB,oBAAoB;EACpB,uBAAuB;AACzB;;AAEA;EACE,WAAW;EACX,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,eAAe;EACf,YAAY;AACd;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,0CAA0C;EAC1C,mDAAmD;EACnD,+DAA+D;;EAE/D,kCAAkC;EAClC,gBAAgB;AAClB;;AAEA;EACE,4CAA4C;AAC9C;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;AAClB\",\"sourcesContent\":[\".summariesnav {\\n  display: flex;\\n  position: sticky;\\n  top: 3rem;\\n  flex-direction: row;\\n  align-items: left;\\n  justify-content: flex-start;\\n  width: 100%;\\n  background-color: var(--omrs-color-bg-low-contrast);\\n  height: 3.125rem;\\n  padding: 0 1.3125rem;\\n  flex-wrap: nowrap;\\n  -webkit-overflow-scrolling: touch;\\n  border-bottom: 1px solid var(--omrs-color-bg-lowest-contrast);\\n}\\n\\n.summariesnav::-webkit-scrollbar {\\n  display: none;\\n}\\n\\n.summariesnav ul {\\n  flex: 0 0 auto;\\n  margin-block-start: 0;\\n  margin-block-end: 0;\\n  margin-inline-start: 0;\\n  margin-inline-end: 0;\\n  padding-inline-start: 0;\\n}\\n\\n.summariesnav ul li {\\n  float: left;\\n  list-style-type: none;\\n  text-align: center;\\n}\\n\\n.summariesnav button {\\n  padding: 0.9rem;\\n  cursor: pointer;\\n  border: none;\\n}\\n\\n.summariesnav button:focus {\\n  outline: none !important;\\n}\\n\\n.summariesnav ul li :global(div.selected) {\\n  color: var(--omrs-color-ink-high-contrast);\\n  background-color: var(--omrs-color-bg-low-contrast);\\n  border-bottom: medium solid var(--omrs-color-ink-high-contrast);\\n\\n  border-radius: 1.5px 1.5px 0px 0px;\\n  font-weight: 500;\\n}\\n\\n.summariesnav ul li :gobal(div.unselected) {\\n  color: var(--omrs-color-ink-medium-contrast);\\n}\\n\\n.summariesnav a {\\n  color: inherit;\\n}\\n\\n.routesContainer {\\n  margin: 1.3125rem;\\n}\\n\\n:global(.omrs-breakpoint-lt-tablet) .routesContainer {\\n  margin: 0.625rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"summariesnav\": \"-esm-patient-chart__tabbed-view__summariesnav___ZNKUy\",\n\t\"unselected\": \"-esm-patient-chart__tabbed-view__unselected___kBJ2h\",\n\t\"routesContainer\": \"-esm-patient-chart__tabbed-view__routesContainer___R-JNc\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{padding:0;border:0;margin:0;font:inherit;font-size:100%;vertical-align:baseline}button,select,input,textarea{border-radius:0;font-family:inherit}input[type=text]::-ms-clear{display:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}body{line-height:1}sup{vertical-align:super}sub{vertical-align:sub}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:\\\"\\\"}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}button{margin:0}html{font-size:100%}body{font-weight:400;font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility}code{font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace}strong{font-weight:600}@media screen and (-ms-high-contrast: active){svg{fill:ButtonText}}h1{font-size:2.625rem;font-weight:300;line-height:1.199;letter-spacing:0}h2{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}h3{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}h4{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}h5{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}h6{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}p{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}a{color:#0f62fe}em{font-style:italic}@keyframes -esm-patient-chart__root__skeleton___XdryG{0%{opacity:.3;transform:scaleX(0);transform-origin:left}20%{opacity:1;transform:scaleX(1);transform-origin:left}28%{transform:scaleX(1);transform-origin:right}51%{transform:scaleX(0);transform-origin:right}58%{transform:scaleX(0);transform-origin:right}82%{transform:scaleX(1);transform-origin:right}83%{transform:scaleX(1);transform-origin:left}96%{transform:scaleX(0);transform-origin:left}100%{opacity:.3;transform:scaleX(0);transform-origin:left}}.-esm-patient-chart__root__patientChartWrapper___rIbt0{display:flex;position:relative}.-esm-patient-chart__root__productiveHeading01___tScBJ{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.-esm-patient-chart__root__productiveHeading02___2lV0H{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-patient-chart__root__productiveHeading03___10TKO{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-patient-chart__root__productiveHeading04___HloSo{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-patient-chart__root__bodyLong01___vRBQA{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_css--reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_font-family.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/icons/mixins.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_helper-mixins.scss\",\"webpack://./src/root.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCTE,2ZAiFE,SAAA,CACA,QAAA,CACA,QAAA,CACA,YAAA,CACA,cAAA,CACA,uBAAA,CAIF,6BAIE,eAAA,CACA,mBAAA,CAGF,4BACE,YAAA,CAIF,mFAYE,aAAA,CAGF,KACE,aAAA,CAGF,IACE,oBAAA,CAGF,IACE,kBAAA,CAGF,MAEE,eAAA,CAGF,aAEE,WAAA,CAGF,wDAIE,UAAA,CAGF,MACE,wBAAA,CACA,gBAAA,CAGF,EACE,qBAAA,CAIF,OACE,QAAA,CC3KJ,KACE,cAAA,CAGF,KC0CA,eAAA,CDvCE,gEAViB,CAWjB,iCAAA,CACA,kCAAA,CACA,iCAAA,CAGF,KACE,wGAhBiB,CAmBnB,OC6BA,eAAA,CCxDA,8CACE,IACE,eAAA,CAAA,CFkCJ,GGggBE,kBAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlrBxB,GG4fE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH9qBxB,GGwfE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH1qBxB,GGofE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CHtqBxB,GGgfE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlqBxB,GG4eE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CH9pBxB,EGweE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CH1pBxB,EAII,aAAA,CAMJ,GACE,iBAAA,CIkHF,sDACE,GACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,SAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,KACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAAA,CC3ON,uDACE,YAAA,CACA,iBAAA,CAGF,uDFuiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CEztB1B,uDFmiBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CErtB1B,uDF+hBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CEjtB1B,uDF2hBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CE7sB1B,8CFuhBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n@import './vendor/@carbon/elements/scss/type/reset';\\n@import './vendor/@carbon/elements/scss/icons/mixins';\\n\\n/// Resets default browser styling\\n/// @access public\\n/// @group global-reset\\n@mixin reset {\\n  @if variable-exists(css--reset) == false or $css--reset == false {\\n    box-sizing: border-box;\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    font-family: inherit;\\n    font-size: 100%;\\n    vertical-align: baseline;\\n\\n    *,\\n    *::before,\\n    *::after {\\n      box-sizing: inherit;\\n    }\\n  }\\n}\\n\\n@include exports('css--reset') {\\n  @if variable-exists(css--reset) == false or $css--reset == true {\\n    // http://cssreset.com/scripts/eric-meyer-reset-css/\\n    html,\\n    body,\\n    div,\\n    span,\\n    applet,\\n    object,\\n    iframe,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p,\\n    blockquote,\\n    pre,\\n    a,\\n    abbr,\\n    acronym,\\n    address,\\n    big,\\n    cite,\\n    code,\\n    del,\\n    dfn,\\n    em,\\n    img,\\n    ins,\\n    kbd,\\n    q,\\n    s,\\n    samp,\\n    small,\\n    strike,\\n    strong,\\n    sub,\\n    sup,\\n    tt,\\n    var,\\n    b,\\n    u,\\n    i,\\n    center,\\n    dl,\\n    dt,\\n    dd,\\n    ol,\\n    ul,\\n    li,\\n    fieldset,\\n    form,\\n    label,\\n    legend,\\n    table,\\n    caption,\\n    tbody,\\n    tfoot,\\n    thead,\\n    tr,\\n    th,\\n    td,\\n    article,\\n    aside,\\n    canvas,\\n    details,\\n    embed,\\n    figure,\\n    figcaption,\\n    footer,\\n    header,\\n    hgroup,\\n    menu,\\n    nav,\\n    output,\\n    ruby,\\n    section,\\n    summary,\\n    time,\\n    mark,\\n    audio,\\n    video {\\n      padding: 0;\\n      border: 0;\\n      margin: 0;\\n      font: inherit;\\n      font-size: 100%;\\n      vertical-align: baseline;\\n    }\\n\\n    // Chrome 62 fix\\n    button,\\n    select,\\n    input,\\n    textarea {\\n      border-radius: 0;\\n      font-family: inherit;\\n    }\\n\\n    input[type='text']::-ms-clear {\\n      display: none;\\n    }\\n\\n    /* HTML5 display-role reset for older browsers */\\n    article,\\n    aside,\\n    details,\\n    figcaption,\\n    figure,\\n    footer,\\n    header,\\n    hgroup,\\n    main,\\n    menu,\\n    nav,\\n    section {\\n      display: block;\\n    }\\n\\n    body {\\n      line-height: 1;\\n    }\\n\\n    sup {\\n      vertical-align: super;\\n    }\\n\\n    sub {\\n      vertical-align: sub;\\n    }\\n\\n    ol,\\n    ul {\\n      list-style: none;\\n    }\\n\\n    blockquote,\\n    q {\\n      quotes: none;\\n    }\\n\\n    blockquote::before,\\n    blockquote::after,\\n    q::before,\\n    q::after {\\n      content: '';\\n    }\\n\\n    table {\\n      border-collapse: collapse;\\n      border-spacing: 0;\\n    }\\n\\n    * {\\n      box-sizing: border-box;\\n    }\\n\\n    // Fix to remove added margins on buttons in safari (see #5155)\\n    button {\\n      margin: 0;\\n    }\\n\\n    @include carbon--type-reset;\\n    @include carbon--icons;\\n  }\\n}\\n\\n@include exports('css--default-type') {\\n  @if variable-exists(css--default-type) == false or $css--default-type == true\\n  {\\n    @include carbon--default-type;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/convert';\\n@import 'font-family';\\n@import 'styles';\\n\\n/// Include a type reset for a given body and mono font family\\n/// @param {String} $body-font-family [carbon--font-family('sans')] - The font family used on the `<body>` element\\n/// @param {String} $mono-font-family [carbon--font-family('mono')] - The font family used on elements that require mono fonts, like the `<code>` element\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-reset(\\n  // TODO: remove in next major release. This has been replaced with 100%\\n  $base-font-size: $carbon--base-font-size,\\n  $body-font-family: carbon--font-family('sans'),\\n  $mono-font-family: carbon--font-family('mono')\\n) {\\n  html {\\n    font-size: 100%;\\n  }\\n\\n  body {\\n    @include carbon--font-weight('regular');\\n\\n    font-family: $body-font-family;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-font-smoothing: antialiased;\\n    text-rendering: optimizeLegibility;\\n  }\\n\\n  code {\\n    font-family: $mono-font-family;\\n  }\\n\\n  strong {\\n    @include carbon--font-weight('semibold');\\n  }\\n}\\n\\n/// Include default type styles\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--default-type {\\n  h1 {\\n    @include carbon--type-style('productive-heading-06');\\n  }\\n\\n  h2 {\\n    @include carbon--type-style('productive-heading-05');\\n  }\\n\\n  h3 {\\n    @include carbon--type-style('productive-heading-04');\\n  }\\n\\n  h4 {\\n    @include carbon--type-style('productive-heading-03');\\n  }\\n\\n  h5 {\\n    @include carbon--type-style('productive-heading-02');\\n  }\\n\\n  h6 {\\n    @include carbon--type-style('productive-heading-01');\\n  }\\n\\n  p {\\n    @include carbon--type-style('body-long-02');\\n  }\\n\\n  a {\\n    @if global-variable-exists('carbon--theme') and\\n      map-has-key($carbon--theme, 'link-01')\\n    {\\n      color: map-get($carbon--theme, 'link-01');\\n    } @else {\\n      color: #0062fe;\\n    }\\n  }\\n\\n  em {\\n    font-style: italic;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\\n/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-families: (\\n  'mono':\\n    unquote(\\n      \\\"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\\\"\\n    ),\\n  'sans': unquote(\\\"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-condensed':\\n    unquote(\\\"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-hebrew':\\n    unquote(\\n      \\\"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\\\"\\n    ),\\n  'serif': unquote(\\\"'IBM Plex Serif', 'Georgia', Times, serif\\\"),\\n) !default;\\n\\n/// Get the font-family for an IBM Plex font\\n/// @param {String} $name\\n/// @return {String}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-family($name) {\\n  @return map-get($carbon--font-families, $name);\\n}\\n\\n/// Include the `font-family` definition for the given name in your selector\\n/// @param {String} $name\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-family($name) {\\n  font-family: carbon--font-family($name);\\n}\\n\\n/// Suggested font weights to be used in product\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-weights: (\\n  'light': 300,\\n  'regular': 400,\\n  'semibold': 600,\\n) !default;\\n\\n/// Retrieve the font-weight value for a given name\\n/// @param {String} $weight\\n/// @return {Number}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-weight($weight) {\\n  @return map-get($carbon--font-weights, $weight);\\n}\\n\\n/// Set the `font-weight` property with the value for a given name\\n/// @param {String} $weight\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-weight($weight) {\\n  font-weight: carbon--font-weight($weight);\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Makes SVGs accessible in high contrast mode\\n/// @link https://github.com/IBM/carbon-elements/issues/345#issuecomment-466577293 Carbon-elements #345\\n/// @access public\\n/// @group @carbon/icons\\n@mixin carbon--icons {\\n  @media screen and (-ms-high-contrast: active) {\\n    svg {\\n      fill: ButtonText;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n//----------------------------------------------\\n// Mixins\\n// ---------------------------------------------\\n//\\n//   Category             ||  Description\\n//   ===========================================\\n//   Misc                 ||  General helper @mixins\\n//   Deprecated           ||  Not used anymore\\n//   ===========================================\\n\\n//----------------------------------------------\\n// Misc\\n// ---------------------------------------------\\n\\n@import 'vars';\\n@import 'css--reset';\\n@import 'typography';\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n\\n/// Adds text overflow styling\\n/// @access public\\n/// @param {Number} $width [false] - Value of width if you want to set width, else nothing\\n/// @example @include text-overflow(300px);\\n/// @group global-helpers\\n@mixin text-overflow($width: false) {\\n  display: block;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n\\n  // apply a width if width parameter exists\\n  @if ($width) {\\n    width: $width;\\n  }\\n}\\n\\n/// Adds placeholder text color\\n/// @access public\\n/// @example @include placeholder-colors;\\n/// @group global-helpers\\n@mixin placeholder-colors {\\n  color: $text-05;\\n  opacity: 1;\\n}\\n\\n/// Adds box shadow\\n/// @access public\\n/// @example @include box-shadow;\\n/// @group global-helpers\\n@mixin box-shadow {\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\\n}\\n\\n/// Adds outline styles depending on specific type\\n/// @access public\\n/// @param {String} $type ['border'] - Type of outline from: `border`, `blurred`, `outline`, `invalid`, `reset`\\n/// @example @include focus-outline('outline');\\n/// @group global-helpers\\n@mixin focus-outline($type: 'border') {\\n  @if ($type == 'border') {\\n    outline: 1px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'blurred') {\\n    box-shadow: 0 0 0 3px $focus;\\n    outline: 1px solid transparent;\\n  }\\n\\n  @if ($type == 'outline') {\\n    outline: 2px solid $focus;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'outline-compat') {\\n    box-sizing: border-box;\\n    border: 2px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      border-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'invalid') {\\n    outline: 2px solid $support-01;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'reset') {\\n    outline: 2px solid transparent;\\n    outline-offset: -2px;\\n  }\\n}\\n\\n/// Adds rotational transformation\\n/// @access public\\n/// @param {Number} $deg - How many degrees to rotate\\n/// @param {Number} $speed - Speed of rotation\\n/// @param {Value} $origin [center] - `transform-origin`\\n/// @example @include rotate(90deg, 300ms);\\n/// @group global-helpers\\n@mixin rotate($deg, $speed, $origin: center) {\\n  transform: rotate($deg);\\n  transform-origin: $origin;\\n  transition: transform $speed;\\n}\\n\\n/// Adds styles to hide content\\n/// @access public\\n/// @group global-helpers\\n@mixin hidden {\\n  position: absolute;\\n  overflow: hidden;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  border: 0;\\n  margin: -1px;\\n  clip: rect(0, 0, 0, 0);\\n  visibility: inherit;\\n  white-space: nowrap;\\n}\\n\\n/// Resets button styles\\n/// @access public\\n/// @param {Bool} $width [true] - Sets width to 100% if true\\n/// @example @include button-reset($width: false);\\n/// @group global-helpers\\n@mixin button-reset($width: true) {\\n  @include reset;\\n\\n  display: inline-block;\\n  padding: 0;\\n  border: 0;\\n  appearance: none;\\n  background: none;\\n  cursor: pointer;\\n\\n  @if ($width == true) {\\n    width: 100%;\\n  }\\n\\n  &::-moz-focus-inner {\\n    border: 0;\\n  }\\n}\\n\\n/// Skeleton loading animation\\n/// @access public\\n/// @example @include skeleton;\\n/// @group global-helpers\\n@mixin skeleton {\\n  position: relative;\\n  padding: 0;\\n  border: none;\\n  background: $skeleton-01;\\n  box-shadow: none;\\n  pointer-events: none;\\n\\n  &:hover,\\n  &:focus,\\n  &:active {\\n    border: none;\\n    cursor: default;\\n    outline: none;\\n  }\\n\\n  &::before {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    animation: 3000ms ease-in-out skeleton infinite;\\n    background: $skeleton-02;\\n    content: '';\\n    will-change: transform-origin, transform, opacity;\\n\\n    @media (prefers-reduced-motion: reduce) {\\n      animation: none;\\n    }\\n  }\\n}\\n\\n@include exports('skeleton') {\\n  @keyframes skeleton {\\n    0% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    20% {\\n      opacity: 1;\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    28% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    51% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    58% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    82% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    83% {\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    96% {\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    100% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n  }\\n}\\n\\n/// Windows HCM Mixin\\n/// @access public\\n/// @example @include high-contrast-mode;\\n/// @group global-helpers\\n/// We should set HCM styles at the end of each file to ensure they are not overridden\\n@mixin high-contrast-mode($type: '') {\\n  @media screen and (-ms-high-contrast: active),\\n    (forced-colors: active),\\n    (prefers-contrast) {\\n    @if ($type == 'icon-fill') {\\n      fill: ButtonText;\\n    }\\n\\n    @if ($type == 'focus') {\\n      color: Highlight;\\n      outline: 1px solid Highlight;\\n    }\\n\\n    @if ($type == 'outline') {\\n      outline: 1px solid transparent;\\n    }\\n\\n    @if ($type == 'disabled') {\\n      color: GrayText;\\n      fill: GrayText;\\n    }\\n\\n    @content;\\n  }\\n}\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/mixins\\\";\\n\\n.patientChartWrapper {\\n  display: flex;\\n  position: relative;\\n}\\n\\n.productiveHeading01 {\\n  @include carbon--type-style(\\\"productive-heading-01\\\");\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n}\\n\\n.productiveHeading03 {\\n  @include carbon--type-style(\\\"productive-heading-03\\\");\\n}\\n\\n.productiveHeading04 {\\n  @include carbon--type-style(\\\"productive-heading-04\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"patientChartWrapper\": \"-esm-patient-chart__root__patientChartWrapper___rIbt0\",\n\t\"productiveHeading01\": \"-esm-patient-chart__root__productiveHeading01___tScBJ\",\n\t\"productiveHeading02\": \"-esm-patient-chart__root__productiveHeading02___2lV0H\",\n\t\"productiveHeading03\": \"-esm-patient-chart__root__productiveHeading03___10TKO\",\n\t\"productiveHeading04\": \"-esm-patient-chart__root__productiveHeading04___HloSo\",\n\t\"bodyLong01\": \"-esm-patient-chart__root__bodyLong01___vRBQA\",\n\t\"skeleton\": \"-esm-patient-chart__root__skeleton___XdryG\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-chart__loader-component__loading___W-n36{display:flex;background-color:#f4f4f4;justify-content:center;min-height:3rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/ui-components/loader.component.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCzCF,uDACE,YAAA,CACA,wBDcwB,CCbxB,sBAAA,CACA,eCqOa\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/vars\\\";\\n\\n.loading {\\n  display: flex;\\n  background-color: $openmrs-background-grey;\\n  justify-content: center;\\n  min-height: $spacing-09;\\n}\\n\",\"// Code generated by @carbon/themes. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './themes';\\n\\n/// Define theme variables from a map of tokens\\n/// @access public\\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\\n///\\n/// @example scss\\n///   // Default usage\\n///   @include carbon--theme();\\n///\\n///   // Alternate styling (not white theme)\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     // declarations...\\n///   }\\n///\\n///   // Inline styling\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     .my-dark-theme {\\n///       // declarations...\\n///     }\\n///   }\\n///\\n/// @group @carbon/themes\\n@mixin carbon--theme(\\n  $theme: $carbon--theme,\\n  $emit-custom-properties: false,\\n  $emit-difference: false\\n) {\\n  $parent-carbon-theme: $carbon--theme;\\n  $carbon--theme: $theme !global;\\n  $interactive-01: map-get($theme, 'interactive-01') !global;\\n  $interactive-02: map-get($theme, 'interactive-02') !global;\\n  $interactive-03: map-get($theme, 'interactive-03') !global;\\n  $interactive-04: map-get($theme, 'interactive-04') !global;\\n  $ui-background: map-get($theme, 'ui-background') !global;\\n  $ui-01: map-get($theme, 'ui-01') !global;\\n  $ui-02: map-get($theme, 'ui-02') !global;\\n  $ui-03: map-get($theme, 'ui-03') !global;\\n  $ui-04: map-get($theme, 'ui-04') !global;\\n  $ui-05: map-get($theme, 'ui-05') !global;\\n  $text-01: map-get($theme, 'text-01') !global;\\n  $text-02: map-get($theme, 'text-02') !global;\\n  $text-03: map-get($theme, 'text-03') !global;\\n  $text-04: map-get($theme, 'text-04') !global;\\n  $text-05: map-get($theme, 'text-05') !global;\\n  $text-error: map-get($theme, 'text-error') !global;\\n  $icon-01: map-get($theme, 'icon-01') !global;\\n  $icon-02: map-get($theme, 'icon-02') !global;\\n  $icon-03: map-get($theme, 'icon-03') !global;\\n  $link-01: map-get($theme, 'link-01') !global;\\n  $link-02: map-get($theme, 'link-02') !global;\\n  $inverse-link: map-get($theme, 'inverse-link') !global;\\n  $field-01: map-get($theme, 'field-01') !global;\\n  $field-02: map-get($theme, 'field-02') !global;\\n  $inverse-01: map-get($theme, 'inverse-01') !global;\\n  $inverse-02: map-get($theme, 'inverse-02') !global;\\n  $support-01: map-get($theme, 'support-01') !global;\\n  $support-02: map-get($theme, 'support-02') !global;\\n  $support-03: map-get($theme, 'support-03') !global;\\n  $support-04: map-get($theme, 'support-04') !global;\\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\\n  $overlay-01: map-get($theme, 'overlay-01') !global;\\n  $danger-01: map-get($theme, 'danger-01') !global;\\n  $danger-02: map-get($theme, 'danger-02') !global;\\n  $focus: map-get($theme, 'focus') !global;\\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\\n  $hover-primary: map-get($theme, 'hover-primary') !global;\\n  $active-primary: map-get($theme, 'active-primary') !global;\\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\\n  $active-secondary: map-get($theme, 'active-secondary') !global;\\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\\n  $hover-ui: map-get($theme, 'hover-ui') !global;\\n  $hover-light-ui: map-get($theme, 'hover-light-ui') !global;\\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\\n  $active-ui: map-get($theme, 'active-ui') !global;\\n  $active-light-ui: map-get($theme, 'active-light-ui') !global;\\n  $selected-ui: map-get($theme, 'selected-ui') !global;\\n  $selected-light-ui: map-get($theme, 'selected-light-ui') !global;\\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\\n  $hover-danger: map-get($theme, 'hover-danger') !global;\\n  $active-danger: map-get($theme, 'active-danger') !global;\\n  $hover-row: map-get($theme, 'hover-row') !global;\\n  $visited-link: map-get($theme, 'visited-link') !global;\\n  $disabled-01: map-get($theme, 'disabled-01') !global;\\n  $disabled-02: map-get($theme, 'disabled-02') !global;\\n  $disabled-03: map-get($theme, 'disabled-03') !global;\\n  $highlight: map-get($theme, 'highlight') !global;\\n  $decorative-01: map-get($theme, 'decorative-01') !global;\\n  $button-separator: map-get($theme, 'button-separator') !global;\\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\\n  $background: map-get($theme, 'background') !global;\\n  $layer: map-get($theme, 'layer') !global;\\n  $layer-accent: map-get($theme, 'layer-accent') !global;\\n  $layer-accent-hover: map-get($theme, 'layer-accent-hover') !global;\\n  $layer-accent-active: map-get($theme, 'layer-accent-active') !global;\\n  $field: map-get($theme, 'field') !global;\\n  $background-inverse: map-get($theme, 'background-inverse') !global;\\n  $background-brand: map-get($theme, 'background-brand') !global;\\n  $interactive: map-get($theme, 'interactive') !global;\\n  $border-subtle: map-get($theme, 'border-subtle') !global;\\n  $border-strong: map-get($theme, 'border-strong') !global;\\n  $border-inverse: map-get($theme, 'border-inverse') !global;\\n  $border-interactive: map-get($theme, 'border-interactive') !global;\\n  $text-primary: map-get($theme, 'text-primary') !global;\\n  $text-secondary: map-get($theme, 'text-secondary') !global;\\n  $text-placeholder: map-get($theme, 'text-placeholder') !global;\\n  $text-helper: map-get($theme, 'text-helper') !global;\\n  $text-on-color: map-get($theme, 'text-on-color') !global;\\n  $text-inverse: map-get($theme, 'text-inverse') !global;\\n  $link-primary: map-get($theme, 'link-primary') !global;\\n  $link-secondary: map-get($theme, 'link-secondary') !global;\\n  $link-visited: map-get($theme, 'link-visited') !global;\\n  $link-inverse: map-get($theme, 'link-inverse') !global;\\n  $icon-primary: map-get($theme, 'icon-primary') !global;\\n  $icon-secondary: map-get($theme, 'icon-secondary') !global;\\n  $icon-on-color: map-get($theme, 'icon-on-color') !global;\\n  $icon-inverse: map-get($theme, 'icon-inverse') !global;\\n  $support-error: map-get($theme, 'support-error') !global;\\n  $support-success: map-get($theme, 'support-success') !global;\\n  $support-warning: map-get($theme, 'support-warning') !global;\\n  $support-info: map-get($theme, 'support-info') !global;\\n  $support-error-inverse: map-get($theme, 'support-error-inverse') !global;\\n  $support-success-inverse: map-get($theme, 'support-success-inverse') !global;\\n  $support-warning-inverse: map-get($theme, 'support-warning-inverse') !global;\\n  $support-info-inverse: map-get($theme, 'support-info-inverse') !global;\\n  $overlay: map-get($theme, 'overlay') !global;\\n  $toggle-off: map-get($theme, 'toggle-off') !global;\\n  $button-primary: map-get($theme, 'button-primary') !global;\\n  $button-secondary: map-get($theme, 'button-secondary') !global;\\n  $button-tertiary: map-get($theme, 'button-tertiary') !global;\\n  $button-danger-primary: map-get($theme, 'button-danger-primary') !global;\\n  $button-danger-secondary: map-get($theme, 'button-danger-secondary') !global;\\n  $background-active: map-get($theme, 'background-active') !global;\\n  $layer-active: map-get($theme, 'layer-active') !global;\\n  $button-danger-active: map-get($theme, 'button-danger-active') !global;\\n  $button-primary-active: map-get($theme, 'button-primary-active') !global;\\n  $button-secondary-active: map-get($theme, 'button-secondary-active') !global;\\n  $button-tertiary-active: map-get($theme, 'button-tertiary-active') !global;\\n  $focus-inset: map-get($theme, 'focus-inset') !global;\\n  $focus-inverse: map-get($theme, 'focus-inverse') !global;\\n  $background-hover: map-get($theme, 'background-hover') !global;\\n  $layer-hover: map-get($theme, 'layer-hover') !global;\\n  $field-hover: map-get($theme, 'field-hover') !global;\\n  $background-inverse-hover: map-get(\\n    $theme,\\n    'background-inverse-hover'\\n  ) !global;\\n  $link-primary-hover: map-get($theme, 'link-primary-hover') !global;\\n  $button-danger-hover: map-get($theme, 'button-danger-hover') !global;\\n  $button-primary-hover: map-get($theme, 'button-primary-hover') !global;\\n  $button-secondary-hover: map-get($theme, 'button-secondary-hover') !global;\\n  $button-tertiary-hover: map-get($theme, 'button-tertiary-hover') !global;\\n  $background-selected: map-get($theme, 'background-selected') !global;\\n  $background-selected-hover: map-get(\\n    $theme,\\n    'background-selected-hover'\\n  ) !global;\\n  $layer-selected: map-get($theme, 'layer-selected') !global;\\n  $layer-selected-hover: map-get($theme, 'layer-selected-hover') !global;\\n  $layer-selected-inverse: map-get($theme, 'layer-selected-inverse') !global;\\n  $border-subtle-selected: map-get($theme, 'border-subtle-selected') !global;\\n  $layer-disabled: map-get($theme, 'layer-disabled') !global;\\n  $field-disabled: map-get($theme, 'field-disabled') !global;\\n  $border-disabled: map-get($theme, 'border-disabled') !global;\\n  $text-disabled: map-get($theme, 'text-disabled') !global;\\n  $button-disabled: map-get($theme, 'button-disabled') !global;\\n  $icon-disabled: map-get($theme, 'icon-disabled') !global;\\n  $text-on-color-disabled: map-get($theme, 'text-on-color-disabled') !global;\\n  $icon-on-color-disabled: map-get($theme, 'icon-on-color-disabled') !global;\\n  $layer-selected-disabled: map-get($theme, 'layer-selected-disabled') !global;\\n  $skeleton-background: map-get($theme, 'skeleton-background') !global;\\n  $skeleton-element: map-get($theme, 'skeleton-element') !global;\\n  $brand-01: map-get($theme, 'brand-01') !global;\\n  $brand-02: map-get($theme, 'brand-02') !global;\\n  $brand-03: map-get($theme, 'brand-03') !global;\\n  $active-01: map-get($theme, 'active-01') !global;\\n  $hover-field: map-get($theme, 'hover-field') !global;\\n  $danger: map-get($theme, 'danger') !global;\\n  $caption-01: map-get($theme, 'caption-01') !global;\\n  $caption-02: map-get($theme, 'caption-02') !global;\\n  $label-01: map-get($theme, 'label-01') !global;\\n  $label-02: map-get($theme, 'label-02') !global;\\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\\n  $helper-text-02: map-get($theme, 'helper-text-02') !global;\\n  $body-short-01: map-get($theme, 'body-short-01') !global;\\n  $body-long-01: map-get($theme, 'body-long-01') !global;\\n  $body-short-02: map-get($theme, 'body-short-02') !global;\\n  $body-long-02: map-get($theme, 'body-long-02') !global;\\n  $code-01: map-get($theme, 'code-01') !global;\\n  $code-02: map-get($theme, 'code-02') !global;\\n  $heading-01: map-get($theme, 'heading-01') !global;\\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\\n  $heading-02: map-get($theme, 'heading-02') !global;\\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\\n  $quotation-01: map-get($theme, 'quotation-01') !global;\\n  $quotation-02: map-get($theme, 'quotation-02') !global;\\n  $display-01: map-get($theme, 'display-01') !global;\\n  $display-02: map-get($theme, 'display-02') !global;\\n  $display-03: map-get($theme, 'display-03') !global;\\n  $display-04: map-get($theme, 'display-04') !global;\\n  $spacing-01: map-get($theme, 'spacing-01') !global;\\n  $spacing-02: map-get($theme, 'spacing-02') !global;\\n  $spacing-03: map-get($theme, 'spacing-03') !global;\\n  $spacing-04: map-get($theme, 'spacing-04') !global;\\n  $spacing-05: map-get($theme, 'spacing-05') !global;\\n  $spacing-06: map-get($theme, 'spacing-06') !global;\\n  $spacing-07: map-get($theme, 'spacing-07') !global;\\n  $spacing-08: map-get($theme, 'spacing-08') !global;\\n  $spacing-09: map-get($theme, 'spacing-09') !global;\\n  $spacing-10: map-get($theme, 'spacing-10') !global;\\n  $spacing-11: map-get($theme, 'spacing-11') !global;\\n  $spacing-12: map-get($theme, 'spacing-12') !global;\\n  $spacing-13: map-get($theme, 'spacing-13') !global;\\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\\n  $layout-01: map-get($theme, 'layout-01') !global;\\n  $layout-02: map-get($theme, 'layout-02') !global;\\n  $layout-03: map-get($theme, 'layout-03') !global;\\n  $layout-04: map-get($theme, 'layout-04') !global;\\n  $layout-05: map-get($theme, 'layout-05') !global;\\n  $layout-06: map-get($theme, 'layout-06') !global;\\n  $layout-07: map-get($theme, 'layout-07') !global;\\n  $container-01: map-get($theme, 'container-01') !global;\\n  $container-02: map-get($theme, 'container-02') !global;\\n  $container-03: map-get($theme, 'container-03') !global;\\n  $container-04: map-get($theme, 'container-04') !global;\\n  $container-05: map-get($theme, 'container-05') !global;\\n  $size-xsmall: map-get($theme, 'size-xsmall') !global;\\n  $size-small: map-get($theme, 'size-small') !global;\\n  $size-medium: map-get($theme, 'size-medium') !global;\\n  $size-large: map-get($theme, 'size-large') !global;\\n  $size-xlarge: map-get($theme, 'size-xlarge') !global;\\n  $size-2XLarge: map-get($theme, 'size-2XLarge') !global;\\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\\n\\n  @if global-variable-exists('feature-flags') ==\\n    false or\\n    global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-v11-release') !=\\n    true\\n  {\\n    $background: $ui-background !global;\\n    $layer: $ui-01 !global;\\n    $layer-accent: $ui-03 !global;\\n    $field: $field-01 !global;\\n    $background-inverse: $inverse-02 !global;\\n    $background-brand: $interactive-01 !global;\\n    $interactive: $interactive-04 !global;\\n    $border-subtle: $ui-03 !global;\\n    $border-strong: $ui-04 !global;\\n    $border-inverse: $ui-05 !global;\\n    $border-interactive: $interactive-04 !global;\\n    $text-primary: $text-01 !global;\\n    $text-secondary: $text-02 !global;\\n    $text-placeholder: $text-03 !global;\\n    $text-helper: $text-05 !global;\\n    $text-on-color: $text-04 !global;\\n    $text-inverse: $inverse-01 !global;\\n    $link-primary: $link-01 !global;\\n    $link-secondary: $link-02 !global;\\n    $link-visited: $visited-link !global;\\n    $link-inverse: $inverse-link !global;\\n    $icon-primary: $icon-01 !global;\\n    $icon-secondary: $icon-02 !global;\\n    $icon-on-color: $icon-03 !global;\\n    $icon-inverse: $inverse-01 !global;\\n    $support-error: $support-01 !global;\\n    $support-success: $support-02 !global;\\n    $support-warning: $support-03 !global;\\n    $support-info: $support-04 !global;\\n    $support-error-inverse: $inverse-support-01 !global;\\n    $support-success-inverse: $inverse-support-02 !global;\\n    $support-warning-inverse: $inverse-support-03 !global;\\n    $support-info-inverse: $inverse-support-04 !global;\\n    $overlay: $overlay-01 !global;\\n    $toggle-off: $ui-04 !global;\\n    $button-primary: $interactive-01 !global;\\n    $button-secondary: $interactive-02 !global;\\n    $button-tertiary: $interactive-03 !global;\\n    $button-danger-primary: $danger-01 !global;\\n    $button-danger-secondary: $danger-02 !global;\\n    $background-active: $active-ui !global;\\n    $layer-active: $active-ui !global;\\n    $button-danger-active: $active-danger !global;\\n    $button-primary-active: $active-primary !global;\\n    $button-secondary-active: $active-secondary !global;\\n    $button-tertiary-active: $active-tertiary !global;\\n    $focus-inset: $inverse-01 !global;\\n    $focus-inverse: $inverse-focus-ui !global;\\n    $background-hover: $hover-ui !global;\\n    $layer-hover: $hover-ui !global;\\n    $field-hover: $hover-ui !global;\\n    $background-inverse-hover: $inverse-hover-ui !global;\\n    $link-primary-hover: $hover-primary-text !global;\\n    $button-danger-hover: $hover-danger !global;\\n    $button-primary-hover: $hover-primary !global;\\n    $button-secondary-hover: $hover-secondary !global;\\n    $button-tertiary-hover: $hover-tertiary !global;\\n    $background-selected: $selected-ui !global;\\n    $background-selected-hover: $hover-selected-ui !global;\\n    $layer-selected: $selected-ui !global;\\n    $layer-selected-hover: $hover-selected-ui !global;\\n    $layer-selected-inverse: $ui-05 !global;\\n    $border-subtle-selected: $active-ui !global;\\n    $layer-disabled: $disabled-01 !global;\\n    $field-disabled: $disabled-01 !global;\\n    $border-disabled: $disabled-01 !global;\\n    $text-disabled: $disabled-02 !global;\\n    $button-disabled: $disabled-02 !global;\\n    $icon-disabled: $disabled-02 !global;\\n    $text-on-color-disabled: $disabled-03 !global;\\n    $icon-on-color-disabled: $disabled-03 !global;\\n    $layer-selected-disabled: $disabled-03 !global;\\n    $skeleton-background: $skeleton-01 !global;\\n    $skeleton-element: $skeleton-02 !global;\\n  }\\n  @if global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-css-custom-properties')\\n  {\\n    $interactive-01: var(\\n      --#{$custom-property-prefix}-interactive-01,\\n      map-get($theme, 'interactive-01')\\n    ) !global;\\n    $interactive-02: var(\\n      --#{$custom-property-prefix}-interactive-02,\\n      map-get($theme, 'interactive-02')\\n    ) !global;\\n    $interactive-03: var(\\n      --#{$custom-property-prefix}-interactive-03,\\n      map-get($theme, 'interactive-03')\\n    ) !global;\\n    $interactive-04: var(\\n      --#{$custom-property-prefix}-interactive-04,\\n      map-get($theme, 'interactive-04')\\n    ) !global;\\n    $ui-background: var(\\n      --#{$custom-property-prefix}-ui-background,\\n      map-get($theme, 'ui-background')\\n    ) !global;\\n    $ui-01: var(\\n      --#{$custom-property-prefix}-ui-01,\\n      map-get($theme, 'ui-01')\\n    ) !global;\\n    $ui-02: var(\\n      --#{$custom-property-prefix}-ui-02,\\n      map-get($theme, 'ui-02')\\n    ) !global;\\n    $ui-03: var(\\n      --#{$custom-property-prefix}-ui-03,\\n      map-get($theme, 'ui-03')\\n    ) !global;\\n    $ui-04: var(\\n      --#{$custom-property-prefix}-ui-04,\\n      map-get($theme, 'ui-04')\\n    ) !global;\\n    $ui-05: var(\\n      --#{$custom-property-prefix}-ui-05,\\n      map-get($theme, 'ui-05')\\n    ) !global;\\n    $text-01: var(\\n      --#{$custom-property-prefix}-text-01,\\n      map-get($theme, 'text-01')\\n    ) !global;\\n    $text-02: var(\\n      --#{$custom-property-prefix}-text-02,\\n      map-get($theme, 'text-02')\\n    ) !global;\\n    $text-03: var(\\n      --#{$custom-property-prefix}-text-03,\\n      map-get($theme, 'text-03')\\n    ) !global;\\n    $text-04: var(\\n      --#{$custom-property-prefix}-text-04,\\n      map-get($theme, 'text-04')\\n    ) !global;\\n    $text-05: var(\\n      --#{$custom-property-prefix}-text-05,\\n      map-get($theme, 'text-05')\\n    ) !global;\\n    $text-error: var(\\n      --#{$custom-property-prefix}-text-error,\\n      map-get($theme, 'text-error')\\n    ) !global;\\n    $icon-01: var(\\n      --#{$custom-property-prefix}-icon-01,\\n      map-get($theme, 'icon-01')\\n    ) !global;\\n    $icon-02: var(\\n      --#{$custom-property-prefix}-icon-02,\\n      map-get($theme, 'icon-02')\\n    ) !global;\\n    $icon-03: var(\\n      --#{$custom-property-prefix}-icon-03,\\n      map-get($theme, 'icon-03')\\n    ) !global;\\n    $link-01: var(\\n      --#{$custom-property-prefix}-link-01,\\n      map-get($theme, 'link-01')\\n    ) !global;\\n    $link-02: var(\\n      --#{$custom-property-prefix}-link-02,\\n      map-get($theme, 'link-02')\\n    ) !global;\\n    $inverse-link: var(\\n      --#{$custom-property-prefix}-inverse-link,\\n      map-get($theme, 'inverse-link')\\n    ) !global;\\n    $field-01: var(\\n      --#{$custom-property-prefix}-field-01,\\n      map-get($theme, 'field-01')\\n    ) !global;\\n    $field-02: var(\\n      --#{$custom-property-prefix}-field-02,\\n      map-get($theme, 'field-02')\\n    ) !global;\\n    $inverse-01: var(\\n      --#{$custom-property-prefix}-inverse-01,\\n      map-get($theme, 'inverse-01')\\n    ) !global;\\n    $inverse-02: var(\\n      --#{$custom-property-prefix}-inverse-02,\\n      map-get($theme, 'inverse-02')\\n    ) !global;\\n    $support-01: var(\\n      --#{$custom-property-prefix}-support-01,\\n      map-get($theme, 'support-01')\\n    ) !global;\\n    $support-02: var(\\n      --#{$custom-property-prefix}-support-02,\\n      map-get($theme, 'support-02')\\n    ) !global;\\n    $support-03: var(\\n      --#{$custom-property-prefix}-support-03,\\n      map-get($theme, 'support-03')\\n    ) !global;\\n    $support-04: var(\\n      --#{$custom-property-prefix}-support-04,\\n      map-get($theme, 'support-04')\\n    ) !global;\\n    $inverse-support-01: var(\\n      --#{$custom-property-prefix}-inverse-support-01,\\n      map-get($theme, 'inverse-support-01')\\n    ) !global;\\n    $inverse-support-02: var(\\n      --#{$custom-property-prefix}-inverse-support-02,\\n      map-get($theme, 'inverse-support-02')\\n    ) !global;\\n    $inverse-support-03: var(\\n      --#{$custom-property-prefix}-inverse-support-03,\\n      map-get($theme, 'inverse-support-03')\\n    ) !global;\\n    $inverse-support-04: var(\\n      --#{$custom-property-prefix}-inverse-support-04,\\n      map-get($theme, 'inverse-support-04')\\n    ) !global;\\n    $overlay-01: var(\\n      --#{$custom-property-prefix}-overlay-01,\\n      map-get($theme, 'overlay-01')\\n    ) !global;\\n    $danger-01: var(\\n      --#{$custom-property-prefix}-danger-01,\\n      map-get($theme, 'danger-01')\\n    ) !global;\\n    $danger-02: var(\\n      --#{$custom-property-prefix}-danger-02,\\n      map-get($theme, 'danger-02')\\n    ) !global;\\n    $focus: var(\\n      --#{$custom-property-prefix}-focus,\\n      map-get($theme, 'focus')\\n    ) !global;\\n    $inverse-focus-ui: var(\\n      --#{$custom-property-prefix}-inverse-focus-ui,\\n      map-get($theme, 'inverse-focus-ui')\\n    ) !global;\\n    $hover-primary: var(\\n      --#{$custom-property-prefix}-hover-primary,\\n      map-get($theme, 'hover-primary')\\n    ) !global;\\n    $active-primary: var(\\n      --#{$custom-property-prefix}-active-primary,\\n      map-get($theme, 'active-primary')\\n    ) !global;\\n    $hover-primary-text: var(\\n      --#{$custom-property-prefix}-hover-primary-text,\\n      map-get($theme, 'hover-primary-text')\\n    ) !global;\\n    $hover-secondary: var(\\n      --#{$custom-property-prefix}-hover-secondary,\\n      map-get($theme, 'hover-secondary')\\n    ) !global;\\n    $active-secondary: var(\\n      --#{$custom-property-prefix}-active-secondary,\\n      map-get($theme, 'active-secondary')\\n    ) !global;\\n    $hover-tertiary: var(\\n      --#{$custom-property-prefix}-hover-tertiary,\\n      map-get($theme, 'hover-tertiary')\\n    ) !global;\\n    $active-tertiary: var(\\n      --#{$custom-property-prefix}-active-tertiary,\\n      map-get($theme, 'active-tertiary')\\n    ) !global;\\n    $hover-ui: var(\\n      --#{$custom-property-prefix}-hover-ui,\\n      map-get($theme, 'hover-ui')\\n    ) !global;\\n    $hover-light-ui: var(\\n      --#{$custom-property-prefix}-hover-light-ui,\\n      map-get($theme, 'hover-light-ui')\\n    ) !global;\\n    $hover-selected-ui: var(\\n      --#{$custom-property-prefix}-hover-selected-ui,\\n      map-get($theme, 'hover-selected-ui')\\n    ) !global;\\n    $active-ui: var(\\n      --#{$custom-property-prefix}-active-ui,\\n      map-get($theme, 'active-ui')\\n    ) !global;\\n    $active-light-ui: var(\\n      --#{$custom-property-prefix}-active-light-ui,\\n      map-get($theme, 'active-light-ui')\\n    ) !global;\\n    $selected-ui: var(\\n      --#{$custom-property-prefix}-selected-ui,\\n      map-get($theme, 'selected-ui')\\n    ) !global;\\n    $selected-light-ui: var(\\n      --#{$custom-property-prefix}-selected-light-ui,\\n      map-get($theme, 'selected-light-ui')\\n    ) !global;\\n    $inverse-hover-ui: var(\\n      --#{$custom-property-prefix}-inverse-hover-ui,\\n      map-get($theme, 'inverse-hover-ui')\\n    ) !global;\\n    $hover-danger: var(\\n      --#{$custom-property-prefix}-hover-danger,\\n      map-get($theme, 'hover-danger')\\n    ) !global;\\n    $active-danger: var(\\n      --#{$custom-property-prefix}-active-danger,\\n      map-get($theme, 'active-danger')\\n    ) !global;\\n    $hover-row: var(\\n      --#{$custom-property-prefix}-hover-row,\\n      map-get($theme, 'hover-row')\\n    ) !global;\\n    $visited-link: var(\\n      --#{$custom-property-prefix}-visited-link,\\n      map-get($theme, 'visited-link')\\n    ) !global;\\n    $disabled-01: var(\\n      --#{$custom-property-prefix}-disabled-01,\\n      map-get($theme, 'disabled-01')\\n    ) !global;\\n    $disabled-02: var(\\n      --#{$custom-property-prefix}-disabled-02,\\n      map-get($theme, 'disabled-02')\\n    ) !global;\\n    $disabled-03: var(\\n      --#{$custom-property-prefix}-disabled-03,\\n      map-get($theme, 'disabled-03')\\n    ) !global;\\n    $highlight: var(\\n      --#{$custom-property-prefix}-highlight,\\n      map-get($theme, 'highlight')\\n    ) !global;\\n    $decorative-01: var(\\n      --#{$custom-property-prefix}-decorative-01,\\n      map-get($theme, 'decorative-01')\\n    ) !global;\\n    $button-separator: var(\\n      --#{$custom-property-prefix}-button-separator,\\n      map-get($theme, 'button-separator')\\n    ) !global;\\n    $skeleton-01: var(\\n      --#{$custom-property-prefix}-skeleton-01,\\n      map-get($theme, 'skeleton-01')\\n    ) !global;\\n    $skeleton-02: var(\\n      --#{$custom-property-prefix}-skeleton-02,\\n      map-get($theme, 'skeleton-02')\\n    ) !global;\\n    $background: var(\\n      --#{$custom-property-prefix}-background,\\n      map-get($theme, 'background')\\n    ) !global;\\n    $layer: var(\\n      --#{$custom-property-prefix}-layer,\\n      map-get($theme, 'layer')\\n    ) !global;\\n    $layer-accent: var(\\n      --#{$custom-property-prefix}-layer-accent,\\n      map-get($theme, 'layer-accent')\\n    ) !global;\\n    $layer-accent-hover: var(\\n      --#{$custom-property-prefix}-layer-accent-hover,\\n      map-get($theme, 'layer-accent-hover')\\n    ) !global;\\n    $layer-accent-active: var(\\n      --#{$custom-property-prefix}-layer-accent-active,\\n      map-get($theme, 'layer-accent-active')\\n    ) !global;\\n    $field: var(\\n      --#{$custom-property-prefix}-field,\\n      map-get($theme, 'field')\\n    ) !global;\\n    $background-inverse: var(\\n      --#{$custom-property-prefix}-background-inverse,\\n      map-get($theme, 'background-inverse')\\n    ) !global;\\n    $background-brand: var(\\n      --#{$custom-property-prefix}-background-brand,\\n      map-get($theme, 'background-brand')\\n    ) !global;\\n    $interactive: var(\\n      --#{$custom-property-prefix}-interactive,\\n      map-get($theme, 'interactive')\\n    ) !global;\\n    $border-subtle: var(\\n      --#{$custom-property-prefix}-border-subtle,\\n      map-get($theme, 'border-subtle')\\n    ) !global;\\n    $border-strong: var(\\n      --#{$custom-property-prefix}-border-strong,\\n      map-get($theme, 'border-strong')\\n    ) !global;\\n    $border-inverse: var(\\n      --#{$custom-property-prefix}-border-inverse,\\n      map-get($theme, 'border-inverse')\\n    ) !global;\\n    $border-interactive: var(\\n      --#{$custom-property-prefix}-border-interactive,\\n      map-get($theme, 'border-interactive')\\n    ) !global;\\n    $text-primary: var(\\n      --#{$custom-property-prefix}-text-primary,\\n      map-get($theme, 'text-primary')\\n    ) !global;\\n    $text-secondary: var(\\n      --#{$custom-property-prefix}-text-secondary,\\n      map-get($theme, 'text-secondary')\\n    ) !global;\\n    $text-placeholder: var(\\n      --#{$custom-property-prefix}-text-placeholder,\\n      map-get($theme, 'text-placeholder')\\n    ) !global;\\n    $text-helper: var(\\n      --#{$custom-property-prefix}-text-helper,\\n      map-get($theme, 'text-helper')\\n    ) !global;\\n    $text-on-color: var(\\n      --#{$custom-property-prefix}-text-on-color,\\n      map-get($theme, 'text-on-color')\\n    ) !global;\\n    $text-inverse: var(\\n      --#{$custom-property-prefix}-text-inverse,\\n      map-get($theme, 'text-inverse')\\n    ) !global;\\n    $link-primary: var(\\n      --#{$custom-property-prefix}-link-primary,\\n      map-get($theme, 'link-primary')\\n    ) !global;\\n    $link-secondary: var(\\n      --#{$custom-property-prefix}-link-secondary,\\n      map-get($theme, 'link-secondary')\\n    ) !global;\\n    $link-visited: var(\\n      --#{$custom-property-prefix}-link-visited,\\n      map-get($theme, 'link-visited')\\n    ) !global;\\n    $link-inverse: var(\\n      --#{$custom-property-prefix}-link-inverse,\\n      map-get($theme, 'link-inverse')\\n    ) !global;\\n    $icon-primary: var(\\n      --#{$custom-property-prefix}-icon-primary,\\n      map-get($theme, 'icon-primary')\\n    ) !global;\\n    $icon-secondary: var(\\n      --#{$custom-property-prefix}-icon-secondary,\\n      map-get($theme, 'icon-secondary')\\n    ) !global;\\n    $icon-on-color: var(\\n      --#{$custom-property-prefix}-icon-on-color,\\n      map-get($theme, 'icon-on-color')\\n    ) !global;\\n    $icon-inverse: var(\\n      --#{$custom-property-prefix}-icon-inverse,\\n      map-get($theme, 'icon-inverse')\\n    ) !global;\\n    $support-error: var(\\n      --#{$custom-property-prefix}-support-error,\\n      map-get($theme, 'support-error')\\n    ) !global;\\n    $support-success: var(\\n      --#{$custom-property-prefix}-support-success,\\n      map-get($theme, 'support-success')\\n    ) !global;\\n    $support-warning: var(\\n      --#{$custom-property-prefix}-support-warning,\\n      map-get($theme, 'support-warning')\\n    ) !global;\\n    $support-info: var(\\n      --#{$custom-property-prefix}-support-info,\\n      map-get($theme, 'support-info')\\n    ) !global;\\n    $support-error-inverse: var(\\n      --#{$custom-property-prefix}-support-error-inverse,\\n      map-get($theme, 'support-error-inverse')\\n    ) !global;\\n    $support-success-inverse: var(\\n      --#{$custom-property-prefix}-support-success-inverse,\\n      map-get($theme, 'support-success-inverse')\\n    ) !global;\\n    $support-warning-inverse: var(\\n      --#{$custom-property-prefix}-support-warning-inverse,\\n      map-get($theme, 'support-warning-inverse')\\n    ) !global;\\n    $support-info-inverse: var(\\n      --#{$custom-property-prefix}-support-info-inverse,\\n      map-get($theme, 'support-info-inverse')\\n    ) !global;\\n    $overlay: var(\\n      --#{$custom-property-prefix}-overlay,\\n      map-get($theme, 'overlay')\\n    ) !global;\\n    $toggle-off: var(\\n      --#{$custom-property-prefix}-toggle-off,\\n      map-get($theme, 'toggle-off')\\n    ) !global;\\n    $button-primary: var(\\n      --#{$custom-property-prefix}-button-primary,\\n      map-get($theme, 'button-primary')\\n    ) !global;\\n    $button-secondary: var(\\n      --#{$custom-property-prefix}-button-secondary,\\n      map-get($theme, 'button-secondary')\\n    ) !global;\\n    $button-tertiary: var(\\n      --#{$custom-property-prefix}-button-tertiary,\\n      map-get($theme, 'button-tertiary')\\n    ) !global;\\n    $button-danger-primary: var(\\n      --#{$custom-property-prefix}-button-danger-primary,\\n      map-get($theme, 'button-danger-primary')\\n    ) !global;\\n    $button-danger-secondary: var(\\n      --#{$custom-property-prefix}-button-danger-secondary,\\n      map-get($theme, 'button-danger-secondary')\\n    ) !global;\\n    $background-active: var(\\n      --#{$custom-property-prefix}-background-active,\\n      map-get($theme, 'background-active')\\n    ) !global;\\n    $layer-active: var(\\n      --#{$custom-property-prefix}-layer-active,\\n      map-get($theme, 'layer-active')\\n    ) !global;\\n    $button-danger-active: var(\\n      --#{$custom-property-prefix}-button-danger-active,\\n      map-get($theme, 'button-danger-active')\\n    ) !global;\\n    $button-primary-active: var(\\n      --#{$custom-property-prefix}-button-primary-active,\\n      map-get($theme, 'button-primary-active')\\n    ) !global;\\n    $button-secondary-active: var(\\n      --#{$custom-property-prefix}-button-secondary-active,\\n      map-get($theme, 'button-secondary-active')\\n    ) !global;\\n    $button-tertiary-active: var(\\n      --#{$custom-property-prefix}-button-tertiary-active,\\n      map-get($theme, 'button-tertiary-active')\\n    ) !global;\\n    $focus-inset: var(\\n      --#{$custom-property-prefix}-focus-inset,\\n      map-get($theme, 'focus-inset')\\n    ) !global;\\n    $focus-inverse: var(\\n      --#{$custom-property-prefix}-focus-inverse,\\n      map-get($theme, 'focus-inverse')\\n    ) !global;\\n    $background-hover: var(\\n      --#{$custom-property-prefix}-background-hover,\\n      map-get($theme, 'background-hover')\\n    ) !global;\\n    $layer-hover: var(\\n      --#{$custom-property-prefix}-layer-hover,\\n      map-get($theme, 'layer-hover')\\n    ) !global;\\n    $field-hover: var(\\n      --#{$custom-property-prefix}-field-hover,\\n      map-get($theme, 'field-hover')\\n    ) !global;\\n    $background-inverse-hover: var(\\n      --#{$custom-property-prefix}-background-inverse-hover,\\n      map-get($theme, 'background-inverse-hover')\\n    ) !global;\\n    $link-primary-hover: var(\\n      --#{$custom-property-prefix}-link-primary-hover,\\n      map-get($theme, 'link-primary-hover')\\n    ) !global;\\n    $button-danger-hover: var(\\n      --#{$custom-property-prefix}-button-danger-hover,\\n      map-get($theme, 'button-danger-hover')\\n    ) !global;\\n    $button-primary-hover: var(\\n      --#{$custom-property-prefix}-button-primary-hover,\\n      map-get($theme, 'button-primary-hover')\\n    ) !global;\\n    $button-secondary-hover: var(\\n      --#{$custom-property-prefix}-button-secondary-hover,\\n      map-get($theme, 'button-secondary-hover')\\n    ) !global;\\n    $button-tertiary-hover: var(\\n      --#{$custom-property-prefix}-button-tertiary-hover,\\n      map-get($theme, 'button-tertiary-hover')\\n    ) !global;\\n    $background-selected: var(\\n      --#{$custom-property-prefix}-background-selected,\\n      map-get($theme, 'background-selected')\\n    ) !global;\\n    $background-selected-hover: var(\\n      --#{$custom-property-prefix}-background-selected-hover,\\n      map-get($theme, 'background-selected-hover')\\n    ) !global;\\n    $layer-selected: var(\\n      --#{$custom-property-prefix}-layer-selected,\\n      map-get($theme, 'layer-selected')\\n    ) !global;\\n    $layer-selected-hover: var(\\n      --#{$custom-property-prefix}-layer-selected-hover,\\n      map-get($theme, 'layer-selected-hover')\\n    ) !global;\\n    $layer-selected-inverse: var(\\n      --#{$custom-property-prefix}-layer-selected-inverse,\\n      map-get($theme, 'layer-selected-inverse')\\n    ) !global;\\n    $border-subtle-selected: var(\\n      --#{$custom-property-prefix}-border-subtle-selected,\\n      map-get($theme, 'border-subtle-selected')\\n    ) !global;\\n    $layer-disabled: var(\\n      --#{$custom-property-prefix}-layer-disabled,\\n      map-get($theme, 'layer-disabled')\\n    ) !global;\\n    $field-disabled: var(\\n      --#{$custom-property-prefix}-field-disabled,\\n      map-get($theme, 'field-disabled')\\n    ) !global;\\n    $border-disabled: var(\\n      --#{$custom-property-prefix}-border-disabled,\\n      map-get($theme, 'border-disabled')\\n    ) !global;\\n    $text-disabled: var(\\n      --#{$custom-property-prefix}-text-disabled,\\n      map-get($theme, 'text-disabled')\\n    ) !global;\\n    $button-disabled: var(\\n      --#{$custom-property-prefix}-button-disabled,\\n      map-get($theme, 'button-disabled')\\n    ) !global;\\n    $icon-disabled: var(\\n      --#{$custom-property-prefix}-icon-disabled,\\n      map-get($theme, 'icon-disabled')\\n    ) !global;\\n    $text-on-color-disabled: var(\\n      --#{$custom-property-prefix}-text-on-color-disabled,\\n      map-get($theme, 'text-on-color-disabled')\\n    ) !global;\\n    $icon-on-color-disabled: var(\\n      --#{$custom-property-prefix}-icon-on-color-disabled,\\n      map-get($theme, 'icon-on-color-disabled')\\n    ) !global;\\n    $layer-selected-disabled: var(\\n      --#{$custom-property-prefix}-layer-selected-disabled,\\n      map-get($theme, 'layer-selected-disabled')\\n    ) !global;\\n    $skeleton-background: var(\\n      --#{$custom-property-prefix}-skeleton-background,\\n      map-get($theme, 'skeleton-background')\\n    ) !global;\\n    $skeleton-element: var(\\n      --#{$custom-property-prefix}-skeleton-element,\\n      map-get($theme, 'skeleton-element')\\n    ) !global;\\n    $brand-01: var(\\n      --#{$custom-property-prefix}-brand-01,\\n      map-get($theme, 'brand-01')\\n    ) !global;\\n    $brand-02: var(\\n      --#{$custom-property-prefix}-brand-02,\\n      map-get($theme, 'brand-02')\\n    ) !global;\\n    $brand-03: var(\\n      --#{$custom-property-prefix}-brand-03,\\n      map-get($theme, 'brand-03')\\n    ) !global;\\n    $active-01: var(\\n      --#{$custom-property-prefix}-active-01,\\n      map-get($theme, 'active-01')\\n    ) !global;\\n    $hover-field: var(\\n      --#{$custom-property-prefix}-hover-field,\\n      map-get($theme, 'hover-field')\\n    ) !global;\\n    $danger: var(\\n      --#{$custom-property-prefix}-danger,\\n      map-get($theme, 'danger')\\n    ) !global;\\n    $spacing-01: var(\\n      --#{$custom-property-prefix}-spacing-01,\\n      map-get($theme, 'spacing-01')\\n    ) !global;\\n    $spacing-02: var(\\n      --#{$custom-property-prefix}-spacing-02,\\n      map-get($theme, 'spacing-02')\\n    ) !global;\\n    $spacing-03: var(\\n      --#{$custom-property-prefix}-spacing-03,\\n      map-get($theme, 'spacing-03')\\n    ) !global;\\n    $spacing-04: var(\\n      --#{$custom-property-prefix}-spacing-04,\\n      map-get($theme, 'spacing-04')\\n    ) !global;\\n    $spacing-05: var(\\n      --#{$custom-property-prefix}-spacing-05,\\n      map-get($theme, 'spacing-05')\\n    ) !global;\\n    $spacing-06: var(\\n      --#{$custom-property-prefix}-spacing-06,\\n      map-get($theme, 'spacing-06')\\n    ) !global;\\n    $spacing-07: var(\\n      --#{$custom-property-prefix}-spacing-07,\\n      map-get($theme, 'spacing-07')\\n    ) !global;\\n    $spacing-08: var(\\n      --#{$custom-property-prefix}-spacing-08,\\n      map-get($theme, 'spacing-08')\\n    ) !global;\\n    $spacing-09: var(\\n      --#{$custom-property-prefix}-spacing-09,\\n      map-get($theme, 'spacing-09')\\n    ) !global;\\n    $spacing-10: var(\\n      --#{$custom-property-prefix}-spacing-10,\\n      map-get($theme, 'spacing-10')\\n    ) !global;\\n    $spacing-11: var(\\n      --#{$custom-property-prefix}-spacing-11,\\n      map-get($theme, 'spacing-11')\\n    ) !global;\\n    $spacing-12: var(\\n      --#{$custom-property-prefix}-spacing-12,\\n      map-get($theme, 'spacing-12')\\n    ) !global;\\n    $spacing-13: var(\\n      --#{$custom-property-prefix}-spacing-13,\\n      map-get($theme, 'spacing-13')\\n    ) !global;\\n    $fluid-spacing-01: var(\\n      --#{$custom-property-prefix}-fluid-spacing-01,\\n      map-get($theme, 'fluid-spacing-01')\\n    ) !global;\\n    $fluid-spacing-02: var(\\n      --#{$custom-property-prefix}-fluid-spacing-02,\\n      map-get($theme, 'fluid-spacing-02')\\n    ) !global;\\n    $fluid-spacing-03: var(\\n      --#{$custom-property-prefix}-fluid-spacing-03,\\n      map-get($theme, 'fluid-spacing-03')\\n    ) !global;\\n    $fluid-spacing-04: var(\\n      --#{$custom-property-prefix}-fluid-spacing-04,\\n      map-get($theme, 'fluid-spacing-04')\\n    ) !global;\\n    $layout-01: var(\\n      --#{$custom-property-prefix}-layout-01,\\n      map-get($theme, 'layout-01')\\n    ) !global;\\n    $layout-02: var(\\n      --#{$custom-property-prefix}-layout-02,\\n      map-get($theme, 'layout-02')\\n    ) !global;\\n    $layout-03: var(\\n      --#{$custom-property-prefix}-layout-03,\\n      map-get($theme, 'layout-03')\\n    ) !global;\\n    $layout-04: var(\\n      --#{$custom-property-prefix}-layout-04,\\n      map-get($theme, 'layout-04')\\n    ) !global;\\n    $layout-05: var(\\n      --#{$custom-property-prefix}-layout-05,\\n      map-get($theme, 'layout-05')\\n    ) !global;\\n    $layout-06: var(\\n      --#{$custom-property-prefix}-layout-06,\\n      map-get($theme, 'layout-06')\\n    ) !global;\\n    $layout-07: var(\\n      --#{$custom-property-prefix}-layout-07,\\n      map-get($theme, 'layout-07')\\n    ) !global;\\n    $container-01: var(\\n      --#{$custom-property-prefix}-container-01,\\n      map-get($theme, 'container-01')\\n    ) !global;\\n    $container-02: var(\\n      --#{$custom-property-prefix}-container-02,\\n      map-get($theme, 'container-02')\\n    ) !global;\\n    $container-03: var(\\n      --#{$custom-property-prefix}-container-03,\\n      map-get($theme, 'container-03')\\n    ) !global;\\n    $container-04: var(\\n      --#{$custom-property-prefix}-container-04,\\n      map-get($theme, 'container-04')\\n    ) !global;\\n    $container-05: var(\\n      --#{$custom-property-prefix}-container-05,\\n      map-get($theme, 'container-05')\\n    ) !global;\\n    $size-xsmall: var(\\n      --#{$custom-property-prefix}-size-xsmall,\\n      map-get($theme, 'size-xsmall')\\n    ) !global;\\n    $size-small: var(\\n      --#{$custom-property-prefix}-size-small,\\n      map-get($theme, 'size-small')\\n    ) !global;\\n    $size-medium: var(\\n      --#{$custom-property-prefix}-size-medium,\\n      map-get($theme, 'size-medium')\\n    ) !global;\\n    $size-large: var(\\n      --#{$custom-property-prefix}-size-large,\\n      map-get($theme, 'size-large')\\n    ) !global;\\n    $size-xlarge: var(\\n      --#{$custom-property-prefix}-size-xlarge,\\n      map-get($theme, 'size-xlarge')\\n    ) !global;\\n    $size-2XLarge: var(\\n      --#{$custom-property-prefix}-size-2XLarge,\\n      map-get($theme, 'size-2XLarge')\\n    ) !global;\\n    $icon-size-01: var(\\n      --#{$custom-property-prefix}-icon-size-01,\\n      map-get($theme, 'icon-size-01')\\n    ) !global;\\n    $icon-size-02: var(\\n      --#{$custom-property-prefix}-icon-size-02,\\n      map-get($theme, 'icon-size-02')\\n    ) !global;\\n  }\\n  @if $emit-custom-properties == true {\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-01',\\n        map-get($theme, 'interactive-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-02',\\n        map-get($theme, 'interactive-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-03',\\n        map-get($theme, 'interactive-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-04',\\n        map-get($theme, 'interactive-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'ui-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'ui-background',\\n        map-get($theme, 'ui-background')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-01', $emit-difference) {\\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-02', $emit-difference) {\\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-03', $emit-difference) {\\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-04', $emit-difference) {\\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-05', $emit-difference) {\\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-01', $emit-difference) {\\n      @include custom-property('text-01', map-get($theme, 'text-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-02', $emit-difference) {\\n      @include custom-property('text-02', map-get($theme, 'text-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-03', $emit-difference) {\\n      @include custom-property('text-03', map-get($theme, 'text-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-04', $emit-difference) {\\n      @include custom-property('text-04', map-get($theme, 'text-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-05', $emit-difference) {\\n      @include custom-property('text-05', map-get($theme, 'text-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-error', map-get($theme, 'text-error'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-01', $emit-difference) {\\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-02', $emit-difference) {\\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-03', $emit-difference) {\\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-01', $emit-difference) {\\n      @include custom-property('link-01', map-get($theme, 'link-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-02', $emit-difference) {\\n      @include custom-property('link-02', map-get($theme, 'link-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-01', $emit-difference)\\n    {\\n      @include custom-property('field-01', map-get($theme, 'field-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-02', $emit-difference)\\n    {\\n      @include custom-property('field-02', map-get($theme, 'field-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-01', map-get($theme, 'support-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-02', map-get($theme, 'support-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-03', map-get($theme, 'support-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-04', map-get($theme, 'support-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-01',\\n        map-get($theme, 'inverse-support-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-02',\\n        map-get($theme, 'inverse-support-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-03',\\n        map-get($theme, 'inverse-support-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-04',\\n        map-get($theme, 'inverse-support-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'overlay-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-01', $emit-difference)\\n    {\\n      @include custom-property('danger-01', map-get($theme, 'danger-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-02', $emit-difference)\\n    {\\n      @include custom-property('danger-02', map-get($theme, 'danger-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'focus', $emit-difference) {\\n      @include custom-property('focus', map-get($theme, 'focus'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-focus-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-focus-ui',\\n        map-get($theme, 'inverse-focus-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary',\\n        map-get($theme, 'hover-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-primary',\\n        map-get($theme, 'active-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary-text',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary-text',\\n        map-get($theme, 'hover-primary-text')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-secondary',\\n        map-get($theme, 'hover-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-secondary',\\n        map-get($theme, 'active-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-tertiary',\\n        map-get($theme, 'hover-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-tertiary',\\n        map-get($theme, 'active-tertiary')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-ui', $emit-difference)\\n    {\\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-light-ui',\\n        map-get($theme, 'hover-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-selected-ui',\\n        map-get($theme, 'hover-selected-ui')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-ui', $emit-difference)\\n    {\\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-light-ui',\\n        map-get($theme, 'active-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'selected-light-ui',\\n        map-get($theme, 'selected-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-hover-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-hover-ui',\\n        map-get($theme, 'inverse-hover-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-danger',\\n        map-get($theme, 'active-danger')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-row', $emit-difference)\\n    {\\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'visited-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'highlight', $emit-difference)\\n    {\\n      @include custom-property('highlight', map-get($theme, 'highlight'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'decorative-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'decorative-01',\\n        map-get($theme, 'decorative-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-separator',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-separator',\\n        map-get($theme, 'button-separator')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('background', map-get($theme, 'background'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layer', $emit-difference) {\\n      @include custom-property('layer', map-get($theme, 'layer'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-accent', map-get($theme, 'layer-accent'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-hover',\\n        map-get($theme, 'layer-accent-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-active',\\n        map-get($theme, 'layer-accent-active')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field', $emit-difference) {\\n      @include custom-property('field', map-get($theme, 'field'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse',\\n        map-get($theme, 'background-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-brand',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-brand',\\n        map-get($theme, 'background-brand')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('interactive', map-get($theme, 'interactive'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle',\\n        map-get($theme, 'border-subtle')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-strong',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-strong',\\n        map-get($theme, 'border-strong')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-inverse',\\n        map-get($theme, 'border-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-interactive',\\n        map-get($theme, 'border-interactive')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-primary', map-get($theme, 'text-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-secondary',\\n        map-get($theme, 'text-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-placeholder',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-placeholder',\\n        map-get($theme, 'text-placeholder')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-helper',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-helper', map-get($theme, 'text-helper'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color',\\n        map-get($theme, 'text-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-inverse', map-get($theme, 'text-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-primary', map-get($theme, 'link-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-secondary',\\n        map-get($theme, 'link-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-visited',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-visited', map-get($theme, 'link-visited'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-inverse', map-get($theme, 'link-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-primary', map-get($theme, 'icon-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-secondary',\\n        map-get($theme, 'icon-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color',\\n        map-get($theme, 'icon-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-inverse', map-get($theme, 'icon-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error',\\n        map-get($theme, 'support-error')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success',\\n        map-get($theme, 'support-success')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning',\\n        map-get($theme, 'support-warning')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-info', map-get($theme, 'support-info'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error-inverse',\\n        map-get($theme, 'support-error-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success-inverse',\\n        map-get($theme, 'support-success-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning-inverse',\\n        map-get($theme, 'support-warning-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-info-inverse',\\n        map-get($theme, 'support-info-inverse')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'overlay', $emit-difference) {\\n      @include custom-property('overlay', map-get($theme, 'overlay'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'toggle-off',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('toggle-off', map-get($theme, 'toggle-off'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary',\\n        map-get($theme, 'button-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary',\\n        map-get($theme, 'button-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary',\\n        map-get($theme, 'button-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-primary',\\n        map-get($theme, 'button-danger-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-secondary',\\n        map-get($theme, 'button-danger-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-active',\\n        map-get($theme, 'background-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-active', map-get($theme, 'layer-active'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-active',\\n        map-get($theme, 'button-danger-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-active',\\n        map-get($theme, 'button-primary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-active',\\n        map-get($theme, 'button-secondary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-active',\\n        map-get($theme, 'button-tertiary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inset',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('focus-inset', map-get($theme, 'focus-inset'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'focus-inverse',\\n        map-get($theme, 'focus-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-hover',\\n        map-get($theme, 'background-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-hover', map-get($theme, 'layer-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('field-hover', map-get($theme, 'field-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse-hover',\\n        map-get($theme, 'background-inverse-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-primary-hover',\\n        map-get($theme, 'link-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-hover',\\n        map-get($theme, 'button-danger-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-hover',\\n        map-get($theme, 'button-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-hover',\\n        map-get($theme, 'button-secondary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-hover',\\n        map-get($theme, 'button-tertiary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected',\\n        map-get($theme, 'background-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected-hover',\\n        map-get($theme, 'background-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected',\\n        map-get($theme, 'layer-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-hover',\\n        map-get($theme, 'layer-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-inverse',\\n        map-get($theme, 'layer-selected-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle-selected',\\n        map-get($theme, 'border-subtle-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-disabled',\\n        map-get($theme, 'layer-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'field-disabled',\\n        map-get($theme, 'field-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-disabled',\\n        map-get($theme, 'border-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-disabled',\\n        map-get($theme, 'text-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-disabled',\\n        map-get($theme, 'button-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-disabled',\\n        map-get($theme, 'icon-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color-disabled',\\n        map-get($theme, 'text-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color-disabled',\\n        map-get($theme, 'icon-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-disabled',\\n        map-get($theme, 'layer-selected-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-background',\\n        map-get($theme, 'skeleton-background')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-element',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-element',\\n        map-get($theme, 'skeleton-element')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-01', $emit-difference)\\n    {\\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-02', $emit-difference)\\n    {\\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-03', $emit-difference)\\n    {\\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-01', $emit-difference)\\n    {\\n      @include custom-property('active-01', map-get($theme, 'active-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-field',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger', $emit-difference) {\\n      @include custom-property('danger', map-get($theme, 'danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-02', map-get($theme, 'caption-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-01', $emit-difference)\\n    {\\n      @include custom-property('label-01', map-get($theme, 'label-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-02', $emit-difference)\\n    {\\n      @include custom-property('label-02', map-get($theme, 'label-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-01',\\n        map-get($theme, 'helper-text-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-02',\\n        map-get($theme, 'helper-text-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-01',\\n        map-get($theme, 'body-short-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-02',\\n        map-get($theme, 'body-short-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-01', $emit-difference) {\\n      @include custom-property('code-01', map-get($theme, 'code-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-02', $emit-difference) {\\n      @include custom-property('code-02', map-get($theme, 'code-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-01',\\n        map-get($theme, 'productive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-02',\\n        map-get($theme, 'productive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-03',\\n        map-get($theme, 'productive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-04',\\n        map-get($theme, 'productive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-05',\\n        map-get($theme, 'productive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-06',\\n        map-get($theme, 'productive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-07',\\n        map-get($theme, 'productive-heading-07')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-01',\\n        map-get($theme, 'expressive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-02',\\n        map-get($theme, 'expressive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-03',\\n        map-get($theme, 'expressive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-04',\\n        map-get($theme, 'expressive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-05',\\n        map-get($theme, 'expressive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-06',\\n        map-get($theme, 'expressive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-paragraph-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-paragraph-01',\\n        map-get($theme, 'expressive-paragraph-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-01', map-get($theme, 'display-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-02', map-get($theme, 'display-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-03', map-get($theme, 'display-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-04', map-get($theme, 'display-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-08',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-09',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-10',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-11',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-12',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-13',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-13', map-get($theme, 'spacing-13'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-01',\\n        map-get($theme, 'fluid-spacing-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-02',\\n        map-get($theme, 'fluid-spacing-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-03',\\n        map-get($theme, 'fluid-spacing-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-04',\\n        map-get($theme, 'fluid-spacing-04')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-01', $emit-difference)\\n    {\\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-02', $emit-difference)\\n    {\\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-03', $emit-difference)\\n    {\\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-04', $emit-difference)\\n    {\\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-05', $emit-difference)\\n    {\\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-06', $emit-difference)\\n    {\\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-07', $emit-difference)\\n    {\\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-01', map-get($theme, 'container-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-02', map-get($theme, 'container-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-03', map-get($theme, 'container-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-04', map-get($theme, 'container-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-05', map-get($theme, 'container-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xsmall',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xsmall', map-get($theme, 'size-xsmall'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-small',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-small', map-get($theme, 'size-small'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-medium',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-medium', map-get($theme, 'size-medium'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-large',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-large', map-get($theme, 'size-large'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xlarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xlarge', map-get($theme, 'size-xlarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-2XLarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-2XLarge', map-get($theme, 'size-2XLarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\\n    }\\n  }\\n\\n  @content;\\n\\n  // Reset to default theme after apply in content\\n  @if $carbon--theme != $parent-carbon-theme {\\n    $carbon--theme: $parent-carbon-theme !global;\\n\\n    @include carbon--theme();\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"loading\": \"-esm-patient-chart__loader-component__loading___W-n36\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".-esm-patient-chart__patient-chart-component__grid___b5G89{display:grid;grid-template-columns:1fr min-content;grid-template-rows:1fr;align-items:stretch;width:inherit}.-esm-patient-chart__patient-chart-component__chartreview___t3a\\\\+\\\\+{grid-row:1;grid-column:1;align-self:start;height:90%;padding-bottom:10px}.-esm-patient-chart__patient-chart-component__chartContainer___6c1xF{flex:1;display:flex;align-items:flex-start;flex-direction:column;padding-right:.125rem}.omrs-breakpoint-gt-tablet .-esm-patient-chart__patient-chart-component__chartContainer___6c1xF{margin-left:var(--omrs-sidenav-width)}.omrs-breakpoint-lt-desktop .-esm-patient-chart__patient-chart-component__innerChartContainer___Den0t{padding-right:0}.action-menu-expanded .-esm-patient-chart__patient-chart-component__innerChartContainer___Den0t{padding-right:301px}.-esm-patient-chart__patient-chart-component__innerChartContainer___Den0t{display:flex;width:100%;padding-right:45px;flex-direction:column}.-esm-patient-chart__patient-chart-component__closeWorkspace___bPRhV{padding-right:0}.-esm-patient-chart__patient-chart-component__activeWorkspace___nfzAj{padding-right:45px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/ui-components/patient-chart.component.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\"],\"names\":[],\"mappings\":\"AAMA,2DACE,YAAA,CACA,qCAAA,CACA,sBAAA,CACA,mBAAA,CACA,aAAA,CAGF,oEACE,UAAA,CACA,aAAA,CACA,gBAAA,CACA,UAAA,CACA,mBAAA,CAGF,qEACE,MAAA,CACA,YAAA,CACA,sBAAA,CACA,qBAAA,CACA,qBChBmB,CDmBrB,gGACE,qCAAA,CAGF,sGACE,eAAA,CAGF,gGACE,mBAnC0B,CAsC5B,0EACE,YAAA,CACA,UAAA,CACA,kBA3CgB,CA4ChB,qBAAA,CAGF,qEACE,eAAA,CAGF,sEACE,kBApDgB\",\"sourcesContent\":[\"@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing\\\";\\n\\n$actionNavOffset: 45px;\\n$actionPanelOffset: 256px;\\n$actionPanelExpandedOffset: $actionNavOffset+$actionPanelOffset;\\n\\n.grid {\\n  display: grid;\\n  grid-template-columns: 1fr min-content;\\n  grid-template-rows: 1fr;\\n  align-items: stretch;\\n  width: inherit;\\n}\\n\\n.chartreview {\\n  grid-row: 1;\\n  grid-column: 1;\\n  align-self: start;\\n  height: 90%;\\n  padding-bottom: 10px;\\n}\\n\\n.chartContainer {\\n  flex: 1;\\n  display: flex;\\n  align-items: flex-start;\\n  flex-direction: column;\\n  padding-right: $spacing-01;\\n}\\n\\n:global(.omrs-breakpoint-gt-tablet) .chartContainer {\\n  margin-left: var(--omrs-sidenav-width);\\n}\\n\\n:global(.omrs-breakpoint-lt-desktop) .innerChartContainer {\\n  padding-right: 0;\\n}\\n\\n:global(.action-menu-expanded) .innerChartContainer {\\n  padding-right: $actionPanelExpandedOffset;\\n}\\n\\n.innerChartContainer {\\n  display: flex;\\n  width: 100%;\\n  padding-right: $actionNavOffset;\\n  flex-direction: column;\\n}\\n\\n.closeWorkspace {\\n  padding-right: 0;\\n}\\n\\n.activeWorkspace {\\n  padding-right: $actionNavOffset;\\n}\\n\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-13: 10rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12,\\n  $carbon--spacing-13\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-13\\n$spacing-13: $carbon--spacing-13 !default;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"grid\": \"-esm-patient-chart__patient-chart-component__grid___b5G89\",\n\t\"chartreview\": \"-esm-patient-chart__patient-chart-component__chartreview___t3a++\",\n\t\"chartContainer\": \"-esm-patient-chart__patient-chart-component__chartContainer___6c1xF\",\n\t\"innerChartContainer\": \"-esm-patient-chart__patient-chart-component__innerChartContainer___Den0t\",\n\t\"closeWorkspace\": \"-esm-patient-chart__patient-chart-component__closeWorkspace___bPRhV\",\n\t\"activeWorkspace\": \"-esm-patient-chart__patient-chart-component__activeWorkspace___nfzAj\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{padding:0;border:0;margin:0;font:inherit;font-size:100%;vertical-align:baseline}button,select,input,textarea{border-radius:0;font-family:inherit}input[type=text]::-ms-clear{display:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}body{line-height:1}sup{vertical-align:super}sub{vertical-align:sub}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:\\\"\\\"}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}button{margin:0}html{font-size:100%}body{font-weight:400;font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility}code{font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace}strong{font-weight:600}@media screen and (-ms-high-contrast: active){svg{fill:ButtonText}}h1{font-size:2.625rem;font-weight:300;line-height:1.199;letter-spacing:0}h2{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}h3{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}h4{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}h5{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}h6{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}p{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}a{color:#0f62fe}em{font-style:italic}@keyframes -esm-patient-chart__workspace-notification-component__skeleton___C5r3P{0%{opacity:.3;transform:scaleX(0);transform-origin:left}20%{opacity:1;transform:scaleX(1);transform-origin:left}28%{transform:scaleX(1);transform-origin:right}51%{transform:scaleX(0);transform-origin:right}58%{transform:scaleX(0);transform-origin:right}82%{transform:scaleX(1);transform-origin:right}83%{transform:scaleX(1);transform-origin:left}96%{transform:scaleX(0);transform-origin:left}100%{opacity:.3;transform:scaleX(0);transform-origin:left}}.-esm-patient-chart__workspace-notification-component__patientChartWrapper___X1fXR{display:flex;position:relative}.-esm-patient-chart__workspace-notification-component__productiveHeading01___cfpln{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.-esm-patient-chart__workspace-notification-component__productiveHeading02___5sYTV,.-esm-patient-chart__workspace-notification-component__messageBody___NEqCv{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-patient-chart__workspace-notification-component__productiveHeading03___R7lgo{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-patient-chart__workspace-notification-component__productiveHeading04___MEKGN{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-patient-chart__workspace-notification-component__bodyLong01___oUBd7{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_css--reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_font-family.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/icons/mixins.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_helper-mixins.scss\",\"webpack://./src/root.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCTE,2ZAiFE,SAAA,CACA,QAAA,CACA,QAAA,CACA,YAAA,CACA,cAAA,CACA,uBAAA,CAIF,6BAIE,eAAA,CACA,mBAAA,CAGF,4BACE,YAAA,CAIF,mFAYE,aAAA,CAGF,KACE,aAAA,CAGF,IACE,oBAAA,CAGF,IACE,kBAAA,CAGF,MAEE,eAAA,CAGF,aAEE,WAAA,CAGF,wDAIE,UAAA,CAGF,MACE,wBAAA,CACA,gBAAA,CAGF,EACE,qBAAA,CAIF,OACE,QAAA,CC3KJ,KACE,cAAA,CAGF,KC0CA,eAAA,CDvCE,gEAViB,CAWjB,iCAAA,CACA,kCAAA,CACA,iCAAA,CAGF,KACE,wGAhBiB,CAmBnB,OC6BA,eAAA,CCxDA,8CACE,IACE,eAAA,CAAA,CFkCJ,GGggBE,kBAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlrBxB,GG4fE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH9qBxB,GGwfE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH1qBxB,GGofE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CHtqBxB,GGgfE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlqBxB,GG4eE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CH9pBxB,EGweE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CH1pBxB,EAII,aAAA,CAMJ,GACE,iBAAA,CIkHF,kFACE,GACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,SAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,KACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAAA,CC3ON,mFACE,YAAA,CACA,iBAAA,CAGF,mFFuiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CEztB1B,8JFmiBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CErtB1B,mFF+hBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CEjtB1B,mFF2hBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CE7sB1B,0EFuhBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n@import './vendor/@carbon/elements/scss/type/reset';\\n@import './vendor/@carbon/elements/scss/icons/mixins';\\n\\n/// Resets default browser styling\\n/// @access public\\n/// @group global-reset\\n@mixin reset {\\n  @if variable-exists(css--reset) == false or $css--reset == false {\\n    box-sizing: border-box;\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    font-family: inherit;\\n    font-size: 100%;\\n    vertical-align: baseline;\\n\\n    *,\\n    *::before,\\n    *::after {\\n      box-sizing: inherit;\\n    }\\n  }\\n}\\n\\n@include exports('css--reset') {\\n  @if variable-exists(css--reset) == false or $css--reset == true {\\n    // http://cssreset.com/scripts/eric-meyer-reset-css/\\n    html,\\n    body,\\n    div,\\n    span,\\n    applet,\\n    object,\\n    iframe,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p,\\n    blockquote,\\n    pre,\\n    a,\\n    abbr,\\n    acronym,\\n    address,\\n    big,\\n    cite,\\n    code,\\n    del,\\n    dfn,\\n    em,\\n    img,\\n    ins,\\n    kbd,\\n    q,\\n    s,\\n    samp,\\n    small,\\n    strike,\\n    strong,\\n    sub,\\n    sup,\\n    tt,\\n    var,\\n    b,\\n    u,\\n    i,\\n    center,\\n    dl,\\n    dt,\\n    dd,\\n    ol,\\n    ul,\\n    li,\\n    fieldset,\\n    form,\\n    label,\\n    legend,\\n    table,\\n    caption,\\n    tbody,\\n    tfoot,\\n    thead,\\n    tr,\\n    th,\\n    td,\\n    article,\\n    aside,\\n    canvas,\\n    details,\\n    embed,\\n    figure,\\n    figcaption,\\n    footer,\\n    header,\\n    hgroup,\\n    menu,\\n    nav,\\n    output,\\n    ruby,\\n    section,\\n    summary,\\n    time,\\n    mark,\\n    audio,\\n    video {\\n      padding: 0;\\n      border: 0;\\n      margin: 0;\\n      font: inherit;\\n      font-size: 100%;\\n      vertical-align: baseline;\\n    }\\n\\n    // Chrome 62 fix\\n    button,\\n    select,\\n    input,\\n    textarea {\\n      border-radius: 0;\\n      font-family: inherit;\\n    }\\n\\n    input[type='text']::-ms-clear {\\n      display: none;\\n    }\\n\\n    /* HTML5 display-role reset for older browsers */\\n    article,\\n    aside,\\n    details,\\n    figcaption,\\n    figure,\\n    footer,\\n    header,\\n    hgroup,\\n    main,\\n    menu,\\n    nav,\\n    section {\\n      display: block;\\n    }\\n\\n    body {\\n      line-height: 1;\\n    }\\n\\n    sup {\\n      vertical-align: super;\\n    }\\n\\n    sub {\\n      vertical-align: sub;\\n    }\\n\\n    ol,\\n    ul {\\n      list-style: none;\\n    }\\n\\n    blockquote,\\n    q {\\n      quotes: none;\\n    }\\n\\n    blockquote::before,\\n    blockquote::after,\\n    q::before,\\n    q::after {\\n      content: '';\\n    }\\n\\n    table {\\n      border-collapse: collapse;\\n      border-spacing: 0;\\n    }\\n\\n    * {\\n      box-sizing: border-box;\\n    }\\n\\n    // Fix to remove added margins on buttons in safari (see #5155)\\n    button {\\n      margin: 0;\\n    }\\n\\n    @include carbon--type-reset;\\n    @include carbon--icons;\\n  }\\n}\\n\\n@include exports('css--default-type') {\\n  @if variable-exists(css--default-type) == false or $css--default-type == true\\n  {\\n    @include carbon--default-type;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/convert';\\n@import 'font-family';\\n@import 'styles';\\n\\n/// Include a type reset for a given body and mono font family\\n/// @param {String} $body-font-family [carbon--font-family('sans')] - The font family used on the `<body>` element\\n/// @param {String} $mono-font-family [carbon--font-family('mono')] - The font family used on elements that require mono fonts, like the `<code>` element\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-reset(\\n  // TODO: remove in next major release. This has been replaced with 100%\\n  $base-font-size: $carbon--base-font-size,\\n  $body-font-family: carbon--font-family('sans'),\\n  $mono-font-family: carbon--font-family('mono')\\n) {\\n  html {\\n    font-size: 100%;\\n  }\\n\\n  body {\\n    @include carbon--font-weight('regular');\\n\\n    font-family: $body-font-family;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-font-smoothing: antialiased;\\n    text-rendering: optimizeLegibility;\\n  }\\n\\n  code {\\n    font-family: $mono-font-family;\\n  }\\n\\n  strong {\\n    @include carbon--font-weight('semibold');\\n  }\\n}\\n\\n/// Include default type styles\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--default-type {\\n  h1 {\\n    @include carbon--type-style('productive-heading-06');\\n  }\\n\\n  h2 {\\n    @include carbon--type-style('productive-heading-05');\\n  }\\n\\n  h3 {\\n    @include carbon--type-style('productive-heading-04');\\n  }\\n\\n  h4 {\\n    @include carbon--type-style('productive-heading-03');\\n  }\\n\\n  h5 {\\n    @include carbon--type-style('productive-heading-02');\\n  }\\n\\n  h6 {\\n    @include carbon--type-style('productive-heading-01');\\n  }\\n\\n  p {\\n    @include carbon--type-style('body-long-02');\\n  }\\n\\n  a {\\n    @if global-variable-exists('carbon--theme') and\\n      map-has-key($carbon--theme, 'link-01')\\n    {\\n      color: map-get($carbon--theme, 'link-01');\\n    } @else {\\n      color: #0062fe;\\n    }\\n  }\\n\\n  em {\\n    font-style: italic;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\\n/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-families: (\\n  'mono':\\n    unquote(\\n      \\\"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\\\"\\n    ),\\n  'sans': unquote(\\\"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-condensed':\\n    unquote(\\\"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-hebrew':\\n    unquote(\\n      \\\"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\\\"\\n    ),\\n  'serif': unquote(\\\"'IBM Plex Serif', 'Georgia', Times, serif\\\"),\\n) !default;\\n\\n/// Get the font-family for an IBM Plex font\\n/// @param {String} $name\\n/// @return {String}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-family($name) {\\n  @return map-get($carbon--font-families, $name);\\n}\\n\\n/// Include the `font-family` definition for the given name in your selector\\n/// @param {String} $name\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-family($name) {\\n  font-family: carbon--font-family($name);\\n}\\n\\n/// Suggested font weights to be used in product\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-weights: (\\n  'light': 300,\\n  'regular': 400,\\n  'semibold': 600,\\n) !default;\\n\\n/// Retrieve the font-weight value for a given name\\n/// @param {String} $weight\\n/// @return {Number}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-weight($weight) {\\n  @return map-get($carbon--font-weights, $weight);\\n}\\n\\n/// Set the `font-weight` property with the value for a given name\\n/// @param {String} $weight\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-weight($weight) {\\n  font-weight: carbon--font-weight($weight);\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Makes SVGs accessible in high contrast mode\\n/// @link https://github.com/IBM/carbon-elements/issues/345#issuecomment-466577293 Carbon-elements #345\\n/// @access public\\n/// @group @carbon/icons\\n@mixin carbon--icons {\\n  @media screen and (-ms-high-contrast: active) {\\n    svg {\\n      fill: ButtonText;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n//----------------------------------------------\\n// Mixins\\n// ---------------------------------------------\\n//\\n//   Category             ||  Description\\n//   ===========================================\\n//   Misc                 ||  General helper @mixins\\n//   Deprecated           ||  Not used anymore\\n//   ===========================================\\n\\n//----------------------------------------------\\n// Misc\\n// ---------------------------------------------\\n\\n@import 'vars';\\n@import 'css--reset';\\n@import 'typography';\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n\\n/// Adds text overflow styling\\n/// @access public\\n/// @param {Number} $width [false] - Value of width if you want to set width, else nothing\\n/// @example @include text-overflow(300px);\\n/// @group global-helpers\\n@mixin text-overflow($width: false) {\\n  display: block;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n\\n  // apply a width if width parameter exists\\n  @if ($width) {\\n    width: $width;\\n  }\\n}\\n\\n/// Adds placeholder text color\\n/// @access public\\n/// @example @include placeholder-colors;\\n/// @group global-helpers\\n@mixin placeholder-colors {\\n  color: $text-05;\\n  opacity: 1;\\n}\\n\\n/// Adds box shadow\\n/// @access public\\n/// @example @include box-shadow;\\n/// @group global-helpers\\n@mixin box-shadow {\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\\n}\\n\\n/// Adds outline styles depending on specific type\\n/// @access public\\n/// @param {String} $type ['border'] - Type of outline from: `border`, `blurred`, `outline`, `invalid`, `reset`\\n/// @example @include focus-outline('outline');\\n/// @group global-helpers\\n@mixin focus-outline($type: 'border') {\\n  @if ($type == 'border') {\\n    outline: 1px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'blurred') {\\n    box-shadow: 0 0 0 3px $focus;\\n    outline: 1px solid transparent;\\n  }\\n\\n  @if ($type == 'outline') {\\n    outline: 2px solid $focus;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'outline-compat') {\\n    box-sizing: border-box;\\n    border: 2px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      border-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'invalid') {\\n    outline: 2px solid $support-01;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'reset') {\\n    outline: 2px solid transparent;\\n    outline-offset: -2px;\\n  }\\n}\\n\\n/// Adds rotational transformation\\n/// @access public\\n/// @param {Number} $deg - How many degrees to rotate\\n/// @param {Number} $speed - Speed of rotation\\n/// @param {Value} $origin [center] - `transform-origin`\\n/// @example @include rotate(90deg, 300ms);\\n/// @group global-helpers\\n@mixin rotate($deg, $speed, $origin: center) {\\n  transform: rotate($deg);\\n  transform-origin: $origin;\\n  transition: transform $speed;\\n}\\n\\n/// Adds styles to hide content\\n/// @access public\\n/// @group global-helpers\\n@mixin hidden {\\n  position: absolute;\\n  overflow: hidden;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  border: 0;\\n  margin: -1px;\\n  clip: rect(0, 0, 0, 0);\\n  visibility: inherit;\\n  white-space: nowrap;\\n}\\n\\n/// Resets button styles\\n/// @access public\\n/// @param {Bool} $width [true] - Sets width to 100% if true\\n/// @example @include button-reset($width: false);\\n/// @group global-helpers\\n@mixin button-reset($width: true) {\\n  @include reset;\\n\\n  display: inline-block;\\n  padding: 0;\\n  border: 0;\\n  appearance: none;\\n  background: none;\\n  cursor: pointer;\\n\\n  @if ($width == true) {\\n    width: 100%;\\n  }\\n\\n  &::-moz-focus-inner {\\n    border: 0;\\n  }\\n}\\n\\n/// Skeleton loading animation\\n/// @access public\\n/// @example @include skeleton;\\n/// @group global-helpers\\n@mixin skeleton {\\n  position: relative;\\n  padding: 0;\\n  border: none;\\n  background: $skeleton-01;\\n  box-shadow: none;\\n  pointer-events: none;\\n\\n  &:hover,\\n  &:focus,\\n  &:active {\\n    border: none;\\n    cursor: default;\\n    outline: none;\\n  }\\n\\n  &::before {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    animation: 3000ms ease-in-out skeleton infinite;\\n    background: $skeleton-02;\\n    content: '';\\n    will-change: transform-origin, transform, opacity;\\n\\n    @media (prefers-reduced-motion: reduce) {\\n      animation: none;\\n    }\\n  }\\n}\\n\\n@include exports('skeleton') {\\n  @keyframes skeleton {\\n    0% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    20% {\\n      opacity: 1;\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    28% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    51% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    58% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    82% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    83% {\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    96% {\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    100% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n  }\\n}\\n\\n/// Windows HCM Mixin\\n/// @access public\\n/// @example @include high-contrast-mode;\\n/// @group global-helpers\\n/// We should set HCM styles at the end of each file to ensure they are not overridden\\n@mixin high-contrast-mode($type: '') {\\n  @media screen and (-ms-high-contrast: active),\\n    (forced-colors: active),\\n    (prefers-contrast) {\\n    @if ($type == 'icon-fill') {\\n      fill: ButtonText;\\n    }\\n\\n    @if ($type == 'focus') {\\n      color: Highlight;\\n      outline: 1px solid Highlight;\\n    }\\n\\n    @if ($type == 'outline') {\\n      outline: 1px solid transparent;\\n    }\\n\\n    @if ($type == 'disabled') {\\n      color: GrayText;\\n      fill: GrayText;\\n    }\\n\\n    @content;\\n  }\\n}\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/mixins\\\";\\n\\n.patientChartWrapper {\\n  display: flex;\\n  position: relative;\\n}\\n\\n.productiveHeading01 {\\n  @include carbon--type-style(\\\"productive-heading-01\\\");\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n}\\n\\n.productiveHeading03 {\\n  @include carbon--type-style(\\\"productive-heading-03\\\");\\n}\\n\\n.productiveHeading04 {\\n  @include carbon--type-style(\\\"productive-heading-04\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"patientChartWrapper\": \"-esm-patient-chart__workspace-notification-component__patientChartWrapper___X1fXR\",\n\t\"productiveHeading01\": \"-esm-patient-chart__workspace-notification-component__productiveHeading01___cfpln\",\n\t\"productiveHeading02\": \"-esm-patient-chart__workspace-notification-component__productiveHeading02___5sYTV\",\n\t\"messageBody\": \"-esm-patient-chart__workspace-notification-component__messageBody___NEqCv\",\n\t\"productiveHeading03\": \"-esm-patient-chart__workspace-notification-component__productiveHeading03___R7lgo\",\n\t\"productiveHeading04\": \"-esm-patient-chart__workspace-notification-component__productiveHeading04___MEKGN\",\n\t\"bodyLong01\": \"-esm-patient-chart__workspace-notification-component__bodyLong01___oUBd7\",\n\t\"skeleton\": \"-esm-patient-chart__workspace-notification-component__skeleton___C5r3P\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}:root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{padding:0;border:0;margin:0;font:inherit;font-size:100%;vertical-align:baseline}button,select,input,textarea{border-radius:0;font-family:inherit}input[type=text]::-ms-clear{display:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}body{line-height:1}sup{vertical-align:super}sub{vertical-align:sub}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:\\\"\\\"}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}button{margin:0}html{font-size:100%}body{font-weight:400;font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility}code{font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace}strong{font-weight:600}@media screen and (-ms-high-contrast: active){svg{fill:ButtonText}}h1{font-size:2.625rem;font-weight:300;line-height:1.199;letter-spacing:0}h2{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}h3{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}h4{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}h5{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}h6{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}p{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}a{color:#0f62fe}em{font-style:italic}@keyframes -esm-patient-chart__chart-review__skeleton___a3Nn8{0%{opacity:.3;transform:scaleX(0);transform-origin:left}20%{opacity:1;transform:scaleX(1);transform-origin:left}28%{transform:scaleX(1);transform-origin:right}51%{transform:scaleX(0);transform-origin:right}58%{transform:scaleX(0);transform-origin:right}82%{transform:scaleX(1);transform-origin:right}83%{transform:scaleX(1);transform-origin:left}96%{transform:scaleX(0);transform-origin:left}100%{opacity:.3;transform:scaleX(0);transform-origin:left}}.-esm-patient-chart__chart-review__patientChartWrapper___dNBEp{display:flex;position:relative}.-esm-patient-chart__chart-review__productiveHeading01___BXHQd{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.-esm-patient-chart__chart-review__productiveHeading02___19oEM{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-patient-chart__chart-review__productiveHeading03___hWD4K{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-patient-chart__chart-review__productiveHeading04___IpYi8{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-patient-chart__chart-review__bodyLong01___dPAgl{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-patient-chart__chart-review__dashboardTitle___I7yvp{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0;margin:1rem 0rem 1rem 1.3125rem;color:#161616}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_css--reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_font-family.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/icons/mixins.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_helper-mixins.scss\",\"webpack://./src/root.scss\",\"webpack://./src/view-components/chart-review.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CAHF,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCTE,2ZAiFE,SAAA,CACA,QAAA,CACA,QAAA,CACA,YAAA,CACA,cAAA,CACA,uBAAA,CAIF,6BAIE,eAAA,CACA,mBAAA,CAGF,4BACE,YAAA,CAIF,mFAYE,aAAA,CAGF,KACE,aAAA,CAGF,IACE,oBAAA,CAGF,IACE,kBAAA,CAGF,MAEE,eAAA,CAGF,aAEE,WAAA,CAGF,wDAIE,UAAA,CAGF,MACE,wBAAA,CACA,gBAAA,CAGF,EACE,qBAAA,CAIF,OACE,QAAA,CC3KJ,KACE,cAAA,CAGF,KC0CA,eAAA,CDvCE,gEAViB,CAWjB,iCAAA,CACA,kCAAA,CACA,iCAAA,CAGF,KACE,wGAhBiB,CAmBnB,OC6BA,eAAA,CCxDA,8CACE,IACE,eAAA,CAAA,CFkCJ,GGggBE,kBAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlrBxB,GG4fE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH9qBxB,GGwfE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH1qBxB,GGofE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CHtqBxB,GGgfE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlqBxB,GG4eE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CH9pBxB,EGweE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CH1pBxB,EAII,aAAA,CAMJ,GACE,iBAAA,CIkHF,8DACE,GACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,SAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,KACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAAA,CC3ON,+DACE,YAAA,CACA,iBAAA,CAGF,+DFuiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CEztB1B,+DFmiBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CErtB1B,+DF+hBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CEjtB1B,+DF2hBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CE7sB1B,sDFuhBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CGluB1B,0DH4iBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CGhuBxB,+BAAA,CACA,aC2CU\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n@import './vendor/@carbon/elements/scss/type/reset';\\n@import './vendor/@carbon/elements/scss/icons/mixins';\\n\\n/// Resets default browser styling\\n/// @access public\\n/// @group global-reset\\n@mixin reset {\\n  @if variable-exists(css--reset) == false or $css--reset == false {\\n    box-sizing: border-box;\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    font-family: inherit;\\n    font-size: 100%;\\n    vertical-align: baseline;\\n\\n    *,\\n    *::before,\\n    *::after {\\n      box-sizing: inherit;\\n    }\\n  }\\n}\\n\\n@include exports('css--reset') {\\n  @if variable-exists(css--reset) == false or $css--reset == true {\\n    // http://cssreset.com/scripts/eric-meyer-reset-css/\\n    html,\\n    body,\\n    div,\\n    span,\\n    applet,\\n    object,\\n    iframe,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p,\\n    blockquote,\\n    pre,\\n    a,\\n    abbr,\\n    acronym,\\n    address,\\n    big,\\n    cite,\\n    code,\\n    del,\\n    dfn,\\n    em,\\n    img,\\n    ins,\\n    kbd,\\n    q,\\n    s,\\n    samp,\\n    small,\\n    strike,\\n    strong,\\n    sub,\\n    sup,\\n    tt,\\n    var,\\n    b,\\n    u,\\n    i,\\n    center,\\n    dl,\\n    dt,\\n    dd,\\n    ol,\\n    ul,\\n    li,\\n    fieldset,\\n    form,\\n    label,\\n    legend,\\n    table,\\n    caption,\\n    tbody,\\n    tfoot,\\n    thead,\\n    tr,\\n    th,\\n    td,\\n    article,\\n    aside,\\n    canvas,\\n    details,\\n    embed,\\n    figure,\\n    figcaption,\\n    footer,\\n    header,\\n    hgroup,\\n    menu,\\n    nav,\\n    output,\\n    ruby,\\n    section,\\n    summary,\\n    time,\\n    mark,\\n    audio,\\n    video {\\n      padding: 0;\\n      border: 0;\\n      margin: 0;\\n      font: inherit;\\n      font-size: 100%;\\n      vertical-align: baseline;\\n    }\\n\\n    // Chrome 62 fix\\n    button,\\n    select,\\n    input,\\n    textarea {\\n      border-radius: 0;\\n      font-family: inherit;\\n    }\\n\\n    input[type='text']::-ms-clear {\\n      display: none;\\n    }\\n\\n    /* HTML5 display-role reset for older browsers */\\n    article,\\n    aside,\\n    details,\\n    figcaption,\\n    figure,\\n    footer,\\n    header,\\n    hgroup,\\n    main,\\n    menu,\\n    nav,\\n    section {\\n      display: block;\\n    }\\n\\n    body {\\n      line-height: 1;\\n    }\\n\\n    sup {\\n      vertical-align: super;\\n    }\\n\\n    sub {\\n      vertical-align: sub;\\n    }\\n\\n    ol,\\n    ul {\\n      list-style: none;\\n    }\\n\\n    blockquote,\\n    q {\\n      quotes: none;\\n    }\\n\\n    blockquote::before,\\n    blockquote::after,\\n    q::before,\\n    q::after {\\n      content: '';\\n    }\\n\\n    table {\\n      border-collapse: collapse;\\n      border-spacing: 0;\\n    }\\n\\n    * {\\n      box-sizing: border-box;\\n    }\\n\\n    // Fix to remove added margins on buttons in safari (see #5155)\\n    button {\\n      margin: 0;\\n    }\\n\\n    @include carbon--type-reset;\\n    @include carbon--icons;\\n  }\\n}\\n\\n@include exports('css--default-type') {\\n  @if variable-exists(css--default-type) == false or $css--default-type == true\\n  {\\n    @include carbon--default-type;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/convert';\\n@import 'font-family';\\n@import 'styles';\\n\\n/// Include a type reset for a given body and mono font family\\n/// @param {String} $body-font-family [carbon--font-family('sans')] - The font family used on the `<body>` element\\n/// @param {String} $mono-font-family [carbon--font-family('mono')] - The font family used on elements that require mono fonts, like the `<code>` element\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-reset(\\n  // TODO: remove in next major release. This has been replaced with 100%\\n  $base-font-size: $carbon--base-font-size,\\n  $body-font-family: carbon--font-family('sans'),\\n  $mono-font-family: carbon--font-family('mono')\\n) {\\n  html {\\n    font-size: 100%;\\n  }\\n\\n  body {\\n    @include carbon--font-weight('regular');\\n\\n    font-family: $body-font-family;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-font-smoothing: antialiased;\\n    text-rendering: optimizeLegibility;\\n  }\\n\\n  code {\\n    font-family: $mono-font-family;\\n  }\\n\\n  strong {\\n    @include carbon--font-weight('semibold');\\n  }\\n}\\n\\n/// Include default type styles\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--default-type {\\n  h1 {\\n    @include carbon--type-style('productive-heading-06');\\n  }\\n\\n  h2 {\\n    @include carbon--type-style('productive-heading-05');\\n  }\\n\\n  h3 {\\n    @include carbon--type-style('productive-heading-04');\\n  }\\n\\n  h4 {\\n    @include carbon--type-style('productive-heading-03');\\n  }\\n\\n  h5 {\\n    @include carbon--type-style('productive-heading-02');\\n  }\\n\\n  h6 {\\n    @include carbon--type-style('productive-heading-01');\\n  }\\n\\n  p {\\n    @include carbon--type-style('body-long-02');\\n  }\\n\\n  a {\\n    @if global-variable-exists('carbon--theme') and\\n      map-has-key($carbon--theme, 'link-01')\\n    {\\n      color: map-get($carbon--theme, 'link-01');\\n    } @else {\\n      color: #0062fe;\\n    }\\n  }\\n\\n  em {\\n    font-style: italic;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\\n/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-families: (\\n  'mono':\\n    unquote(\\n      \\\"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\\\"\\n    ),\\n  'sans': unquote(\\\"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-condensed':\\n    unquote(\\\"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-hebrew':\\n    unquote(\\n      \\\"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\\\"\\n    ),\\n  'serif': unquote(\\\"'IBM Plex Serif', 'Georgia', Times, serif\\\"),\\n) !default;\\n\\n/// Get the font-family for an IBM Plex font\\n/// @param {String} $name\\n/// @return {String}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-family($name) {\\n  @return map-get($carbon--font-families, $name);\\n}\\n\\n/// Include the `font-family` definition for the given name in your selector\\n/// @param {String} $name\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-family($name) {\\n  font-family: carbon--font-family($name);\\n}\\n\\n/// Suggested font weights to be used in product\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-weights: (\\n  'light': 300,\\n  'regular': 400,\\n  'semibold': 600,\\n) !default;\\n\\n/// Retrieve the font-weight value for a given name\\n/// @param {String} $weight\\n/// @return {Number}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-weight($weight) {\\n  @return map-get($carbon--font-weights, $weight);\\n}\\n\\n/// Set the `font-weight` property with the value for a given name\\n/// @param {String} $weight\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-weight($weight) {\\n  font-weight: carbon--font-weight($weight);\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Makes SVGs accessible in high contrast mode\\n/// @link https://github.com/IBM/carbon-elements/issues/345#issuecomment-466577293 Carbon-elements #345\\n/// @access public\\n/// @group @carbon/icons\\n@mixin carbon--icons {\\n  @media screen and (-ms-high-contrast: active) {\\n    svg {\\n      fill: ButtonText;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n//----------------------------------------------\\n// Mixins\\n// ---------------------------------------------\\n//\\n//   Category             ||  Description\\n//   ===========================================\\n//   Misc                 ||  General helper @mixins\\n//   Deprecated           ||  Not used anymore\\n//   ===========================================\\n\\n//----------------------------------------------\\n// Misc\\n// ---------------------------------------------\\n\\n@import 'vars';\\n@import 'css--reset';\\n@import 'typography';\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n\\n/// Adds text overflow styling\\n/// @access public\\n/// @param {Number} $width [false] - Value of width if you want to set width, else nothing\\n/// @example @include text-overflow(300px);\\n/// @group global-helpers\\n@mixin text-overflow($width: false) {\\n  display: block;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n\\n  // apply a width if width parameter exists\\n  @if ($width) {\\n    width: $width;\\n  }\\n}\\n\\n/// Adds placeholder text color\\n/// @access public\\n/// @example @include placeholder-colors;\\n/// @group global-helpers\\n@mixin placeholder-colors {\\n  color: $text-05;\\n  opacity: 1;\\n}\\n\\n/// Adds box shadow\\n/// @access public\\n/// @example @include box-shadow;\\n/// @group global-helpers\\n@mixin box-shadow {\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\\n}\\n\\n/// Adds outline styles depending on specific type\\n/// @access public\\n/// @param {String} $type ['border'] - Type of outline from: `border`, `blurred`, `outline`, `invalid`, `reset`\\n/// @example @include focus-outline('outline');\\n/// @group global-helpers\\n@mixin focus-outline($type: 'border') {\\n  @if ($type == 'border') {\\n    outline: 1px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'blurred') {\\n    box-shadow: 0 0 0 3px $focus;\\n    outline: 1px solid transparent;\\n  }\\n\\n  @if ($type == 'outline') {\\n    outline: 2px solid $focus;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'outline-compat') {\\n    box-sizing: border-box;\\n    border: 2px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      border-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'invalid') {\\n    outline: 2px solid $support-01;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'reset') {\\n    outline: 2px solid transparent;\\n    outline-offset: -2px;\\n  }\\n}\\n\\n/// Adds rotational transformation\\n/// @access public\\n/// @param {Number} $deg - How many degrees to rotate\\n/// @param {Number} $speed - Speed of rotation\\n/// @param {Value} $origin [center] - `transform-origin`\\n/// @example @include rotate(90deg, 300ms);\\n/// @group global-helpers\\n@mixin rotate($deg, $speed, $origin: center) {\\n  transform: rotate($deg);\\n  transform-origin: $origin;\\n  transition: transform $speed;\\n}\\n\\n/// Adds styles to hide content\\n/// @access public\\n/// @group global-helpers\\n@mixin hidden {\\n  position: absolute;\\n  overflow: hidden;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  border: 0;\\n  margin: -1px;\\n  clip: rect(0, 0, 0, 0);\\n  visibility: inherit;\\n  white-space: nowrap;\\n}\\n\\n/// Resets button styles\\n/// @access public\\n/// @param {Bool} $width [true] - Sets width to 100% if true\\n/// @example @include button-reset($width: false);\\n/// @group global-helpers\\n@mixin button-reset($width: true) {\\n  @include reset;\\n\\n  display: inline-block;\\n  padding: 0;\\n  border: 0;\\n  appearance: none;\\n  background: none;\\n  cursor: pointer;\\n\\n  @if ($width == true) {\\n    width: 100%;\\n  }\\n\\n  &::-moz-focus-inner {\\n    border: 0;\\n  }\\n}\\n\\n/// Skeleton loading animation\\n/// @access public\\n/// @example @include skeleton;\\n/// @group global-helpers\\n@mixin skeleton {\\n  position: relative;\\n  padding: 0;\\n  border: none;\\n  background: $skeleton-01;\\n  box-shadow: none;\\n  pointer-events: none;\\n\\n  &:hover,\\n  &:focus,\\n  &:active {\\n    border: none;\\n    cursor: default;\\n    outline: none;\\n  }\\n\\n  &::before {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    animation: 3000ms ease-in-out skeleton infinite;\\n    background: $skeleton-02;\\n    content: '';\\n    will-change: transform-origin, transform, opacity;\\n\\n    @media (prefers-reduced-motion: reduce) {\\n      animation: none;\\n    }\\n  }\\n}\\n\\n@include exports('skeleton') {\\n  @keyframes skeleton {\\n    0% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    20% {\\n      opacity: 1;\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    28% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    51% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    58% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    82% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    83% {\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    96% {\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    100% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n  }\\n}\\n\\n/// Windows HCM Mixin\\n/// @access public\\n/// @example @include high-contrast-mode;\\n/// @group global-helpers\\n/// We should set HCM styles at the end of each file to ensure they are not overridden\\n@mixin high-contrast-mode($type: '') {\\n  @media screen and (-ms-high-contrast: active),\\n    (forced-colors: active),\\n    (prefers-contrast) {\\n    @if ($type == 'icon-fill') {\\n      fill: ButtonText;\\n    }\\n\\n    @if ($type == 'focus') {\\n      color: Highlight;\\n      outline: 1px solid Highlight;\\n    }\\n\\n    @if ($type == 'outline') {\\n      outline: 1px solid transparent;\\n    }\\n\\n    @if ($type == 'disabled') {\\n      color: GrayText;\\n      fill: GrayText;\\n    }\\n\\n    @content;\\n  }\\n}\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/mixins\\\";\\n\\n.patientChartWrapper {\\n  display: flex;\\n  position: relative;\\n}\\n\\n.productiveHeading01 {\\n  @include carbon--type-style(\\\"productive-heading-01\\\");\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n}\\n\\n.productiveHeading03 {\\n  @include carbon--type-style(\\\"productive-heading-03\\\");\\n}\\n\\n.productiveHeading04 {\\n  @include carbon--type-style(\\\"productive-heading-04\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/vars\\\";\\n@import \\\"../root.scss\\\";\\n\\n.dashboardTitle {\\n  @include carbon--type-style(\\\"productive-heading-03\\\");\\n  margin: 1rem 0rem 1rem 1.3125rem;\\n  color: $text-01;\\n}\",\"// Code generated by @carbon/themes. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './themes';\\n\\n/// Define theme variables from a map of tokens\\n/// @access public\\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\\n///\\n/// @example scss\\n///   // Default usage\\n///   @include carbon--theme();\\n///\\n///   // Alternate styling (not white theme)\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     // declarations...\\n///   }\\n///\\n///   // Inline styling\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     .my-dark-theme {\\n///       // declarations...\\n///     }\\n///   }\\n///\\n/// @group @carbon/themes\\n@mixin carbon--theme(\\n  $theme: $carbon--theme,\\n  $emit-custom-properties: false,\\n  $emit-difference: false\\n) {\\n  $parent-carbon-theme: $carbon--theme;\\n  $carbon--theme: $theme !global;\\n  $interactive-01: map-get($theme, 'interactive-01') !global;\\n  $interactive-02: map-get($theme, 'interactive-02') !global;\\n  $interactive-03: map-get($theme, 'interactive-03') !global;\\n  $interactive-04: map-get($theme, 'interactive-04') !global;\\n  $ui-background: map-get($theme, 'ui-background') !global;\\n  $ui-01: map-get($theme, 'ui-01') !global;\\n  $ui-02: map-get($theme, 'ui-02') !global;\\n  $ui-03: map-get($theme, 'ui-03') !global;\\n  $ui-04: map-get($theme, 'ui-04') !global;\\n  $ui-05: map-get($theme, 'ui-05') !global;\\n  $text-01: map-get($theme, 'text-01') !global;\\n  $text-02: map-get($theme, 'text-02') !global;\\n  $text-03: map-get($theme, 'text-03') !global;\\n  $text-04: map-get($theme, 'text-04') !global;\\n  $text-05: map-get($theme, 'text-05') !global;\\n  $text-error: map-get($theme, 'text-error') !global;\\n  $icon-01: map-get($theme, 'icon-01') !global;\\n  $icon-02: map-get($theme, 'icon-02') !global;\\n  $icon-03: map-get($theme, 'icon-03') !global;\\n  $link-01: map-get($theme, 'link-01') !global;\\n  $link-02: map-get($theme, 'link-02') !global;\\n  $inverse-link: map-get($theme, 'inverse-link') !global;\\n  $field-01: map-get($theme, 'field-01') !global;\\n  $field-02: map-get($theme, 'field-02') !global;\\n  $inverse-01: map-get($theme, 'inverse-01') !global;\\n  $inverse-02: map-get($theme, 'inverse-02') !global;\\n  $support-01: map-get($theme, 'support-01') !global;\\n  $support-02: map-get($theme, 'support-02') !global;\\n  $support-03: map-get($theme, 'support-03') !global;\\n  $support-04: map-get($theme, 'support-04') !global;\\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\\n  $overlay-01: map-get($theme, 'overlay-01') !global;\\n  $danger-01: map-get($theme, 'danger-01') !global;\\n  $danger-02: map-get($theme, 'danger-02') !global;\\n  $focus: map-get($theme, 'focus') !global;\\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\\n  $hover-primary: map-get($theme, 'hover-primary') !global;\\n  $active-primary: map-get($theme, 'active-primary') !global;\\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\\n  $active-secondary: map-get($theme, 'active-secondary') !global;\\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\\n  $hover-ui: map-get($theme, 'hover-ui') !global;\\n  $hover-light-ui: map-get($theme, 'hover-light-ui') !global;\\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\\n  $active-ui: map-get($theme, 'active-ui') !global;\\n  $active-light-ui: map-get($theme, 'active-light-ui') !global;\\n  $selected-ui: map-get($theme, 'selected-ui') !global;\\n  $selected-light-ui: map-get($theme, 'selected-light-ui') !global;\\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\\n  $hover-danger: map-get($theme, 'hover-danger') !global;\\n  $active-danger: map-get($theme, 'active-danger') !global;\\n  $hover-row: map-get($theme, 'hover-row') !global;\\n  $visited-link: map-get($theme, 'visited-link') !global;\\n  $disabled-01: map-get($theme, 'disabled-01') !global;\\n  $disabled-02: map-get($theme, 'disabled-02') !global;\\n  $disabled-03: map-get($theme, 'disabled-03') !global;\\n  $highlight: map-get($theme, 'highlight') !global;\\n  $decorative-01: map-get($theme, 'decorative-01') !global;\\n  $button-separator: map-get($theme, 'button-separator') !global;\\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\\n  $background: map-get($theme, 'background') !global;\\n  $layer: map-get($theme, 'layer') !global;\\n  $layer-accent: map-get($theme, 'layer-accent') !global;\\n  $layer-accent-hover: map-get($theme, 'layer-accent-hover') !global;\\n  $layer-accent-active: map-get($theme, 'layer-accent-active') !global;\\n  $field: map-get($theme, 'field') !global;\\n  $background-inverse: map-get($theme, 'background-inverse') !global;\\n  $background-brand: map-get($theme, 'background-brand') !global;\\n  $interactive: map-get($theme, 'interactive') !global;\\n  $border-subtle: map-get($theme, 'border-subtle') !global;\\n  $border-strong: map-get($theme, 'border-strong') !global;\\n  $border-inverse: map-get($theme, 'border-inverse') !global;\\n  $border-interactive: map-get($theme, 'border-interactive') !global;\\n  $text-primary: map-get($theme, 'text-primary') !global;\\n  $text-secondary: map-get($theme, 'text-secondary') !global;\\n  $text-placeholder: map-get($theme, 'text-placeholder') !global;\\n  $text-helper: map-get($theme, 'text-helper') !global;\\n  $text-on-color: map-get($theme, 'text-on-color') !global;\\n  $text-inverse: map-get($theme, 'text-inverse') !global;\\n  $link-primary: map-get($theme, 'link-primary') !global;\\n  $link-secondary: map-get($theme, 'link-secondary') !global;\\n  $link-visited: map-get($theme, 'link-visited') !global;\\n  $link-inverse: map-get($theme, 'link-inverse') !global;\\n  $icon-primary: map-get($theme, 'icon-primary') !global;\\n  $icon-secondary: map-get($theme, 'icon-secondary') !global;\\n  $icon-on-color: map-get($theme, 'icon-on-color') !global;\\n  $icon-inverse: map-get($theme, 'icon-inverse') !global;\\n  $support-error: map-get($theme, 'support-error') !global;\\n  $support-success: map-get($theme, 'support-success') !global;\\n  $support-warning: map-get($theme, 'support-warning') !global;\\n  $support-info: map-get($theme, 'support-info') !global;\\n  $support-error-inverse: map-get($theme, 'support-error-inverse') !global;\\n  $support-success-inverse: map-get($theme, 'support-success-inverse') !global;\\n  $support-warning-inverse: map-get($theme, 'support-warning-inverse') !global;\\n  $support-info-inverse: map-get($theme, 'support-info-inverse') !global;\\n  $overlay: map-get($theme, 'overlay') !global;\\n  $toggle-off: map-get($theme, 'toggle-off') !global;\\n  $button-primary: map-get($theme, 'button-primary') !global;\\n  $button-secondary: map-get($theme, 'button-secondary') !global;\\n  $button-tertiary: map-get($theme, 'button-tertiary') !global;\\n  $button-danger-primary: map-get($theme, 'button-danger-primary') !global;\\n  $button-danger-secondary: map-get($theme, 'button-danger-secondary') !global;\\n  $background-active: map-get($theme, 'background-active') !global;\\n  $layer-active: map-get($theme, 'layer-active') !global;\\n  $button-danger-active: map-get($theme, 'button-danger-active') !global;\\n  $button-primary-active: map-get($theme, 'button-primary-active') !global;\\n  $button-secondary-active: map-get($theme, 'button-secondary-active') !global;\\n  $button-tertiary-active: map-get($theme, 'button-tertiary-active') !global;\\n  $focus-inset: map-get($theme, 'focus-inset') !global;\\n  $focus-inverse: map-get($theme, 'focus-inverse') !global;\\n  $background-hover: map-get($theme, 'background-hover') !global;\\n  $layer-hover: map-get($theme, 'layer-hover') !global;\\n  $field-hover: map-get($theme, 'field-hover') !global;\\n  $background-inverse-hover: map-get(\\n    $theme,\\n    'background-inverse-hover'\\n  ) !global;\\n  $link-primary-hover: map-get($theme, 'link-primary-hover') !global;\\n  $button-danger-hover: map-get($theme, 'button-danger-hover') !global;\\n  $button-primary-hover: map-get($theme, 'button-primary-hover') !global;\\n  $button-secondary-hover: map-get($theme, 'button-secondary-hover') !global;\\n  $button-tertiary-hover: map-get($theme, 'button-tertiary-hover') !global;\\n  $background-selected: map-get($theme, 'background-selected') !global;\\n  $background-selected-hover: map-get(\\n    $theme,\\n    'background-selected-hover'\\n  ) !global;\\n  $layer-selected: map-get($theme, 'layer-selected') !global;\\n  $layer-selected-hover: map-get($theme, 'layer-selected-hover') !global;\\n  $layer-selected-inverse: map-get($theme, 'layer-selected-inverse') !global;\\n  $border-subtle-selected: map-get($theme, 'border-subtle-selected') !global;\\n  $layer-disabled: map-get($theme, 'layer-disabled') !global;\\n  $field-disabled: map-get($theme, 'field-disabled') !global;\\n  $border-disabled: map-get($theme, 'border-disabled') !global;\\n  $text-disabled: map-get($theme, 'text-disabled') !global;\\n  $button-disabled: map-get($theme, 'button-disabled') !global;\\n  $icon-disabled: map-get($theme, 'icon-disabled') !global;\\n  $text-on-color-disabled: map-get($theme, 'text-on-color-disabled') !global;\\n  $icon-on-color-disabled: map-get($theme, 'icon-on-color-disabled') !global;\\n  $layer-selected-disabled: map-get($theme, 'layer-selected-disabled') !global;\\n  $skeleton-background: map-get($theme, 'skeleton-background') !global;\\n  $skeleton-element: map-get($theme, 'skeleton-element') !global;\\n  $brand-01: map-get($theme, 'brand-01') !global;\\n  $brand-02: map-get($theme, 'brand-02') !global;\\n  $brand-03: map-get($theme, 'brand-03') !global;\\n  $active-01: map-get($theme, 'active-01') !global;\\n  $hover-field: map-get($theme, 'hover-field') !global;\\n  $danger: map-get($theme, 'danger') !global;\\n  $caption-01: map-get($theme, 'caption-01') !global;\\n  $caption-02: map-get($theme, 'caption-02') !global;\\n  $label-01: map-get($theme, 'label-01') !global;\\n  $label-02: map-get($theme, 'label-02') !global;\\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\\n  $helper-text-02: map-get($theme, 'helper-text-02') !global;\\n  $body-short-01: map-get($theme, 'body-short-01') !global;\\n  $body-long-01: map-get($theme, 'body-long-01') !global;\\n  $body-short-02: map-get($theme, 'body-short-02') !global;\\n  $body-long-02: map-get($theme, 'body-long-02') !global;\\n  $code-01: map-get($theme, 'code-01') !global;\\n  $code-02: map-get($theme, 'code-02') !global;\\n  $heading-01: map-get($theme, 'heading-01') !global;\\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\\n  $heading-02: map-get($theme, 'heading-02') !global;\\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\\n  $quotation-01: map-get($theme, 'quotation-01') !global;\\n  $quotation-02: map-get($theme, 'quotation-02') !global;\\n  $display-01: map-get($theme, 'display-01') !global;\\n  $display-02: map-get($theme, 'display-02') !global;\\n  $display-03: map-get($theme, 'display-03') !global;\\n  $display-04: map-get($theme, 'display-04') !global;\\n  $spacing-01: map-get($theme, 'spacing-01') !global;\\n  $spacing-02: map-get($theme, 'spacing-02') !global;\\n  $spacing-03: map-get($theme, 'spacing-03') !global;\\n  $spacing-04: map-get($theme, 'spacing-04') !global;\\n  $spacing-05: map-get($theme, 'spacing-05') !global;\\n  $spacing-06: map-get($theme, 'spacing-06') !global;\\n  $spacing-07: map-get($theme, 'spacing-07') !global;\\n  $spacing-08: map-get($theme, 'spacing-08') !global;\\n  $spacing-09: map-get($theme, 'spacing-09') !global;\\n  $spacing-10: map-get($theme, 'spacing-10') !global;\\n  $spacing-11: map-get($theme, 'spacing-11') !global;\\n  $spacing-12: map-get($theme, 'spacing-12') !global;\\n  $spacing-13: map-get($theme, 'spacing-13') !global;\\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\\n  $layout-01: map-get($theme, 'layout-01') !global;\\n  $layout-02: map-get($theme, 'layout-02') !global;\\n  $layout-03: map-get($theme, 'layout-03') !global;\\n  $layout-04: map-get($theme, 'layout-04') !global;\\n  $layout-05: map-get($theme, 'layout-05') !global;\\n  $layout-06: map-get($theme, 'layout-06') !global;\\n  $layout-07: map-get($theme, 'layout-07') !global;\\n  $container-01: map-get($theme, 'container-01') !global;\\n  $container-02: map-get($theme, 'container-02') !global;\\n  $container-03: map-get($theme, 'container-03') !global;\\n  $container-04: map-get($theme, 'container-04') !global;\\n  $container-05: map-get($theme, 'container-05') !global;\\n  $size-xsmall: map-get($theme, 'size-xsmall') !global;\\n  $size-small: map-get($theme, 'size-small') !global;\\n  $size-medium: map-get($theme, 'size-medium') !global;\\n  $size-large: map-get($theme, 'size-large') !global;\\n  $size-xlarge: map-get($theme, 'size-xlarge') !global;\\n  $size-2XLarge: map-get($theme, 'size-2XLarge') !global;\\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\\n\\n  @if global-variable-exists('feature-flags') ==\\n    false or\\n    global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-v11-release') !=\\n    true\\n  {\\n    $background: $ui-background !global;\\n    $layer: $ui-01 !global;\\n    $layer-accent: $ui-03 !global;\\n    $field: $field-01 !global;\\n    $background-inverse: $inverse-02 !global;\\n    $background-brand: $interactive-01 !global;\\n    $interactive: $interactive-04 !global;\\n    $border-subtle: $ui-03 !global;\\n    $border-strong: $ui-04 !global;\\n    $border-inverse: $ui-05 !global;\\n    $border-interactive: $interactive-04 !global;\\n    $text-primary: $text-01 !global;\\n    $text-secondary: $text-02 !global;\\n    $text-placeholder: $text-03 !global;\\n    $text-helper: $text-05 !global;\\n    $text-on-color: $text-04 !global;\\n    $text-inverse: $inverse-01 !global;\\n    $link-primary: $link-01 !global;\\n    $link-secondary: $link-02 !global;\\n    $link-visited: $visited-link !global;\\n    $link-inverse: $inverse-link !global;\\n    $icon-primary: $icon-01 !global;\\n    $icon-secondary: $icon-02 !global;\\n    $icon-on-color: $icon-03 !global;\\n    $icon-inverse: $inverse-01 !global;\\n    $support-error: $support-01 !global;\\n    $support-success: $support-02 !global;\\n    $support-warning: $support-03 !global;\\n    $support-info: $support-04 !global;\\n    $support-error-inverse: $inverse-support-01 !global;\\n    $support-success-inverse: $inverse-support-02 !global;\\n    $support-warning-inverse: $inverse-support-03 !global;\\n    $support-info-inverse: $inverse-support-04 !global;\\n    $overlay: $overlay-01 !global;\\n    $toggle-off: $ui-04 !global;\\n    $button-primary: $interactive-01 !global;\\n    $button-secondary: $interactive-02 !global;\\n    $button-tertiary: $interactive-03 !global;\\n    $button-danger-primary: $danger-01 !global;\\n    $button-danger-secondary: $danger-02 !global;\\n    $background-active: $active-ui !global;\\n    $layer-active: $active-ui !global;\\n    $button-danger-active: $active-danger !global;\\n    $button-primary-active: $active-primary !global;\\n    $button-secondary-active: $active-secondary !global;\\n    $button-tertiary-active: $active-tertiary !global;\\n    $focus-inset: $inverse-01 !global;\\n    $focus-inverse: $inverse-focus-ui !global;\\n    $background-hover: $hover-ui !global;\\n    $layer-hover: $hover-ui !global;\\n    $field-hover: $hover-ui !global;\\n    $background-inverse-hover: $inverse-hover-ui !global;\\n    $link-primary-hover: $hover-primary-text !global;\\n    $button-danger-hover: $hover-danger !global;\\n    $button-primary-hover: $hover-primary !global;\\n    $button-secondary-hover: $hover-secondary !global;\\n    $button-tertiary-hover: $hover-tertiary !global;\\n    $background-selected: $selected-ui !global;\\n    $background-selected-hover: $hover-selected-ui !global;\\n    $layer-selected: $selected-ui !global;\\n    $layer-selected-hover: $hover-selected-ui !global;\\n    $layer-selected-inverse: $ui-05 !global;\\n    $border-subtle-selected: $active-ui !global;\\n    $layer-disabled: $disabled-01 !global;\\n    $field-disabled: $disabled-01 !global;\\n    $border-disabled: $disabled-01 !global;\\n    $text-disabled: $disabled-02 !global;\\n    $button-disabled: $disabled-02 !global;\\n    $icon-disabled: $disabled-02 !global;\\n    $text-on-color-disabled: $disabled-03 !global;\\n    $icon-on-color-disabled: $disabled-03 !global;\\n    $layer-selected-disabled: $disabled-03 !global;\\n    $skeleton-background: $skeleton-01 !global;\\n    $skeleton-element: $skeleton-02 !global;\\n  }\\n  @if global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-css-custom-properties')\\n  {\\n    $interactive-01: var(\\n      --#{$custom-property-prefix}-interactive-01,\\n      map-get($theme, 'interactive-01')\\n    ) !global;\\n    $interactive-02: var(\\n      --#{$custom-property-prefix}-interactive-02,\\n      map-get($theme, 'interactive-02')\\n    ) !global;\\n    $interactive-03: var(\\n      --#{$custom-property-prefix}-interactive-03,\\n      map-get($theme, 'interactive-03')\\n    ) !global;\\n    $interactive-04: var(\\n      --#{$custom-property-prefix}-interactive-04,\\n      map-get($theme, 'interactive-04')\\n    ) !global;\\n    $ui-background: var(\\n      --#{$custom-property-prefix}-ui-background,\\n      map-get($theme, 'ui-background')\\n    ) !global;\\n    $ui-01: var(\\n      --#{$custom-property-prefix}-ui-01,\\n      map-get($theme, 'ui-01')\\n    ) !global;\\n    $ui-02: var(\\n      --#{$custom-property-prefix}-ui-02,\\n      map-get($theme, 'ui-02')\\n    ) !global;\\n    $ui-03: var(\\n      --#{$custom-property-prefix}-ui-03,\\n      map-get($theme, 'ui-03')\\n    ) !global;\\n    $ui-04: var(\\n      --#{$custom-property-prefix}-ui-04,\\n      map-get($theme, 'ui-04')\\n    ) !global;\\n    $ui-05: var(\\n      --#{$custom-property-prefix}-ui-05,\\n      map-get($theme, 'ui-05')\\n    ) !global;\\n    $text-01: var(\\n      --#{$custom-property-prefix}-text-01,\\n      map-get($theme, 'text-01')\\n    ) !global;\\n    $text-02: var(\\n      --#{$custom-property-prefix}-text-02,\\n      map-get($theme, 'text-02')\\n    ) !global;\\n    $text-03: var(\\n      --#{$custom-property-prefix}-text-03,\\n      map-get($theme, 'text-03')\\n    ) !global;\\n    $text-04: var(\\n      --#{$custom-property-prefix}-text-04,\\n      map-get($theme, 'text-04')\\n    ) !global;\\n    $text-05: var(\\n      --#{$custom-property-prefix}-text-05,\\n      map-get($theme, 'text-05')\\n    ) !global;\\n    $text-error: var(\\n      --#{$custom-property-prefix}-text-error,\\n      map-get($theme, 'text-error')\\n    ) !global;\\n    $icon-01: var(\\n      --#{$custom-property-prefix}-icon-01,\\n      map-get($theme, 'icon-01')\\n    ) !global;\\n    $icon-02: var(\\n      --#{$custom-property-prefix}-icon-02,\\n      map-get($theme, 'icon-02')\\n    ) !global;\\n    $icon-03: var(\\n      --#{$custom-property-prefix}-icon-03,\\n      map-get($theme, 'icon-03')\\n    ) !global;\\n    $link-01: var(\\n      --#{$custom-property-prefix}-link-01,\\n      map-get($theme, 'link-01')\\n    ) !global;\\n    $link-02: var(\\n      --#{$custom-property-prefix}-link-02,\\n      map-get($theme, 'link-02')\\n    ) !global;\\n    $inverse-link: var(\\n      --#{$custom-property-prefix}-inverse-link,\\n      map-get($theme, 'inverse-link')\\n    ) !global;\\n    $field-01: var(\\n      --#{$custom-property-prefix}-field-01,\\n      map-get($theme, 'field-01')\\n    ) !global;\\n    $field-02: var(\\n      --#{$custom-property-prefix}-field-02,\\n      map-get($theme, 'field-02')\\n    ) !global;\\n    $inverse-01: var(\\n      --#{$custom-property-prefix}-inverse-01,\\n      map-get($theme, 'inverse-01')\\n    ) !global;\\n    $inverse-02: var(\\n      --#{$custom-property-prefix}-inverse-02,\\n      map-get($theme, 'inverse-02')\\n    ) !global;\\n    $support-01: var(\\n      --#{$custom-property-prefix}-support-01,\\n      map-get($theme, 'support-01')\\n    ) !global;\\n    $support-02: var(\\n      --#{$custom-property-prefix}-support-02,\\n      map-get($theme, 'support-02')\\n    ) !global;\\n    $support-03: var(\\n      --#{$custom-property-prefix}-support-03,\\n      map-get($theme, 'support-03')\\n    ) !global;\\n    $support-04: var(\\n      --#{$custom-property-prefix}-support-04,\\n      map-get($theme, 'support-04')\\n    ) !global;\\n    $inverse-support-01: var(\\n      --#{$custom-property-prefix}-inverse-support-01,\\n      map-get($theme, 'inverse-support-01')\\n    ) !global;\\n    $inverse-support-02: var(\\n      --#{$custom-property-prefix}-inverse-support-02,\\n      map-get($theme, 'inverse-support-02')\\n    ) !global;\\n    $inverse-support-03: var(\\n      --#{$custom-property-prefix}-inverse-support-03,\\n      map-get($theme, 'inverse-support-03')\\n    ) !global;\\n    $inverse-support-04: var(\\n      --#{$custom-property-prefix}-inverse-support-04,\\n      map-get($theme, 'inverse-support-04')\\n    ) !global;\\n    $overlay-01: var(\\n      --#{$custom-property-prefix}-overlay-01,\\n      map-get($theme, 'overlay-01')\\n    ) !global;\\n    $danger-01: var(\\n      --#{$custom-property-prefix}-danger-01,\\n      map-get($theme, 'danger-01')\\n    ) !global;\\n    $danger-02: var(\\n      --#{$custom-property-prefix}-danger-02,\\n      map-get($theme, 'danger-02')\\n    ) !global;\\n    $focus: var(\\n      --#{$custom-property-prefix}-focus,\\n      map-get($theme, 'focus')\\n    ) !global;\\n    $inverse-focus-ui: var(\\n      --#{$custom-property-prefix}-inverse-focus-ui,\\n      map-get($theme, 'inverse-focus-ui')\\n    ) !global;\\n    $hover-primary: var(\\n      --#{$custom-property-prefix}-hover-primary,\\n      map-get($theme, 'hover-primary')\\n    ) !global;\\n    $active-primary: var(\\n      --#{$custom-property-prefix}-active-primary,\\n      map-get($theme, 'active-primary')\\n    ) !global;\\n    $hover-primary-text: var(\\n      --#{$custom-property-prefix}-hover-primary-text,\\n      map-get($theme, 'hover-primary-text')\\n    ) !global;\\n    $hover-secondary: var(\\n      --#{$custom-property-prefix}-hover-secondary,\\n      map-get($theme, 'hover-secondary')\\n    ) !global;\\n    $active-secondary: var(\\n      --#{$custom-property-prefix}-active-secondary,\\n      map-get($theme, 'active-secondary')\\n    ) !global;\\n    $hover-tertiary: var(\\n      --#{$custom-property-prefix}-hover-tertiary,\\n      map-get($theme, 'hover-tertiary')\\n    ) !global;\\n    $active-tertiary: var(\\n      --#{$custom-property-prefix}-active-tertiary,\\n      map-get($theme, 'active-tertiary')\\n    ) !global;\\n    $hover-ui: var(\\n      --#{$custom-property-prefix}-hover-ui,\\n      map-get($theme, 'hover-ui')\\n    ) !global;\\n    $hover-light-ui: var(\\n      --#{$custom-property-prefix}-hover-light-ui,\\n      map-get($theme, 'hover-light-ui')\\n    ) !global;\\n    $hover-selected-ui: var(\\n      --#{$custom-property-prefix}-hover-selected-ui,\\n      map-get($theme, 'hover-selected-ui')\\n    ) !global;\\n    $active-ui: var(\\n      --#{$custom-property-prefix}-active-ui,\\n      map-get($theme, 'active-ui')\\n    ) !global;\\n    $active-light-ui: var(\\n      --#{$custom-property-prefix}-active-light-ui,\\n      map-get($theme, 'active-light-ui')\\n    ) !global;\\n    $selected-ui: var(\\n      --#{$custom-property-prefix}-selected-ui,\\n      map-get($theme, 'selected-ui')\\n    ) !global;\\n    $selected-light-ui: var(\\n      --#{$custom-property-prefix}-selected-light-ui,\\n      map-get($theme, 'selected-light-ui')\\n    ) !global;\\n    $inverse-hover-ui: var(\\n      --#{$custom-property-prefix}-inverse-hover-ui,\\n      map-get($theme, 'inverse-hover-ui')\\n    ) !global;\\n    $hover-danger: var(\\n      --#{$custom-property-prefix}-hover-danger,\\n      map-get($theme, 'hover-danger')\\n    ) !global;\\n    $active-danger: var(\\n      --#{$custom-property-prefix}-active-danger,\\n      map-get($theme, 'active-danger')\\n    ) !global;\\n    $hover-row: var(\\n      --#{$custom-property-prefix}-hover-row,\\n      map-get($theme, 'hover-row')\\n    ) !global;\\n    $visited-link: var(\\n      --#{$custom-property-prefix}-visited-link,\\n      map-get($theme, 'visited-link')\\n    ) !global;\\n    $disabled-01: var(\\n      --#{$custom-property-prefix}-disabled-01,\\n      map-get($theme, 'disabled-01')\\n    ) !global;\\n    $disabled-02: var(\\n      --#{$custom-property-prefix}-disabled-02,\\n      map-get($theme, 'disabled-02')\\n    ) !global;\\n    $disabled-03: var(\\n      --#{$custom-property-prefix}-disabled-03,\\n      map-get($theme, 'disabled-03')\\n    ) !global;\\n    $highlight: var(\\n      --#{$custom-property-prefix}-highlight,\\n      map-get($theme, 'highlight')\\n    ) !global;\\n    $decorative-01: var(\\n      --#{$custom-property-prefix}-decorative-01,\\n      map-get($theme, 'decorative-01')\\n    ) !global;\\n    $button-separator: var(\\n      --#{$custom-property-prefix}-button-separator,\\n      map-get($theme, 'button-separator')\\n    ) !global;\\n    $skeleton-01: var(\\n      --#{$custom-property-prefix}-skeleton-01,\\n      map-get($theme, 'skeleton-01')\\n    ) !global;\\n    $skeleton-02: var(\\n      --#{$custom-property-prefix}-skeleton-02,\\n      map-get($theme, 'skeleton-02')\\n    ) !global;\\n    $background: var(\\n      --#{$custom-property-prefix}-background,\\n      map-get($theme, 'background')\\n    ) !global;\\n    $layer: var(\\n      --#{$custom-property-prefix}-layer,\\n      map-get($theme, 'layer')\\n    ) !global;\\n    $layer-accent: var(\\n      --#{$custom-property-prefix}-layer-accent,\\n      map-get($theme, 'layer-accent')\\n    ) !global;\\n    $layer-accent-hover: var(\\n      --#{$custom-property-prefix}-layer-accent-hover,\\n      map-get($theme, 'layer-accent-hover')\\n    ) !global;\\n    $layer-accent-active: var(\\n      --#{$custom-property-prefix}-layer-accent-active,\\n      map-get($theme, 'layer-accent-active')\\n    ) !global;\\n    $field: var(\\n      --#{$custom-property-prefix}-field,\\n      map-get($theme, 'field')\\n    ) !global;\\n    $background-inverse: var(\\n      --#{$custom-property-prefix}-background-inverse,\\n      map-get($theme, 'background-inverse')\\n    ) !global;\\n    $background-brand: var(\\n      --#{$custom-property-prefix}-background-brand,\\n      map-get($theme, 'background-brand')\\n    ) !global;\\n    $interactive: var(\\n      --#{$custom-property-prefix}-interactive,\\n      map-get($theme, 'interactive')\\n    ) !global;\\n    $border-subtle: var(\\n      --#{$custom-property-prefix}-border-subtle,\\n      map-get($theme, 'border-subtle')\\n    ) !global;\\n    $border-strong: var(\\n      --#{$custom-property-prefix}-border-strong,\\n      map-get($theme, 'border-strong')\\n    ) !global;\\n    $border-inverse: var(\\n      --#{$custom-property-prefix}-border-inverse,\\n      map-get($theme, 'border-inverse')\\n    ) !global;\\n    $border-interactive: var(\\n      --#{$custom-property-prefix}-border-interactive,\\n      map-get($theme, 'border-interactive')\\n    ) !global;\\n    $text-primary: var(\\n      --#{$custom-property-prefix}-text-primary,\\n      map-get($theme, 'text-primary')\\n    ) !global;\\n    $text-secondary: var(\\n      --#{$custom-property-prefix}-text-secondary,\\n      map-get($theme, 'text-secondary')\\n    ) !global;\\n    $text-placeholder: var(\\n      --#{$custom-property-prefix}-text-placeholder,\\n      map-get($theme, 'text-placeholder')\\n    ) !global;\\n    $text-helper: var(\\n      --#{$custom-property-prefix}-text-helper,\\n      map-get($theme, 'text-helper')\\n    ) !global;\\n    $text-on-color: var(\\n      --#{$custom-property-prefix}-text-on-color,\\n      map-get($theme, 'text-on-color')\\n    ) !global;\\n    $text-inverse: var(\\n      --#{$custom-property-prefix}-text-inverse,\\n      map-get($theme, 'text-inverse')\\n    ) !global;\\n    $link-primary: var(\\n      --#{$custom-property-prefix}-link-primary,\\n      map-get($theme, 'link-primary')\\n    ) !global;\\n    $link-secondary: var(\\n      --#{$custom-property-prefix}-link-secondary,\\n      map-get($theme, 'link-secondary')\\n    ) !global;\\n    $link-visited: var(\\n      --#{$custom-property-prefix}-link-visited,\\n      map-get($theme, 'link-visited')\\n    ) !global;\\n    $link-inverse: var(\\n      --#{$custom-property-prefix}-link-inverse,\\n      map-get($theme, 'link-inverse')\\n    ) !global;\\n    $icon-primary: var(\\n      --#{$custom-property-prefix}-icon-primary,\\n      map-get($theme, 'icon-primary')\\n    ) !global;\\n    $icon-secondary: var(\\n      --#{$custom-property-prefix}-icon-secondary,\\n      map-get($theme, 'icon-secondary')\\n    ) !global;\\n    $icon-on-color: var(\\n      --#{$custom-property-prefix}-icon-on-color,\\n      map-get($theme, 'icon-on-color')\\n    ) !global;\\n    $icon-inverse: var(\\n      --#{$custom-property-prefix}-icon-inverse,\\n      map-get($theme, 'icon-inverse')\\n    ) !global;\\n    $support-error: var(\\n      --#{$custom-property-prefix}-support-error,\\n      map-get($theme, 'support-error')\\n    ) !global;\\n    $support-success: var(\\n      --#{$custom-property-prefix}-support-success,\\n      map-get($theme, 'support-success')\\n    ) !global;\\n    $support-warning: var(\\n      --#{$custom-property-prefix}-support-warning,\\n      map-get($theme, 'support-warning')\\n    ) !global;\\n    $support-info: var(\\n      --#{$custom-property-prefix}-support-info,\\n      map-get($theme, 'support-info')\\n    ) !global;\\n    $support-error-inverse: var(\\n      --#{$custom-property-prefix}-support-error-inverse,\\n      map-get($theme, 'support-error-inverse')\\n    ) !global;\\n    $support-success-inverse: var(\\n      --#{$custom-property-prefix}-support-success-inverse,\\n      map-get($theme, 'support-success-inverse')\\n    ) !global;\\n    $support-warning-inverse: var(\\n      --#{$custom-property-prefix}-support-warning-inverse,\\n      map-get($theme, 'support-warning-inverse')\\n    ) !global;\\n    $support-info-inverse: var(\\n      --#{$custom-property-prefix}-support-info-inverse,\\n      map-get($theme, 'support-info-inverse')\\n    ) !global;\\n    $overlay: var(\\n      --#{$custom-property-prefix}-overlay,\\n      map-get($theme, 'overlay')\\n    ) !global;\\n    $toggle-off: var(\\n      --#{$custom-property-prefix}-toggle-off,\\n      map-get($theme, 'toggle-off')\\n    ) !global;\\n    $button-primary: var(\\n      --#{$custom-property-prefix}-button-primary,\\n      map-get($theme, 'button-primary')\\n    ) !global;\\n    $button-secondary: var(\\n      --#{$custom-property-prefix}-button-secondary,\\n      map-get($theme, 'button-secondary')\\n    ) !global;\\n    $button-tertiary: var(\\n      --#{$custom-property-prefix}-button-tertiary,\\n      map-get($theme, 'button-tertiary')\\n    ) !global;\\n    $button-danger-primary: var(\\n      --#{$custom-property-prefix}-button-danger-primary,\\n      map-get($theme, 'button-danger-primary')\\n    ) !global;\\n    $button-danger-secondary: var(\\n      --#{$custom-property-prefix}-button-danger-secondary,\\n      map-get($theme, 'button-danger-secondary')\\n    ) !global;\\n    $background-active: var(\\n      --#{$custom-property-prefix}-background-active,\\n      map-get($theme, 'background-active')\\n    ) !global;\\n    $layer-active: var(\\n      --#{$custom-property-prefix}-layer-active,\\n      map-get($theme, 'layer-active')\\n    ) !global;\\n    $button-danger-active: var(\\n      --#{$custom-property-prefix}-button-danger-active,\\n      map-get($theme, 'button-danger-active')\\n    ) !global;\\n    $button-primary-active: var(\\n      --#{$custom-property-prefix}-button-primary-active,\\n      map-get($theme, 'button-primary-active')\\n    ) !global;\\n    $button-secondary-active: var(\\n      --#{$custom-property-prefix}-button-secondary-active,\\n      map-get($theme, 'button-secondary-active')\\n    ) !global;\\n    $button-tertiary-active: var(\\n      --#{$custom-property-prefix}-button-tertiary-active,\\n      map-get($theme, 'button-tertiary-active')\\n    ) !global;\\n    $focus-inset: var(\\n      --#{$custom-property-prefix}-focus-inset,\\n      map-get($theme, 'focus-inset')\\n    ) !global;\\n    $focus-inverse: var(\\n      --#{$custom-property-prefix}-focus-inverse,\\n      map-get($theme, 'focus-inverse')\\n    ) !global;\\n    $background-hover: var(\\n      --#{$custom-property-prefix}-background-hover,\\n      map-get($theme, 'background-hover')\\n    ) !global;\\n    $layer-hover: var(\\n      --#{$custom-property-prefix}-layer-hover,\\n      map-get($theme, 'layer-hover')\\n    ) !global;\\n    $field-hover: var(\\n      --#{$custom-property-prefix}-field-hover,\\n      map-get($theme, 'field-hover')\\n    ) !global;\\n    $background-inverse-hover: var(\\n      --#{$custom-property-prefix}-background-inverse-hover,\\n      map-get($theme, 'background-inverse-hover')\\n    ) !global;\\n    $link-primary-hover: var(\\n      --#{$custom-property-prefix}-link-primary-hover,\\n      map-get($theme, 'link-primary-hover')\\n    ) !global;\\n    $button-danger-hover: var(\\n      --#{$custom-property-prefix}-button-danger-hover,\\n      map-get($theme, 'button-danger-hover')\\n    ) !global;\\n    $button-primary-hover: var(\\n      --#{$custom-property-prefix}-button-primary-hover,\\n      map-get($theme, 'button-primary-hover')\\n    ) !global;\\n    $button-secondary-hover: var(\\n      --#{$custom-property-prefix}-button-secondary-hover,\\n      map-get($theme, 'button-secondary-hover')\\n    ) !global;\\n    $button-tertiary-hover: var(\\n      --#{$custom-property-prefix}-button-tertiary-hover,\\n      map-get($theme, 'button-tertiary-hover')\\n    ) !global;\\n    $background-selected: var(\\n      --#{$custom-property-prefix}-background-selected,\\n      map-get($theme, 'background-selected')\\n    ) !global;\\n    $background-selected-hover: var(\\n      --#{$custom-property-prefix}-background-selected-hover,\\n      map-get($theme, 'background-selected-hover')\\n    ) !global;\\n    $layer-selected: var(\\n      --#{$custom-property-prefix}-layer-selected,\\n      map-get($theme, 'layer-selected')\\n    ) !global;\\n    $layer-selected-hover: var(\\n      --#{$custom-property-prefix}-layer-selected-hover,\\n      map-get($theme, 'layer-selected-hover')\\n    ) !global;\\n    $layer-selected-inverse: var(\\n      --#{$custom-property-prefix}-layer-selected-inverse,\\n      map-get($theme, 'layer-selected-inverse')\\n    ) !global;\\n    $border-subtle-selected: var(\\n      --#{$custom-property-prefix}-border-subtle-selected,\\n      map-get($theme, 'border-subtle-selected')\\n    ) !global;\\n    $layer-disabled: var(\\n      --#{$custom-property-prefix}-layer-disabled,\\n      map-get($theme, 'layer-disabled')\\n    ) !global;\\n    $field-disabled: var(\\n      --#{$custom-property-prefix}-field-disabled,\\n      map-get($theme, 'field-disabled')\\n    ) !global;\\n    $border-disabled: var(\\n      --#{$custom-property-prefix}-border-disabled,\\n      map-get($theme, 'border-disabled')\\n    ) !global;\\n    $text-disabled: var(\\n      --#{$custom-property-prefix}-text-disabled,\\n      map-get($theme, 'text-disabled')\\n    ) !global;\\n    $button-disabled: var(\\n      --#{$custom-property-prefix}-button-disabled,\\n      map-get($theme, 'button-disabled')\\n    ) !global;\\n    $icon-disabled: var(\\n      --#{$custom-property-prefix}-icon-disabled,\\n      map-get($theme, 'icon-disabled')\\n    ) !global;\\n    $text-on-color-disabled: var(\\n      --#{$custom-property-prefix}-text-on-color-disabled,\\n      map-get($theme, 'text-on-color-disabled')\\n    ) !global;\\n    $icon-on-color-disabled: var(\\n      --#{$custom-property-prefix}-icon-on-color-disabled,\\n      map-get($theme, 'icon-on-color-disabled')\\n    ) !global;\\n    $layer-selected-disabled: var(\\n      --#{$custom-property-prefix}-layer-selected-disabled,\\n      map-get($theme, 'layer-selected-disabled')\\n    ) !global;\\n    $skeleton-background: var(\\n      --#{$custom-property-prefix}-skeleton-background,\\n      map-get($theme, 'skeleton-background')\\n    ) !global;\\n    $skeleton-element: var(\\n      --#{$custom-property-prefix}-skeleton-element,\\n      map-get($theme, 'skeleton-element')\\n    ) !global;\\n    $brand-01: var(\\n      --#{$custom-property-prefix}-brand-01,\\n      map-get($theme, 'brand-01')\\n    ) !global;\\n    $brand-02: var(\\n      --#{$custom-property-prefix}-brand-02,\\n      map-get($theme, 'brand-02')\\n    ) !global;\\n    $brand-03: var(\\n      --#{$custom-property-prefix}-brand-03,\\n      map-get($theme, 'brand-03')\\n    ) !global;\\n    $active-01: var(\\n      --#{$custom-property-prefix}-active-01,\\n      map-get($theme, 'active-01')\\n    ) !global;\\n    $hover-field: var(\\n      --#{$custom-property-prefix}-hover-field,\\n      map-get($theme, 'hover-field')\\n    ) !global;\\n    $danger: var(\\n      --#{$custom-property-prefix}-danger,\\n      map-get($theme, 'danger')\\n    ) !global;\\n    $spacing-01: var(\\n      --#{$custom-property-prefix}-spacing-01,\\n      map-get($theme, 'spacing-01')\\n    ) !global;\\n    $spacing-02: var(\\n      --#{$custom-property-prefix}-spacing-02,\\n      map-get($theme, 'spacing-02')\\n    ) !global;\\n    $spacing-03: var(\\n      --#{$custom-property-prefix}-spacing-03,\\n      map-get($theme, 'spacing-03')\\n    ) !global;\\n    $spacing-04: var(\\n      --#{$custom-property-prefix}-spacing-04,\\n      map-get($theme, 'spacing-04')\\n    ) !global;\\n    $spacing-05: var(\\n      --#{$custom-property-prefix}-spacing-05,\\n      map-get($theme, 'spacing-05')\\n    ) !global;\\n    $spacing-06: var(\\n      --#{$custom-property-prefix}-spacing-06,\\n      map-get($theme, 'spacing-06')\\n    ) !global;\\n    $spacing-07: var(\\n      --#{$custom-property-prefix}-spacing-07,\\n      map-get($theme, 'spacing-07')\\n    ) !global;\\n    $spacing-08: var(\\n      --#{$custom-property-prefix}-spacing-08,\\n      map-get($theme, 'spacing-08')\\n    ) !global;\\n    $spacing-09: var(\\n      --#{$custom-property-prefix}-spacing-09,\\n      map-get($theme, 'spacing-09')\\n    ) !global;\\n    $spacing-10: var(\\n      --#{$custom-property-prefix}-spacing-10,\\n      map-get($theme, 'spacing-10')\\n    ) !global;\\n    $spacing-11: var(\\n      --#{$custom-property-prefix}-spacing-11,\\n      map-get($theme, 'spacing-11')\\n    ) !global;\\n    $spacing-12: var(\\n      --#{$custom-property-prefix}-spacing-12,\\n      map-get($theme, 'spacing-12')\\n    ) !global;\\n    $spacing-13: var(\\n      --#{$custom-property-prefix}-spacing-13,\\n      map-get($theme, 'spacing-13')\\n    ) !global;\\n    $fluid-spacing-01: var(\\n      --#{$custom-property-prefix}-fluid-spacing-01,\\n      map-get($theme, 'fluid-spacing-01')\\n    ) !global;\\n    $fluid-spacing-02: var(\\n      --#{$custom-property-prefix}-fluid-spacing-02,\\n      map-get($theme, 'fluid-spacing-02')\\n    ) !global;\\n    $fluid-spacing-03: var(\\n      --#{$custom-property-prefix}-fluid-spacing-03,\\n      map-get($theme, 'fluid-spacing-03')\\n    ) !global;\\n    $fluid-spacing-04: var(\\n      --#{$custom-property-prefix}-fluid-spacing-04,\\n      map-get($theme, 'fluid-spacing-04')\\n    ) !global;\\n    $layout-01: var(\\n      --#{$custom-property-prefix}-layout-01,\\n      map-get($theme, 'layout-01')\\n    ) !global;\\n    $layout-02: var(\\n      --#{$custom-property-prefix}-layout-02,\\n      map-get($theme, 'layout-02')\\n    ) !global;\\n    $layout-03: var(\\n      --#{$custom-property-prefix}-layout-03,\\n      map-get($theme, 'layout-03')\\n    ) !global;\\n    $layout-04: var(\\n      --#{$custom-property-prefix}-layout-04,\\n      map-get($theme, 'layout-04')\\n    ) !global;\\n    $layout-05: var(\\n      --#{$custom-property-prefix}-layout-05,\\n      map-get($theme, 'layout-05')\\n    ) !global;\\n    $layout-06: var(\\n      --#{$custom-property-prefix}-layout-06,\\n      map-get($theme, 'layout-06')\\n    ) !global;\\n    $layout-07: var(\\n      --#{$custom-property-prefix}-layout-07,\\n      map-get($theme, 'layout-07')\\n    ) !global;\\n    $container-01: var(\\n      --#{$custom-property-prefix}-container-01,\\n      map-get($theme, 'container-01')\\n    ) !global;\\n    $container-02: var(\\n      --#{$custom-property-prefix}-container-02,\\n      map-get($theme, 'container-02')\\n    ) !global;\\n    $container-03: var(\\n      --#{$custom-property-prefix}-container-03,\\n      map-get($theme, 'container-03')\\n    ) !global;\\n    $container-04: var(\\n      --#{$custom-property-prefix}-container-04,\\n      map-get($theme, 'container-04')\\n    ) !global;\\n    $container-05: var(\\n      --#{$custom-property-prefix}-container-05,\\n      map-get($theme, 'container-05')\\n    ) !global;\\n    $size-xsmall: var(\\n      --#{$custom-property-prefix}-size-xsmall,\\n      map-get($theme, 'size-xsmall')\\n    ) !global;\\n    $size-small: var(\\n      --#{$custom-property-prefix}-size-small,\\n      map-get($theme, 'size-small')\\n    ) !global;\\n    $size-medium: var(\\n      --#{$custom-property-prefix}-size-medium,\\n      map-get($theme, 'size-medium')\\n    ) !global;\\n    $size-large: var(\\n      --#{$custom-property-prefix}-size-large,\\n      map-get($theme, 'size-large')\\n    ) !global;\\n    $size-xlarge: var(\\n      --#{$custom-property-prefix}-size-xlarge,\\n      map-get($theme, 'size-xlarge')\\n    ) !global;\\n    $size-2XLarge: var(\\n      --#{$custom-property-prefix}-size-2XLarge,\\n      map-get($theme, 'size-2XLarge')\\n    ) !global;\\n    $icon-size-01: var(\\n      --#{$custom-property-prefix}-icon-size-01,\\n      map-get($theme, 'icon-size-01')\\n    ) !global;\\n    $icon-size-02: var(\\n      --#{$custom-property-prefix}-icon-size-02,\\n      map-get($theme, 'icon-size-02')\\n    ) !global;\\n  }\\n  @if $emit-custom-properties == true {\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-01',\\n        map-get($theme, 'interactive-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-02',\\n        map-get($theme, 'interactive-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-03',\\n        map-get($theme, 'interactive-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-04',\\n        map-get($theme, 'interactive-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'ui-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'ui-background',\\n        map-get($theme, 'ui-background')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-01', $emit-difference) {\\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-02', $emit-difference) {\\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-03', $emit-difference) {\\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-04', $emit-difference) {\\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-05', $emit-difference) {\\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-01', $emit-difference) {\\n      @include custom-property('text-01', map-get($theme, 'text-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-02', $emit-difference) {\\n      @include custom-property('text-02', map-get($theme, 'text-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-03', $emit-difference) {\\n      @include custom-property('text-03', map-get($theme, 'text-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-04', $emit-difference) {\\n      @include custom-property('text-04', map-get($theme, 'text-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-05', $emit-difference) {\\n      @include custom-property('text-05', map-get($theme, 'text-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-error', map-get($theme, 'text-error'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-01', $emit-difference) {\\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-02', $emit-difference) {\\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-03', $emit-difference) {\\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-01', $emit-difference) {\\n      @include custom-property('link-01', map-get($theme, 'link-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-02', $emit-difference) {\\n      @include custom-property('link-02', map-get($theme, 'link-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-01', $emit-difference)\\n    {\\n      @include custom-property('field-01', map-get($theme, 'field-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-02', $emit-difference)\\n    {\\n      @include custom-property('field-02', map-get($theme, 'field-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-01', map-get($theme, 'support-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-02', map-get($theme, 'support-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-03', map-get($theme, 'support-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-04', map-get($theme, 'support-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-01',\\n        map-get($theme, 'inverse-support-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-02',\\n        map-get($theme, 'inverse-support-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-03',\\n        map-get($theme, 'inverse-support-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-04',\\n        map-get($theme, 'inverse-support-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'overlay-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-01', $emit-difference)\\n    {\\n      @include custom-property('danger-01', map-get($theme, 'danger-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-02', $emit-difference)\\n    {\\n      @include custom-property('danger-02', map-get($theme, 'danger-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'focus', $emit-difference) {\\n      @include custom-property('focus', map-get($theme, 'focus'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-focus-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-focus-ui',\\n        map-get($theme, 'inverse-focus-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary',\\n        map-get($theme, 'hover-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-primary',\\n        map-get($theme, 'active-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary-text',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary-text',\\n        map-get($theme, 'hover-primary-text')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-secondary',\\n        map-get($theme, 'hover-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-secondary',\\n        map-get($theme, 'active-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-tertiary',\\n        map-get($theme, 'hover-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-tertiary',\\n        map-get($theme, 'active-tertiary')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-ui', $emit-difference)\\n    {\\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-light-ui',\\n        map-get($theme, 'hover-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-selected-ui',\\n        map-get($theme, 'hover-selected-ui')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-ui', $emit-difference)\\n    {\\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-light-ui',\\n        map-get($theme, 'active-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'selected-light-ui',\\n        map-get($theme, 'selected-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-hover-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-hover-ui',\\n        map-get($theme, 'inverse-hover-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-danger',\\n        map-get($theme, 'active-danger')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-row', $emit-difference)\\n    {\\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'visited-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'highlight', $emit-difference)\\n    {\\n      @include custom-property('highlight', map-get($theme, 'highlight'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'decorative-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'decorative-01',\\n        map-get($theme, 'decorative-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-separator',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-separator',\\n        map-get($theme, 'button-separator')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('background', map-get($theme, 'background'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layer', $emit-difference) {\\n      @include custom-property('layer', map-get($theme, 'layer'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-accent', map-get($theme, 'layer-accent'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-hover',\\n        map-get($theme, 'layer-accent-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-active',\\n        map-get($theme, 'layer-accent-active')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field', $emit-difference) {\\n      @include custom-property('field', map-get($theme, 'field'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse',\\n        map-get($theme, 'background-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-brand',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-brand',\\n        map-get($theme, 'background-brand')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('interactive', map-get($theme, 'interactive'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle',\\n        map-get($theme, 'border-subtle')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-strong',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-strong',\\n        map-get($theme, 'border-strong')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-inverse',\\n        map-get($theme, 'border-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-interactive',\\n        map-get($theme, 'border-interactive')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-primary', map-get($theme, 'text-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-secondary',\\n        map-get($theme, 'text-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-placeholder',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-placeholder',\\n        map-get($theme, 'text-placeholder')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-helper',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-helper', map-get($theme, 'text-helper'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color',\\n        map-get($theme, 'text-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-inverse', map-get($theme, 'text-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-primary', map-get($theme, 'link-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-secondary',\\n        map-get($theme, 'link-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-visited',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-visited', map-get($theme, 'link-visited'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-inverse', map-get($theme, 'link-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-primary', map-get($theme, 'icon-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-secondary',\\n        map-get($theme, 'icon-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color',\\n        map-get($theme, 'icon-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-inverse', map-get($theme, 'icon-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error',\\n        map-get($theme, 'support-error')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success',\\n        map-get($theme, 'support-success')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning',\\n        map-get($theme, 'support-warning')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-info', map-get($theme, 'support-info'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error-inverse',\\n        map-get($theme, 'support-error-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success-inverse',\\n        map-get($theme, 'support-success-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning-inverse',\\n        map-get($theme, 'support-warning-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-info-inverse',\\n        map-get($theme, 'support-info-inverse')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'overlay', $emit-difference) {\\n      @include custom-property('overlay', map-get($theme, 'overlay'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'toggle-off',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('toggle-off', map-get($theme, 'toggle-off'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary',\\n        map-get($theme, 'button-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary',\\n        map-get($theme, 'button-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary',\\n        map-get($theme, 'button-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-primary',\\n        map-get($theme, 'button-danger-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-secondary',\\n        map-get($theme, 'button-danger-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-active',\\n        map-get($theme, 'background-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-active', map-get($theme, 'layer-active'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-active',\\n        map-get($theme, 'button-danger-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-active',\\n        map-get($theme, 'button-primary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-active',\\n        map-get($theme, 'button-secondary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-active',\\n        map-get($theme, 'button-tertiary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inset',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('focus-inset', map-get($theme, 'focus-inset'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'focus-inverse',\\n        map-get($theme, 'focus-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-hover',\\n        map-get($theme, 'background-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-hover', map-get($theme, 'layer-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('field-hover', map-get($theme, 'field-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse-hover',\\n        map-get($theme, 'background-inverse-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-primary-hover',\\n        map-get($theme, 'link-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-hover',\\n        map-get($theme, 'button-danger-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-hover',\\n        map-get($theme, 'button-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-hover',\\n        map-get($theme, 'button-secondary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-hover',\\n        map-get($theme, 'button-tertiary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected',\\n        map-get($theme, 'background-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected-hover',\\n        map-get($theme, 'background-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected',\\n        map-get($theme, 'layer-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-hover',\\n        map-get($theme, 'layer-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-inverse',\\n        map-get($theme, 'layer-selected-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle-selected',\\n        map-get($theme, 'border-subtle-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-disabled',\\n        map-get($theme, 'layer-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'field-disabled',\\n        map-get($theme, 'field-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-disabled',\\n        map-get($theme, 'border-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-disabled',\\n        map-get($theme, 'text-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-disabled',\\n        map-get($theme, 'button-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-disabled',\\n        map-get($theme, 'icon-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color-disabled',\\n        map-get($theme, 'text-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color-disabled',\\n        map-get($theme, 'icon-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-disabled',\\n        map-get($theme, 'layer-selected-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-background',\\n        map-get($theme, 'skeleton-background')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-element',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-element',\\n        map-get($theme, 'skeleton-element')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-01', $emit-difference)\\n    {\\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-02', $emit-difference)\\n    {\\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-03', $emit-difference)\\n    {\\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-01', $emit-difference)\\n    {\\n      @include custom-property('active-01', map-get($theme, 'active-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-field',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger', $emit-difference) {\\n      @include custom-property('danger', map-get($theme, 'danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-02', map-get($theme, 'caption-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-01', $emit-difference)\\n    {\\n      @include custom-property('label-01', map-get($theme, 'label-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-02', $emit-difference)\\n    {\\n      @include custom-property('label-02', map-get($theme, 'label-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-01',\\n        map-get($theme, 'helper-text-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-02',\\n        map-get($theme, 'helper-text-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-01',\\n        map-get($theme, 'body-short-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-02',\\n        map-get($theme, 'body-short-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-01', $emit-difference) {\\n      @include custom-property('code-01', map-get($theme, 'code-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-02', $emit-difference) {\\n      @include custom-property('code-02', map-get($theme, 'code-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-01',\\n        map-get($theme, 'productive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-02',\\n        map-get($theme, 'productive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-03',\\n        map-get($theme, 'productive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-04',\\n        map-get($theme, 'productive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-05',\\n        map-get($theme, 'productive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-06',\\n        map-get($theme, 'productive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-07',\\n        map-get($theme, 'productive-heading-07')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-01',\\n        map-get($theme, 'expressive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-02',\\n        map-get($theme, 'expressive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-03',\\n        map-get($theme, 'expressive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-04',\\n        map-get($theme, 'expressive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-05',\\n        map-get($theme, 'expressive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-06',\\n        map-get($theme, 'expressive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-paragraph-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-paragraph-01',\\n        map-get($theme, 'expressive-paragraph-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-01', map-get($theme, 'display-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-02', map-get($theme, 'display-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-03', map-get($theme, 'display-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-04', map-get($theme, 'display-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-08',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-09',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-10',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-11',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-12',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-13',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-13', map-get($theme, 'spacing-13'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-01',\\n        map-get($theme, 'fluid-spacing-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-02',\\n        map-get($theme, 'fluid-spacing-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-03',\\n        map-get($theme, 'fluid-spacing-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-04',\\n        map-get($theme, 'fluid-spacing-04')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-01', $emit-difference)\\n    {\\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-02', $emit-difference)\\n    {\\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-03', $emit-difference)\\n    {\\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-04', $emit-difference)\\n    {\\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-05', $emit-difference)\\n    {\\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-06', $emit-difference)\\n    {\\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-07', $emit-difference)\\n    {\\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-01', map-get($theme, 'container-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-02', map-get($theme, 'container-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-03', map-get($theme, 'container-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-04', map-get($theme, 'container-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-05', map-get($theme, 'container-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xsmall',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xsmall', map-get($theme, 'size-xsmall'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-small',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-small', map-get($theme, 'size-small'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-medium',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-medium', map-get($theme, 'size-medium'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-large',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-large', map-get($theme, 'size-large'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xlarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xlarge', map-get($theme, 'size-xlarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-2XLarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-2XLarge', map-get($theme, 'size-2XLarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\\n    }\\n  }\\n\\n  @content;\\n\\n  // Reset to default theme after apply in content\\n  @if $carbon--theme != $parent-carbon-theme {\\n    $carbon--theme: $parent-carbon-theme !global;\\n\\n    @include carbon--theme();\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"patientChartWrapper\": \"-esm-patient-chart__chart-review__patientChartWrapper___dNBEp\",\n\t\"productiveHeading01\": \"-esm-patient-chart__chart-review__productiveHeading01___BXHQd\",\n\t\"productiveHeading02\": \"-esm-patient-chart__chart-review__productiveHeading02___19oEM\",\n\t\"productiveHeading03\": \"-esm-patient-chart__chart-review__productiveHeading03___hWD4K\",\n\t\"productiveHeading04\": \"-esm-patient-chart__chart-review__productiveHeading04___IpYi8\",\n\t\"bodyLong01\": \"-esm-patient-chart__chart-review__bodyLong01___dPAgl\",\n\t\"dashboardTitle\": \"-esm-patient-chart__chart-review__dashboardTitle___I7yvp\",\n\t\"skeleton\": \"-esm-patient-chart__chart-review__skeleton___a3Nn8\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{padding:0;border:0;margin:0;font:inherit;font-size:100%;vertical-align:baseline}button,select,input,textarea{border-radius:0;font-family:inherit}input[type=text]::-ms-clear{display:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}body{line-height:1}sup{vertical-align:super}sub{vertical-align:sub}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:\\\"\\\"}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}button{margin:0}html{font-size:100%}body{font-weight:400;font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility}code{font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace}strong{font-weight:600}@media screen and (-ms-high-contrast: active){svg{fill:ButtonText}}h1{font-size:2.625rem;font-weight:300;line-height:1.199;letter-spacing:0}h2{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}h3{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}h4{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}h5{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}h6{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}p{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}a{color:#0f62fe}em{font-style:italic}@keyframes -esm-patient-chart__side-menu-component__skeleton___M2i5a{0%{opacity:.3;transform:scaleX(0);transform-origin:left}20%{opacity:1;transform:scaleX(1);transform-origin:left}28%{transform:scaleX(1);transform-origin:right}51%{transform:scaleX(0);transform-origin:right}58%{transform:scaleX(0);transform-origin:right}82%{transform:scaleX(1);transform-origin:right}83%{transform:scaleX(1);transform-origin:left}96%{transform:scaleX(0);transform-origin:left}100%{opacity:.3;transform:scaleX(0);transform-origin:left}}.-esm-patient-chart__side-menu-component__patientChartWrapper___j9nNN{display:flex;position:relative}.-esm-patient-chart__side-menu-component__productiveHeading01___V0Sz5,.-esm-patient-chart__side-menu-component__link___YNKEm>div a:nth-child(1){font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.-esm-patient-chart__side-menu-component__productiveHeading02___SQydX{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-patient-chart__side-menu-component__productiveHeading03___uFSji{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-patient-chart__side-menu-component__productiveHeading04___2fCvF{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-patient-chart__side-menu-component__bodyLong01___AKqfy{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-patient-chart__side-menu-component__link___YNKEm>div a:nth-child(1){height:3rem;padding:1.5rem 0 1.5rem 1.2rem;color:#8d8d8d;border-left:.25rem solid transparent}.omrs-breakpoint-gt-tablet .-esm-patient-chart__side-menu-component__link___YNKEm>div{padding-top:1rem}.omrs-breakpoint-gt-tablet .-esm-patient-chart__side-menu-component__link___YNKEm>div a:nth-child(1){height:2rem;color:#8d8d8d;padding:0 0 0 1rem}.-esm-patient-chart__side-menu-component__link___YNKEm>div a:nth-child(1):hover{background-color:#e0e0e0;color:#161616;border-left:var(--brand-01)}.-esm-patient-chart__side-menu-component__link___YNKEm>div a:nth-child(1):focus{background-color:#e0e0e0;outline:none;color:#161616;border-left:var(--brand-01)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_css--reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_font-family.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/icons/mixins.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_helper-mixins.scss\",\"webpack://./src/root.scss\",\"webpack://./src/view-components/side-menu.component.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCTE,2ZAiFE,SAAA,CACA,QAAA,CACA,QAAA,CACA,YAAA,CACA,cAAA,CACA,uBAAA,CAIF,6BAIE,eAAA,CACA,mBAAA,CAGF,4BACE,YAAA,CAIF,mFAYE,aAAA,CAGF,KACE,aAAA,CAGF,IACE,oBAAA,CAGF,IACE,kBAAA,CAGF,MAEE,eAAA,CAGF,aAEE,WAAA,CAGF,wDAIE,UAAA,CAGF,MACE,wBAAA,CACA,gBAAA,CAGF,EACE,qBAAA,CAIF,OACE,QAAA,CC3KJ,KACE,cAAA,CAGF,KC0CA,eAAA,CDvCE,gEAViB,CAWjB,iCAAA,CACA,kCAAA,CACA,iCAAA,CAGF,KACE,wGAhBiB,CAmBnB,OC6BA,eAAA,CCxDA,8CACE,IACE,eAAA,CAAA,CFkCJ,GGggBE,kBAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlrBxB,GG4fE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH9qBxB,GGwfE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH1qBxB,GGofE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CHtqBxB,GGgfE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlqBxB,GG4eE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CH9pBxB,EGweE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CH1pBxB,EAII,aAAA,CAMJ,GACE,iBAAA,CIkHF,qEACE,GACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,SAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,KACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAAA,CC3ON,sEACE,YAAA,CACA,iBAAA,CAGF,gJFuiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CEztB1B,sEFmiBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CErtB1B,sEF+hBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CEjtB1B,sEF2hBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CE7sB1B,6DFuhBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CGpuB1B,0EACE,WAAA,CACA,8BAAA,CACA,aC2CQ,CDzCR,oCAAA,CAGF,sFACE,gBAAA,CAGF,qGACE,WAAA,CACA,aCgCQ,CD/BR,kBAAA,CAGF,gFACE,wBC0BQ,CDzBR,aC2BQ,CD1BR,2BAAA,CAGF,gFACE,wBCoBQ,CDnBR,YAAA,CACA,aCoBQ,CDnBR,2BAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n@import './vendor/@carbon/elements/scss/type/reset';\\n@import './vendor/@carbon/elements/scss/icons/mixins';\\n\\n/// Resets default browser styling\\n/// @access public\\n/// @group global-reset\\n@mixin reset {\\n  @if variable-exists(css--reset) == false or $css--reset == false {\\n    box-sizing: border-box;\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    font-family: inherit;\\n    font-size: 100%;\\n    vertical-align: baseline;\\n\\n    *,\\n    *::before,\\n    *::after {\\n      box-sizing: inherit;\\n    }\\n  }\\n}\\n\\n@include exports('css--reset') {\\n  @if variable-exists(css--reset) == false or $css--reset == true {\\n    // http://cssreset.com/scripts/eric-meyer-reset-css/\\n    html,\\n    body,\\n    div,\\n    span,\\n    applet,\\n    object,\\n    iframe,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p,\\n    blockquote,\\n    pre,\\n    a,\\n    abbr,\\n    acronym,\\n    address,\\n    big,\\n    cite,\\n    code,\\n    del,\\n    dfn,\\n    em,\\n    img,\\n    ins,\\n    kbd,\\n    q,\\n    s,\\n    samp,\\n    small,\\n    strike,\\n    strong,\\n    sub,\\n    sup,\\n    tt,\\n    var,\\n    b,\\n    u,\\n    i,\\n    center,\\n    dl,\\n    dt,\\n    dd,\\n    ol,\\n    ul,\\n    li,\\n    fieldset,\\n    form,\\n    label,\\n    legend,\\n    table,\\n    caption,\\n    tbody,\\n    tfoot,\\n    thead,\\n    tr,\\n    th,\\n    td,\\n    article,\\n    aside,\\n    canvas,\\n    details,\\n    embed,\\n    figure,\\n    figcaption,\\n    footer,\\n    header,\\n    hgroup,\\n    menu,\\n    nav,\\n    output,\\n    ruby,\\n    section,\\n    summary,\\n    time,\\n    mark,\\n    audio,\\n    video {\\n      padding: 0;\\n      border: 0;\\n      margin: 0;\\n      font: inherit;\\n      font-size: 100%;\\n      vertical-align: baseline;\\n    }\\n\\n    // Chrome 62 fix\\n    button,\\n    select,\\n    input,\\n    textarea {\\n      border-radius: 0;\\n      font-family: inherit;\\n    }\\n\\n    input[type='text']::-ms-clear {\\n      display: none;\\n    }\\n\\n    /* HTML5 display-role reset for older browsers */\\n    article,\\n    aside,\\n    details,\\n    figcaption,\\n    figure,\\n    footer,\\n    header,\\n    hgroup,\\n    main,\\n    menu,\\n    nav,\\n    section {\\n      display: block;\\n    }\\n\\n    body {\\n      line-height: 1;\\n    }\\n\\n    sup {\\n      vertical-align: super;\\n    }\\n\\n    sub {\\n      vertical-align: sub;\\n    }\\n\\n    ol,\\n    ul {\\n      list-style: none;\\n    }\\n\\n    blockquote,\\n    q {\\n      quotes: none;\\n    }\\n\\n    blockquote::before,\\n    blockquote::after,\\n    q::before,\\n    q::after {\\n      content: '';\\n    }\\n\\n    table {\\n      border-collapse: collapse;\\n      border-spacing: 0;\\n    }\\n\\n    * {\\n      box-sizing: border-box;\\n    }\\n\\n    // Fix to remove added margins on buttons in safari (see #5155)\\n    button {\\n      margin: 0;\\n    }\\n\\n    @include carbon--type-reset;\\n    @include carbon--icons;\\n  }\\n}\\n\\n@include exports('css--default-type') {\\n  @if variable-exists(css--default-type) == false or $css--default-type == true\\n  {\\n    @include carbon--default-type;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/convert';\\n@import 'font-family';\\n@import 'styles';\\n\\n/// Include a type reset for a given body and mono font family\\n/// @param {String} $body-font-family [carbon--font-family('sans')] - The font family used on the `<body>` element\\n/// @param {String} $mono-font-family [carbon--font-family('mono')] - The font family used on elements that require mono fonts, like the `<code>` element\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-reset(\\n  // TODO: remove in next major release. This has been replaced with 100%\\n  $base-font-size: $carbon--base-font-size,\\n  $body-font-family: carbon--font-family('sans'),\\n  $mono-font-family: carbon--font-family('mono')\\n) {\\n  html {\\n    font-size: 100%;\\n  }\\n\\n  body {\\n    @include carbon--font-weight('regular');\\n\\n    font-family: $body-font-family;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-font-smoothing: antialiased;\\n    text-rendering: optimizeLegibility;\\n  }\\n\\n  code {\\n    font-family: $mono-font-family;\\n  }\\n\\n  strong {\\n    @include carbon--font-weight('semibold');\\n  }\\n}\\n\\n/// Include default type styles\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--default-type {\\n  h1 {\\n    @include carbon--type-style('productive-heading-06');\\n  }\\n\\n  h2 {\\n    @include carbon--type-style('productive-heading-05');\\n  }\\n\\n  h3 {\\n    @include carbon--type-style('productive-heading-04');\\n  }\\n\\n  h4 {\\n    @include carbon--type-style('productive-heading-03');\\n  }\\n\\n  h5 {\\n    @include carbon--type-style('productive-heading-02');\\n  }\\n\\n  h6 {\\n    @include carbon--type-style('productive-heading-01');\\n  }\\n\\n  p {\\n    @include carbon--type-style('body-long-02');\\n  }\\n\\n  a {\\n    @if global-variable-exists('carbon--theme') and\\n      map-has-key($carbon--theme, 'link-01')\\n    {\\n      color: map-get($carbon--theme, 'link-01');\\n    } @else {\\n      color: #0062fe;\\n    }\\n  }\\n\\n  em {\\n    font-style: italic;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\\n/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-families: (\\n  'mono':\\n    unquote(\\n      \\\"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\\\"\\n    ),\\n  'sans': unquote(\\\"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-condensed':\\n    unquote(\\\"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-hebrew':\\n    unquote(\\n      \\\"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\\\"\\n    ),\\n  'serif': unquote(\\\"'IBM Plex Serif', 'Georgia', Times, serif\\\"),\\n) !default;\\n\\n/// Get the font-family for an IBM Plex font\\n/// @param {String} $name\\n/// @return {String}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-family($name) {\\n  @return map-get($carbon--font-families, $name);\\n}\\n\\n/// Include the `font-family` definition for the given name in your selector\\n/// @param {String} $name\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-family($name) {\\n  font-family: carbon--font-family($name);\\n}\\n\\n/// Suggested font weights to be used in product\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-weights: (\\n  'light': 300,\\n  'regular': 400,\\n  'semibold': 600,\\n) !default;\\n\\n/// Retrieve the font-weight value for a given name\\n/// @param {String} $weight\\n/// @return {Number}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-weight($weight) {\\n  @return map-get($carbon--font-weights, $weight);\\n}\\n\\n/// Set the `font-weight` property with the value for a given name\\n/// @param {String} $weight\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-weight($weight) {\\n  font-weight: carbon--font-weight($weight);\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Makes SVGs accessible in high contrast mode\\n/// @link https://github.com/IBM/carbon-elements/issues/345#issuecomment-466577293 Carbon-elements #345\\n/// @access public\\n/// @group @carbon/icons\\n@mixin carbon--icons {\\n  @media screen and (-ms-high-contrast: active) {\\n    svg {\\n      fill: ButtonText;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n//----------------------------------------------\\n// Mixins\\n// ---------------------------------------------\\n//\\n//   Category             ||  Description\\n//   ===========================================\\n//   Misc                 ||  General helper @mixins\\n//   Deprecated           ||  Not used anymore\\n//   ===========================================\\n\\n//----------------------------------------------\\n// Misc\\n// ---------------------------------------------\\n\\n@import 'vars';\\n@import 'css--reset';\\n@import 'typography';\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n\\n/// Adds text overflow styling\\n/// @access public\\n/// @param {Number} $width [false] - Value of width if you want to set width, else nothing\\n/// @example @include text-overflow(300px);\\n/// @group global-helpers\\n@mixin text-overflow($width: false) {\\n  display: block;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n\\n  // apply a width if width parameter exists\\n  @if ($width) {\\n    width: $width;\\n  }\\n}\\n\\n/// Adds placeholder text color\\n/// @access public\\n/// @example @include placeholder-colors;\\n/// @group global-helpers\\n@mixin placeholder-colors {\\n  color: $text-05;\\n  opacity: 1;\\n}\\n\\n/// Adds box shadow\\n/// @access public\\n/// @example @include box-shadow;\\n/// @group global-helpers\\n@mixin box-shadow {\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\\n}\\n\\n/// Adds outline styles depending on specific type\\n/// @access public\\n/// @param {String} $type ['border'] - Type of outline from: `border`, `blurred`, `outline`, `invalid`, `reset`\\n/// @example @include focus-outline('outline');\\n/// @group global-helpers\\n@mixin focus-outline($type: 'border') {\\n  @if ($type == 'border') {\\n    outline: 1px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'blurred') {\\n    box-shadow: 0 0 0 3px $focus;\\n    outline: 1px solid transparent;\\n  }\\n\\n  @if ($type == 'outline') {\\n    outline: 2px solid $focus;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'outline-compat') {\\n    box-sizing: border-box;\\n    border: 2px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      border-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'invalid') {\\n    outline: 2px solid $support-01;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'reset') {\\n    outline: 2px solid transparent;\\n    outline-offset: -2px;\\n  }\\n}\\n\\n/// Adds rotational transformation\\n/// @access public\\n/// @param {Number} $deg - How many degrees to rotate\\n/// @param {Number} $speed - Speed of rotation\\n/// @param {Value} $origin [center] - `transform-origin`\\n/// @example @include rotate(90deg, 300ms);\\n/// @group global-helpers\\n@mixin rotate($deg, $speed, $origin: center) {\\n  transform: rotate($deg);\\n  transform-origin: $origin;\\n  transition: transform $speed;\\n}\\n\\n/// Adds styles to hide content\\n/// @access public\\n/// @group global-helpers\\n@mixin hidden {\\n  position: absolute;\\n  overflow: hidden;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  border: 0;\\n  margin: -1px;\\n  clip: rect(0, 0, 0, 0);\\n  visibility: inherit;\\n  white-space: nowrap;\\n}\\n\\n/// Resets button styles\\n/// @access public\\n/// @param {Bool} $width [true] - Sets width to 100% if true\\n/// @example @include button-reset($width: false);\\n/// @group global-helpers\\n@mixin button-reset($width: true) {\\n  @include reset;\\n\\n  display: inline-block;\\n  padding: 0;\\n  border: 0;\\n  appearance: none;\\n  background: none;\\n  cursor: pointer;\\n\\n  @if ($width == true) {\\n    width: 100%;\\n  }\\n\\n  &::-moz-focus-inner {\\n    border: 0;\\n  }\\n}\\n\\n/// Skeleton loading animation\\n/// @access public\\n/// @example @include skeleton;\\n/// @group global-helpers\\n@mixin skeleton {\\n  position: relative;\\n  padding: 0;\\n  border: none;\\n  background: $skeleton-01;\\n  box-shadow: none;\\n  pointer-events: none;\\n\\n  &:hover,\\n  &:focus,\\n  &:active {\\n    border: none;\\n    cursor: default;\\n    outline: none;\\n  }\\n\\n  &::before {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    animation: 3000ms ease-in-out skeleton infinite;\\n    background: $skeleton-02;\\n    content: '';\\n    will-change: transform-origin, transform, opacity;\\n\\n    @media (prefers-reduced-motion: reduce) {\\n      animation: none;\\n    }\\n  }\\n}\\n\\n@include exports('skeleton') {\\n  @keyframes skeleton {\\n    0% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    20% {\\n      opacity: 1;\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    28% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    51% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    58% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    82% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    83% {\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    96% {\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    100% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n  }\\n}\\n\\n/// Windows HCM Mixin\\n/// @access public\\n/// @example @include high-contrast-mode;\\n/// @group global-helpers\\n/// We should set HCM styles at the end of each file to ensure they are not overridden\\n@mixin high-contrast-mode($type: '') {\\n  @media screen and (-ms-high-contrast: active),\\n    (forced-colors: active),\\n    (prefers-contrast) {\\n    @if ($type == 'icon-fill') {\\n      fill: ButtonText;\\n    }\\n\\n    @if ($type == 'focus') {\\n      color: Highlight;\\n      outline: 1px solid Highlight;\\n    }\\n\\n    @if ($type == 'outline') {\\n      outline: 1px solid transparent;\\n    }\\n\\n    @if ($type == 'disabled') {\\n      color: GrayText;\\n      fill: GrayText;\\n    }\\n\\n    @content;\\n  }\\n}\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/mixins\\\";\\n\\n.patientChartWrapper {\\n  display: flex;\\n  position: relative;\\n}\\n\\n.productiveHeading01 {\\n  @include carbon--type-style(\\\"productive-heading-01\\\");\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n}\\n\\n.productiveHeading03 {\\n  @include carbon--type-style(\\\"productive-heading-03\\\");\\n}\\n\\n.productiveHeading04 {\\n  @include carbon--type-style(\\\"productive-heading-04\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\",\"@import \\\"../root.scss\\\";\\n\\n.link > div a:nth-child(1) {\\n  height: 3rem;\\n  padding: 1.5rem 0 1.5rem 1.2rem;\\n  color: $ui-04;\\n  @extend .productiveHeading01;\\n  border-left: 0.25rem solid transparent;\\n}\\n\\n:global(.omrs-breakpoint-gt-tablet) .link > div {\\n  padding-top: 1rem;\\n}\\n\\n:global(.omrs-breakpoint-gt-tablet) .link > div a:nth-child(1) {\\n  height: 2rem;\\n  color: $ui-04;\\n  padding: 0 0 0 1rem;\\n}\\n\\n.link > div a:nth-child(1):hover {\\n  background-color: $ui-03;\\n  color: $ui-05;\\n  border-left: var(--brand-01);\\n}\\n\\n.link > div a:nth-child(1):focus {\\n  background-color: $ui-03;\\n  outline: none;\\n  color: $ui-05;\\n  border-left: var(--brand-01);\\n}\\n\",\"// Code generated by @carbon/themes. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './themes';\\n\\n/// Define theme variables from a map of tokens\\n/// @access public\\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\\n///\\n/// @example scss\\n///   // Default usage\\n///   @include carbon--theme();\\n///\\n///   // Alternate styling (not white theme)\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     // declarations...\\n///   }\\n///\\n///   // Inline styling\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     .my-dark-theme {\\n///       // declarations...\\n///     }\\n///   }\\n///\\n/// @group @carbon/themes\\n@mixin carbon--theme(\\n  $theme: $carbon--theme,\\n  $emit-custom-properties: false,\\n  $emit-difference: false\\n) {\\n  $parent-carbon-theme: $carbon--theme;\\n  $carbon--theme: $theme !global;\\n  $interactive-01: map-get($theme, 'interactive-01') !global;\\n  $interactive-02: map-get($theme, 'interactive-02') !global;\\n  $interactive-03: map-get($theme, 'interactive-03') !global;\\n  $interactive-04: map-get($theme, 'interactive-04') !global;\\n  $ui-background: map-get($theme, 'ui-background') !global;\\n  $ui-01: map-get($theme, 'ui-01') !global;\\n  $ui-02: map-get($theme, 'ui-02') !global;\\n  $ui-03: map-get($theme, 'ui-03') !global;\\n  $ui-04: map-get($theme, 'ui-04') !global;\\n  $ui-05: map-get($theme, 'ui-05') !global;\\n  $text-01: map-get($theme, 'text-01') !global;\\n  $text-02: map-get($theme, 'text-02') !global;\\n  $text-03: map-get($theme, 'text-03') !global;\\n  $text-04: map-get($theme, 'text-04') !global;\\n  $text-05: map-get($theme, 'text-05') !global;\\n  $text-error: map-get($theme, 'text-error') !global;\\n  $icon-01: map-get($theme, 'icon-01') !global;\\n  $icon-02: map-get($theme, 'icon-02') !global;\\n  $icon-03: map-get($theme, 'icon-03') !global;\\n  $link-01: map-get($theme, 'link-01') !global;\\n  $link-02: map-get($theme, 'link-02') !global;\\n  $inverse-link: map-get($theme, 'inverse-link') !global;\\n  $field-01: map-get($theme, 'field-01') !global;\\n  $field-02: map-get($theme, 'field-02') !global;\\n  $inverse-01: map-get($theme, 'inverse-01') !global;\\n  $inverse-02: map-get($theme, 'inverse-02') !global;\\n  $support-01: map-get($theme, 'support-01') !global;\\n  $support-02: map-get($theme, 'support-02') !global;\\n  $support-03: map-get($theme, 'support-03') !global;\\n  $support-04: map-get($theme, 'support-04') !global;\\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\\n  $overlay-01: map-get($theme, 'overlay-01') !global;\\n  $danger-01: map-get($theme, 'danger-01') !global;\\n  $danger-02: map-get($theme, 'danger-02') !global;\\n  $focus: map-get($theme, 'focus') !global;\\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\\n  $hover-primary: map-get($theme, 'hover-primary') !global;\\n  $active-primary: map-get($theme, 'active-primary') !global;\\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\\n  $active-secondary: map-get($theme, 'active-secondary') !global;\\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\\n  $hover-ui: map-get($theme, 'hover-ui') !global;\\n  $hover-light-ui: map-get($theme, 'hover-light-ui') !global;\\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\\n  $active-ui: map-get($theme, 'active-ui') !global;\\n  $active-light-ui: map-get($theme, 'active-light-ui') !global;\\n  $selected-ui: map-get($theme, 'selected-ui') !global;\\n  $selected-light-ui: map-get($theme, 'selected-light-ui') !global;\\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\\n  $hover-danger: map-get($theme, 'hover-danger') !global;\\n  $active-danger: map-get($theme, 'active-danger') !global;\\n  $hover-row: map-get($theme, 'hover-row') !global;\\n  $visited-link: map-get($theme, 'visited-link') !global;\\n  $disabled-01: map-get($theme, 'disabled-01') !global;\\n  $disabled-02: map-get($theme, 'disabled-02') !global;\\n  $disabled-03: map-get($theme, 'disabled-03') !global;\\n  $highlight: map-get($theme, 'highlight') !global;\\n  $decorative-01: map-get($theme, 'decorative-01') !global;\\n  $button-separator: map-get($theme, 'button-separator') !global;\\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\\n  $background: map-get($theme, 'background') !global;\\n  $layer: map-get($theme, 'layer') !global;\\n  $layer-accent: map-get($theme, 'layer-accent') !global;\\n  $layer-accent-hover: map-get($theme, 'layer-accent-hover') !global;\\n  $layer-accent-active: map-get($theme, 'layer-accent-active') !global;\\n  $field: map-get($theme, 'field') !global;\\n  $background-inverse: map-get($theme, 'background-inverse') !global;\\n  $background-brand: map-get($theme, 'background-brand') !global;\\n  $interactive: map-get($theme, 'interactive') !global;\\n  $border-subtle: map-get($theme, 'border-subtle') !global;\\n  $border-strong: map-get($theme, 'border-strong') !global;\\n  $border-inverse: map-get($theme, 'border-inverse') !global;\\n  $border-interactive: map-get($theme, 'border-interactive') !global;\\n  $text-primary: map-get($theme, 'text-primary') !global;\\n  $text-secondary: map-get($theme, 'text-secondary') !global;\\n  $text-placeholder: map-get($theme, 'text-placeholder') !global;\\n  $text-helper: map-get($theme, 'text-helper') !global;\\n  $text-on-color: map-get($theme, 'text-on-color') !global;\\n  $text-inverse: map-get($theme, 'text-inverse') !global;\\n  $link-primary: map-get($theme, 'link-primary') !global;\\n  $link-secondary: map-get($theme, 'link-secondary') !global;\\n  $link-visited: map-get($theme, 'link-visited') !global;\\n  $link-inverse: map-get($theme, 'link-inverse') !global;\\n  $icon-primary: map-get($theme, 'icon-primary') !global;\\n  $icon-secondary: map-get($theme, 'icon-secondary') !global;\\n  $icon-on-color: map-get($theme, 'icon-on-color') !global;\\n  $icon-inverse: map-get($theme, 'icon-inverse') !global;\\n  $support-error: map-get($theme, 'support-error') !global;\\n  $support-success: map-get($theme, 'support-success') !global;\\n  $support-warning: map-get($theme, 'support-warning') !global;\\n  $support-info: map-get($theme, 'support-info') !global;\\n  $support-error-inverse: map-get($theme, 'support-error-inverse') !global;\\n  $support-success-inverse: map-get($theme, 'support-success-inverse') !global;\\n  $support-warning-inverse: map-get($theme, 'support-warning-inverse') !global;\\n  $support-info-inverse: map-get($theme, 'support-info-inverse') !global;\\n  $overlay: map-get($theme, 'overlay') !global;\\n  $toggle-off: map-get($theme, 'toggle-off') !global;\\n  $button-primary: map-get($theme, 'button-primary') !global;\\n  $button-secondary: map-get($theme, 'button-secondary') !global;\\n  $button-tertiary: map-get($theme, 'button-tertiary') !global;\\n  $button-danger-primary: map-get($theme, 'button-danger-primary') !global;\\n  $button-danger-secondary: map-get($theme, 'button-danger-secondary') !global;\\n  $background-active: map-get($theme, 'background-active') !global;\\n  $layer-active: map-get($theme, 'layer-active') !global;\\n  $button-danger-active: map-get($theme, 'button-danger-active') !global;\\n  $button-primary-active: map-get($theme, 'button-primary-active') !global;\\n  $button-secondary-active: map-get($theme, 'button-secondary-active') !global;\\n  $button-tertiary-active: map-get($theme, 'button-tertiary-active') !global;\\n  $focus-inset: map-get($theme, 'focus-inset') !global;\\n  $focus-inverse: map-get($theme, 'focus-inverse') !global;\\n  $background-hover: map-get($theme, 'background-hover') !global;\\n  $layer-hover: map-get($theme, 'layer-hover') !global;\\n  $field-hover: map-get($theme, 'field-hover') !global;\\n  $background-inverse-hover: map-get(\\n    $theme,\\n    'background-inverse-hover'\\n  ) !global;\\n  $link-primary-hover: map-get($theme, 'link-primary-hover') !global;\\n  $button-danger-hover: map-get($theme, 'button-danger-hover') !global;\\n  $button-primary-hover: map-get($theme, 'button-primary-hover') !global;\\n  $button-secondary-hover: map-get($theme, 'button-secondary-hover') !global;\\n  $button-tertiary-hover: map-get($theme, 'button-tertiary-hover') !global;\\n  $background-selected: map-get($theme, 'background-selected') !global;\\n  $background-selected-hover: map-get(\\n    $theme,\\n    'background-selected-hover'\\n  ) !global;\\n  $layer-selected: map-get($theme, 'layer-selected') !global;\\n  $layer-selected-hover: map-get($theme, 'layer-selected-hover') !global;\\n  $layer-selected-inverse: map-get($theme, 'layer-selected-inverse') !global;\\n  $border-subtle-selected: map-get($theme, 'border-subtle-selected') !global;\\n  $layer-disabled: map-get($theme, 'layer-disabled') !global;\\n  $field-disabled: map-get($theme, 'field-disabled') !global;\\n  $border-disabled: map-get($theme, 'border-disabled') !global;\\n  $text-disabled: map-get($theme, 'text-disabled') !global;\\n  $button-disabled: map-get($theme, 'button-disabled') !global;\\n  $icon-disabled: map-get($theme, 'icon-disabled') !global;\\n  $text-on-color-disabled: map-get($theme, 'text-on-color-disabled') !global;\\n  $icon-on-color-disabled: map-get($theme, 'icon-on-color-disabled') !global;\\n  $layer-selected-disabled: map-get($theme, 'layer-selected-disabled') !global;\\n  $skeleton-background: map-get($theme, 'skeleton-background') !global;\\n  $skeleton-element: map-get($theme, 'skeleton-element') !global;\\n  $brand-01: map-get($theme, 'brand-01') !global;\\n  $brand-02: map-get($theme, 'brand-02') !global;\\n  $brand-03: map-get($theme, 'brand-03') !global;\\n  $active-01: map-get($theme, 'active-01') !global;\\n  $hover-field: map-get($theme, 'hover-field') !global;\\n  $danger: map-get($theme, 'danger') !global;\\n  $caption-01: map-get($theme, 'caption-01') !global;\\n  $caption-02: map-get($theme, 'caption-02') !global;\\n  $label-01: map-get($theme, 'label-01') !global;\\n  $label-02: map-get($theme, 'label-02') !global;\\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\\n  $helper-text-02: map-get($theme, 'helper-text-02') !global;\\n  $body-short-01: map-get($theme, 'body-short-01') !global;\\n  $body-long-01: map-get($theme, 'body-long-01') !global;\\n  $body-short-02: map-get($theme, 'body-short-02') !global;\\n  $body-long-02: map-get($theme, 'body-long-02') !global;\\n  $code-01: map-get($theme, 'code-01') !global;\\n  $code-02: map-get($theme, 'code-02') !global;\\n  $heading-01: map-get($theme, 'heading-01') !global;\\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\\n  $heading-02: map-get($theme, 'heading-02') !global;\\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\\n  $quotation-01: map-get($theme, 'quotation-01') !global;\\n  $quotation-02: map-get($theme, 'quotation-02') !global;\\n  $display-01: map-get($theme, 'display-01') !global;\\n  $display-02: map-get($theme, 'display-02') !global;\\n  $display-03: map-get($theme, 'display-03') !global;\\n  $display-04: map-get($theme, 'display-04') !global;\\n  $spacing-01: map-get($theme, 'spacing-01') !global;\\n  $spacing-02: map-get($theme, 'spacing-02') !global;\\n  $spacing-03: map-get($theme, 'spacing-03') !global;\\n  $spacing-04: map-get($theme, 'spacing-04') !global;\\n  $spacing-05: map-get($theme, 'spacing-05') !global;\\n  $spacing-06: map-get($theme, 'spacing-06') !global;\\n  $spacing-07: map-get($theme, 'spacing-07') !global;\\n  $spacing-08: map-get($theme, 'spacing-08') !global;\\n  $spacing-09: map-get($theme, 'spacing-09') !global;\\n  $spacing-10: map-get($theme, 'spacing-10') !global;\\n  $spacing-11: map-get($theme, 'spacing-11') !global;\\n  $spacing-12: map-get($theme, 'spacing-12') !global;\\n  $spacing-13: map-get($theme, 'spacing-13') !global;\\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\\n  $layout-01: map-get($theme, 'layout-01') !global;\\n  $layout-02: map-get($theme, 'layout-02') !global;\\n  $layout-03: map-get($theme, 'layout-03') !global;\\n  $layout-04: map-get($theme, 'layout-04') !global;\\n  $layout-05: map-get($theme, 'layout-05') !global;\\n  $layout-06: map-get($theme, 'layout-06') !global;\\n  $layout-07: map-get($theme, 'layout-07') !global;\\n  $container-01: map-get($theme, 'container-01') !global;\\n  $container-02: map-get($theme, 'container-02') !global;\\n  $container-03: map-get($theme, 'container-03') !global;\\n  $container-04: map-get($theme, 'container-04') !global;\\n  $container-05: map-get($theme, 'container-05') !global;\\n  $size-xsmall: map-get($theme, 'size-xsmall') !global;\\n  $size-small: map-get($theme, 'size-small') !global;\\n  $size-medium: map-get($theme, 'size-medium') !global;\\n  $size-large: map-get($theme, 'size-large') !global;\\n  $size-xlarge: map-get($theme, 'size-xlarge') !global;\\n  $size-2XLarge: map-get($theme, 'size-2XLarge') !global;\\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\\n\\n  @if global-variable-exists('feature-flags') ==\\n    false or\\n    global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-v11-release') !=\\n    true\\n  {\\n    $background: $ui-background !global;\\n    $layer: $ui-01 !global;\\n    $layer-accent: $ui-03 !global;\\n    $field: $field-01 !global;\\n    $background-inverse: $inverse-02 !global;\\n    $background-brand: $interactive-01 !global;\\n    $interactive: $interactive-04 !global;\\n    $border-subtle: $ui-03 !global;\\n    $border-strong: $ui-04 !global;\\n    $border-inverse: $ui-05 !global;\\n    $border-interactive: $interactive-04 !global;\\n    $text-primary: $text-01 !global;\\n    $text-secondary: $text-02 !global;\\n    $text-placeholder: $text-03 !global;\\n    $text-helper: $text-05 !global;\\n    $text-on-color: $text-04 !global;\\n    $text-inverse: $inverse-01 !global;\\n    $link-primary: $link-01 !global;\\n    $link-secondary: $link-02 !global;\\n    $link-visited: $visited-link !global;\\n    $link-inverse: $inverse-link !global;\\n    $icon-primary: $icon-01 !global;\\n    $icon-secondary: $icon-02 !global;\\n    $icon-on-color: $icon-03 !global;\\n    $icon-inverse: $inverse-01 !global;\\n    $support-error: $support-01 !global;\\n    $support-success: $support-02 !global;\\n    $support-warning: $support-03 !global;\\n    $support-info: $support-04 !global;\\n    $support-error-inverse: $inverse-support-01 !global;\\n    $support-success-inverse: $inverse-support-02 !global;\\n    $support-warning-inverse: $inverse-support-03 !global;\\n    $support-info-inverse: $inverse-support-04 !global;\\n    $overlay: $overlay-01 !global;\\n    $toggle-off: $ui-04 !global;\\n    $button-primary: $interactive-01 !global;\\n    $button-secondary: $interactive-02 !global;\\n    $button-tertiary: $interactive-03 !global;\\n    $button-danger-primary: $danger-01 !global;\\n    $button-danger-secondary: $danger-02 !global;\\n    $background-active: $active-ui !global;\\n    $layer-active: $active-ui !global;\\n    $button-danger-active: $active-danger !global;\\n    $button-primary-active: $active-primary !global;\\n    $button-secondary-active: $active-secondary !global;\\n    $button-tertiary-active: $active-tertiary !global;\\n    $focus-inset: $inverse-01 !global;\\n    $focus-inverse: $inverse-focus-ui !global;\\n    $background-hover: $hover-ui !global;\\n    $layer-hover: $hover-ui !global;\\n    $field-hover: $hover-ui !global;\\n    $background-inverse-hover: $inverse-hover-ui !global;\\n    $link-primary-hover: $hover-primary-text !global;\\n    $button-danger-hover: $hover-danger !global;\\n    $button-primary-hover: $hover-primary !global;\\n    $button-secondary-hover: $hover-secondary !global;\\n    $button-tertiary-hover: $hover-tertiary !global;\\n    $background-selected: $selected-ui !global;\\n    $background-selected-hover: $hover-selected-ui !global;\\n    $layer-selected: $selected-ui !global;\\n    $layer-selected-hover: $hover-selected-ui !global;\\n    $layer-selected-inverse: $ui-05 !global;\\n    $border-subtle-selected: $active-ui !global;\\n    $layer-disabled: $disabled-01 !global;\\n    $field-disabled: $disabled-01 !global;\\n    $border-disabled: $disabled-01 !global;\\n    $text-disabled: $disabled-02 !global;\\n    $button-disabled: $disabled-02 !global;\\n    $icon-disabled: $disabled-02 !global;\\n    $text-on-color-disabled: $disabled-03 !global;\\n    $icon-on-color-disabled: $disabled-03 !global;\\n    $layer-selected-disabled: $disabled-03 !global;\\n    $skeleton-background: $skeleton-01 !global;\\n    $skeleton-element: $skeleton-02 !global;\\n  }\\n  @if global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-css-custom-properties')\\n  {\\n    $interactive-01: var(\\n      --#{$custom-property-prefix}-interactive-01,\\n      map-get($theme, 'interactive-01')\\n    ) !global;\\n    $interactive-02: var(\\n      --#{$custom-property-prefix}-interactive-02,\\n      map-get($theme, 'interactive-02')\\n    ) !global;\\n    $interactive-03: var(\\n      --#{$custom-property-prefix}-interactive-03,\\n      map-get($theme, 'interactive-03')\\n    ) !global;\\n    $interactive-04: var(\\n      --#{$custom-property-prefix}-interactive-04,\\n      map-get($theme, 'interactive-04')\\n    ) !global;\\n    $ui-background: var(\\n      --#{$custom-property-prefix}-ui-background,\\n      map-get($theme, 'ui-background')\\n    ) !global;\\n    $ui-01: var(\\n      --#{$custom-property-prefix}-ui-01,\\n      map-get($theme, 'ui-01')\\n    ) !global;\\n    $ui-02: var(\\n      --#{$custom-property-prefix}-ui-02,\\n      map-get($theme, 'ui-02')\\n    ) !global;\\n    $ui-03: var(\\n      --#{$custom-property-prefix}-ui-03,\\n      map-get($theme, 'ui-03')\\n    ) !global;\\n    $ui-04: var(\\n      --#{$custom-property-prefix}-ui-04,\\n      map-get($theme, 'ui-04')\\n    ) !global;\\n    $ui-05: var(\\n      --#{$custom-property-prefix}-ui-05,\\n      map-get($theme, 'ui-05')\\n    ) !global;\\n    $text-01: var(\\n      --#{$custom-property-prefix}-text-01,\\n      map-get($theme, 'text-01')\\n    ) !global;\\n    $text-02: var(\\n      --#{$custom-property-prefix}-text-02,\\n      map-get($theme, 'text-02')\\n    ) !global;\\n    $text-03: var(\\n      --#{$custom-property-prefix}-text-03,\\n      map-get($theme, 'text-03')\\n    ) !global;\\n    $text-04: var(\\n      --#{$custom-property-prefix}-text-04,\\n      map-get($theme, 'text-04')\\n    ) !global;\\n    $text-05: var(\\n      --#{$custom-property-prefix}-text-05,\\n      map-get($theme, 'text-05')\\n    ) !global;\\n    $text-error: var(\\n      --#{$custom-property-prefix}-text-error,\\n      map-get($theme, 'text-error')\\n    ) !global;\\n    $icon-01: var(\\n      --#{$custom-property-prefix}-icon-01,\\n      map-get($theme, 'icon-01')\\n    ) !global;\\n    $icon-02: var(\\n      --#{$custom-property-prefix}-icon-02,\\n      map-get($theme, 'icon-02')\\n    ) !global;\\n    $icon-03: var(\\n      --#{$custom-property-prefix}-icon-03,\\n      map-get($theme, 'icon-03')\\n    ) !global;\\n    $link-01: var(\\n      --#{$custom-property-prefix}-link-01,\\n      map-get($theme, 'link-01')\\n    ) !global;\\n    $link-02: var(\\n      --#{$custom-property-prefix}-link-02,\\n      map-get($theme, 'link-02')\\n    ) !global;\\n    $inverse-link: var(\\n      --#{$custom-property-prefix}-inverse-link,\\n      map-get($theme, 'inverse-link')\\n    ) !global;\\n    $field-01: var(\\n      --#{$custom-property-prefix}-field-01,\\n      map-get($theme, 'field-01')\\n    ) !global;\\n    $field-02: var(\\n      --#{$custom-property-prefix}-field-02,\\n      map-get($theme, 'field-02')\\n    ) !global;\\n    $inverse-01: var(\\n      --#{$custom-property-prefix}-inverse-01,\\n      map-get($theme, 'inverse-01')\\n    ) !global;\\n    $inverse-02: var(\\n      --#{$custom-property-prefix}-inverse-02,\\n      map-get($theme, 'inverse-02')\\n    ) !global;\\n    $support-01: var(\\n      --#{$custom-property-prefix}-support-01,\\n      map-get($theme, 'support-01')\\n    ) !global;\\n    $support-02: var(\\n      --#{$custom-property-prefix}-support-02,\\n      map-get($theme, 'support-02')\\n    ) !global;\\n    $support-03: var(\\n      --#{$custom-property-prefix}-support-03,\\n      map-get($theme, 'support-03')\\n    ) !global;\\n    $support-04: var(\\n      --#{$custom-property-prefix}-support-04,\\n      map-get($theme, 'support-04')\\n    ) !global;\\n    $inverse-support-01: var(\\n      --#{$custom-property-prefix}-inverse-support-01,\\n      map-get($theme, 'inverse-support-01')\\n    ) !global;\\n    $inverse-support-02: var(\\n      --#{$custom-property-prefix}-inverse-support-02,\\n      map-get($theme, 'inverse-support-02')\\n    ) !global;\\n    $inverse-support-03: var(\\n      --#{$custom-property-prefix}-inverse-support-03,\\n      map-get($theme, 'inverse-support-03')\\n    ) !global;\\n    $inverse-support-04: var(\\n      --#{$custom-property-prefix}-inverse-support-04,\\n      map-get($theme, 'inverse-support-04')\\n    ) !global;\\n    $overlay-01: var(\\n      --#{$custom-property-prefix}-overlay-01,\\n      map-get($theme, 'overlay-01')\\n    ) !global;\\n    $danger-01: var(\\n      --#{$custom-property-prefix}-danger-01,\\n      map-get($theme, 'danger-01')\\n    ) !global;\\n    $danger-02: var(\\n      --#{$custom-property-prefix}-danger-02,\\n      map-get($theme, 'danger-02')\\n    ) !global;\\n    $focus: var(\\n      --#{$custom-property-prefix}-focus,\\n      map-get($theme, 'focus')\\n    ) !global;\\n    $inverse-focus-ui: var(\\n      --#{$custom-property-prefix}-inverse-focus-ui,\\n      map-get($theme, 'inverse-focus-ui')\\n    ) !global;\\n    $hover-primary: var(\\n      --#{$custom-property-prefix}-hover-primary,\\n      map-get($theme, 'hover-primary')\\n    ) !global;\\n    $active-primary: var(\\n      --#{$custom-property-prefix}-active-primary,\\n      map-get($theme, 'active-primary')\\n    ) !global;\\n    $hover-primary-text: var(\\n      --#{$custom-property-prefix}-hover-primary-text,\\n      map-get($theme, 'hover-primary-text')\\n    ) !global;\\n    $hover-secondary: var(\\n      --#{$custom-property-prefix}-hover-secondary,\\n      map-get($theme, 'hover-secondary')\\n    ) !global;\\n    $active-secondary: var(\\n      --#{$custom-property-prefix}-active-secondary,\\n      map-get($theme, 'active-secondary')\\n    ) !global;\\n    $hover-tertiary: var(\\n      --#{$custom-property-prefix}-hover-tertiary,\\n      map-get($theme, 'hover-tertiary')\\n    ) !global;\\n    $active-tertiary: var(\\n      --#{$custom-property-prefix}-active-tertiary,\\n      map-get($theme, 'active-tertiary')\\n    ) !global;\\n    $hover-ui: var(\\n      --#{$custom-property-prefix}-hover-ui,\\n      map-get($theme, 'hover-ui')\\n    ) !global;\\n    $hover-light-ui: var(\\n      --#{$custom-property-prefix}-hover-light-ui,\\n      map-get($theme, 'hover-light-ui')\\n    ) !global;\\n    $hover-selected-ui: var(\\n      --#{$custom-property-prefix}-hover-selected-ui,\\n      map-get($theme, 'hover-selected-ui')\\n    ) !global;\\n    $active-ui: var(\\n      --#{$custom-property-prefix}-active-ui,\\n      map-get($theme, 'active-ui')\\n    ) !global;\\n    $active-light-ui: var(\\n      --#{$custom-property-prefix}-active-light-ui,\\n      map-get($theme, 'active-light-ui')\\n    ) !global;\\n    $selected-ui: var(\\n      --#{$custom-property-prefix}-selected-ui,\\n      map-get($theme, 'selected-ui')\\n    ) !global;\\n    $selected-light-ui: var(\\n      --#{$custom-property-prefix}-selected-light-ui,\\n      map-get($theme, 'selected-light-ui')\\n    ) !global;\\n    $inverse-hover-ui: var(\\n      --#{$custom-property-prefix}-inverse-hover-ui,\\n      map-get($theme, 'inverse-hover-ui')\\n    ) !global;\\n    $hover-danger: var(\\n      --#{$custom-property-prefix}-hover-danger,\\n      map-get($theme, 'hover-danger')\\n    ) !global;\\n    $active-danger: var(\\n      --#{$custom-property-prefix}-active-danger,\\n      map-get($theme, 'active-danger')\\n    ) !global;\\n    $hover-row: var(\\n      --#{$custom-property-prefix}-hover-row,\\n      map-get($theme, 'hover-row')\\n    ) !global;\\n    $visited-link: var(\\n      --#{$custom-property-prefix}-visited-link,\\n      map-get($theme, 'visited-link')\\n    ) !global;\\n    $disabled-01: var(\\n      --#{$custom-property-prefix}-disabled-01,\\n      map-get($theme, 'disabled-01')\\n    ) !global;\\n    $disabled-02: var(\\n      --#{$custom-property-prefix}-disabled-02,\\n      map-get($theme, 'disabled-02')\\n    ) !global;\\n    $disabled-03: var(\\n      --#{$custom-property-prefix}-disabled-03,\\n      map-get($theme, 'disabled-03')\\n    ) !global;\\n    $highlight: var(\\n      --#{$custom-property-prefix}-highlight,\\n      map-get($theme, 'highlight')\\n    ) !global;\\n    $decorative-01: var(\\n      --#{$custom-property-prefix}-decorative-01,\\n      map-get($theme, 'decorative-01')\\n    ) !global;\\n    $button-separator: var(\\n      --#{$custom-property-prefix}-button-separator,\\n      map-get($theme, 'button-separator')\\n    ) !global;\\n    $skeleton-01: var(\\n      --#{$custom-property-prefix}-skeleton-01,\\n      map-get($theme, 'skeleton-01')\\n    ) !global;\\n    $skeleton-02: var(\\n      --#{$custom-property-prefix}-skeleton-02,\\n      map-get($theme, 'skeleton-02')\\n    ) !global;\\n    $background: var(\\n      --#{$custom-property-prefix}-background,\\n      map-get($theme, 'background')\\n    ) !global;\\n    $layer: var(\\n      --#{$custom-property-prefix}-layer,\\n      map-get($theme, 'layer')\\n    ) !global;\\n    $layer-accent: var(\\n      --#{$custom-property-prefix}-layer-accent,\\n      map-get($theme, 'layer-accent')\\n    ) !global;\\n    $layer-accent-hover: var(\\n      --#{$custom-property-prefix}-layer-accent-hover,\\n      map-get($theme, 'layer-accent-hover')\\n    ) !global;\\n    $layer-accent-active: var(\\n      --#{$custom-property-prefix}-layer-accent-active,\\n      map-get($theme, 'layer-accent-active')\\n    ) !global;\\n    $field: var(\\n      --#{$custom-property-prefix}-field,\\n      map-get($theme, 'field')\\n    ) !global;\\n    $background-inverse: var(\\n      --#{$custom-property-prefix}-background-inverse,\\n      map-get($theme, 'background-inverse')\\n    ) !global;\\n    $background-brand: var(\\n      --#{$custom-property-prefix}-background-brand,\\n      map-get($theme, 'background-brand')\\n    ) !global;\\n    $interactive: var(\\n      --#{$custom-property-prefix}-interactive,\\n      map-get($theme, 'interactive')\\n    ) !global;\\n    $border-subtle: var(\\n      --#{$custom-property-prefix}-border-subtle,\\n      map-get($theme, 'border-subtle')\\n    ) !global;\\n    $border-strong: var(\\n      --#{$custom-property-prefix}-border-strong,\\n      map-get($theme, 'border-strong')\\n    ) !global;\\n    $border-inverse: var(\\n      --#{$custom-property-prefix}-border-inverse,\\n      map-get($theme, 'border-inverse')\\n    ) !global;\\n    $border-interactive: var(\\n      --#{$custom-property-prefix}-border-interactive,\\n      map-get($theme, 'border-interactive')\\n    ) !global;\\n    $text-primary: var(\\n      --#{$custom-property-prefix}-text-primary,\\n      map-get($theme, 'text-primary')\\n    ) !global;\\n    $text-secondary: var(\\n      --#{$custom-property-prefix}-text-secondary,\\n      map-get($theme, 'text-secondary')\\n    ) !global;\\n    $text-placeholder: var(\\n      --#{$custom-property-prefix}-text-placeholder,\\n      map-get($theme, 'text-placeholder')\\n    ) !global;\\n    $text-helper: var(\\n      --#{$custom-property-prefix}-text-helper,\\n      map-get($theme, 'text-helper')\\n    ) !global;\\n    $text-on-color: var(\\n      --#{$custom-property-prefix}-text-on-color,\\n      map-get($theme, 'text-on-color')\\n    ) !global;\\n    $text-inverse: var(\\n      --#{$custom-property-prefix}-text-inverse,\\n      map-get($theme, 'text-inverse')\\n    ) !global;\\n    $link-primary: var(\\n      --#{$custom-property-prefix}-link-primary,\\n      map-get($theme, 'link-primary')\\n    ) !global;\\n    $link-secondary: var(\\n      --#{$custom-property-prefix}-link-secondary,\\n      map-get($theme, 'link-secondary')\\n    ) !global;\\n    $link-visited: var(\\n      --#{$custom-property-prefix}-link-visited,\\n      map-get($theme, 'link-visited')\\n    ) !global;\\n    $link-inverse: var(\\n      --#{$custom-property-prefix}-link-inverse,\\n      map-get($theme, 'link-inverse')\\n    ) !global;\\n    $icon-primary: var(\\n      --#{$custom-property-prefix}-icon-primary,\\n      map-get($theme, 'icon-primary')\\n    ) !global;\\n    $icon-secondary: var(\\n      --#{$custom-property-prefix}-icon-secondary,\\n      map-get($theme, 'icon-secondary')\\n    ) !global;\\n    $icon-on-color: var(\\n      --#{$custom-property-prefix}-icon-on-color,\\n      map-get($theme, 'icon-on-color')\\n    ) !global;\\n    $icon-inverse: var(\\n      --#{$custom-property-prefix}-icon-inverse,\\n      map-get($theme, 'icon-inverse')\\n    ) !global;\\n    $support-error: var(\\n      --#{$custom-property-prefix}-support-error,\\n      map-get($theme, 'support-error')\\n    ) !global;\\n    $support-success: var(\\n      --#{$custom-property-prefix}-support-success,\\n      map-get($theme, 'support-success')\\n    ) !global;\\n    $support-warning: var(\\n      --#{$custom-property-prefix}-support-warning,\\n      map-get($theme, 'support-warning')\\n    ) !global;\\n    $support-info: var(\\n      --#{$custom-property-prefix}-support-info,\\n      map-get($theme, 'support-info')\\n    ) !global;\\n    $support-error-inverse: var(\\n      --#{$custom-property-prefix}-support-error-inverse,\\n      map-get($theme, 'support-error-inverse')\\n    ) !global;\\n    $support-success-inverse: var(\\n      --#{$custom-property-prefix}-support-success-inverse,\\n      map-get($theme, 'support-success-inverse')\\n    ) !global;\\n    $support-warning-inverse: var(\\n      --#{$custom-property-prefix}-support-warning-inverse,\\n      map-get($theme, 'support-warning-inverse')\\n    ) !global;\\n    $support-info-inverse: var(\\n      --#{$custom-property-prefix}-support-info-inverse,\\n      map-get($theme, 'support-info-inverse')\\n    ) !global;\\n    $overlay: var(\\n      --#{$custom-property-prefix}-overlay,\\n      map-get($theme, 'overlay')\\n    ) !global;\\n    $toggle-off: var(\\n      --#{$custom-property-prefix}-toggle-off,\\n      map-get($theme, 'toggle-off')\\n    ) !global;\\n    $button-primary: var(\\n      --#{$custom-property-prefix}-button-primary,\\n      map-get($theme, 'button-primary')\\n    ) !global;\\n    $button-secondary: var(\\n      --#{$custom-property-prefix}-button-secondary,\\n      map-get($theme, 'button-secondary')\\n    ) !global;\\n    $button-tertiary: var(\\n      --#{$custom-property-prefix}-button-tertiary,\\n      map-get($theme, 'button-tertiary')\\n    ) !global;\\n    $button-danger-primary: var(\\n      --#{$custom-property-prefix}-button-danger-primary,\\n      map-get($theme, 'button-danger-primary')\\n    ) !global;\\n    $button-danger-secondary: var(\\n      --#{$custom-property-prefix}-button-danger-secondary,\\n      map-get($theme, 'button-danger-secondary')\\n    ) !global;\\n    $background-active: var(\\n      --#{$custom-property-prefix}-background-active,\\n      map-get($theme, 'background-active')\\n    ) !global;\\n    $layer-active: var(\\n      --#{$custom-property-prefix}-layer-active,\\n      map-get($theme, 'layer-active')\\n    ) !global;\\n    $button-danger-active: var(\\n      --#{$custom-property-prefix}-button-danger-active,\\n      map-get($theme, 'button-danger-active')\\n    ) !global;\\n    $button-primary-active: var(\\n      --#{$custom-property-prefix}-button-primary-active,\\n      map-get($theme, 'button-primary-active')\\n    ) !global;\\n    $button-secondary-active: var(\\n      --#{$custom-property-prefix}-button-secondary-active,\\n      map-get($theme, 'button-secondary-active')\\n    ) !global;\\n    $button-tertiary-active: var(\\n      --#{$custom-property-prefix}-button-tertiary-active,\\n      map-get($theme, 'button-tertiary-active')\\n    ) !global;\\n    $focus-inset: var(\\n      --#{$custom-property-prefix}-focus-inset,\\n      map-get($theme, 'focus-inset')\\n    ) !global;\\n    $focus-inverse: var(\\n      --#{$custom-property-prefix}-focus-inverse,\\n      map-get($theme, 'focus-inverse')\\n    ) !global;\\n    $background-hover: var(\\n      --#{$custom-property-prefix}-background-hover,\\n      map-get($theme, 'background-hover')\\n    ) !global;\\n    $layer-hover: var(\\n      --#{$custom-property-prefix}-layer-hover,\\n      map-get($theme, 'layer-hover')\\n    ) !global;\\n    $field-hover: var(\\n      --#{$custom-property-prefix}-field-hover,\\n      map-get($theme, 'field-hover')\\n    ) !global;\\n    $background-inverse-hover: var(\\n      --#{$custom-property-prefix}-background-inverse-hover,\\n      map-get($theme, 'background-inverse-hover')\\n    ) !global;\\n    $link-primary-hover: var(\\n      --#{$custom-property-prefix}-link-primary-hover,\\n      map-get($theme, 'link-primary-hover')\\n    ) !global;\\n    $button-danger-hover: var(\\n      --#{$custom-property-prefix}-button-danger-hover,\\n      map-get($theme, 'button-danger-hover')\\n    ) !global;\\n    $button-primary-hover: var(\\n      --#{$custom-property-prefix}-button-primary-hover,\\n      map-get($theme, 'button-primary-hover')\\n    ) !global;\\n    $button-secondary-hover: var(\\n      --#{$custom-property-prefix}-button-secondary-hover,\\n      map-get($theme, 'button-secondary-hover')\\n    ) !global;\\n    $button-tertiary-hover: var(\\n      --#{$custom-property-prefix}-button-tertiary-hover,\\n      map-get($theme, 'button-tertiary-hover')\\n    ) !global;\\n    $background-selected: var(\\n      --#{$custom-property-prefix}-background-selected,\\n      map-get($theme, 'background-selected')\\n    ) !global;\\n    $background-selected-hover: var(\\n      --#{$custom-property-prefix}-background-selected-hover,\\n      map-get($theme, 'background-selected-hover')\\n    ) !global;\\n    $layer-selected: var(\\n      --#{$custom-property-prefix}-layer-selected,\\n      map-get($theme, 'layer-selected')\\n    ) !global;\\n    $layer-selected-hover: var(\\n      --#{$custom-property-prefix}-layer-selected-hover,\\n      map-get($theme, 'layer-selected-hover')\\n    ) !global;\\n    $layer-selected-inverse: var(\\n      --#{$custom-property-prefix}-layer-selected-inverse,\\n      map-get($theme, 'layer-selected-inverse')\\n    ) !global;\\n    $border-subtle-selected: var(\\n      --#{$custom-property-prefix}-border-subtle-selected,\\n      map-get($theme, 'border-subtle-selected')\\n    ) !global;\\n    $layer-disabled: var(\\n      --#{$custom-property-prefix}-layer-disabled,\\n      map-get($theme, 'layer-disabled')\\n    ) !global;\\n    $field-disabled: var(\\n      --#{$custom-property-prefix}-field-disabled,\\n      map-get($theme, 'field-disabled')\\n    ) !global;\\n    $border-disabled: var(\\n      --#{$custom-property-prefix}-border-disabled,\\n      map-get($theme, 'border-disabled')\\n    ) !global;\\n    $text-disabled: var(\\n      --#{$custom-property-prefix}-text-disabled,\\n      map-get($theme, 'text-disabled')\\n    ) !global;\\n    $button-disabled: var(\\n      --#{$custom-property-prefix}-button-disabled,\\n      map-get($theme, 'button-disabled')\\n    ) !global;\\n    $icon-disabled: var(\\n      --#{$custom-property-prefix}-icon-disabled,\\n      map-get($theme, 'icon-disabled')\\n    ) !global;\\n    $text-on-color-disabled: var(\\n      --#{$custom-property-prefix}-text-on-color-disabled,\\n      map-get($theme, 'text-on-color-disabled')\\n    ) !global;\\n    $icon-on-color-disabled: var(\\n      --#{$custom-property-prefix}-icon-on-color-disabled,\\n      map-get($theme, 'icon-on-color-disabled')\\n    ) !global;\\n    $layer-selected-disabled: var(\\n      --#{$custom-property-prefix}-layer-selected-disabled,\\n      map-get($theme, 'layer-selected-disabled')\\n    ) !global;\\n    $skeleton-background: var(\\n      --#{$custom-property-prefix}-skeleton-background,\\n      map-get($theme, 'skeleton-background')\\n    ) !global;\\n    $skeleton-element: var(\\n      --#{$custom-property-prefix}-skeleton-element,\\n      map-get($theme, 'skeleton-element')\\n    ) !global;\\n    $brand-01: var(\\n      --#{$custom-property-prefix}-brand-01,\\n      map-get($theme, 'brand-01')\\n    ) !global;\\n    $brand-02: var(\\n      --#{$custom-property-prefix}-brand-02,\\n      map-get($theme, 'brand-02')\\n    ) !global;\\n    $brand-03: var(\\n      --#{$custom-property-prefix}-brand-03,\\n      map-get($theme, 'brand-03')\\n    ) !global;\\n    $active-01: var(\\n      --#{$custom-property-prefix}-active-01,\\n      map-get($theme, 'active-01')\\n    ) !global;\\n    $hover-field: var(\\n      --#{$custom-property-prefix}-hover-field,\\n      map-get($theme, 'hover-field')\\n    ) !global;\\n    $danger: var(\\n      --#{$custom-property-prefix}-danger,\\n      map-get($theme, 'danger')\\n    ) !global;\\n    $spacing-01: var(\\n      --#{$custom-property-prefix}-spacing-01,\\n      map-get($theme, 'spacing-01')\\n    ) !global;\\n    $spacing-02: var(\\n      --#{$custom-property-prefix}-spacing-02,\\n      map-get($theme, 'spacing-02')\\n    ) !global;\\n    $spacing-03: var(\\n      --#{$custom-property-prefix}-spacing-03,\\n      map-get($theme, 'spacing-03')\\n    ) !global;\\n    $spacing-04: var(\\n      --#{$custom-property-prefix}-spacing-04,\\n      map-get($theme, 'spacing-04')\\n    ) !global;\\n    $spacing-05: var(\\n      --#{$custom-property-prefix}-spacing-05,\\n      map-get($theme, 'spacing-05')\\n    ) !global;\\n    $spacing-06: var(\\n      --#{$custom-property-prefix}-spacing-06,\\n      map-get($theme, 'spacing-06')\\n    ) !global;\\n    $spacing-07: var(\\n      --#{$custom-property-prefix}-spacing-07,\\n      map-get($theme, 'spacing-07')\\n    ) !global;\\n    $spacing-08: var(\\n      --#{$custom-property-prefix}-spacing-08,\\n      map-get($theme, 'spacing-08')\\n    ) !global;\\n    $spacing-09: var(\\n      --#{$custom-property-prefix}-spacing-09,\\n      map-get($theme, 'spacing-09')\\n    ) !global;\\n    $spacing-10: var(\\n      --#{$custom-property-prefix}-spacing-10,\\n      map-get($theme, 'spacing-10')\\n    ) !global;\\n    $spacing-11: var(\\n      --#{$custom-property-prefix}-spacing-11,\\n      map-get($theme, 'spacing-11')\\n    ) !global;\\n    $spacing-12: var(\\n      --#{$custom-property-prefix}-spacing-12,\\n      map-get($theme, 'spacing-12')\\n    ) !global;\\n    $spacing-13: var(\\n      --#{$custom-property-prefix}-spacing-13,\\n      map-get($theme, 'spacing-13')\\n    ) !global;\\n    $fluid-spacing-01: var(\\n      --#{$custom-property-prefix}-fluid-spacing-01,\\n      map-get($theme, 'fluid-spacing-01')\\n    ) !global;\\n    $fluid-spacing-02: var(\\n      --#{$custom-property-prefix}-fluid-spacing-02,\\n      map-get($theme, 'fluid-spacing-02')\\n    ) !global;\\n    $fluid-spacing-03: var(\\n      --#{$custom-property-prefix}-fluid-spacing-03,\\n      map-get($theme, 'fluid-spacing-03')\\n    ) !global;\\n    $fluid-spacing-04: var(\\n      --#{$custom-property-prefix}-fluid-spacing-04,\\n      map-get($theme, 'fluid-spacing-04')\\n    ) !global;\\n    $layout-01: var(\\n      --#{$custom-property-prefix}-layout-01,\\n      map-get($theme, 'layout-01')\\n    ) !global;\\n    $layout-02: var(\\n      --#{$custom-property-prefix}-layout-02,\\n      map-get($theme, 'layout-02')\\n    ) !global;\\n    $layout-03: var(\\n      --#{$custom-property-prefix}-layout-03,\\n      map-get($theme, 'layout-03')\\n    ) !global;\\n    $layout-04: var(\\n      --#{$custom-property-prefix}-layout-04,\\n      map-get($theme, 'layout-04')\\n    ) !global;\\n    $layout-05: var(\\n      --#{$custom-property-prefix}-layout-05,\\n      map-get($theme, 'layout-05')\\n    ) !global;\\n    $layout-06: var(\\n      --#{$custom-property-prefix}-layout-06,\\n      map-get($theme, 'layout-06')\\n    ) !global;\\n    $layout-07: var(\\n      --#{$custom-property-prefix}-layout-07,\\n      map-get($theme, 'layout-07')\\n    ) !global;\\n    $container-01: var(\\n      --#{$custom-property-prefix}-container-01,\\n      map-get($theme, 'container-01')\\n    ) !global;\\n    $container-02: var(\\n      --#{$custom-property-prefix}-container-02,\\n      map-get($theme, 'container-02')\\n    ) !global;\\n    $container-03: var(\\n      --#{$custom-property-prefix}-container-03,\\n      map-get($theme, 'container-03')\\n    ) !global;\\n    $container-04: var(\\n      --#{$custom-property-prefix}-container-04,\\n      map-get($theme, 'container-04')\\n    ) !global;\\n    $container-05: var(\\n      --#{$custom-property-prefix}-container-05,\\n      map-get($theme, 'container-05')\\n    ) !global;\\n    $size-xsmall: var(\\n      --#{$custom-property-prefix}-size-xsmall,\\n      map-get($theme, 'size-xsmall')\\n    ) !global;\\n    $size-small: var(\\n      --#{$custom-property-prefix}-size-small,\\n      map-get($theme, 'size-small')\\n    ) !global;\\n    $size-medium: var(\\n      --#{$custom-property-prefix}-size-medium,\\n      map-get($theme, 'size-medium')\\n    ) !global;\\n    $size-large: var(\\n      --#{$custom-property-prefix}-size-large,\\n      map-get($theme, 'size-large')\\n    ) !global;\\n    $size-xlarge: var(\\n      --#{$custom-property-prefix}-size-xlarge,\\n      map-get($theme, 'size-xlarge')\\n    ) !global;\\n    $size-2XLarge: var(\\n      --#{$custom-property-prefix}-size-2XLarge,\\n      map-get($theme, 'size-2XLarge')\\n    ) !global;\\n    $icon-size-01: var(\\n      --#{$custom-property-prefix}-icon-size-01,\\n      map-get($theme, 'icon-size-01')\\n    ) !global;\\n    $icon-size-02: var(\\n      --#{$custom-property-prefix}-icon-size-02,\\n      map-get($theme, 'icon-size-02')\\n    ) !global;\\n  }\\n  @if $emit-custom-properties == true {\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-01',\\n        map-get($theme, 'interactive-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-02',\\n        map-get($theme, 'interactive-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-03',\\n        map-get($theme, 'interactive-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-04',\\n        map-get($theme, 'interactive-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'ui-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'ui-background',\\n        map-get($theme, 'ui-background')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-01', $emit-difference) {\\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-02', $emit-difference) {\\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-03', $emit-difference) {\\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-04', $emit-difference) {\\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-05', $emit-difference) {\\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-01', $emit-difference) {\\n      @include custom-property('text-01', map-get($theme, 'text-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-02', $emit-difference) {\\n      @include custom-property('text-02', map-get($theme, 'text-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-03', $emit-difference) {\\n      @include custom-property('text-03', map-get($theme, 'text-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-04', $emit-difference) {\\n      @include custom-property('text-04', map-get($theme, 'text-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-05', $emit-difference) {\\n      @include custom-property('text-05', map-get($theme, 'text-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-error', map-get($theme, 'text-error'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-01', $emit-difference) {\\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-02', $emit-difference) {\\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-03', $emit-difference) {\\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-01', $emit-difference) {\\n      @include custom-property('link-01', map-get($theme, 'link-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-02', $emit-difference) {\\n      @include custom-property('link-02', map-get($theme, 'link-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-01', $emit-difference)\\n    {\\n      @include custom-property('field-01', map-get($theme, 'field-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-02', $emit-difference)\\n    {\\n      @include custom-property('field-02', map-get($theme, 'field-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-01', map-get($theme, 'support-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-02', map-get($theme, 'support-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-03', map-get($theme, 'support-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-04', map-get($theme, 'support-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-01',\\n        map-get($theme, 'inverse-support-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-02',\\n        map-get($theme, 'inverse-support-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-03',\\n        map-get($theme, 'inverse-support-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-04',\\n        map-get($theme, 'inverse-support-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'overlay-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-01', $emit-difference)\\n    {\\n      @include custom-property('danger-01', map-get($theme, 'danger-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-02', $emit-difference)\\n    {\\n      @include custom-property('danger-02', map-get($theme, 'danger-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'focus', $emit-difference) {\\n      @include custom-property('focus', map-get($theme, 'focus'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-focus-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-focus-ui',\\n        map-get($theme, 'inverse-focus-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary',\\n        map-get($theme, 'hover-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-primary',\\n        map-get($theme, 'active-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary-text',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary-text',\\n        map-get($theme, 'hover-primary-text')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-secondary',\\n        map-get($theme, 'hover-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-secondary',\\n        map-get($theme, 'active-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-tertiary',\\n        map-get($theme, 'hover-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-tertiary',\\n        map-get($theme, 'active-tertiary')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-ui', $emit-difference)\\n    {\\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-light-ui',\\n        map-get($theme, 'hover-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-selected-ui',\\n        map-get($theme, 'hover-selected-ui')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-ui', $emit-difference)\\n    {\\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-light-ui',\\n        map-get($theme, 'active-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'selected-light-ui',\\n        map-get($theme, 'selected-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-hover-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-hover-ui',\\n        map-get($theme, 'inverse-hover-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-danger',\\n        map-get($theme, 'active-danger')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-row', $emit-difference)\\n    {\\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'visited-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'highlight', $emit-difference)\\n    {\\n      @include custom-property('highlight', map-get($theme, 'highlight'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'decorative-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'decorative-01',\\n        map-get($theme, 'decorative-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-separator',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-separator',\\n        map-get($theme, 'button-separator')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('background', map-get($theme, 'background'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layer', $emit-difference) {\\n      @include custom-property('layer', map-get($theme, 'layer'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-accent', map-get($theme, 'layer-accent'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-hover',\\n        map-get($theme, 'layer-accent-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-active',\\n        map-get($theme, 'layer-accent-active')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field', $emit-difference) {\\n      @include custom-property('field', map-get($theme, 'field'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse',\\n        map-get($theme, 'background-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-brand',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-brand',\\n        map-get($theme, 'background-brand')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('interactive', map-get($theme, 'interactive'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle',\\n        map-get($theme, 'border-subtle')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-strong',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-strong',\\n        map-get($theme, 'border-strong')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-inverse',\\n        map-get($theme, 'border-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-interactive',\\n        map-get($theme, 'border-interactive')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-primary', map-get($theme, 'text-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-secondary',\\n        map-get($theme, 'text-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-placeholder',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-placeholder',\\n        map-get($theme, 'text-placeholder')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-helper',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-helper', map-get($theme, 'text-helper'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color',\\n        map-get($theme, 'text-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-inverse', map-get($theme, 'text-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-primary', map-get($theme, 'link-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-secondary',\\n        map-get($theme, 'link-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-visited',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-visited', map-get($theme, 'link-visited'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-inverse', map-get($theme, 'link-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-primary', map-get($theme, 'icon-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-secondary',\\n        map-get($theme, 'icon-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color',\\n        map-get($theme, 'icon-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-inverse', map-get($theme, 'icon-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error',\\n        map-get($theme, 'support-error')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success',\\n        map-get($theme, 'support-success')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning',\\n        map-get($theme, 'support-warning')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-info', map-get($theme, 'support-info'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error-inverse',\\n        map-get($theme, 'support-error-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success-inverse',\\n        map-get($theme, 'support-success-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning-inverse',\\n        map-get($theme, 'support-warning-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-info-inverse',\\n        map-get($theme, 'support-info-inverse')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'overlay', $emit-difference) {\\n      @include custom-property('overlay', map-get($theme, 'overlay'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'toggle-off',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('toggle-off', map-get($theme, 'toggle-off'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary',\\n        map-get($theme, 'button-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary',\\n        map-get($theme, 'button-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary',\\n        map-get($theme, 'button-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-primary',\\n        map-get($theme, 'button-danger-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-secondary',\\n        map-get($theme, 'button-danger-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-active',\\n        map-get($theme, 'background-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-active', map-get($theme, 'layer-active'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-active',\\n        map-get($theme, 'button-danger-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-active',\\n        map-get($theme, 'button-primary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-active',\\n        map-get($theme, 'button-secondary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-active',\\n        map-get($theme, 'button-tertiary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inset',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('focus-inset', map-get($theme, 'focus-inset'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'focus-inverse',\\n        map-get($theme, 'focus-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-hover',\\n        map-get($theme, 'background-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-hover', map-get($theme, 'layer-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('field-hover', map-get($theme, 'field-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse-hover',\\n        map-get($theme, 'background-inverse-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-primary-hover',\\n        map-get($theme, 'link-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-hover',\\n        map-get($theme, 'button-danger-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-hover',\\n        map-get($theme, 'button-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-hover',\\n        map-get($theme, 'button-secondary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-hover',\\n        map-get($theme, 'button-tertiary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected',\\n        map-get($theme, 'background-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected-hover',\\n        map-get($theme, 'background-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected',\\n        map-get($theme, 'layer-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-hover',\\n        map-get($theme, 'layer-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-inverse',\\n        map-get($theme, 'layer-selected-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle-selected',\\n        map-get($theme, 'border-subtle-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-disabled',\\n        map-get($theme, 'layer-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'field-disabled',\\n        map-get($theme, 'field-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-disabled',\\n        map-get($theme, 'border-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-disabled',\\n        map-get($theme, 'text-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-disabled',\\n        map-get($theme, 'button-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-disabled',\\n        map-get($theme, 'icon-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color-disabled',\\n        map-get($theme, 'text-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color-disabled',\\n        map-get($theme, 'icon-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-disabled',\\n        map-get($theme, 'layer-selected-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-background',\\n        map-get($theme, 'skeleton-background')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-element',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-element',\\n        map-get($theme, 'skeleton-element')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-01', $emit-difference)\\n    {\\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-02', $emit-difference)\\n    {\\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-03', $emit-difference)\\n    {\\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-01', $emit-difference)\\n    {\\n      @include custom-property('active-01', map-get($theme, 'active-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-field',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger', $emit-difference) {\\n      @include custom-property('danger', map-get($theme, 'danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-02', map-get($theme, 'caption-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-01', $emit-difference)\\n    {\\n      @include custom-property('label-01', map-get($theme, 'label-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-02', $emit-difference)\\n    {\\n      @include custom-property('label-02', map-get($theme, 'label-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-01',\\n        map-get($theme, 'helper-text-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-02',\\n        map-get($theme, 'helper-text-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-01',\\n        map-get($theme, 'body-short-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-02',\\n        map-get($theme, 'body-short-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-01', $emit-difference) {\\n      @include custom-property('code-01', map-get($theme, 'code-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-02', $emit-difference) {\\n      @include custom-property('code-02', map-get($theme, 'code-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-01',\\n        map-get($theme, 'productive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-02',\\n        map-get($theme, 'productive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-03',\\n        map-get($theme, 'productive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-04',\\n        map-get($theme, 'productive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-05',\\n        map-get($theme, 'productive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-06',\\n        map-get($theme, 'productive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-07',\\n        map-get($theme, 'productive-heading-07')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-01',\\n        map-get($theme, 'expressive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-02',\\n        map-get($theme, 'expressive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-03',\\n        map-get($theme, 'expressive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-04',\\n        map-get($theme, 'expressive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-05',\\n        map-get($theme, 'expressive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-06',\\n        map-get($theme, 'expressive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-paragraph-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-paragraph-01',\\n        map-get($theme, 'expressive-paragraph-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-01', map-get($theme, 'display-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-02', map-get($theme, 'display-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-03', map-get($theme, 'display-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-04', map-get($theme, 'display-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-08',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-09',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-10',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-11',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-12',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-13',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-13', map-get($theme, 'spacing-13'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-01',\\n        map-get($theme, 'fluid-spacing-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-02',\\n        map-get($theme, 'fluid-spacing-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-03',\\n        map-get($theme, 'fluid-spacing-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-04',\\n        map-get($theme, 'fluid-spacing-04')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-01', $emit-difference)\\n    {\\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-02', $emit-difference)\\n    {\\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-03', $emit-difference)\\n    {\\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-04', $emit-difference)\\n    {\\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-05', $emit-difference)\\n    {\\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-06', $emit-difference)\\n    {\\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-07', $emit-difference)\\n    {\\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-01', map-get($theme, 'container-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-02', map-get($theme, 'container-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-03', map-get($theme, 'container-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-04', map-get($theme, 'container-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-05', map-get($theme, 'container-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xsmall',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xsmall', map-get($theme, 'size-xsmall'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-small',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-small', map-get($theme, 'size-small'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-medium',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-medium', map-get($theme, 'size-medium'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-large',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-large', map-get($theme, 'size-large'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xlarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xlarge', map-get($theme, 'size-xlarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-2XLarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-2XLarge', map-get($theme, 'size-2XLarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\\n    }\\n  }\\n\\n  @content;\\n\\n  // Reset to default theme after apply in content\\n  @if $carbon--theme != $parent-carbon-theme {\\n    $carbon--theme: $parent-carbon-theme !global;\\n\\n    @include carbon--theme();\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"patientChartWrapper\": \"-esm-patient-chart__side-menu-component__patientChartWrapper___j9nNN\",\n\t\"productiveHeading01\": \"-esm-patient-chart__side-menu-component__productiveHeading01___V0Sz5\",\n\t\"link\": \"-esm-patient-chart__side-menu-component__link___YNKEm\",\n\t\"productiveHeading02\": \"-esm-patient-chart__side-menu-component__productiveHeading02___SQydX\",\n\t\"productiveHeading03\": \"-esm-patient-chart__side-menu-component__productiveHeading03___uFSji\",\n\t\"productiveHeading04\": \"-esm-patient-chart__side-menu-component__productiveHeading04___2fCvF\",\n\t\"bodyLong01\": \"-esm-patient-chart__side-menu-component__bodyLong01___AKqfy\",\n\t\"skeleton\": \"-esm-patient-chart__side-menu-component__skeleton___M2i5a\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{padding:0;border:0;margin:0;font:inherit;font-size:100%;vertical-align:baseline}button,select,input,textarea{border-radius:0;font-family:inherit}input[type=text]::-ms-clear{display:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}body{line-height:1}sup{vertical-align:super}sub{vertical-align:sub}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:\\\"\\\"}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}button{margin:0}html{font-size:100%}body{font-weight:400;font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility}code{font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace}strong{font-weight:600}@media screen and (-ms-high-contrast: active){svg{fill:ButtonText}}h1{font-size:2.625rem;font-weight:300;line-height:1.199;letter-spacing:0}h2{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}h3{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}h4{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}h5{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}h6{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}p{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}a{color:#0f62fe}em{font-style:italic}@keyframes -esm-patient-chart__end-visit-component__skeleton___u2dZ9{0%{opacity:.3;transform:scaleX(0);transform-origin:left}20%{opacity:1;transform:scaleX(1);transform-origin:left}28%{transform:scaleX(1);transform-origin:right}51%{transform:scaleX(0);transform-origin:right}58%{transform:scaleX(0);transform-origin:right}82%{transform:scaleX(1);transform-origin:right}83%{transform:scaleX(1);transform-origin:left}96%{transform:scaleX(0);transform-origin:left}100%{opacity:.3;transform:scaleX(0);transform-origin:left}}.-esm-patient-chart__end-visit-component__header___6Zyh2{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0;color:#161616}.-esm-patient-chart__end-visit-component__body___CQfKx{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px;color:#161616}.-esm-patient-chart__end-visit-component__customLabel___74aqe{padding:.25rem 0rem;display:flex}.-esm-patient-chart__end-visit-component__customLabel___74aqe span:nth-child(1){flex:1}.-esm-patient-chart__end-visit-component__customLabel___74aqe span:nth-child(2){flex:4}.-esm-patient-chart__end-visit-component__bodyShort01___0hcaD{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.-esm-patient-chart__end-visit-component__bodyShort02___CUowS{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.-esm-patient-chart__end-visit-component__bodyLong01___EJDTl,.-esm-patient-chart__end-visit-component__customLabel___74aqe{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-patient-chart__end-visit-component__bodyLong02___qr32L{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_css--reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_font-family.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/icons/mixins.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_helper-mixins.scss\",\"webpack://./src/visit/visit-prompt/end-visit.component.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCTE,2ZAiFE,SAAA,CACA,QAAA,CACA,QAAA,CACA,YAAA,CACA,cAAA,CACA,uBAAA,CAIF,6BAIE,eAAA,CACA,mBAAA,CAGF,4BACE,YAAA,CAIF,mFAYE,aAAA,CAGF,KACE,aAAA,CAGF,IACE,oBAAA,CAGF,IACE,kBAAA,CAGF,MAEE,eAAA,CAGF,aAEE,WAAA,CAGF,wDAIE,UAAA,CAGF,MACE,wBAAA,CACA,gBAAA,CAGF,EACE,qBAAA,CAIF,OACE,QAAA,CC3KJ,KACE,cAAA,CAGF,KC0CA,eAAA,CDvCE,gEAViB,CAWjB,iCAAA,CACA,kCAAA,CACA,iCAAA,CAGF,KACE,wGAhBiB,CAmBnB,OC6BA,eAAA,CCxDA,8CACE,IACE,eAAA,CAAA,CFkCJ,GGggBE,kBAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlrBxB,GG4fE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH9qBxB,GGwfE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH1qBxB,GGofE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CHtqBxB,GGgfE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlqBxB,GG4eE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CH9pBxB,EGweE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CH1pBxB,EAII,aAAA,CAMJ,GACE,iBAAA,CIkHF,qEACE,GACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,SAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,KACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAAA,CC3ON,yDF4iBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CEhuBxB,aC4CU,CDzCZ,uDFuiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CE3tBxB,aCuCU,CDpCZ,8DACE,mBAAA,CACA,YAAA,CAIF,gFACE,MAAA,CAGF,gFACE,MAAA,CAGF,8DFohBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CEtsB1B,8DFghBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CElsB1B,2HF4gBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CE9rB1B,6DFwgBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n@import './vendor/@carbon/elements/scss/type/reset';\\n@import './vendor/@carbon/elements/scss/icons/mixins';\\n\\n/// Resets default browser styling\\n/// @access public\\n/// @group global-reset\\n@mixin reset {\\n  @if variable-exists(css--reset) == false or $css--reset == false {\\n    box-sizing: border-box;\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    font-family: inherit;\\n    font-size: 100%;\\n    vertical-align: baseline;\\n\\n    *,\\n    *::before,\\n    *::after {\\n      box-sizing: inherit;\\n    }\\n  }\\n}\\n\\n@include exports('css--reset') {\\n  @if variable-exists(css--reset) == false or $css--reset == true {\\n    // http://cssreset.com/scripts/eric-meyer-reset-css/\\n    html,\\n    body,\\n    div,\\n    span,\\n    applet,\\n    object,\\n    iframe,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p,\\n    blockquote,\\n    pre,\\n    a,\\n    abbr,\\n    acronym,\\n    address,\\n    big,\\n    cite,\\n    code,\\n    del,\\n    dfn,\\n    em,\\n    img,\\n    ins,\\n    kbd,\\n    q,\\n    s,\\n    samp,\\n    small,\\n    strike,\\n    strong,\\n    sub,\\n    sup,\\n    tt,\\n    var,\\n    b,\\n    u,\\n    i,\\n    center,\\n    dl,\\n    dt,\\n    dd,\\n    ol,\\n    ul,\\n    li,\\n    fieldset,\\n    form,\\n    label,\\n    legend,\\n    table,\\n    caption,\\n    tbody,\\n    tfoot,\\n    thead,\\n    tr,\\n    th,\\n    td,\\n    article,\\n    aside,\\n    canvas,\\n    details,\\n    embed,\\n    figure,\\n    figcaption,\\n    footer,\\n    header,\\n    hgroup,\\n    menu,\\n    nav,\\n    output,\\n    ruby,\\n    section,\\n    summary,\\n    time,\\n    mark,\\n    audio,\\n    video {\\n      padding: 0;\\n      border: 0;\\n      margin: 0;\\n      font: inherit;\\n      font-size: 100%;\\n      vertical-align: baseline;\\n    }\\n\\n    // Chrome 62 fix\\n    button,\\n    select,\\n    input,\\n    textarea {\\n      border-radius: 0;\\n      font-family: inherit;\\n    }\\n\\n    input[type='text']::-ms-clear {\\n      display: none;\\n    }\\n\\n    /* HTML5 display-role reset for older browsers */\\n    article,\\n    aside,\\n    details,\\n    figcaption,\\n    figure,\\n    footer,\\n    header,\\n    hgroup,\\n    main,\\n    menu,\\n    nav,\\n    section {\\n      display: block;\\n    }\\n\\n    body {\\n      line-height: 1;\\n    }\\n\\n    sup {\\n      vertical-align: super;\\n    }\\n\\n    sub {\\n      vertical-align: sub;\\n    }\\n\\n    ol,\\n    ul {\\n      list-style: none;\\n    }\\n\\n    blockquote,\\n    q {\\n      quotes: none;\\n    }\\n\\n    blockquote::before,\\n    blockquote::after,\\n    q::before,\\n    q::after {\\n      content: '';\\n    }\\n\\n    table {\\n      border-collapse: collapse;\\n      border-spacing: 0;\\n    }\\n\\n    * {\\n      box-sizing: border-box;\\n    }\\n\\n    // Fix to remove added margins on buttons in safari (see #5155)\\n    button {\\n      margin: 0;\\n    }\\n\\n    @include carbon--type-reset;\\n    @include carbon--icons;\\n  }\\n}\\n\\n@include exports('css--default-type') {\\n  @if variable-exists(css--default-type) == false or $css--default-type == true\\n  {\\n    @include carbon--default-type;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/convert';\\n@import 'font-family';\\n@import 'styles';\\n\\n/// Include a type reset for a given body and mono font family\\n/// @param {String} $body-font-family [carbon--font-family('sans')] - The font family used on the `<body>` element\\n/// @param {String} $mono-font-family [carbon--font-family('mono')] - The font family used on elements that require mono fonts, like the `<code>` element\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-reset(\\n  // TODO: remove in next major release. This has been replaced with 100%\\n  $base-font-size: $carbon--base-font-size,\\n  $body-font-family: carbon--font-family('sans'),\\n  $mono-font-family: carbon--font-family('mono')\\n) {\\n  html {\\n    font-size: 100%;\\n  }\\n\\n  body {\\n    @include carbon--font-weight('regular');\\n\\n    font-family: $body-font-family;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-font-smoothing: antialiased;\\n    text-rendering: optimizeLegibility;\\n  }\\n\\n  code {\\n    font-family: $mono-font-family;\\n  }\\n\\n  strong {\\n    @include carbon--font-weight('semibold');\\n  }\\n}\\n\\n/// Include default type styles\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--default-type {\\n  h1 {\\n    @include carbon--type-style('productive-heading-06');\\n  }\\n\\n  h2 {\\n    @include carbon--type-style('productive-heading-05');\\n  }\\n\\n  h3 {\\n    @include carbon--type-style('productive-heading-04');\\n  }\\n\\n  h4 {\\n    @include carbon--type-style('productive-heading-03');\\n  }\\n\\n  h5 {\\n    @include carbon--type-style('productive-heading-02');\\n  }\\n\\n  h6 {\\n    @include carbon--type-style('productive-heading-01');\\n  }\\n\\n  p {\\n    @include carbon--type-style('body-long-02');\\n  }\\n\\n  a {\\n    @if global-variable-exists('carbon--theme') and\\n      map-has-key($carbon--theme, 'link-01')\\n    {\\n      color: map-get($carbon--theme, 'link-01');\\n    } @else {\\n      color: #0062fe;\\n    }\\n  }\\n\\n  em {\\n    font-style: italic;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\\n/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-families: (\\n  'mono':\\n    unquote(\\n      \\\"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\\\"\\n    ),\\n  'sans': unquote(\\\"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-condensed':\\n    unquote(\\\"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-hebrew':\\n    unquote(\\n      \\\"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\\\"\\n    ),\\n  'serif': unquote(\\\"'IBM Plex Serif', 'Georgia', Times, serif\\\"),\\n) !default;\\n\\n/// Get the font-family for an IBM Plex font\\n/// @param {String} $name\\n/// @return {String}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-family($name) {\\n  @return map-get($carbon--font-families, $name);\\n}\\n\\n/// Include the `font-family` definition for the given name in your selector\\n/// @param {String} $name\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-family($name) {\\n  font-family: carbon--font-family($name);\\n}\\n\\n/// Suggested font weights to be used in product\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-weights: (\\n  'light': 300,\\n  'regular': 400,\\n  'semibold': 600,\\n) !default;\\n\\n/// Retrieve the font-weight value for a given name\\n/// @param {String} $weight\\n/// @return {Number}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-weight($weight) {\\n  @return map-get($carbon--font-weights, $weight);\\n}\\n\\n/// Set the `font-weight` property with the value for a given name\\n/// @param {String} $weight\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-weight($weight) {\\n  font-weight: carbon--font-weight($weight);\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Makes SVGs accessible in high contrast mode\\n/// @link https://github.com/IBM/carbon-elements/issues/345#issuecomment-466577293 Carbon-elements #345\\n/// @access public\\n/// @group @carbon/icons\\n@mixin carbon--icons {\\n  @media screen and (-ms-high-contrast: active) {\\n    svg {\\n      fill: ButtonText;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n//----------------------------------------------\\n// Mixins\\n// ---------------------------------------------\\n//\\n//   Category             ||  Description\\n//   ===========================================\\n//   Misc                 ||  General helper @mixins\\n//   Deprecated           ||  Not used anymore\\n//   ===========================================\\n\\n//----------------------------------------------\\n// Misc\\n// ---------------------------------------------\\n\\n@import 'vars';\\n@import 'css--reset';\\n@import 'typography';\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n\\n/// Adds text overflow styling\\n/// @access public\\n/// @param {Number} $width [false] - Value of width if you want to set width, else nothing\\n/// @example @include text-overflow(300px);\\n/// @group global-helpers\\n@mixin text-overflow($width: false) {\\n  display: block;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n\\n  // apply a width if width parameter exists\\n  @if ($width) {\\n    width: $width;\\n  }\\n}\\n\\n/// Adds placeholder text color\\n/// @access public\\n/// @example @include placeholder-colors;\\n/// @group global-helpers\\n@mixin placeholder-colors {\\n  color: $text-05;\\n  opacity: 1;\\n}\\n\\n/// Adds box shadow\\n/// @access public\\n/// @example @include box-shadow;\\n/// @group global-helpers\\n@mixin box-shadow {\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\\n}\\n\\n/// Adds outline styles depending on specific type\\n/// @access public\\n/// @param {String} $type ['border'] - Type of outline from: `border`, `blurred`, `outline`, `invalid`, `reset`\\n/// @example @include focus-outline('outline');\\n/// @group global-helpers\\n@mixin focus-outline($type: 'border') {\\n  @if ($type == 'border') {\\n    outline: 1px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'blurred') {\\n    box-shadow: 0 0 0 3px $focus;\\n    outline: 1px solid transparent;\\n  }\\n\\n  @if ($type == 'outline') {\\n    outline: 2px solid $focus;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'outline-compat') {\\n    box-sizing: border-box;\\n    border: 2px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      border-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'invalid') {\\n    outline: 2px solid $support-01;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'reset') {\\n    outline: 2px solid transparent;\\n    outline-offset: -2px;\\n  }\\n}\\n\\n/// Adds rotational transformation\\n/// @access public\\n/// @param {Number} $deg - How many degrees to rotate\\n/// @param {Number} $speed - Speed of rotation\\n/// @param {Value} $origin [center] - `transform-origin`\\n/// @example @include rotate(90deg, 300ms);\\n/// @group global-helpers\\n@mixin rotate($deg, $speed, $origin: center) {\\n  transform: rotate($deg);\\n  transform-origin: $origin;\\n  transition: transform $speed;\\n}\\n\\n/// Adds styles to hide content\\n/// @access public\\n/// @group global-helpers\\n@mixin hidden {\\n  position: absolute;\\n  overflow: hidden;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  border: 0;\\n  margin: -1px;\\n  clip: rect(0, 0, 0, 0);\\n  visibility: inherit;\\n  white-space: nowrap;\\n}\\n\\n/// Resets button styles\\n/// @access public\\n/// @param {Bool} $width [true] - Sets width to 100% if true\\n/// @example @include button-reset($width: false);\\n/// @group global-helpers\\n@mixin button-reset($width: true) {\\n  @include reset;\\n\\n  display: inline-block;\\n  padding: 0;\\n  border: 0;\\n  appearance: none;\\n  background: none;\\n  cursor: pointer;\\n\\n  @if ($width == true) {\\n    width: 100%;\\n  }\\n\\n  &::-moz-focus-inner {\\n    border: 0;\\n  }\\n}\\n\\n/// Skeleton loading animation\\n/// @access public\\n/// @example @include skeleton;\\n/// @group global-helpers\\n@mixin skeleton {\\n  position: relative;\\n  padding: 0;\\n  border: none;\\n  background: $skeleton-01;\\n  box-shadow: none;\\n  pointer-events: none;\\n\\n  &:hover,\\n  &:focus,\\n  &:active {\\n    border: none;\\n    cursor: default;\\n    outline: none;\\n  }\\n\\n  &::before {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    animation: 3000ms ease-in-out skeleton infinite;\\n    background: $skeleton-02;\\n    content: '';\\n    will-change: transform-origin, transform, opacity;\\n\\n    @media (prefers-reduced-motion: reduce) {\\n      animation: none;\\n    }\\n  }\\n}\\n\\n@include exports('skeleton') {\\n  @keyframes skeleton {\\n    0% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    20% {\\n      opacity: 1;\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    28% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    51% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    58% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    82% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    83% {\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    96% {\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    100% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n  }\\n}\\n\\n/// Windows HCM Mixin\\n/// @access public\\n/// @example @include high-contrast-mode;\\n/// @group global-helpers\\n/// We should set HCM styles at the end of each file to ensure they are not overridden\\n@mixin high-contrast-mode($type: '') {\\n  @media screen and (-ms-high-contrast: active),\\n    (forced-colors: active),\\n    (prefers-contrast) {\\n    @if ($type == 'icon-fill') {\\n      fill: ButtonText;\\n    }\\n\\n    @if ($type == 'focus') {\\n      color: Highlight;\\n      outline: 1px solid Highlight;\\n    }\\n\\n    @if ($type == 'outline') {\\n      outline: 1px solid transparent;\\n    }\\n\\n    @if ($type == 'disabled') {\\n      color: GrayText;\\n      fill: GrayText;\\n    }\\n\\n    @content;\\n  }\\n}\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/mixins\\\";\\n\\n.header {\\n  @include carbon--type-style('productive-heading-03');\\n  color: $text-01;\\n}\\n\\n.body {\\n  @include carbon--type-style('body-long-01');\\n  color: $text-01;\\n}\\n\\n.customLabel {\\n  padding: $spacing-02 0rem;\\n  display: flex;\\n  @extend .bodyLong01;\\n}\\n\\n.customLabel span:nth-child(1){\\n  flex: 1;\\n}\\n\\n.customLabel span:nth-child(2){\\n  flex: 4;\\n}\\n\\n.bodyShort01 {\\n  @include carbon--type-style(\\\"body-short-01\\\");\\n}\\n\\n.bodyShort02 {\\n  @include carbon--type-style(\\\"body-short-02\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\\n.bodyLong02 {\\n  @include carbon--type-style(\\\"body-long-02\\\");\\n}\\n\\n\",\"// Code generated by @carbon/themes. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './themes';\\n\\n/// Define theme variables from a map of tokens\\n/// @access public\\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\\n///\\n/// @example scss\\n///   // Default usage\\n///   @include carbon--theme();\\n///\\n///   // Alternate styling (not white theme)\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     // declarations...\\n///   }\\n///\\n///   // Inline styling\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     .my-dark-theme {\\n///       // declarations...\\n///     }\\n///   }\\n///\\n/// @group @carbon/themes\\n@mixin carbon--theme(\\n  $theme: $carbon--theme,\\n  $emit-custom-properties: false,\\n  $emit-difference: false\\n) {\\n  $parent-carbon-theme: $carbon--theme;\\n  $carbon--theme: $theme !global;\\n  $interactive-01: map-get($theme, 'interactive-01') !global;\\n  $interactive-02: map-get($theme, 'interactive-02') !global;\\n  $interactive-03: map-get($theme, 'interactive-03') !global;\\n  $interactive-04: map-get($theme, 'interactive-04') !global;\\n  $ui-background: map-get($theme, 'ui-background') !global;\\n  $ui-01: map-get($theme, 'ui-01') !global;\\n  $ui-02: map-get($theme, 'ui-02') !global;\\n  $ui-03: map-get($theme, 'ui-03') !global;\\n  $ui-04: map-get($theme, 'ui-04') !global;\\n  $ui-05: map-get($theme, 'ui-05') !global;\\n  $text-01: map-get($theme, 'text-01') !global;\\n  $text-02: map-get($theme, 'text-02') !global;\\n  $text-03: map-get($theme, 'text-03') !global;\\n  $text-04: map-get($theme, 'text-04') !global;\\n  $text-05: map-get($theme, 'text-05') !global;\\n  $text-error: map-get($theme, 'text-error') !global;\\n  $icon-01: map-get($theme, 'icon-01') !global;\\n  $icon-02: map-get($theme, 'icon-02') !global;\\n  $icon-03: map-get($theme, 'icon-03') !global;\\n  $link-01: map-get($theme, 'link-01') !global;\\n  $link-02: map-get($theme, 'link-02') !global;\\n  $inverse-link: map-get($theme, 'inverse-link') !global;\\n  $field-01: map-get($theme, 'field-01') !global;\\n  $field-02: map-get($theme, 'field-02') !global;\\n  $inverse-01: map-get($theme, 'inverse-01') !global;\\n  $inverse-02: map-get($theme, 'inverse-02') !global;\\n  $support-01: map-get($theme, 'support-01') !global;\\n  $support-02: map-get($theme, 'support-02') !global;\\n  $support-03: map-get($theme, 'support-03') !global;\\n  $support-04: map-get($theme, 'support-04') !global;\\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\\n  $overlay-01: map-get($theme, 'overlay-01') !global;\\n  $danger-01: map-get($theme, 'danger-01') !global;\\n  $danger-02: map-get($theme, 'danger-02') !global;\\n  $focus: map-get($theme, 'focus') !global;\\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\\n  $hover-primary: map-get($theme, 'hover-primary') !global;\\n  $active-primary: map-get($theme, 'active-primary') !global;\\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\\n  $active-secondary: map-get($theme, 'active-secondary') !global;\\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\\n  $hover-ui: map-get($theme, 'hover-ui') !global;\\n  $hover-light-ui: map-get($theme, 'hover-light-ui') !global;\\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\\n  $active-ui: map-get($theme, 'active-ui') !global;\\n  $active-light-ui: map-get($theme, 'active-light-ui') !global;\\n  $selected-ui: map-get($theme, 'selected-ui') !global;\\n  $selected-light-ui: map-get($theme, 'selected-light-ui') !global;\\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\\n  $hover-danger: map-get($theme, 'hover-danger') !global;\\n  $active-danger: map-get($theme, 'active-danger') !global;\\n  $hover-row: map-get($theme, 'hover-row') !global;\\n  $visited-link: map-get($theme, 'visited-link') !global;\\n  $disabled-01: map-get($theme, 'disabled-01') !global;\\n  $disabled-02: map-get($theme, 'disabled-02') !global;\\n  $disabled-03: map-get($theme, 'disabled-03') !global;\\n  $highlight: map-get($theme, 'highlight') !global;\\n  $decorative-01: map-get($theme, 'decorative-01') !global;\\n  $button-separator: map-get($theme, 'button-separator') !global;\\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\\n  $background: map-get($theme, 'background') !global;\\n  $layer: map-get($theme, 'layer') !global;\\n  $layer-accent: map-get($theme, 'layer-accent') !global;\\n  $layer-accent-hover: map-get($theme, 'layer-accent-hover') !global;\\n  $layer-accent-active: map-get($theme, 'layer-accent-active') !global;\\n  $field: map-get($theme, 'field') !global;\\n  $background-inverse: map-get($theme, 'background-inverse') !global;\\n  $background-brand: map-get($theme, 'background-brand') !global;\\n  $interactive: map-get($theme, 'interactive') !global;\\n  $border-subtle: map-get($theme, 'border-subtle') !global;\\n  $border-strong: map-get($theme, 'border-strong') !global;\\n  $border-inverse: map-get($theme, 'border-inverse') !global;\\n  $border-interactive: map-get($theme, 'border-interactive') !global;\\n  $text-primary: map-get($theme, 'text-primary') !global;\\n  $text-secondary: map-get($theme, 'text-secondary') !global;\\n  $text-placeholder: map-get($theme, 'text-placeholder') !global;\\n  $text-helper: map-get($theme, 'text-helper') !global;\\n  $text-on-color: map-get($theme, 'text-on-color') !global;\\n  $text-inverse: map-get($theme, 'text-inverse') !global;\\n  $link-primary: map-get($theme, 'link-primary') !global;\\n  $link-secondary: map-get($theme, 'link-secondary') !global;\\n  $link-visited: map-get($theme, 'link-visited') !global;\\n  $link-inverse: map-get($theme, 'link-inverse') !global;\\n  $icon-primary: map-get($theme, 'icon-primary') !global;\\n  $icon-secondary: map-get($theme, 'icon-secondary') !global;\\n  $icon-on-color: map-get($theme, 'icon-on-color') !global;\\n  $icon-inverse: map-get($theme, 'icon-inverse') !global;\\n  $support-error: map-get($theme, 'support-error') !global;\\n  $support-success: map-get($theme, 'support-success') !global;\\n  $support-warning: map-get($theme, 'support-warning') !global;\\n  $support-info: map-get($theme, 'support-info') !global;\\n  $support-error-inverse: map-get($theme, 'support-error-inverse') !global;\\n  $support-success-inverse: map-get($theme, 'support-success-inverse') !global;\\n  $support-warning-inverse: map-get($theme, 'support-warning-inverse') !global;\\n  $support-info-inverse: map-get($theme, 'support-info-inverse') !global;\\n  $overlay: map-get($theme, 'overlay') !global;\\n  $toggle-off: map-get($theme, 'toggle-off') !global;\\n  $button-primary: map-get($theme, 'button-primary') !global;\\n  $button-secondary: map-get($theme, 'button-secondary') !global;\\n  $button-tertiary: map-get($theme, 'button-tertiary') !global;\\n  $button-danger-primary: map-get($theme, 'button-danger-primary') !global;\\n  $button-danger-secondary: map-get($theme, 'button-danger-secondary') !global;\\n  $background-active: map-get($theme, 'background-active') !global;\\n  $layer-active: map-get($theme, 'layer-active') !global;\\n  $button-danger-active: map-get($theme, 'button-danger-active') !global;\\n  $button-primary-active: map-get($theme, 'button-primary-active') !global;\\n  $button-secondary-active: map-get($theme, 'button-secondary-active') !global;\\n  $button-tertiary-active: map-get($theme, 'button-tertiary-active') !global;\\n  $focus-inset: map-get($theme, 'focus-inset') !global;\\n  $focus-inverse: map-get($theme, 'focus-inverse') !global;\\n  $background-hover: map-get($theme, 'background-hover') !global;\\n  $layer-hover: map-get($theme, 'layer-hover') !global;\\n  $field-hover: map-get($theme, 'field-hover') !global;\\n  $background-inverse-hover: map-get(\\n    $theme,\\n    'background-inverse-hover'\\n  ) !global;\\n  $link-primary-hover: map-get($theme, 'link-primary-hover') !global;\\n  $button-danger-hover: map-get($theme, 'button-danger-hover') !global;\\n  $button-primary-hover: map-get($theme, 'button-primary-hover') !global;\\n  $button-secondary-hover: map-get($theme, 'button-secondary-hover') !global;\\n  $button-tertiary-hover: map-get($theme, 'button-tertiary-hover') !global;\\n  $background-selected: map-get($theme, 'background-selected') !global;\\n  $background-selected-hover: map-get(\\n    $theme,\\n    'background-selected-hover'\\n  ) !global;\\n  $layer-selected: map-get($theme, 'layer-selected') !global;\\n  $layer-selected-hover: map-get($theme, 'layer-selected-hover') !global;\\n  $layer-selected-inverse: map-get($theme, 'layer-selected-inverse') !global;\\n  $border-subtle-selected: map-get($theme, 'border-subtle-selected') !global;\\n  $layer-disabled: map-get($theme, 'layer-disabled') !global;\\n  $field-disabled: map-get($theme, 'field-disabled') !global;\\n  $border-disabled: map-get($theme, 'border-disabled') !global;\\n  $text-disabled: map-get($theme, 'text-disabled') !global;\\n  $button-disabled: map-get($theme, 'button-disabled') !global;\\n  $icon-disabled: map-get($theme, 'icon-disabled') !global;\\n  $text-on-color-disabled: map-get($theme, 'text-on-color-disabled') !global;\\n  $icon-on-color-disabled: map-get($theme, 'icon-on-color-disabled') !global;\\n  $layer-selected-disabled: map-get($theme, 'layer-selected-disabled') !global;\\n  $skeleton-background: map-get($theme, 'skeleton-background') !global;\\n  $skeleton-element: map-get($theme, 'skeleton-element') !global;\\n  $brand-01: map-get($theme, 'brand-01') !global;\\n  $brand-02: map-get($theme, 'brand-02') !global;\\n  $brand-03: map-get($theme, 'brand-03') !global;\\n  $active-01: map-get($theme, 'active-01') !global;\\n  $hover-field: map-get($theme, 'hover-field') !global;\\n  $danger: map-get($theme, 'danger') !global;\\n  $caption-01: map-get($theme, 'caption-01') !global;\\n  $caption-02: map-get($theme, 'caption-02') !global;\\n  $label-01: map-get($theme, 'label-01') !global;\\n  $label-02: map-get($theme, 'label-02') !global;\\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\\n  $helper-text-02: map-get($theme, 'helper-text-02') !global;\\n  $body-short-01: map-get($theme, 'body-short-01') !global;\\n  $body-long-01: map-get($theme, 'body-long-01') !global;\\n  $body-short-02: map-get($theme, 'body-short-02') !global;\\n  $body-long-02: map-get($theme, 'body-long-02') !global;\\n  $code-01: map-get($theme, 'code-01') !global;\\n  $code-02: map-get($theme, 'code-02') !global;\\n  $heading-01: map-get($theme, 'heading-01') !global;\\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\\n  $heading-02: map-get($theme, 'heading-02') !global;\\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\\n  $quotation-01: map-get($theme, 'quotation-01') !global;\\n  $quotation-02: map-get($theme, 'quotation-02') !global;\\n  $display-01: map-get($theme, 'display-01') !global;\\n  $display-02: map-get($theme, 'display-02') !global;\\n  $display-03: map-get($theme, 'display-03') !global;\\n  $display-04: map-get($theme, 'display-04') !global;\\n  $spacing-01: map-get($theme, 'spacing-01') !global;\\n  $spacing-02: map-get($theme, 'spacing-02') !global;\\n  $spacing-03: map-get($theme, 'spacing-03') !global;\\n  $spacing-04: map-get($theme, 'spacing-04') !global;\\n  $spacing-05: map-get($theme, 'spacing-05') !global;\\n  $spacing-06: map-get($theme, 'spacing-06') !global;\\n  $spacing-07: map-get($theme, 'spacing-07') !global;\\n  $spacing-08: map-get($theme, 'spacing-08') !global;\\n  $spacing-09: map-get($theme, 'spacing-09') !global;\\n  $spacing-10: map-get($theme, 'spacing-10') !global;\\n  $spacing-11: map-get($theme, 'spacing-11') !global;\\n  $spacing-12: map-get($theme, 'spacing-12') !global;\\n  $spacing-13: map-get($theme, 'spacing-13') !global;\\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\\n  $layout-01: map-get($theme, 'layout-01') !global;\\n  $layout-02: map-get($theme, 'layout-02') !global;\\n  $layout-03: map-get($theme, 'layout-03') !global;\\n  $layout-04: map-get($theme, 'layout-04') !global;\\n  $layout-05: map-get($theme, 'layout-05') !global;\\n  $layout-06: map-get($theme, 'layout-06') !global;\\n  $layout-07: map-get($theme, 'layout-07') !global;\\n  $container-01: map-get($theme, 'container-01') !global;\\n  $container-02: map-get($theme, 'container-02') !global;\\n  $container-03: map-get($theme, 'container-03') !global;\\n  $container-04: map-get($theme, 'container-04') !global;\\n  $container-05: map-get($theme, 'container-05') !global;\\n  $size-xsmall: map-get($theme, 'size-xsmall') !global;\\n  $size-small: map-get($theme, 'size-small') !global;\\n  $size-medium: map-get($theme, 'size-medium') !global;\\n  $size-large: map-get($theme, 'size-large') !global;\\n  $size-xlarge: map-get($theme, 'size-xlarge') !global;\\n  $size-2XLarge: map-get($theme, 'size-2XLarge') !global;\\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\\n\\n  @if global-variable-exists('feature-flags') ==\\n    false or\\n    global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-v11-release') !=\\n    true\\n  {\\n    $background: $ui-background !global;\\n    $layer: $ui-01 !global;\\n    $layer-accent: $ui-03 !global;\\n    $field: $field-01 !global;\\n    $background-inverse: $inverse-02 !global;\\n    $background-brand: $interactive-01 !global;\\n    $interactive: $interactive-04 !global;\\n    $border-subtle: $ui-03 !global;\\n    $border-strong: $ui-04 !global;\\n    $border-inverse: $ui-05 !global;\\n    $border-interactive: $interactive-04 !global;\\n    $text-primary: $text-01 !global;\\n    $text-secondary: $text-02 !global;\\n    $text-placeholder: $text-03 !global;\\n    $text-helper: $text-05 !global;\\n    $text-on-color: $text-04 !global;\\n    $text-inverse: $inverse-01 !global;\\n    $link-primary: $link-01 !global;\\n    $link-secondary: $link-02 !global;\\n    $link-visited: $visited-link !global;\\n    $link-inverse: $inverse-link !global;\\n    $icon-primary: $icon-01 !global;\\n    $icon-secondary: $icon-02 !global;\\n    $icon-on-color: $icon-03 !global;\\n    $icon-inverse: $inverse-01 !global;\\n    $support-error: $support-01 !global;\\n    $support-success: $support-02 !global;\\n    $support-warning: $support-03 !global;\\n    $support-info: $support-04 !global;\\n    $support-error-inverse: $inverse-support-01 !global;\\n    $support-success-inverse: $inverse-support-02 !global;\\n    $support-warning-inverse: $inverse-support-03 !global;\\n    $support-info-inverse: $inverse-support-04 !global;\\n    $overlay: $overlay-01 !global;\\n    $toggle-off: $ui-04 !global;\\n    $button-primary: $interactive-01 !global;\\n    $button-secondary: $interactive-02 !global;\\n    $button-tertiary: $interactive-03 !global;\\n    $button-danger-primary: $danger-01 !global;\\n    $button-danger-secondary: $danger-02 !global;\\n    $background-active: $active-ui !global;\\n    $layer-active: $active-ui !global;\\n    $button-danger-active: $active-danger !global;\\n    $button-primary-active: $active-primary !global;\\n    $button-secondary-active: $active-secondary !global;\\n    $button-tertiary-active: $active-tertiary !global;\\n    $focus-inset: $inverse-01 !global;\\n    $focus-inverse: $inverse-focus-ui !global;\\n    $background-hover: $hover-ui !global;\\n    $layer-hover: $hover-ui !global;\\n    $field-hover: $hover-ui !global;\\n    $background-inverse-hover: $inverse-hover-ui !global;\\n    $link-primary-hover: $hover-primary-text !global;\\n    $button-danger-hover: $hover-danger !global;\\n    $button-primary-hover: $hover-primary !global;\\n    $button-secondary-hover: $hover-secondary !global;\\n    $button-tertiary-hover: $hover-tertiary !global;\\n    $background-selected: $selected-ui !global;\\n    $background-selected-hover: $hover-selected-ui !global;\\n    $layer-selected: $selected-ui !global;\\n    $layer-selected-hover: $hover-selected-ui !global;\\n    $layer-selected-inverse: $ui-05 !global;\\n    $border-subtle-selected: $active-ui !global;\\n    $layer-disabled: $disabled-01 !global;\\n    $field-disabled: $disabled-01 !global;\\n    $border-disabled: $disabled-01 !global;\\n    $text-disabled: $disabled-02 !global;\\n    $button-disabled: $disabled-02 !global;\\n    $icon-disabled: $disabled-02 !global;\\n    $text-on-color-disabled: $disabled-03 !global;\\n    $icon-on-color-disabled: $disabled-03 !global;\\n    $layer-selected-disabled: $disabled-03 !global;\\n    $skeleton-background: $skeleton-01 !global;\\n    $skeleton-element: $skeleton-02 !global;\\n  }\\n  @if global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-css-custom-properties')\\n  {\\n    $interactive-01: var(\\n      --#{$custom-property-prefix}-interactive-01,\\n      map-get($theme, 'interactive-01')\\n    ) !global;\\n    $interactive-02: var(\\n      --#{$custom-property-prefix}-interactive-02,\\n      map-get($theme, 'interactive-02')\\n    ) !global;\\n    $interactive-03: var(\\n      --#{$custom-property-prefix}-interactive-03,\\n      map-get($theme, 'interactive-03')\\n    ) !global;\\n    $interactive-04: var(\\n      --#{$custom-property-prefix}-interactive-04,\\n      map-get($theme, 'interactive-04')\\n    ) !global;\\n    $ui-background: var(\\n      --#{$custom-property-prefix}-ui-background,\\n      map-get($theme, 'ui-background')\\n    ) !global;\\n    $ui-01: var(\\n      --#{$custom-property-prefix}-ui-01,\\n      map-get($theme, 'ui-01')\\n    ) !global;\\n    $ui-02: var(\\n      --#{$custom-property-prefix}-ui-02,\\n      map-get($theme, 'ui-02')\\n    ) !global;\\n    $ui-03: var(\\n      --#{$custom-property-prefix}-ui-03,\\n      map-get($theme, 'ui-03')\\n    ) !global;\\n    $ui-04: var(\\n      --#{$custom-property-prefix}-ui-04,\\n      map-get($theme, 'ui-04')\\n    ) !global;\\n    $ui-05: var(\\n      --#{$custom-property-prefix}-ui-05,\\n      map-get($theme, 'ui-05')\\n    ) !global;\\n    $text-01: var(\\n      --#{$custom-property-prefix}-text-01,\\n      map-get($theme, 'text-01')\\n    ) !global;\\n    $text-02: var(\\n      --#{$custom-property-prefix}-text-02,\\n      map-get($theme, 'text-02')\\n    ) !global;\\n    $text-03: var(\\n      --#{$custom-property-prefix}-text-03,\\n      map-get($theme, 'text-03')\\n    ) !global;\\n    $text-04: var(\\n      --#{$custom-property-prefix}-text-04,\\n      map-get($theme, 'text-04')\\n    ) !global;\\n    $text-05: var(\\n      --#{$custom-property-prefix}-text-05,\\n      map-get($theme, 'text-05')\\n    ) !global;\\n    $text-error: var(\\n      --#{$custom-property-prefix}-text-error,\\n      map-get($theme, 'text-error')\\n    ) !global;\\n    $icon-01: var(\\n      --#{$custom-property-prefix}-icon-01,\\n      map-get($theme, 'icon-01')\\n    ) !global;\\n    $icon-02: var(\\n      --#{$custom-property-prefix}-icon-02,\\n      map-get($theme, 'icon-02')\\n    ) !global;\\n    $icon-03: var(\\n      --#{$custom-property-prefix}-icon-03,\\n      map-get($theme, 'icon-03')\\n    ) !global;\\n    $link-01: var(\\n      --#{$custom-property-prefix}-link-01,\\n      map-get($theme, 'link-01')\\n    ) !global;\\n    $link-02: var(\\n      --#{$custom-property-prefix}-link-02,\\n      map-get($theme, 'link-02')\\n    ) !global;\\n    $inverse-link: var(\\n      --#{$custom-property-prefix}-inverse-link,\\n      map-get($theme, 'inverse-link')\\n    ) !global;\\n    $field-01: var(\\n      --#{$custom-property-prefix}-field-01,\\n      map-get($theme, 'field-01')\\n    ) !global;\\n    $field-02: var(\\n      --#{$custom-property-prefix}-field-02,\\n      map-get($theme, 'field-02')\\n    ) !global;\\n    $inverse-01: var(\\n      --#{$custom-property-prefix}-inverse-01,\\n      map-get($theme, 'inverse-01')\\n    ) !global;\\n    $inverse-02: var(\\n      --#{$custom-property-prefix}-inverse-02,\\n      map-get($theme, 'inverse-02')\\n    ) !global;\\n    $support-01: var(\\n      --#{$custom-property-prefix}-support-01,\\n      map-get($theme, 'support-01')\\n    ) !global;\\n    $support-02: var(\\n      --#{$custom-property-prefix}-support-02,\\n      map-get($theme, 'support-02')\\n    ) !global;\\n    $support-03: var(\\n      --#{$custom-property-prefix}-support-03,\\n      map-get($theme, 'support-03')\\n    ) !global;\\n    $support-04: var(\\n      --#{$custom-property-prefix}-support-04,\\n      map-get($theme, 'support-04')\\n    ) !global;\\n    $inverse-support-01: var(\\n      --#{$custom-property-prefix}-inverse-support-01,\\n      map-get($theme, 'inverse-support-01')\\n    ) !global;\\n    $inverse-support-02: var(\\n      --#{$custom-property-prefix}-inverse-support-02,\\n      map-get($theme, 'inverse-support-02')\\n    ) !global;\\n    $inverse-support-03: var(\\n      --#{$custom-property-prefix}-inverse-support-03,\\n      map-get($theme, 'inverse-support-03')\\n    ) !global;\\n    $inverse-support-04: var(\\n      --#{$custom-property-prefix}-inverse-support-04,\\n      map-get($theme, 'inverse-support-04')\\n    ) !global;\\n    $overlay-01: var(\\n      --#{$custom-property-prefix}-overlay-01,\\n      map-get($theme, 'overlay-01')\\n    ) !global;\\n    $danger-01: var(\\n      --#{$custom-property-prefix}-danger-01,\\n      map-get($theme, 'danger-01')\\n    ) !global;\\n    $danger-02: var(\\n      --#{$custom-property-prefix}-danger-02,\\n      map-get($theme, 'danger-02')\\n    ) !global;\\n    $focus: var(\\n      --#{$custom-property-prefix}-focus,\\n      map-get($theme, 'focus')\\n    ) !global;\\n    $inverse-focus-ui: var(\\n      --#{$custom-property-prefix}-inverse-focus-ui,\\n      map-get($theme, 'inverse-focus-ui')\\n    ) !global;\\n    $hover-primary: var(\\n      --#{$custom-property-prefix}-hover-primary,\\n      map-get($theme, 'hover-primary')\\n    ) !global;\\n    $active-primary: var(\\n      --#{$custom-property-prefix}-active-primary,\\n      map-get($theme, 'active-primary')\\n    ) !global;\\n    $hover-primary-text: var(\\n      --#{$custom-property-prefix}-hover-primary-text,\\n      map-get($theme, 'hover-primary-text')\\n    ) !global;\\n    $hover-secondary: var(\\n      --#{$custom-property-prefix}-hover-secondary,\\n      map-get($theme, 'hover-secondary')\\n    ) !global;\\n    $active-secondary: var(\\n      --#{$custom-property-prefix}-active-secondary,\\n      map-get($theme, 'active-secondary')\\n    ) !global;\\n    $hover-tertiary: var(\\n      --#{$custom-property-prefix}-hover-tertiary,\\n      map-get($theme, 'hover-tertiary')\\n    ) !global;\\n    $active-tertiary: var(\\n      --#{$custom-property-prefix}-active-tertiary,\\n      map-get($theme, 'active-tertiary')\\n    ) !global;\\n    $hover-ui: var(\\n      --#{$custom-property-prefix}-hover-ui,\\n      map-get($theme, 'hover-ui')\\n    ) !global;\\n    $hover-light-ui: var(\\n      --#{$custom-property-prefix}-hover-light-ui,\\n      map-get($theme, 'hover-light-ui')\\n    ) !global;\\n    $hover-selected-ui: var(\\n      --#{$custom-property-prefix}-hover-selected-ui,\\n      map-get($theme, 'hover-selected-ui')\\n    ) !global;\\n    $active-ui: var(\\n      --#{$custom-property-prefix}-active-ui,\\n      map-get($theme, 'active-ui')\\n    ) !global;\\n    $active-light-ui: var(\\n      --#{$custom-property-prefix}-active-light-ui,\\n      map-get($theme, 'active-light-ui')\\n    ) !global;\\n    $selected-ui: var(\\n      --#{$custom-property-prefix}-selected-ui,\\n      map-get($theme, 'selected-ui')\\n    ) !global;\\n    $selected-light-ui: var(\\n      --#{$custom-property-prefix}-selected-light-ui,\\n      map-get($theme, 'selected-light-ui')\\n    ) !global;\\n    $inverse-hover-ui: var(\\n      --#{$custom-property-prefix}-inverse-hover-ui,\\n      map-get($theme, 'inverse-hover-ui')\\n    ) !global;\\n    $hover-danger: var(\\n      --#{$custom-property-prefix}-hover-danger,\\n      map-get($theme, 'hover-danger')\\n    ) !global;\\n    $active-danger: var(\\n      --#{$custom-property-prefix}-active-danger,\\n      map-get($theme, 'active-danger')\\n    ) !global;\\n    $hover-row: var(\\n      --#{$custom-property-prefix}-hover-row,\\n      map-get($theme, 'hover-row')\\n    ) !global;\\n    $visited-link: var(\\n      --#{$custom-property-prefix}-visited-link,\\n      map-get($theme, 'visited-link')\\n    ) !global;\\n    $disabled-01: var(\\n      --#{$custom-property-prefix}-disabled-01,\\n      map-get($theme, 'disabled-01')\\n    ) !global;\\n    $disabled-02: var(\\n      --#{$custom-property-prefix}-disabled-02,\\n      map-get($theme, 'disabled-02')\\n    ) !global;\\n    $disabled-03: var(\\n      --#{$custom-property-prefix}-disabled-03,\\n      map-get($theme, 'disabled-03')\\n    ) !global;\\n    $highlight: var(\\n      --#{$custom-property-prefix}-highlight,\\n      map-get($theme, 'highlight')\\n    ) !global;\\n    $decorative-01: var(\\n      --#{$custom-property-prefix}-decorative-01,\\n      map-get($theme, 'decorative-01')\\n    ) !global;\\n    $button-separator: var(\\n      --#{$custom-property-prefix}-button-separator,\\n      map-get($theme, 'button-separator')\\n    ) !global;\\n    $skeleton-01: var(\\n      --#{$custom-property-prefix}-skeleton-01,\\n      map-get($theme, 'skeleton-01')\\n    ) !global;\\n    $skeleton-02: var(\\n      --#{$custom-property-prefix}-skeleton-02,\\n      map-get($theme, 'skeleton-02')\\n    ) !global;\\n    $background: var(\\n      --#{$custom-property-prefix}-background,\\n      map-get($theme, 'background')\\n    ) !global;\\n    $layer: var(\\n      --#{$custom-property-prefix}-layer,\\n      map-get($theme, 'layer')\\n    ) !global;\\n    $layer-accent: var(\\n      --#{$custom-property-prefix}-layer-accent,\\n      map-get($theme, 'layer-accent')\\n    ) !global;\\n    $layer-accent-hover: var(\\n      --#{$custom-property-prefix}-layer-accent-hover,\\n      map-get($theme, 'layer-accent-hover')\\n    ) !global;\\n    $layer-accent-active: var(\\n      --#{$custom-property-prefix}-layer-accent-active,\\n      map-get($theme, 'layer-accent-active')\\n    ) !global;\\n    $field: var(\\n      --#{$custom-property-prefix}-field,\\n      map-get($theme, 'field')\\n    ) !global;\\n    $background-inverse: var(\\n      --#{$custom-property-prefix}-background-inverse,\\n      map-get($theme, 'background-inverse')\\n    ) !global;\\n    $background-brand: var(\\n      --#{$custom-property-prefix}-background-brand,\\n      map-get($theme, 'background-brand')\\n    ) !global;\\n    $interactive: var(\\n      --#{$custom-property-prefix}-interactive,\\n      map-get($theme, 'interactive')\\n    ) !global;\\n    $border-subtle: var(\\n      --#{$custom-property-prefix}-border-subtle,\\n      map-get($theme, 'border-subtle')\\n    ) !global;\\n    $border-strong: var(\\n      --#{$custom-property-prefix}-border-strong,\\n      map-get($theme, 'border-strong')\\n    ) !global;\\n    $border-inverse: var(\\n      --#{$custom-property-prefix}-border-inverse,\\n      map-get($theme, 'border-inverse')\\n    ) !global;\\n    $border-interactive: var(\\n      --#{$custom-property-prefix}-border-interactive,\\n      map-get($theme, 'border-interactive')\\n    ) !global;\\n    $text-primary: var(\\n      --#{$custom-property-prefix}-text-primary,\\n      map-get($theme, 'text-primary')\\n    ) !global;\\n    $text-secondary: var(\\n      --#{$custom-property-prefix}-text-secondary,\\n      map-get($theme, 'text-secondary')\\n    ) !global;\\n    $text-placeholder: var(\\n      --#{$custom-property-prefix}-text-placeholder,\\n      map-get($theme, 'text-placeholder')\\n    ) !global;\\n    $text-helper: var(\\n      --#{$custom-property-prefix}-text-helper,\\n      map-get($theme, 'text-helper')\\n    ) !global;\\n    $text-on-color: var(\\n      --#{$custom-property-prefix}-text-on-color,\\n      map-get($theme, 'text-on-color')\\n    ) !global;\\n    $text-inverse: var(\\n      --#{$custom-property-prefix}-text-inverse,\\n      map-get($theme, 'text-inverse')\\n    ) !global;\\n    $link-primary: var(\\n      --#{$custom-property-prefix}-link-primary,\\n      map-get($theme, 'link-primary')\\n    ) !global;\\n    $link-secondary: var(\\n      --#{$custom-property-prefix}-link-secondary,\\n      map-get($theme, 'link-secondary')\\n    ) !global;\\n    $link-visited: var(\\n      --#{$custom-property-prefix}-link-visited,\\n      map-get($theme, 'link-visited')\\n    ) !global;\\n    $link-inverse: var(\\n      --#{$custom-property-prefix}-link-inverse,\\n      map-get($theme, 'link-inverse')\\n    ) !global;\\n    $icon-primary: var(\\n      --#{$custom-property-prefix}-icon-primary,\\n      map-get($theme, 'icon-primary')\\n    ) !global;\\n    $icon-secondary: var(\\n      --#{$custom-property-prefix}-icon-secondary,\\n      map-get($theme, 'icon-secondary')\\n    ) !global;\\n    $icon-on-color: var(\\n      --#{$custom-property-prefix}-icon-on-color,\\n      map-get($theme, 'icon-on-color')\\n    ) !global;\\n    $icon-inverse: var(\\n      --#{$custom-property-prefix}-icon-inverse,\\n      map-get($theme, 'icon-inverse')\\n    ) !global;\\n    $support-error: var(\\n      --#{$custom-property-prefix}-support-error,\\n      map-get($theme, 'support-error')\\n    ) !global;\\n    $support-success: var(\\n      --#{$custom-property-prefix}-support-success,\\n      map-get($theme, 'support-success')\\n    ) !global;\\n    $support-warning: var(\\n      --#{$custom-property-prefix}-support-warning,\\n      map-get($theme, 'support-warning')\\n    ) !global;\\n    $support-info: var(\\n      --#{$custom-property-prefix}-support-info,\\n      map-get($theme, 'support-info')\\n    ) !global;\\n    $support-error-inverse: var(\\n      --#{$custom-property-prefix}-support-error-inverse,\\n      map-get($theme, 'support-error-inverse')\\n    ) !global;\\n    $support-success-inverse: var(\\n      --#{$custom-property-prefix}-support-success-inverse,\\n      map-get($theme, 'support-success-inverse')\\n    ) !global;\\n    $support-warning-inverse: var(\\n      --#{$custom-property-prefix}-support-warning-inverse,\\n      map-get($theme, 'support-warning-inverse')\\n    ) !global;\\n    $support-info-inverse: var(\\n      --#{$custom-property-prefix}-support-info-inverse,\\n      map-get($theme, 'support-info-inverse')\\n    ) !global;\\n    $overlay: var(\\n      --#{$custom-property-prefix}-overlay,\\n      map-get($theme, 'overlay')\\n    ) !global;\\n    $toggle-off: var(\\n      --#{$custom-property-prefix}-toggle-off,\\n      map-get($theme, 'toggle-off')\\n    ) !global;\\n    $button-primary: var(\\n      --#{$custom-property-prefix}-button-primary,\\n      map-get($theme, 'button-primary')\\n    ) !global;\\n    $button-secondary: var(\\n      --#{$custom-property-prefix}-button-secondary,\\n      map-get($theme, 'button-secondary')\\n    ) !global;\\n    $button-tertiary: var(\\n      --#{$custom-property-prefix}-button-tertiary,\\n      map-get($theme, 'button-tertiary')\\n    ) !global;\\n    $button-danger-primary: var(\\n      --#{$custom-property-prefix}-button-danger-primary,\\n      map-get($theme, 'button-danger-primary')\\n    ) !global;\\n    $button-danger-secondary: var(\\n      --#{$custom-property-prefix}-button-danger-secondary,\\n      map-get($theme, 'button-danger-secondary')\\n    ) !global;\\n    $background-active: var(\\n      --#{$custom-property-prefix}-background-active,\\n      map-get($theme, 'background-active')\\n    ) !global;\\n    $layer-active: var(\\n      --#{$custom-property-prefix}-layer-active,\\n      map-get($theme, 'layer-active')\\n    ) !global;\\n    $button-danger-active: var(\\n      --#{$custom-property-prefix}-button-danger-active,\\n      map-get($theme, 'button-danger-active')\\n    ) !global;\\n    $button-primary-active: var(\\n      --#{$custom-property-prefix}-button-primary-active,\\n      map-get($theme, 'button-primary-active')\\n    ) !global;\\n    $button-secondary-active: var(\\n      --#{$custom-property-prefix}-button-secondary-active,\\n      map-get($theme, 'button-secondary-active')\\n    ) !global;\\n    $button-tertiary-active: var(\\n      --#{$custom-property-prefix}-button-tertiary-active,\\n      map-get($theme, 'button-tertiary-active')\\n    ) !global;\\n    $focus-inset: var(\\n      --#{$custom-property-prefix}-focus-inset,\\n      map-get($theme, 'focus-inset')\\n    ) !global;\\n    $focus-inverse: var(\\n      --#{$custom-property-prefix}-focus-inverse,\\n      map-get($theme, 'focus-inverse')\\n    ) !global;\\n    $background-hover: var(\\n      --#{$custom-property-prefix}-background-hover,\\n      map-get($theme, 'background-hover')\\n    ) !global;\\n    $layer-hover: var(\\n      --#{$custom-property-prefix}-layer-hover,\\n      map-get($theme, 'layer-hover')\\n    ) !global;\\n    $field-hover: var(\\n      --#{$custom-property-prefix}-field-hover,\\n      map-get($theme, 'field-hover')\\n    ) !global;\\n    $background-inverse-hover: var(\\n      --#{$custom-property-prefix}-background-inverse-hover,\\n      map-get($theme, 'background-inverse-hover')\\n    ) !global;\\n    $link-primary-hover: var(\\n      --#{$custom-property-prefix}-link-primary-hover,\\n      map-get($theme, 'link-primary-hover')\\n    ) !global;\\n    $button-danger-hover: var(\\n      --#{$custom-property-prefix}-button-danger-hover,\\n      map-get($theme, 'button-danger-hover')\\n    ) !global;\\n    $button-primary-hover: var(\\n      --#{$custom-property-prefix}-button-primary-hover,\\n      map-get($theme, 'button-primary-hover')\\n    ) !global;\\n    $button-secondary-hover: var(\\n      --#{$custom-property-prefix}-button-secondary-hover,\\n      map-get($theme, 'button-secondary-hover')\\n    ) !global;\\n    $button-tertiary-hover: var(\\n      --#{$custom-property-prefix}-button-tertiary-hover,\\n      map-get($theme, 'button-tertiary-hover')\\n    ) !global;\\n    $background-selected: var(\\n      --#{$custom-property-prefix}-background-selected,\\n      map-get($theme, 'background-selected')\\n    ) !global;\\n    $background-selected-hover: var(\\n      --#{$custom-property-prefix}-background-selected-hover,\\n      map-get($theme, 'background-selected-hover')\\n    ) !global;\\n    $layer-selected: var(\\n      --#{$custom-property-prefix}-layer-selected,\\n      map-get($theme, 'layer-selected')\\n    ) !global;\\n    $layer-selected-hover: var(\\n      --#{$custom-property-prefix}-layer-selected-hover,\\n      map-get($theme, 'layer-selected-hover')\\n    ) !global;\\n    $layer-selected-inverse: var(\\n      --#{$custom-property-prefix}-layer-selected-inverse,\\n      map-get($theme, 'layer-selected-inverse')\\n    ) !global;\\n    $border-subtle-selected: var(\\n      --#{$custom-property-prefix}-border-subtle-selected,\\n      map-get($theme, 'border-subtle-selected')\\n    ) !global;\\n    $layer-disabled: var(\\n      --#{$custom-property-prefix}-layer-disabled,\\n      map-get($theme, 'layer-disabled')\\n    ) !global;\\n    $field-disabled: var(\\n      --#{$custom-property-prefix}-field-disabled,\\n      map-get($theme, 'field-disabled')\\n    ) !global;\\n    $border-disabled: var(\\n      --#{$custom-property-prefix}-border-disabled,\\n      map-get($theme, 'border-disabled')\\n    ) !global;\\n    $text-disabled: var(\\n      --#{$custom-property-prefix}-text-disabled,\\n      map-get($theme, 'text-disabled')\\n    ) !global;\\n    $button-disabled: var(\\n      --#{$custom-property-prefix}-button-disabled,\\n      map-get($theme, 'button-disabled')\\n    ) !global;\\n    $icon-disabled: var(\\n      --#{$custom-property-prefix}-icon-disabled,\\n      map-get($theme, 'icon-disabled')\\n    ) !global;\\n    $text-on-color-disabled: var(\\n      --#{$custom-property-prefix}-text-on-color-disabled,\\n      map-get($theme, 'text-on-color-disabled')\\n    ) !global;\\n    $icon-on-color-disabled: var(\\n      --#{$custom-property-prefix}-icon-on-color-disabled,\\n      map-get($theme, 'icon-on-color-disabled')\\n    ) !global;\\n    $layer-selected-disabled: var(\\n      --#{$custom-property-prefix}-layer-selected-disabled,\\n      map-get($theme, 'layer-selected-disabled')\\n    ) !global;\\n    $skeleton-background: var(\\n      --#{$custom-property-prefix}-skeleton-background,\\n      map-get($theme, 'skeleton-background')\\n    ) !global;\\n    $skeleton-element: var(\\n      --#{$custom-property-prefix}-skeleton-element,\\n      map-get($theme, 'skeleton-element')\\n    ) !global;\\n    $brand-01: var(\\n      --#{$custom-property-prefix}-brand-01,\\n      map-get($theme, 'brand-01')\\n    ) !global;\\n    $brand-02: var(\\n      --#{$custom-property-prefix}-brand-02,\\n      map-get($theme, 'brand-02')\\n    ) !global;\\n    $brand-03: var(\\n      --#{$custom-property-prefix}-brand-03,\\n      map-get($theme, 'brand-03')\\n    ) !global;\\n    $active-01: var(\\n      --#{$custom-property-prefix}-active-01,\\n      map-get($theme, 'active-01')\\n    ) !global;\\n    $hover-field: var(\\n      --#{$custom-property-prefix}-hover-field,\\n      map-get($theme, 'hover-field')\\n    ) !global;\\n    $danger: var(\\n      --#{$custom-property-prefix}-danger,\\n      map-get($theme, 'danger')\\n    ) !global;\\n    $spacing-01: var(\\n      --#{$custom-property-prefix}-spacing-01,\\n      map-get($theme, 'spacing-01')\\n    ) !global;\\n    $spacing-02: var(\\n      --#{$custom-property-prefix}-spacing-02,\\n      map-get($theme, 'spacing-02')\\n    ) !global;\\n    $spacing-03: var(\\n      --#{$custom-property-prefix}-spacing-03,\\n      map-get($theme, 'spacing-03')\\n    ) !global;\\n    $spacing-04: var(\\n      --#{$custom-property-prefix}-spacing-04,\\n      map-get($theme, 'spacing-04')\\n    ) !global;\\n    $spacing-05: var(\\n      --#{$custom-property-prefix}-spacing-05,\\n      map-get($theme, 'spacing-05')\\n    ) !global;\\n    $spacing-06: var(\\n      --#{$custom-property-prefix}-spacing-06,\\n      map-get($theme, 'spacing-06')\\n    ) !global;\\n    $spacing-07: var(\\n      --#{$custom-property-prefix}-spacing-07,\\n      map-get($theme, 'spacing-07')\\n    ) !global;\\n    $spacing-08: var(\\n      --#{$custom-property-prefix}-spacing-08,\\n      map-get($theme, 'spacing-08')\\n    ) !global;\\n    $spacing-09: var(\\n      --#{$custom-property-prefix}-spacing-09,\\n      map-get($theme, 'spacing-09')\\n    ) !global;\\n    $spacing-10: var(\\n      --#{$custom-property-prefix}-spacing-10,\\n      map-get($theme, 'spacing-10')\\n    ) !global;\\n    $spacing-11: var(\\n      --#{$custom-property-prefix}-spacing-11,\\n      map-get($theme, 'spacing-11')\\n    ) !global;\\n    $spacing-12: var(\\n      --#{$custom-property-prefix}-spacing-12,\\n      map-get($theme, 'spacing-12')\\n    ) !global;\\n    $spacing-13: var(\\n      --#{$custom-property-prefix}-spacing-13,\\n      map-get($theme, 'spacing-13')\\n    ) !global;\\n    $fluid-spacing-01: var(\\n      --#{$custom-property-prefix}-fluid-spacing-01,\\n      map-get($theme, 'fluid-spacing-01')\\n    ) !global;\\n    $fluid-spacing-02: var(\\n      --#{$custom-property-prefix}-fluid-spacing-02,\\n      map-get($theme, 'fluid-spacing-02')\\n    ) !global;\\n    $fluid-spacing-03: var(\\n      --#{$custom-property-prefix}-fluid-spacing-03,\\n      map-get($theme, 'fluid-spacing-03')\\n    ) !global;\\n    $fluid-spacing-04: var(\\n      --#{$custom-property-prefix}-fluid-spacing-04,\\n      map-get($theme, 'fluid-spacing-04')\\n    ) !global;\\n    $layout-01: var(\\n      --#{$custom-property-prefix}-layout-01,\\n      map-get($theme, 'layout-01')\\n    ) !global;\\n    $layout-02: var(\\n      --#{$custom-property-prefix}-layout-02,\\n      map-get($theme, 'layout-02')\\n    ) !global;\\n    $layout-03: var(\\n      --#{$custom-property-prefix}-layout-03,\\n      map-get($theme, 'layout-03')\\n    ) !global;\\n    $layout-04: var(\\n      --#{$custom-property-prefix}-layout-04,\\n      map-get($theme, 'layout-04')\\n    ) !global;\\n    $layout-05: var(\\n      --#{$custom-property-prefix}-layout-05,\\n      map-get($theme, 'layout-05')\\n    ) !global;\\n    $layout-06: var(\\n      --#{$custom-property-prefix}-layout-06,\\n      map-get($theme, 'layout-06')\\n    ) !global;\\n    $layout-07: var(\\n      --#{$custom-property-prefix}-layout-07,\\n      map-get($theme, 'layout-07')\\n    ) !global;\\n    $container-01: var(\\n      --#{$custom-property-prefix}-container-01,\\n      map-get($theme, 'container-01')\\n    ) !global;\\n    $container-02: var(\\n      --#{$custom-property-prefix}-container-02,\\n      map-get($theme, 'container-02')\\n    ) !global;\\n    $container-03: var(\\n      --#{$custom-property-prefix}-container-03,\\n      map-get($theme, 'container-03')\\n    ) !global;\\n    $container-04: var(\\n      --#{$custom-property-prefix}-container-04,\\n      map-get($theme, 'container-04')\\n    ) !global;\\n    $container-05: var(\\n      --#{$custom-property-prefix}-container-05,\\n      map-get($theme, 'container-05')\\n    ) !global;\\n    $size-xsmall: var(\\n      --#{$custom-property-prefix}-size-xsmall,\\n      map-get($theme, 'size-xsmall')\\n    ) !global;\\n    $size-small: var(\\n      --#{$custom-property-prefix}-size-small,\\n      map-get($theme, 'size-small')\\n    ) !global;\\n    $size-medium: var(\\n      --#{$custom-property-prefix}-size-medium,\\n      map-get($theme, 'size-medium')\\n    ) !global;\\n    $size-large: var(\\n      --#{$custom-property-prefix}-size-large,\\n      map-get($theme, 'size-large')\\n    ) !global;\\n    $size-xlarge: var(\\n      --#{$custom-property-prefix}-size-xlarge,\\n      map-get($theme, 'size-xlarge')\\n    ) !global;\\n    $size-2XLarge: var(\\n      --#{$custom-property-prefix}-size-2XLarge,\\n      map-get($theme, 'size-2XLarge')\\n    ) !global;\\n    $icon-size-01: var(\\n      --#{$custom-property-prefix}-icon-size-01,\\n      map-get($theme, 'icon-size-01')\\n    ) !global;\\n    $icon-size-02: var(\\n      --#{$custom-property-prefix}-icon-size-02,\\n      map-get($theme, 'icon-size-02')\\n    ) !global;\\n  }\\n  @if $emit-custom-properties == true {\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-01',\\n        map-get($theme, 'interactive-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-02',\\n        map-get($theme, 'interactive-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-03',\\n        map-get($theme, 'interactive-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-04',\\n        map-get($theme, 'interactive-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'ui-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'ui-background',\\n        map-get($theme, 'ui-background')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-01', $emit-difference) {\\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-02', $emit-difference) {\\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-03', $emit-difference) {\\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-04', $emit-difference) {\\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-05', $emit-difference) {\\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-01', $emit-difference) {\\n      @include custom-property('text-01', map-get($theme, 'text-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-02', $emit-difference) {\\n      @include custom-property('text-02', map-get($theme, 'text-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-03', $emit-difference) {\\n      @include custom-property('text-03', map-get($theme, 'text-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-04', $emit-difference) {\\n      @include custom-property('text-04', map-get($theme, 'text-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-05', $emit-difference) {\\n      @include custom-property('text-05', map-get($theme, 'text-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-error', map-get($theme, 'text-error'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-01', $emit-difference) {\\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-02', $emit-difference) {\\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-03', $emit-difference) {\\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-01', $emit-difference) {\\n      @include custom-property('link-01', map-get($theme, 'link-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-02', $emit-difference) {\\n      @include custom-property('link-02', map-get($theme, 'link-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-01', $emit-difference)\\n    {\\n      @include custom-property('field-01', map-get($theme, 'field-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-02', $emit-difference)\\n    {\\n      @include custom-property('field-02', map-get($theme, 'field-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-01', map-get($theme, 'support-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-02', map-get($theme, 'support-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-03', map-get($theme, 'support-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-04', map-get($theme, 'support-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-01',\\n        map-get($theme, 'inverse-support-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-02',\\n        map-get($theme, 'inverse-support-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-03',\\n        map-get($theme, 'inverse-support-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-04',\\n        map-get($theme, 'inverse-support-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'overlay-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-01', $emit-difference)\\n    {\\n      @include custom-property('danger-01', map-get($theme, 'danger-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-02', $emit-difference)\\n    {\\n      @include custom-property('danger-02', map-get($theme, 'danger-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'focus', $emit-difference) {\\n      @include custom-property('focus', map-get($theme, 'focus'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-focus-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-focus-ui',\\n        map-get($theme, 'inverse-focus-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary',\\n        map-get($theme, 'hover-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-primary',\\n        map-get($theme, 'active-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary-text',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary-text',\\n        map-get($theme, 'hover-primary-text')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-secondary',\\n        map-get($theme, 'hover-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-secondary',\\n        map-get($theme, 'active-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-tertiary',\\n        map-get($theme, 'hover-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-tertiary',\\n        map-get($theme, 'active-tertiary')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-ui', $emit-difference)\\n    {\\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-light-ui',\\n        map-get($theme, 'hover-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-selected-ui',\\n        map-get($theme, 'hover-selected-ui')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-ui', $emit-difference)\\n    {\\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-light-ui',\\n        map-get($theme, 'active-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'selected-light-ui',\\n        map-get($theme, 'selected-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-hover-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-hover-ui',\\n        map-get($theme, 'inverse-hover-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-danger',\\n        map-get($theme, 'active-danger')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-row', $emit-difference)\\n    {\\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'visited-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'highlight', $emit-difference)\\n    {\\n      @include custom-property('highlight', map-get($theme, 'highlight'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'decorative-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'decorative-01',\\n        map-get($theme, 'decorative-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-separator',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-separator',\\n        map-get($theme, 'button-separator')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('background', map-get($theme, 'background'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layer', $emit-difference) {\\n      @include custom-property('layer', map-get($theme, 'layer'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-accent', map-get($theme, 'layer-accent'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-hover',\\n        map-get($theme, 'layer-accent-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-active',\\n        map-get($theme, 'layer-accent-active')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field', $emit-difference) {\\n      @include custom-property('field', map-get($theme, 'field'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse',\\n        map-get($theme, 'background-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-brand',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-brand',\\n        map-get($theme, 'background-brand')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('interactive', map-get($theme, 'interactive'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle',\\n        map-get($theme, 'border-subtle')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-strong',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-strong',\\n        map-get($theme, 'border-strong')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-inverse',\\n        map-get($theme, 'border-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-interactive',\\n        map-get($theme, 'border-interactive')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-primary', map-get($theme, 'text-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-secondary',\\n        map-get($theme, 'text-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-placeholder',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-placeholder',\\n        map-get($theme, 'text-placeholder')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-helper',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-helper', map-get($theme, 'text-helper'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color',\\n        map-get($theme, 'text-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-inverse', map-get($theme, 'text-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-primary', map-get($theme, 'link-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-secondary',\\n        map-get($theme, 'link-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-visited',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-visited', map-get($theme, 'link-visited'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-inverse', map-get($theme, 'link-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-primary', map-get($theme, 'icon-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-secondary',\\n        map-get($theme, 'icon-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color',\\n        map-get($theme, 'icon-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-inverse', map-get($theme, 'icon-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error',\\n        map-get($theme, 'support-error')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success',\\n        map-get($theme, 'support-success')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning',\\n        map-get($theme, 'support-warning')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-info', map-get($theme, 'support-info'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error-inverse',\\n        map-get($theme, 'support-error-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success-inverse',\\n        map-get($theme, 'support-success-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning-inverse',\\n        map-get($theme, 'support-warning-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-info-inverse',\\n        map-get($theme, 'support-info-inverse')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'overlay', $emit-difference) {\\n      @include custom-property('overlay', map-get($theme, 'overlay'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'toggle-off',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('toggle-off', map-get($theme, 'toggle-off'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary',\\n        map-get($theme, 'button-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary',\\n        map-get($theme, 'button-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary',\\n        map-get($theme, 'button-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-primary',\\n        map-get($theme, 'button-danger-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-secondary',\\n        map-get($theme, 'button-danger-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-active',\\n        map-get($theme, 'background-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-active', map-get($theme, 'layer-active'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-active',\\n        map-get($theme, 'button-danger-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-active',\\n        map-get($theme, 'button-primary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-active',\\n        map-get($theme, 'button-secondary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-active',\\n        map-get($theme, 'button-tertiary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inset',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('focus-inset', map-get($theme, 'focus-inset'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'focus-inverse',\\n        map-get($theme, 'focus-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-hover',\\n        map-get($theme, 'background-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-hover', map-get($theme, 'layer-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('field-hover', map-get($theme, 'field-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse-hover',\\n        map-get($theme, 'background-inverse-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-primary-hover',\\n        map-get($theme, 'link-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-hover',\\n        map-get($theme, 'button-danger-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-hover',\\n        map-get($theme, 'button-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-hover',\\n        map-get($theme, 'button-secondary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-hover',\\n        map-get($theme, 'button-tertiary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected',\\n        map-get($theme, 'background-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected-hover',\\n        map-get($theme, 'background-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected',\\n        map-get($theme, 'layer-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-hover',\\n        map-get($theme, 'layer-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-inverse',\\n        map-get($theme, 'layer-selected-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle-selected',\\n        map-get($theme, 'border-subtle-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-disabled',\\n        map-get($theme, 'layer-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'field-disabled',\\n        map-get($theme, 'field-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-disabled',\\n        map-get($theme, 'border-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-disabled',\\n        map-get($theme, 'text-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-disabled',\\n        map-get($theme, 'button-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-disabled',\\n        map-get($theme, 'icon-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color-disabled',\\n        map-get($theme, 'text-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color-disabled',\\n        map-get($theme, 'icon-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-disabled',\\n        map-get($theme, 'layer-selected-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-background',\\n        map-get($theme, 'skeleton-background')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-element',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-element',\\n        map-get($theme, 'skeleton-element')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-01', $emit-difference)\\n    {\\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-02', $emit-difference)\\n    {\\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-03', $emit-difference)\\n    {\\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-01', $emit-difference)\\n    {\\n      @include custom-property('active-01', map-get($theme, 'active-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-field',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger', $emit-difference) {\\n      @include custom-property('danger', map-get($theme, 'danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-02', map-get($theme, 'caption-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-01', $emit-difference)\\n    {\\n      @include custom-property('label-01', map-get($theme, 'label-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-02', $emit-difference)\\n    {\\n      @include custom-property('label-02', map-get($theme, 'label-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-01',\\n        map-get($theme, 'helper-text-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-02',\\n        map-get($theme, 'helper-text-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-01',\\n        map-get($theme, 'body-short-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-02',\\n        map-get($theme, 'body-short-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-01', $emit-difference) {\\n      @include custom-property('code-01', map-get($theme, 'code-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-02', $emit-difference) {\\n      @include custom-property('code-02', map-get($theme, 'code-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-01',\\n        map-get($theme, 'productive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-02',\\n        map-get($theme, 'productive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-03',\\n        map-get($theme, 'productive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-04',\\n        map-get($theme, 'productive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-05',\\n        map-get($theme, 'productive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-06',\\n        map-get($theme, 'productive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-07',\\n        map-get($theme, 'productive-heading-07')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-01',\\n        map-get($theme, 'expressive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-02',\\n        map-get($theme, 'expressive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-03',\\n        map-get($theme, 'expressive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-04',\\n        map-get($theme, 'expressive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-05',\\n        map-get($theme, 'expressive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-06',\\n        map-get($theme, 'expressive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-paragraph-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-paragraph-01',\\n        map-get($theme, 'expressive-paragraph-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-01', map-get($theme, 'display-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-02', map-get($theme, 'display-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-03', map-get($theme, 'display-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-04', map-get($theme, 'display-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-08',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-09',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-10',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-11',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-12',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-13',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-13', map-get($theme, 'spacing-13'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-01',\\n        map-get($theme, 'fluid-spacing-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-02',\\n        map-get($theme, 'fluid-spacing-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-03',\\n        map-get($theme, 'fluid-spacing-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-04',\\n        map-get($theme, 'fluid-spacing-04')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-01', $emit-difference)\\n    {\\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-02', $emit-difference)\\n    {\\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-03', $emit-difference)\\n    {\\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-04', $emit-difference)\\n    {\\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-05', $emit-difference)\\n    {\\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-06', $emit-difference)\\n    {\\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-07', $emit-difference)\\n    {\\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-01', map-get($theme, 'container-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-02', map-get($theme, 'container-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-03', map-get($theme, 'container-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-04', map-get($theme, 'container-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-05', map-get($theme, 'container-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xsmall',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xsmall', map-get($theme, 'size-xsmall'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-small',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-small', map-get($theme, 'size-small'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-medium',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-medium', map-get($theme, 'size-medium'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-large',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-large', map-get($theme, 'size-large'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xlarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xlarge', map-get($theme, 'size-xlarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-2XLarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-2XLarge', map-get($theme, 'size-2XLarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\\n    }\\n  }\\n\\n  @content;\\n\\n  // Reset to default theme after apply in content\\n  @if $carbon--theme != $parent-carbon-theme {\\n    $carbon--theme: $parent-carbon-theme !global;\\n\\n    @include carbon--theme();\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"header\": \"-esm-patient-chart__end-visit-component__header___6Zyh2\",\n\t\"body\": \"-esm-patient-chart__end-visit-component__body___CQfKx\",\n\t\"customLabel\": \"-esm-patient-chart__end-visit-component__customLabel___74aqe\",\n\t\"bodyShort01\": \"-esm-patient-chart__end-visit-component__bodyShort01___0hcaD\",\n\t\"bodyShort02\": \"-esm-patient-chart__end-visit-component__bodyShort02___CUowS\",\n\t\"bodyLong01\": \"-esm-patient-chart__end-visit-component__bodyLong01___EJDTl\",\n\t\"bodyLong02\": \"-esm-patient-chart__end-visit-component__bodyLong02___qr32L\",\n\t\"skeleton\": \"-esm-patient-chart__end-visit-component__skeleton___u2dZ9\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{padding:0;border:0;margin:0;font:inherit;font-size:100%;vertical-align:baseline}button,select,input,textarea{border-radius:0;font-family:inherit}input[type=text]::-ms-clear{display:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}body{line-height:1}sup{vertical-align:super}sub{vertical-align:sub}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:\\\"\\\"}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}button{margin:0}html{font-size:100%}body{font-weight:400;font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility}code{font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace}strong{font-weight:600}@media screen and (-ms-high-contrast: active){svg{fill:ButtonText}}h1{font-size:2.625rem;font-weight:300;line-height:1.199;letter-spacing:0}h2{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}h3{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}h4{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}h5{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}h6{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}p{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}a{color:#0f62fe}em{font-style:italic}@keyframes -esm-patient-chart__start-visit-component__skeleton___2Zfjn{0%{opacity:.3;transform:scaleX(0);transform-origin:left}20%{opacity:1;transform:scaleX(1);transform-origin:left}28%{transform:scaleX(1);transform-origin:right}51%{transform:scaleX(0);transform-origin:right}58%{transform:scaleX(0);transform-origin:right}82%{transform:scaleX(1);transform-origin:right}83%{transform:scaleX(1);transform-origin:left}96%{transform:scaleX(0);transform-origin:left}100%{opacity:.3;transform:scaleX(0);transform-origin:left}}.-esm-patient-chart__start-visit-component__header___BaG7P{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0;color:#161616}.-esm-patient-chart__start-visit-component__body___I8eqv{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px;color:#161616}.-esm-patient-chart__start-visit-component__footer___HutaB{width:75%;justify-self:flex-end}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_css--reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_font-family.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/icons/mixins.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_helper-mixins.scss\",\"webpack://./src/visit/visit-prompt/start-visit.component.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCTE,2ZAiFE,SAAA,CACA,QAAA,CACA,QAAA,CACA,YAAA,CACA,cAAA,CACA,uBAAA,CAIF,6BAIE,eAAA,CACA,mBAAA,CAGF,4BACE,YAAA,CAIF,mFAYE,aAAA,CAGF,KACE,aAAA,CAGF,IACE,oBAAA,CAGF,IACE,kBAAA,CAGF,MAEE,eAAA,CAGF,aAEE,WAAA,CAGF,wDAIE,UAAA,CAGF,MACE,wBAAA,CACA,gBAAA,CAGF,EACE,qBAAA,CAIF,OACE,QAAA,CC3KJ,KACE,cAAA,CAGF,KC0CA,eAAA,CDvCE,gEAViB,CAWjB,iCAAA,CACA,kCAAA,CACA,iCAAA,CAGF,KACE,wGAhBiB,CAmBnB,OC6BA,eAAA,CCxDA,8CACE,IACE,eAAA,CAAA,CFkCJ,GGggBE,kBAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlrBxB,GG4fE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH9qBxB,GGwfE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH1qBxB,GGofE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CHtqBxB,GGgfE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlqBxB,GG4eE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CH9pBxB,EGweE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CH1pBxB,EAII,aAAA,CAMJ,GACE,iBAAA,CIkHF,uEACE,GACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,SAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,KACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAAA,CC3ON,2DF4iBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CEhuBxB,aC4CU,CDzCZ,yDFuiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CE3tBxB,aCuCU,CDpCZ,2DACE,SAAA,CACA,qBAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n@import './vendor/@carbon/elements/scss/type/reset';\\n@import './vendor/@carbon/elements/scss/icons/mixins';\\n\\n/// Resets default browser styling\\n/// @access public\\n/// @group global-reset\\n@mixin reset {\\n  @if variable-exists(css--reset) == false or $css--reset == false {\\n    box-sizing: border-box;\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    font-family: inherit;\\n    font-size: 100%;\\n    vertical-align: baseline;\\n\\n    *,\\n    *::before,\\n    *::after {\\n      box-sizing: inherit;\\n    }\\n  }\\n}\\n\\n@include exports('css--reset') {\\n  @if variable-exists(css--reset) == false or $css--reset == true {\\n    // http://cssreset.com/scripts/eric-meyer-reset-css/\\n    html,\\n    body,\\n    div,\\n    span,\\n    applet,\\n    object,\\n    iframe,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p,\\n    blockquote,\\n    pre,\\n    a,\\n    abbr,\\n    acronym,\\n    address,\\n    big,\\n    cite,\\n    code,\\n    del,\\n    dfn,\\n    em,\\n    img,\\n    ins,\\n    kbd,\\n    q,\\n    s,\\n    samp,\\n    small,\\n    strike,\\n    strong,\\n    sub,\\n    sup,\\n    tt,\\n    var,\\n    b,\\n    u,\\n    i,\\n    center,\\n    dl,\\n    dt,\\n    dd,\\n    ol,\\n    ul,\\n    li,\\n    fieldset,\\n    form,\\n    label,\\n    legend,\\n    table,\\n    caption,\\n    tbody,\\n    tfoot,\\n    thead,\\n    tr,\\n    th,\\n    td,\\n    article,\\n    aside,\\n    canvas,\\n    details,\\n    embed,\\n    figure,\\n    figcaption,\\n    footer,\\n    header,\\n    hgroup,\\n    menu,\\n    nav,\\n    output,\\n    ruby,\\n    section,\\n    summary,\\n    time,\\n    mark,\\n    audio,\\n    video {\\n      padding: 0;\\n      border: 0;\\n      margin: 0;\\n      font: inherit;\\n      font-size: 100%;\\n      vertical-align: baseline;\\n    }\\n\\n    // Chrome 62 fix\\n    button,\\n    select,\\n    input,\\n    textarea {\\n      border-radius: 0;\\n      font-family: inherit;\\n    }\\n\\n    input[type='text']::-ms-clear {\\n      display: none;\\n    }\\n\\n    /* HTML5 display-role reset for older browsers */\\n    article,\\n    aside,\\n    details,\\n    figcaption,\\n    figure,\\n    footer,\\n    header,\\n    hgroup,\\n    main,\\n    menu,\\n    nav,\\n    section {\\n      display: block;\\n    }\\n\\n    body {\\n      line-height: 1;\\n    }\\n\\n    sup {\\n      vertical-align: super;\\n    }\\n\\n    sub {\\n      vertical-align: sub;\\n    }\\n\\n    ol,\\n    ul {\\n      list-style: none;\\n    }\\n\\n    blockquote,\\n    q {\\n      quotes: none;\\n    }\\n\\n    blockquote::before,\\n    blockquote::after,\\n    q::before,\\n    q::after {\\n      content: '';\\n    }\\n\\n    table {\\n      border-collapse: collapse;\\n      border-spacing: 0;\\n    }\\n\\n    * {\\n      box-sizing: border-box;\\n    }\\n\\n    // Fix to remove added margins on buttons in safari (see #5155)\\n    button {\\n      margin: 0;\\n    }\\n\\n    @include carbon--type-reset;\\n    @include carbon--icons;\\n  }\\n}\\n\\n@include exports('css--default-type') {\\n  @if variable-exists(css--default-type) == false or $css--default-type == true\\n  {\\n    @include carbon--default-type;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/convert';\\n@import 'font-family';\\n@import 'styles';\\n\\n/// Include a type reset for a given body and mono font family\\n/// @param {String} $body-font-family [carbon--font-family('sans')] - The font family used on the `<body>` element\\n/// @param {String} $mono-font-family [carbon--font-family('mono')] - The font family used on elements that require mono fonts, like the `<code>` element\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-reset(\\n  // TODO: remove in next major release. This has been replaced with 100%\\n  $base-font-size: $carbon--base-font-size,\\n  $body-font-family: carbon--font-family('sans'),\\n  $mono-font-family: carbon--font-family('mono')\\n) {\\n  html {\\n    font-size: 100%;\\n  }\\n\\n  body {\\n    @include carbon--font-weight('regular');\\n\\n    font-family: $body-font-family;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-font-smoothing: antialiased;\\n    text-rendering: optimizeLegibility;\\n  }\\n\\n  code {\\n    font-family: $mono-font-family;\\n  }\\n\\n  strong {\\n    @include carbon--font-weight('semibold');\\n  }\\n}\\n\\n/// Include default type styles\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--default-type {\\n  h1 {\\n    @include carbon--type-style('productive-heading-06');\\n  }\\n\\n  h2 {\\n    @include carbon--type-style('productive-heading-05');\\n  }\\n\\n  h3 {\\n    @include carbon--type-style('productive-heading-04');\\n  }\\n\\n  h4 {\\n    @include carbon--type-style('productive-heading-03');\\n  }\\n\\n  h5 {\\n    @include carbon--type-style('productive-heading-02');\\n  }\\n\\n  h6 {\\n    @include carbon--type-style('productive-heading-01');\\n  }\\n\\n  p {\\n    @include carbon--type-style('body-long-02');\\n  }\\n\\n  a {\\n    @if global-variable-exists('carbon--theme') and\\n      map-has-key($carbon--theme, 'link-01')\\n    {\\n      color: map-get($carbon--theme, 'link-01');\\n    } @else {\\n      color: #0062fe;\\n    }\\n  }\\n\\n  em {\\n    font-style: italic;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\\n/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-families: (\\n  'mono':\\n    unquote(\\n      \\\"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\\\"\\n    ),\\n  'sans': unquote(\\\"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-condensed':\\n    unquote(\\\"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-hebrew':\\n    unquote(\\n      \\\"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\\\"\\n    ),\\n  'serif': unquote(\\\"'IBM Plex Serif', 'Georgia', Times, serif\\\"),\\n) !default;\\n\\n/// Get the font-family for an IBM Plex font\\n/// @param {String} $name\\n/// @return {String}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-family($name) {\\n  @return map-get($carbon--font-families, $name);\\n}\\n\\n/// Include the `font-family` definition for the given name in your selector\\n/// @param {String} $name\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-family($name) {\\n  font-family: carbon--font-family($name);\\n}\\n\\n/// Suggested font weights to be used in product\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-weights: (\\n  'light': 300,\\n  'regular': 400,\\n  'semibold': 600,\\n) !default;\\n\\n/// Retrieve the font-weight value for a given name\\n/// @param {String} $weight\\n/// @return {Number}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-weight($weight) {\\n  @return map-get($carbon--font-weights, $weight);\\n}\\n\\n/// Set the `font-weight` property with the value for a given name\\n/// @param {String} $weight\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-weight($weight) {\\n  font-weight: carbon--font-weight($weight);\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Makes SVGs accessible in high contrast mode\\n/// @link https://github.com/IBM/carbon-elements/issues/345#issuecomment-466577293 Carbon-elements #345\\n/// @access public\\n/// @group @carbon/icons\\n@mixin carbon--icons {\\n  @media screen and (-ms-high-contrast: active) {\\n    svg {\\n      fill: ButtonText;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n//----------------------------------------------\\n// Mixins\\n// ---------------------------------------------\\n//\\n//   Category             ||  Description\\n//   ===========================================\\n//   Misc                 ||  General helper @mixins\\n//   Deprecated           ||  Not used anymore\\n//   ===========================================\\n\\n//----------------------------------------------\\n// Misc\\n// ---------------------------------------------\\n\\n@import 'vars';\\n@import 'css--reset';\\n@import 'typography';\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n\\n/// Adds text overflow styling\\n/// @access public\\n/// @param {Number} $width [false] - Value of width if you want to set width, else nothing\\n/// @example @include text-overflow(300px);\\n/// @group global-helpers\\n@mixin text-overflow($width: false) {\\n  display: block;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n\\n  // apply a width if width parameter exists\\n  @if ($width) {\\n    width: $width;\\n  }\\n}\\n\\n/// Adds placeholder text color\\n/// @access public\\n/// @example @include placeholder-colors;\\n/// @group global-helpers\\n@mixin placeholder-colors {\\n  color: $text-05;\\n  opacity: 1;\\n}\\n\\n/// Adds box shadow\\n/// @access public\\n/// @example @include box-shadow;\\n/// @group global-helpers\\n@mixin box-shadow {\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\\n}\\n\\n/// Adds outline styles depending on specific type\\n/// @access public\\n/// @param {String} $type ['border'] - Type of outline from: `border`, `blurred`, `outline`, `invalid`, `reset`\\n/// @example @include focus-outline('outline');\\n/// @group global-helpers\\n@mixin focus-outline($type: 'border') {\\n  @if ($type == 'border') {\\n    outline: 1px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'blurred') {\\n    box-shadow: 0 0 0 3px $focus;\\n    outline: 1px solid transparent;\\n  }\\n\\n  @if ($type == 'outline') {\\n    outline: 2px solid $focus;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'outline-compat') {\\n    box-sizing: border-box;\\n    border: 2px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      border-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'invalid') {\\n    outline: 2px solid $support-01;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'reset') {\\n    outline: 2px solid transparent;\\n    outline-offset: -2px;\\n  }\\n}\\n\\n/// Adds rotational transformation\\n/// @access public\\n/// @param {Number} $deg - How many degrees to rotate\\n/// @param {Number} $speed - Speed of rotation\\n/// @param {Value} $origin [center] - `transform-origin`\\n/// @example @include rotate(90deg, 300ms);\\n/// @group global-helpers\\n@mixin rotate($deg, $speed, $origin: center) {\\n  transform: rotate($deg);\\n  transform-origin: $origin;\\n  transition: transform $speed;\\n}\\n\\n/// Adds styles to hide content\\n/// @access public\\n/// @group global-helpers\\n@mixin hidden {\\n  position: absolute;\\n  overflow: hidden;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  border: 0;\\n  margin: -1px;\\n  clip: rect(0, 0, 0, 0);\\n  visibility: inherit;\\n  white-space: nowrap;\\n}\\n\\n/// Resets button styles\\n/// @access public\\n/// @param {Bool} $width [true] - Sets width to 100% if true\\n/// @example @include button-reset($width: false);\\n/// @group global-helpers\\n@mixin button-reset($width: true) {\\n  @include reset;\\n\\n  display: inline-block;\\n  padding: 0;\\n  border: 0;\\n  appearance: none;\\n  background: none;\\n  cursor: pointer;\\n\\n  @if ($width == true) {\\n    width: 100%;\\n  }\\n\\n  &::-moz-focus-inner {\\n    border: 0;\\n  }\\n}\\n\\n/// Skeleton loading animation\\n/// @access public\\n/// @example @include skeleton;\\n/// @group global-helpers\\n@mixin skeleton {\\n  position: relative;\\n  padding: 0;\\n  border: none;\\n  background: $skeleton-01;\\n  box-shadow: none;\\n  pointer-events: none;\\n\\n  &:hover,\\n  &:focus,\\n  &:active {\\n    border: none;\\n    cursor: default;\\n    outline: none;\\n  }\\n\\n  &::before {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    animation: 3000ms ease-in-out skeleton infinite;\\n    background: $skeleton-02;\\n    content: '';\\n    will-change: transform-origin, transform, opacity;\\n\\n    @media (prefers-reduced-motion: reduce) {\\n      animation: none;\\n    }\\n  }\\n}\\n\\n@include exports('skeleton') {\\n  @keyframes skeleton {\\n    0% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    20% {\\n      opacity: 1;\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    28% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    51% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    58% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    82% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    83% {\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    96% {\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    100% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n  }\\n}\\n\\n/// Windows HCM Mixin\\n/// @access public\\n/// @example @include high-contrast-mode;\\n/// @group global-helpers\\n/// We should set HCM styles at the end of each file to ensure they are not overridden\\n@mixin high-contrast-mode($type: '') {\\n  @media screen and (-ms-high-contrast: active),\\n    (forced-colors: active),\\n    (prefers-contrast) {\\n    @if ($type == 'icon-fill') {\\n      fill: ButtonText;\\n    }\\n\\n    @if ($type == 'focus') {\\n      color: Highlight;\\n      outline: 1px solid Highlight;\\n    }\\n\\n    @if ($type == 'outline') {\\n      outline: 1px solid transparent;\\n    }\\n\\n    @if ($type == 'disabled') {\\n      color: GrayText;\\n      fill: GrayText;\\n    }\\n\\n    @content;\\n  }\\n}\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/mixins\\\";\\n\\n.header {\\n  @include carbon--type-style('productive-heading-03');\\n  color: $text-01;\\n}\\n\\n.body {\\n  @include carbon--type-style('body-long-01');\\n  color: $text-01;\\n}\\n\\n.footer {\\n  width: 75%;\\n  justify-self: flex-end;\\n}\",\"// Code generated by @carbon/themes. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './themes';\\n\\n/// Define theme variables from a map of tokens\\n/// @access public\\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\\n///\\n/// @example scss\\n///   // Default usage\\n///   @include carbon--theme();\\n///\\n///   // Alternate styling (not white theme)\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     // declarations...\\n///   }\\n///\\n///   // Inline styling\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     .my-dark-theme {\\n///       // declarations...\\n///     }\\n///   }\\n///\\n/// @group @carbon/themes\\n@mixin carbon--theme(\\n  $theme: $carbon--theme,\\n  $emit-custom-properties: false,\\n  $emit-difference: false\\n) {\\n  $parent-carbon-theme: $carbon--theme;\\n  $carbon--theme: $theme !global;\\n  $interactive-01: map-get($theme, 'interactive-01') !global;\\n  $interactive-02: map-get($theme, 'interactive-02') !global;\\n  $interactive-03: map-get($theme, 'interactive-03') !global;\\n  $interactive-04: map-get($theme, 'interactive-04') !global;\\n  $ui-background: map-get($theme, 'ui-background') !global;\\n  $ui-01: map-get($theme, 'ui-01') !global;\\n  $ui-02: map-get($theme, 'ui-02') !global;\\n  $ui-03: map-get($theme, 'ui-03') !global;\\n  $ui-04: map-get($theme, 'ui-04') !global;\\n  $ui-05: map-get($theme, 'ui-05') !global;\\n  $text-01: map-get($theme, 'text-01') !global;\\n  $text-02: map-get($theme, 'text-02') !global;\\n  $text-03: map-get($theme, 'text-03') !global;\\n  $text-04: map-get($theme, 'text-04') !global;\\n  $text-05: map-get($theme, 'text-05') !global;\\n  $text-error: map-get($theme, 'text-error') !global;\\n  $icon-01: map-get($theme, 'icon-01') !global;\\n  $icon-02: map-get($theme, 'icon-02') !global;\\n  $icon-03: map-get($theme, 'icon-03') !global;\\n  $link-01: map-get($theme, 'link-01') !global;\\n  $link-02: map-get($theme, 'link-02') !global;\\n  $inverse-link: map-get($theme, 'inverse-link') !global;\\n  $field-01: map-get($theme, 'field-01') !global;\\n  $field-02: map-get($theme, 'field-02') !global;\\n  $inverse-01: map-get($theme, 'inverse-01') !global;\\n  $inverse-02: map-get($theme, 'inverse-02') !global;\\n  $support-01: map-get($theme, 'support-01') !global;\\n  $support-02: map-get($theme, 'support-02') !global;\\n  $support-03: map-get($theme, 'support-03') !global;\\n  $support-04: map-get($theme, 'support-04') !global;\\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\\n  $overlay-01: map-get($theme, 'overlay-01') !global;\\n  $danger-01: map-get($theme, 'danger-01') !global;\\n  $danger-02: map-get($theme, 'danger-02') !global;\\n  $focus: map-get($theme, 'focus') !global;\\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\\n  $hover-primary: map-get($theme, 'hover-primary') !global;\\n  $active-primary: map-get($theme, 'active-primary') !global;\\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\\n  $active-secondary: map-get($theme, 'active-secondary') !global;\\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\\n  $hover-ui: map-get($theme, 'hover-ui') !global;\\n  $hover-light-ui: map-get($theme, 'hover-light-ui') !global;\\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\\n  $active-ui: map-get($theme, 'active-ui') !global;\\n  $active-light-ui: map-get($theme, 'active-light-ui') !global;\\n  $selected-ui: map-get($theme, 'selected-ui') !global;\\n  $selected-light-ui: map-get($theme, 'selected-light-ui') !global;\\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\\n  $hover-danger: map-get($theme, 'hover-danger') !global;\\n  $active-danger: map-get($theme, 'active-danger') !global;\\n  $hover-row: map-get($theme, 'hover-row') !global;\\n  $visited-link: map-get($theme, 'visited-link') !global;\\n  $disabled-01: map-get($theme, 'disabled-01') !global;\\n  $disabled-02: map-get($theme, 'disabled-02') !global;\\n  $disabled-03: map-get($theme, 'disabled-03') !global;\\n  $highlight: map-get($theme, 'highlight') !global;\\n  $decorative-01: map-get($theme, 'decorative-01') !global;\\n  $button-separator: map-get($theme, 'button-separator') !global;\\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\\n  $background: map-get($theme, 'background') !global;\\n  $layer: map-get($theme, 'layer') !global;\\n  $layer-accent: map-get($theme, 'layer-accent') !global;\\n  $layer-accent-hover: map-get($theme, 'layer-accent-hover') !global;\\n  $layer-accent-active: map-get($theme, 'layer-accent-active') !global;\\n  $field: map-get($theme, 'field') !global;\\n  $background-inverse: map-get($theme, 'background-inverse') !global;\\n  $background-brand: map-get($theme, 'background-brand') !global;\\n  $interactive: map-get($theme, 'interactive') !global;\\n  $border-subtle: map-get($theme, 'border-subtle') !global;\\n  $border-strong: map-get($theme, 'border-strong') !global;\\n  $border-inverse: map-get($theme, 'border-inverse') !global;\\n  $border-interactive: map-get($theme, 'border-interactive') !global;\\n  $text-primary: map-get($theme, 'text-primary') !global;\\n  $text-secondary: map-get($theme, 'text-secondary') !global;\\n  $text-placeholder: map-get($theme, 'text-placeholder') !global;\\n  $text-helper: map-get($theme, 'text-helper') !global;\\n  $text-on-color: map-get($theme, 'text-on-color') !global;\\n  $text-inverse: map-get($theme, 'text-inverse') !global;\\n  $link-primary: map-get($theme, 'link-primary') !global;\\n  $link-secondary: map-get($theme, 'link-secondary') !global;\\n  $link-visited: map-get($theme, 'link-visited') !global;\\n  $link-inverse: map-get($theme, 'link-inverse') !global;\\n  $icon-primary: map-get($theme, 'icon-primary') !global;\\n  $icon-secondary: map-get($theme, 'icon-secondary') !global;\\n  $icon-on-color: map-get($theme, 'icon-on-color') !global;\\n  $icon-inverse: map-get($theme, 'icon-inverse') !global;\\n  $support-error: map-get($theme, 'support-error') !global;\\n  $support-success: map-get($theme, 'support-success') !global;\\n  $support-warning: map-get($theme, 'support-warning') !global;\\n  $support-info: map-get($theme, 'support-info') !global;\\n  $support-error-inverse: map-get($theme, 'support-error-inverse') !global;\\n  $support-success-inverse: map-get($theme, 'support-success-inverse') !global;\\n  $support-warning-inverse: map-get($theme, 'support-warning-inverse') !global;\\n  $support-info-inverse: map-get($theme, 'support-info-inverse') !global;\\n  $overlay: map-get($theme, 'overlay') !global;\\n  $toggle-off: map-get($theme, 'toggle-off') !global;\\n  $button-primary: map-get($theme, 'button-primary') !global;\\n  $button-secondary: map-get($theme, 'button-secondary') !global;\\n  $button-tertiary: map-get($theme, 'button-tertiary') !global;\\n  $button-danger-primary: map-get($theme, 'button-danger-primary') !global;\\n  $button-danger-secondary: map-get($theme, 'button-danger-secondary') !global;\\n  $background-active: map-get($theme, 'background-active') !global;\\n  $layer-active: map-get($theme, 'layer-active') !global;\\n  $button-danger-active: map-get($theme, 'button-danger-active') !global;\\n  $button-primary-active: map-get($theme, 'button-primary-active') !global;\\n  $button-secondary-active: map-get($theme, 'button-secondary-active') !global;\\n  $button-tertiary-active: map-get($theme, 'button-tertiary-active') !global;\\n  $focus-inset: map-get($theme, 'focus-inset') !global;\\n  $focus-inverse: map-get($theme, 'focus-inverse') !global;\\n  $background-hover: map-get($theme, 'background-hover') !global;\\n  $layer-hover: map-get($theme, 'layer-hover') !global;\\n  $field-hover: map-get($theme, 'field-hover') !global;\\n  $background-inverse-hover: map-get(\\n    $theme,\\n    'background-inverse-hover'\\n  ) !global;\\n  $link-primary-hover: map-get($theme, 'link-primary-hover') !global;\\n  $button-danger-hover: map-get($theme, 'button-danger-hover') !global;\\n  $button-primary-hover: map-get($theme, 'button-primary-hover') !global;\\n  $button-secondary-hover: map-get($theme, 'button-secondary-hover') !global;\\n  $button-tertiary-hover: map-get($theme, 'button-tertiary-hover') !global;\\n  $background-selected: map-get($theme, 'background-selected') !global;\\n  $background-selected-hover: map-get(\\n    $theme,\\n    'background-selected-hover'\\n  ) !global;\\n  $layer-selected: map-get($theme, 'layer-selected') !global;\\n  $layer-selected-hover: map-get($theme, 'layer-selected-hover') !global;\\n  $layer-selected-inverse: map-get($theme, 'layer-selected-inverse') !global;\\n  $border-subtle-selected: map-get($theme, 'border-subtle-selected') !global;\\n  $layer-disabled: map-get($theme, 'layer-disabled') !global;\\n  $field-disabled: map-get($theme, 'field-disabled') !global;\\n  $border-disabled: map-get($theme, 'border-disabled') !global;\\n  $text-disabled: map-get($theme, 'text-disabled') !global;\\n  $button-disabled: map-get($theme, 'button-disabled') !global;\\n  $icon-disabled: map-get($theme, 'icon-disabled') !global;\\n  $text-on-color-disabled: map-get($theme, 'text-on-color-disabled') !global;\\n  $icon-on-color-disabled: map-get($theme, 'icon-on-color-disabled') !global;\\n  $layer-selected-disabled: map-get($theme, 'layer-selected-disabled') !global;\\n  $skeleton-background: map-get($theme, 'skeleton-background') !global;\\n  $skeleton-element: map-get($theme, 'skeleton-element') !global;\\n  $brand-01: map-get($theme, 'brand-01') !global;\\n  $brand-02: map-get($theme, 'brand-02') !global;\\n  $brand-03: map-get($theme, 'brand-03') !global;\\n  $active-01: map-get($theme, 'active-01') !global;\\n  $hover-field: map-get($theme, 'hover-field') !global;\\n  $danger: map-get($theme, 'danger') !global;\\n  $caption-01: map-get($theme, 'caption-01') !global;\\n  $caption-02: map-get($theme, 'caption-02') !global;\\n  $label-01: map-get($theme, 'label-01') !global;\\n  $label-02: map-get($theme, 'label-02') !global;\\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\\n  $helper-text-02: map-get($theme, 'helper-text-02') !global;\\n  $body-short-01: map-get($theme, 'body-short-01') !global;\\n  $body-long-01: map-get($theme, 'body-long-01') !global;\\n  $body-short-02: map-get($theme, 'body-short-02') !global;\\n  $body-long-02: map-get($theme, 'body-long-02') !global;\\n  $code-01: map-get($theme, 'code-01') !global;\\n  $code-02: map-get($theme, 'code-02') !global;\\n  $heading-01: map-get($theme, 'heading-01') !global;\\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\\n  $heading-02: map-get($theme, 'heading-02') !global;\\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\\n  $quotation-01: map-get($theme, 'quotation-01') !global;\\n  $quotation-02: map-get($theme, 'quotation-02') !global;\\n  $display-01: map-get($theme, 'display-01') !global;\\n  $display-02: map-get($theme, 'display-02') !global;\\n  $display-03: map-get($theme, 'display-03') !global;\\n  $display-04: map-get($theme, 'display-04') !global;\\n  $spacing-01: map-get($theme, 'spacing-01') !global;\\n  $spacing-02: map-get($theme, 'spacing-02') !global;\\n  $spacing-03: map-get($theme, 'spacing-03') !global;\\n  $spacing-04: map-get($theme, 'spacing-04') !global;\\n  $spacing-05: map-get($theme, 'spacing-05') !global;\\n  $spacing-06: map-get($theme, 'spacing-06') !global;\\n  $spacing-07: map-get($theme, 'spacing-07') !global;\\n  $spacing-08: map-get($theme, 'spacing-08') !global;\\n  $spacing-09: map-get($theme, 'spacing-09') !global;\\n  $spacing-10: map-get($theme, 'spacing-10') !global;\\n  $spacing-11: map-get($theme, 'spacing-11') !global;\\n  $spacing-12: map-get($theme, 'spacing-12') !global;\\n  $spacing-13: map-get($theme, 'spacing-13') !global;\\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\\n  $layout-01: map-get($theme, 'layout-01') !global;\\n  $layout-02: map-get($theme, 'layout-02') !global;\\n  $layout-03: map-get($theme, 'layout-03') !global;\\n  $layout-04: map-get($theme, 'layout-04') !global;\\n  $layout-05: map-get($theme, 'layout-05') !global;\\n  $layout-06: map-get($theme, 'layout-06') !global;\\n  $layout-07: map-get($theme, 'layout-07') !global;\\n  $container-01: map-get($theme, 'container-01') !global;\\n  $container-02: map-get($theme, 'container-02') !global;\\n  $container-03: map-get($theme, 'container-03') !global;\\n  $container-04: map-get($theme, 'container-04') !global;\\n  $container-05: map-get($theme, 'container-05') !global;\\n  $size-xsmall: map-get($theme, 'size-xsmall') !global;\\n  $size-small: map-get($theme, 'size-small') !global;\\n  $size-medium: map-get($theme, 'size-medium') !global;\\n  $size-large: map-get($theme, 'size-large') !global;\\n  $size-xlarge: map-get($theme, 'size-xlarge') !global;\\n  $size-2XLarge: map-get($theme, 'size-2XLarge') !global;\\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\\n\\n  @if global-variable-exists('feature-flags') ==\\n    false or\\n    global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-v11-release') !=\\n    true\\n  {\\n    $background: $ui-background !global;\\n    $layer: $ui-01 !global;\\n    $layer-accent: $ui-03 !global;\\n    $field: $field-01 !global;\\n    $background-inverse: $inverse-02 !global;\\n    $background-brand: $interactive-01 !global;\\n    $interactive: $interactive-04 !global;\\n    $border-subtle: $ui-03 !global;\\n    $border-strong: $ui-04 !global;\\n    $border-inverse: $ui-05 !global;\\n    $border-interactive: $interactive-04 !global;\\n    $text-primary: $text-01 !global;\\n    $text-secondary: $text-02 !global;\\n    $text-placeholder: $text-03 !global;\\n    $text-helper: $text-05 !global;\\n    $text-on-color: $text-04 !global;\\n    $text-inverse: $inverse-01 !global;\\n    $link-primary: $link-01 !global;\\n    $link-secondary: $link-02 !global;\\n    $link-visited: $visited-link !global;\\n    $link-inverse: $inverse-link !global;\\n    $icon-primary: $icon-01 !global;\\n    $icon-secondary: $icon-02 !global;\\n    $icon-on-color: $icon-03 !global;\\n    $icon-inverse: $inverse-01 !global;\\n    $support-error: $support-01 !global;\\n    $support-success: $support-02 !global;\\n    $support-warning: $support-03 !global;\\n    $support-info: $support-04 !global;\\n    $support-error-inverse: $inverse-support-01 !global;\\n    $support-success-inverse: $inverse-support-02 !global;\\n    $support-warning-inverse: $inverse-support-03 !global;\\n    $support-info-inverse: $inverse-support-04 !global;\\n    $overlay: $overlay-01 !global;\\n    $toggle-off: $ui-04 !global;\\n    $button-primary: $interactive-01 !global;\\n    $button-secondary: $interactive-02 !global;\\n    $button-tertiary: $interactive-03 !global;\\n    $button-danger-primary: $danger-01 !global;\\n    $button-danger-secondary: $danger-02 !global;\\n    $background-active: $active-ui !global;\\n    $layer-active: $active-ui !global;\\n    $button-danger-active: $active-danger !global;\\n    $button-primary-active: $active-primary !global;\\n    $button-secondary-active: $active-secondary !global;\\n    $button-tertiary-active: $active-tertiary !global;\\n    $focus-inset: $inverse-01 !global;\\n    $focus-inverse: $inverse-focus-ui !global;\\n    $background-hover: $hover-ui !global;\\n    $layer-hover: $hover-ui !global;\\n    $field-hover: $hover-ui !global;\\n    $background-inverse-hover: $inverse-hover-ui !global;\\n    $link-primary-hover: $hover-primary-text !global;\\n    $button-danger-hover: $hover-danger !global;\\n    $button-primary-hover: $hover-primary !global;\\n    $button-secondary-hover: $hover-secondary !global;\\n    $button-tertiary-hover: $hover-tertiary !global;\\n    $background-selected: $selected-ui !global;\\n    $background-selected-hover: $hover-selected-ui !global;\\n    $layer-selected: $selected-ui !global;\\n    $layer-selected-hover: $hover-selected-ui !global;\\n    $layer-selected-inverse: $ui-05 !global;\\n    $border-subtle-selected: $active-ui !global;\\n    $layer-disabled: $disabled-01 !global;\\n    $field-disabled: $disabled-01 !global;\\n    $border-disabled: $disabled-01 !global;\\n    $text-disabled: $disabled-02 !global;\\n    $button-disabled: $disabled-02 !global;\\n    $icon-disabled: $disabled-02 !global;\\n    $text-on-color-disabled: $disabled-03 !global;\\n    $icon-on-color-disabled: $disabled-03 !global;\\n    $layer-selected-disabled: $disabled-03 !global;\\n    $skeleton-background: $skeleton-01 !global;\\n    $skeleton-element: $skeleton-02 !global;\\n  }\\n  @if global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-css-custom-properties')\\n  {\\n    $interactive-01: var(\\n      --#{$custom-property-prefix}-interactive-01,\\n      map-get($theme, 'interactive-01')\\n    ) !global;\\n    $interactive-02: var(\\n      --#{$custom-property-prefix}-interactive-02,\\n      map-get($theme, 'interactive-02')\\n    ) !global;\\n    $interactive-03: var(\\n      --#{$custom-property-prefix}-interactive-03,\\n      map-get($theme, 'interactive-03')\\n    ) !global;\\n    $interactive-04: var(\\n      --#{$custom-property-prefix}-interactive-04,\\n      map-get($theme, 'interactive-04')\\n    ) !global;\\n    $ui-background: var(\\n      --#{$custom-property-prefix}-ui-background,\\n      map-get($theme, 'ui-background')\\n    ) !global;\\n    $ui-01: var(\\n      --#{$custom-property-prefix}-ui-01,\\n      map-get($theme, 'ui-01')\\n    ) !global;\\n    $ui-02: var(\\n      --#{$custom-property-prefix}-ui-02,\\n      map-get($theme, 'ui-02')\\n    ) !global;\\n    $ui-03: var(\\n      --#{$custom-property-prefix}-ui-03,\\n      map-get($theme, 'ui-03')\\n    ) !global;\\n    $ui-04: var(\\n      --#{$custom-property-prefix}-ui-04,\\n      map-get($theme, 'ui-04')\\n    ) !global;\\n    $ui-05: var(\\n      --#{$custom-property-prefix}-ui-05,\\n      map-get($theme, 'ui-05')\\n    ) !global;\\n    $text-01: var(\\n      --#{$custom-property-prefix}-text-01,\\n      map-get($theme, 'text-01')\\n    ) !global;\\n    $text-02: var(\\n      --#{$custom-property-prefix}-text-02,\\n      map-get($theme, 'text-02')\\n    ) !global;\\n    $text-03: var(\\n      --#{$custom-property-prefix}-text-03,\\n      map-get($theme, 'text-03')\\n    ) !global;\\n    $text-04: var(\\n      --#{$custom-property-prefix}-text-04,\\n      map-get($theme, 'text-04')\\n    ) !global;\\n    $text-05: var(\\n      --#{$custom-property-prefix}-text-05,\\n      map-get($theme, 'text-05')\\n    ) !global;\\n    $text-error: var(\\n      --#{$custom-property-prefix}-text-error,\\n      map-get($theme, 'text-error')\\n    ) !global;\\n    $icon-01: var(\\n      --#{$custom-property-prefix}-icon-01,\\n      map-get($theme, 'icon-01')\\n    ) !global;\\n    $icon-02: var(\\n      --#{$custom-property-prefix}-icon-02,\\n      map-get($theme, 'icon-02')\\n    ) !global;\\n    $icon-03: var(\\n      --#{$custom-property-prefix}-icon-03,\\n      map-get($theme, 'icon-03')\\n    ) !global;\\n    $link-01: var(\\n      --#{$custom-property-prefix}-link-01,\\n      map-get($theme, 'link-01')\\n    ) !global;\\n    $link-02: var(\\n      --#{$custom-property-prefix}-link-02,\\n      map-get($theme, 'link-02')\\n    ) !global;\\n    $inverse-link: var(\\n      --#{$custom-property-prefix}-inverse-link,\\n      map-get($theme, 'inverse-link')\\n    ) !global;\\n    $field-01: var(\\n      --#{$custom-property-prefix}-field-01,\\n      map-get($theme, 'field-01')\\n    ) !global;\\n    $field-02: var(\\n      --#{$custom-property-prefix}-field-02,\\n      map-get($theme, 'field-02')\\n    ) !global;\\n    $inverse-01: var(\\n      --#{$custom-property-prefix}-inverse-01,\\n      map-get($theme, 'inverse-01')\\n    ) !global;\\n    $inverse-02: var(\\n      --#{$custom-property-prefix}-inverse-02,\\n      map-get($theme, 'inverse-02')\\n    ) !global;\\n    $support-01: var(\\n      --#{$custom-property-prefix}-support-01,\\n      map-get($theme, 'support-01')\\n    ) !global;\\n    $support-02: var(\\n      --#{$custom-property-prefix}-support-02,\\n      map-get($theme, 'support-02')\\n    ) !global;\\n    $support-03: var(\\n      --#{$custom-property-prefix}-support-03,\\n      map-get($theme, 'support-03')\\n    ) !global;\\n    $support-04: var(\\n      --#{$custom-property-prefix}-support-04,\\n      map-get($theme, 'support-04')\\n    ) !global;\\n    $inverse-support-01: var(\\n      --#{$custom-property-prefix}-inverse-support-01,\\n      map-get($theme, 'inverse-support-01')\\n    ) !global;\\n    $inverse-support-02: var(\\n      --#{$custom-property-prefix}-inverse-support-02,\\n      map-get($theme, 'inverse-support-02')\\n    ) !global;\\n    $inverse-support-03: var(\\n      --#{$custom-property-prefix}-inverse-support-03,\\n      map-get($theme, 'inverse-support-03')\\n    ) !global;\\n    $inverse-support-04: var(\\n      --#{$custom-property-prefix}-inverse-support-04,\\n      map-get($theme, 'inverse-support-04')\\n    ) !global;\\n    $overlay-01: var(\\n      --#{$custom-property-prefix}-overlay-01,\\n      map-get($theme, 'overlay-01')\\n    ) !global;\\n    $danger-01: var(\\n      --#{$custom-property-prefix}-danger-01,\\n      map-get($theme, 'danger-01')\\n    ) !global;\\n    $danger-02: var(\\n      --#{$custom-property-prefix}-danger-02,\\n      map-get($theme, 'danger-02')\\n    ) !global;\\n    $focus: var(\\n      --#{$custom-property-prefix}-focus,\\n      map-get($theme, 'focus')\\n    ) !global;\\n    $inverse-focus-ui: var(\\n      --#{$custom-property-prefix}-inverse-focus-ui,\\n      map-get($theme, 'inverse-focus-ui')\\n    ) !global;\\n    $hover-primary: var(\\n      --#{$custom-property-prefix}-hover-primary,\\n      map-get($theme, 'hover-primary')\\n    ) !global;\\n    $active-primary: var(\\n      --#{$custom-property-prefix}-active-primary,\\n      map-get($theme, 'active-primary')\\n    ) !global;\\n    $hover-primary-text: var(\\n      --#{$custom-property-prefix}-hover-primary-text,\\n      map-get($theme, 'hover-primary-text')\\n    ) !global;\\n    $hover-secondary: var(\\n      --#{$custom-property-prefix}-hover-secondary,\\n      map-get($theme, 'hover-secondary')\\n    ) !global;\\n    $active-secondary: var(\\n      --#{$custom-property-prefix}-active-secondary,\\n      map-get($theme, 'active-secondary')\\n    ) !global;\\n    $hover-tertiary: var(\\n      --#{$custom-property-prefix}-hover-tertiary,\\n      map-get($theme, 'hover-tertiary')\\n    ) !global;\\n    $active-tertiary: var(\\n      --#{$custom-property-prefix}-active-tertiary,\\n      map-get($theme, 'active-tertiary')\\n    ) !global;\\n    $hover-ui: var(\\n      --#{$custom-property-prefix}-hover-ui,\\n      map-get($theme, 'hover-ui')\\n    ) !global;\\n    $hover-light-ui: var(\\n      --#{$custom-property-prefix}-hover-light-ui,\\n      map-get($theme, 'hover-light-ui')\\n    ) !global;\\n    $hover-selected-ui: var(\\n      --#{$custom-property-prefix}-hover-selected-ui,\\n      map-get($theme, 'hover-selected-ui')\\n    ) !global;\\n    $active-ui: var(\\n      --#{$custom-property-prefix}-active-ui,\\n      map-get($theme, 'active-ui')\\n    ) !global;\\n    $active-light-ui: var(\\n      --#{$custom-property-prefix}-active-light-ui,\\n      map-get($theme, 'active-light-ui')\\n    ) !global;\\n    $selected-ui: var(\\n      --#{$custom-property-prefix}-selected-ui,\\n      map-get($theme, 'selected-ui')\\n    ) !global;\\n    $selected-light-ui: var(\\n      --#{$custom-property-prefix}-selected-light-ui,\\n      map-get($theme, 'selected-light-ui')\\n    ) !global;\\n    $inverse-hover-ui: var(\\n      --#{$custom-property-prefix}-inverse-hover-ui,\\n      map-get($theme, 'inverse-hover-ui')\\n    ) !global;\\n    $hover-danger: var(\\n      --#{$custom-property-prefix}-hover-danger,\\n      map-get($theme, 'hover-danger')\\n    ) !global;\\n    $active-danger: var(\\n      --#{$custom-property-prefix}-active-danger,\\n      map-get($theme, 'active-danger')\\n    ) !global;\\n    $hover-row: var(\\n      --#{$custom-property-prefix}-hover-row,\\n      map-get($theme, 'hover-row')\\n    ) !global;\\n    $visited-link: var(\\n      --#{$custom-property-prefix}-visited-link,\\n      map-get($theme, 'visited-link')\\n    ) !global;\\n    $disabled-01: var(\\n      --#{$custom-property-prefix}-disabled-01,\\n      map-get($theme, 'disabled-01')\\n    ) !global;\\n    $disabled-02: var(\\n      --#{$custom-property-prefix}-disabled-02,\\n      map-get($theme, 'disabled-02')\\n    ) !global;\\n    $disabled-03: var(\\n      --#{$custom-property-prefix}-disabled-03,\\n      map-get($theme, 'disabled-03')\\n    ) !global;\\n    $highlight: var(\\n      --#{$custom-property-prefix}-highlight,\\n      map-get($theme, 'highlight')\\n    ) !global;\\n    $decorative-01: var(\\n      --#{$custom-property-prefix}-decorative-01,\\n      map-get($theme, 'decorative-01')\\n    ) !global;\\n    $button-separator: var(\\n      --#{$custom-property-prefix}-button-separator,\\n      map-get($theme, 'button-separator')\\n    ) !global;\\n    $skeleton-01: var(\\n      --#{$custom-property-prefix}-skeleton-01,\\n      map-get($theme, 'skeleton-01')\\n    ) !global;\\n    $skeleton-02: var(\\n      --#{$custom-property-prefix}-skeleton-02,\\n      map-get($theme, 'skeleton-02')\\n    ) !global;\\n    $background: var(\\n      --#{$custom-property-prefix}-background,\\n      map-get($theme, 'background')\\n    ) !global;\\n    $layer: var(\\n      --#{$custom-property-prefix}-layer,\\n      map-get($theme, 'layer')\\n    ) !global;\\n    $layer-accent: var(\\n      --#{$custom-property-prefix}-layer-accent,\\n      map-get($theme, 'layer-accent')\\n    ) !global;\\n    $layer-accent-hover: var(\\n      --#{$custom-property-prefix}-layer-accent-hover,\\n      map-get($theme, 'layer-accent-hover')\\n    ) !global;\\n    $layer-accent-active: var(\\n      --#{$custom-property-prefix}-layer-accent-active,\\n      map-get($theme, 'layer-accent-active')\\n    ) !global;\\n    $field: var(\\n      --#{$custom-property-prefix}-field,\\n      map-get($theme, 'field')\\n    ) !global;\\n    $background-inverse: var(\\n      --#{$custom-property-prefix}-background-inverse,\\n      map-get($theme, 'background-inverse')\\n    ) !global;\\n    $background-brand: var(\\n      --#{$custom-property-prefix}-background-brand,\\n      map-get($theme, 'background-brand')\\n    ) !global;\\n    $interactive: var(\\n      --#{$custom-property-prefix}-interactive,\\n      map-get($theme, 'interactive')\\n    ) !global;\\n    $border-subtle: var(\\n      --#{$custom-property-prefix}-border-subtle,\\n      map-get($theme, 'border-subtle')\\n    ) !global;\\n    $border-strong: var(\\n      --#{$custom-property-prefix}-border-strong,\\n      map-get($theme, 'border-strong')\\n    ) !global;\\n    $border-inverse: var(\\n      --#{$custom-property-prefix}-border-inverse,\\n      map-get($theme, 'border-inverse')\\n    ) !global;\\n    $border-interactive: var(\\n      --#{$custom-property-prefix}-border-interactive,\\n      map-get($theme, 'border-interactive')\\n    ) !global;\\n    $text-primary: var(\\n      --#{$custom-property-prefix}-text-primary,\\n      map-get($theme, 'text-primary')\\n    ) !global;\\n    $text-secondary: var(\\n      --#{$custom-property-prefix}-text-secondary,\\n      map-get($theme, 'text-secondary')\\n    ) !global;\\n    $text-placeholder: var(\\n      --#{$custom-property-prefix}-text-placeholder,\\n      map-get($theme, 'text-placeholder')\\n    ) !global;\\n    $text-helper: var(\\n      --#{$custom-property-prefix}-text-helper,\\n      map-get($theme, 'text-helper')\\n    ) !global;\\n    $text-on-color: var(\\n      --#{$custom-property-prefix}-text-on-color,\\n      map-get($theme, 'text-on-color')\\n    ) !global;\\n    $text-inverse: var(\\n      --#{$custom-property-prefix}-text-inverse,\\n      map-get($theme, 'text-inverse')\\n    ) !global;\\n    $link-primary: var(\\n      --#{$custom-property-prefix}-link-primary,\\n      map-get($theme, 'link-primary')\\n    ) !global;\\n    $link-secondary: var(\\n      --#{$custom-property-prefix}-link-secondary,\\n      map-get($theme, 'link-secondary')\\n    ) !global;\\n    $link-visited: var(\\n      --#{$custom-property-prefix}-link-visited,\\n      map-get($theme, 'link-visited')\\n    ) !global;\\n    $link-inverse: var(\\n      --#{$custom-property-prefix}-link-inverse,\\n      map-get($theme, 'link-inverse')\\n    ) !global;\\n    $icon-primary: var(\\n      --#{$custom-property-prefix}-icon-primary,\\n      map-get($theme, 'icon-primary')\\n    ) !global;\\n    $icon-secondary: var(\\n      --#{$custom-property-prefix}-icon-secondary,\\n      map-get($theme, 'icon-secondary')\\n    ) !global;\\n    $icon-on-color: var(\\n      --#{$custom-property-prefix}-icon-on-color,\\n      map-get($theme, 'icon-on-color')\\n    ) !global;\\n    $icon-inverse: var(\\n      --#{$custom-property-prefix}-icon-inverse,\\n      map-get($theme, 'icon-inverse')\\n    ) !global;\\n    $support-error: var(\\n      --#{$custom-property-prefix}-support-error,\\n      map-get($theme, 'support-error')\\n    ) !global;\\n    $support-success: var(\\n      --#{$custom-property-prefix}-support-success,\\n      map-get($theme, 'support-success')\\n    ) !global;\\n    $support-warning: var(\\n      --#{$custom-property-prefix}-support-warning,\\n      map-get($theme, 'support-warning')\\n    ) !global;\\n    $support-info: var(\\n      --#{$custom-property-prefix}-support-info,\\n      map-get($theme, 'support-info')\\n    ) !global;\\n    $support-error-inverse: var(\\n      --#{$custom-property-prefix}-support-error-inverse,\\n      map-get($theme, 'support-error-inverse')\\n    ) !global;\\n    $support-success-inverse: var(\\n      --#{$custom-property-prefix}-support-success-inverse,\\n      map-get($theme, 'support-success-inverse')\\n    ) !global;\\n    $support-warning-inverse: var(\\n      --#{$custom-property-prefix}-support-warning-inverse,\\n      map-get($theme, 'support-warning-inverse')\\n    ) !global;\\n    $support-info-inverse: var(\\n      --#{$custom-property-prefix}-support-info-inverse,\\n      map-get($theme, 'support-info-inverse')\\n    ) !global;\\n    $overlay: var(\\n      --#{$custom-property-prefix}-overlay,\\n      map-get($theme, 'overlay')\\n    ) !global;\\n    $toggle-off: var(\\n      --#{$custom-property-prefix}-toggle-off,\\n      map-get($theme, 'toggle-off')\\n    ) !global;\\n    $button-primary: var(\\n      --#{$custom-property-prefix}-button-primary,\\n      map-get($theme, 'button-primary')\\n    ) !global;\\n    $button-secondary: var(\\n      --#{$custom-property-prefix}-button-secondary,\\n      map-get($theme, 'button-secondary')\\n    ) !global;\\n    $button-tertiary: var(\\n      --#{$custom-property-prefix}-button-tertiary,\\n      map-get($theme, 'button-tertiary')\\n    ) !global;\\n    $button-danger-primary: var(\\n      --#{$custom-property-prefix}-button-danger-primary,\\n      map-get($theme, 'button-danger-primary')\\n    ) !global;\\n    $button-danger-secondary: var(\\n      --#{$custom-property-prefix}-button-danger-secondary,\\n      map-get($theme, 'button-danger-secondary')\\n    ) !global;\\n    $background-active: var(\\n      --#{$custom-property-prefix}-background-active,\\n      map-get($theme, 'background-active')\\n    ) !global;\\n    $layer-active: var(\\n      --#{$custom-property-prefix}-layer-active,\\n      map-get($theme, 'layer-active')\\n    ) !global;\\n    $button-danger-active: var(\\n      --#{$custom-property-prefix}-button-danger-active,\\n      map-get($theme, 'button-danger-active')\\n    ) !global;\\n    $button-primary-active: var(\\n      --#{$custom-property-prefix}-button-primary-active,\\n      map-get($theme, 'button-primary-active')\\n    ) !global;\\n    $button-secondary-active: var(\\n      --#{$custom-property-prefix}-button-secondary-active,\\n      map-get($theme, 'button-secondary-active')\\n    ) !global;\\n    $button-tertiary-active: var(\\n      --#{$custom-property-prefix}-button-tertiary-active,\\n      map-get($theme, 'button-tertiary-active')\\n    ) !global;\\n    $focus-inset: var(\\n      --#{$custom-property-prefix}-focus-inset,\\n      map-get($theme, 'focus-inset')\\n    ) !global;\\n    $focus-inverse: var(\\n      --#{$custom-property-prefix}-focus-inverse,\\n      map-get($theme, 'focus-inverse')\\n    ) !global;\\n    $background-hover: var(\\n      --#{$custom-property-prefix}-background-hover,\\n      map-get($theme, 'background-hover')\\n    ) !global;\\n    $layer-hover: var(\\n      --#{$custom-property-prefix}-layer-hover,\\n      map-get($theme, 'layer-hover')\\n    ) !global;\\n    $field-hover: var(\\n      --#{$custom-property-prefix}-field-hover,\\n      map-get($theme, 'field-hover')\\n    ) !global;\\n    $background-inverse-hover: var(\\n      --#{$custom-property-prefix}-background-inverse-hover,\\n      map-get($theme, 'background-inverse-hover')\\n    ) !global;\\n    $link-primary-hover: var(\\n      --#{$custom-property-prefix}-link-primary-hover,\\n      map-get($theme, 'link-primary-hover')\\n    ) !global;\\n    $button-danger-hover: var(\\n      --#{$custom-property-prefix}-button-danger-hover,\\n      map-get($theme, 'button-danger-hover')\\n    ) !global;\\n    $button-primary-hover: var(\\n      --#{$custom-property-prefix}-button-primary-hover,\\n      map-get($theme, 'button-primary-hover')\\n    ) !global;\\n    $button-secondary-hover: var(\\n      --#{$custom-property-prefix}-button-secondary-hover,\\n      map-get($theme, 'button-secondary-hover')\\n    ) !global;\\n    $button-tertiary-hover: var(\\n      --#{$custom-property-prefix}-button-tertiary-hover,\\n      map-get($theme, 'button-tertiary-hover')\\n    ) !global;\\n    $background-selected: var(\\n      --#{$custom-property-prefix}-background-selected,\\n      map-get($theme, 'background-selected')\\n    ) !global;\\n    $background-selected-hover: var(\\n      --#{$custom-property-prefix}-background-selected-hover,\\n      map-get($theme, 'background-selected-hover')\\n    ) !global;\\n    $layer-selected: var(\\n      --#{$custom-property-prefix}-layer-selected,\\n      map-get($theme, 'layer-selected')\\n    ) !global;\\n    $layer-selected-hover: var(\\n      --#{$custom-property-prefix}-layer-selected-hover,\\n      map-get($theme, 'layer-selected-hover')\\n    ) !global;\\n    $layer-selected-inverse: var(\\n      --#{$custom-property-prefix}-layer-selected-inverse,\\n      map-get($theme, 'layer-selected-inverse')\\n    ) !global;\\n    $border-subtle-selected: var(\\n      --#{$custom-property-prefix}-border-subtle-selected,\\n      map-get($theme, 'border-subtle-selected')\\n    ) !global;\\n    $layer-disabled: var(\\n      --#{$custom-property-prefix}-layer-disabled,\\n      map-get($theme, 'layer-disabled')\\n    ) !global;\\n    $field-disabled: var(\\n      --#{$custom-property-prefix}-field-disabled,\\n      map-get($theme, 'field-disabled')\\n    ) !global;\\n    $border-disabled: var(\\n      --#{$custom-property-prefix}-border-disabled,\\n      map-get($theme, 'border-disabled')\\n    ) !global;\\n    $text-disabled: var(\\n      --#{$custom-property-prefix}-text-disabled,\\n      map-get($theme, 'text-disabled')\\n    ) !global;\\n    $button-disabled: var(\\n      --#{$custom-property-prefix}-button-disabled,\\n      map-get($theme, 'button-disabled')\\n    ) !global;\\n    $icon-disabled: var(\\n      --#{$custom-property-prefix}-icon-disabled,\\n      map-get($theme, 'icon-disabled')\\n    ) !global;\\n    $text-on-color-disabled: var(\\n      --#{$custom-property-prefix}-text-on-color-disabled,\\n      map-get($theme, 'text-on-color-disabled')\\n    ) !global;\\n    $icon-on-color-disabled: var(\\n      --#{$custom-property-prefix}-icon-on-color-disabled,\\n      map-get($theme, 'icon-on-color-disabled')\\n    ) !global;\\n    $layer-selected-disabled: var(\\n      --#{$custom-property-prefix}-layer-selected-disabled,\\n      map-get($theme, 'layer-selected-disabled')\\n    ) !global;\\n    $skeleton-background: var(\\n      --#{$custom-property-prefix}-skeleton-background,\\n      map-get($theme, 'skeleton-background')\\n    ) !global;\\n    $skeleton-element: var(\\n      --#{$custom-property-prefix}-skeleton-element,\\n      map-get($theme, 'skeleton-element')\\n    ) !global;\\n    $brand-01: var(\\n      --#{$custom-property-prefix}-brand-01,\\n      map-get($theme, 'brand-01')\\n    ) !global;\\n    $brand-02: var(\\n      --#{$custom-property-prefix}-brand-02,\\n      map-get($theme, 'brand-02')\\n    ) !global;\\n    $brand-03: var(\\n      --#{$custom-property-prefix}-brand-03,\\n      map-get($theme, 'brand-03')\\n    ) !global;\\n    $active-01: var(\\n      --#{$custom-property-prefix}-active-01,\\n      map-get($theme, 'active-01')\\n    ) !global;\\n    $hover-field: var(\\n      --#{$custom-property-prefix}-hover-field,\\n      map-get($theme, 'hover-field')\\n    ) !global;\\n    $danger: var(\\n      --#{$custom-property-prefix}-danger,\\n      map-get($theme, 'danger')\\n    ) !global;\\n    $spacing-01: var(\\n      --#{$custom-property-prefix}-spacing-01,\\n      map-get($theme, 'spacing-01')\\n    ) !global;\\n    $spacing-02: var(\\n      --#{$custom-property-prefix}-spacing-02,\\n      map-get($theme, 'spacing-02')\\n    ) !global;\\n    $spacing-03: var(\\n      --#{$custom-property-prefix}-spacing-03,\\n      map-get($theme, 'spacing-03')\\n    ) !global;\\n    $spacing-04: var(\\n      --#{$custom-property-prefix}-spacing-04,\\n      map-get($theme, 'spacing-04')\\n    ) !global;\\n    $spacing-05: var(\\n      --#{$custom-property-prefix}-spacing-05,\\n      map-get($theme, 'spacing-05')\\n    ) !global;\\n    $spacing-06: var(\\n      --#{$custom-property-prefix}-spacing-06,\\n      map-get($theme, 'spacing-06')\\n    ) !global;\\n    $spacing-07: var(\\n      --#{$custom-property-prefix}-spacing-07,\\n      map-get($theme, 'spacing-07')\\n    ) !global;\\n    $spacing-08: var(\\n      --#{$custom-property-prefix}-spacing-08,\\n      map-get($theme, 'spacing-08')\\n    ) !global;\\n    $spacing-09: var(\\n      --#{$custom-property-prefix}-spacing-09,\\n      map-get($theme, 'spacing-09')\\n    ) !global;\\n    $spacing-10: var(\\n      --#{$custom-property-prefix}-spacing-10,\\n      map-get($theme, 'spacing-10')\\n    ) !global;\\n    $spacing-11: var(\\n      --#{$custom-property-prefix}-spacing-11,\\n      map-get($theme, 'spacing-11')\\n    ) !global;\\n    $spacing-12: var(\\n      --#{$custom-property-prefix}-spacing-12,\\n      map-get($theme, 'spacing-12')\\n    ) !global;\\n    $spacing-13: var(\\n      --#{$custom-property-prefix}-spacing-13,\\n      map-get($theme, 'spacing-13')\\n    ) !global;\\n    $fluid-spacing-01: var(\\n      --#{$custom-property-prefix}-fluid-spacing-01,\\n      map-get($theme, 'fluid-spacing-01')\\n    ) !global;\\n    $fluid-spacing-02: var(\\n      --#{$custom-property-prefix}-fluid-spacing-02,\\n      map-get($theme, 'fluid-spacing-02')\\n    ) !global;\\n    $fluid-spacing-03: var(\\n      --#{$custom-property-prefix}-fluid-spacing-03,\\n      map-get($theme, 'fluid-spacing-03')\\n    ) !global;\\n    $fluid-spacing-04: var(\\n      --#{$custom-property-prefix}-fluid-spacing-04,\\n      map-get($theme, 'fluid-spacing-04')\\n    ) !global;\\n    $layout-01: var(\\n      --#{$custom-property-prefix}-layout-01,\\n      map-get($theme, 'layout-01')\\n    ) !global;\\n    $layout-02: var(\\n      --#{$custom-property-prefix}-layout-02,\\n      map-get($theme, 'layout-02')\\n    ) !global;\\n    $layout-03: var(\\n      --#{$custom-property-prefix}-layout-03,\\n      map-get($theme, 'layout-03')\\n    ) !global;\\n    $layout-04: var(\\n      --#{$custom-property-prefix}-layout-04,\\n      map-get($theme, 'layout-04')\\n    ) !global;\\n    $layout-05: var(\\n      --#{$custom-property-prefix}-layout-05,\\n      map-get($theme, 'layout-05')\\n    ) !global;\\n    $layout-06: var(\\n      --#{$custom-property-prefix}-layout-06,\\n      map-get($theme, 'layout-06')\\n    ) !global;\\n    $layout-07: var(\\n      --#{$custom-property-prefix}-layout-07,\\n      map-get($theme, 'layout-07')\\n    ) !global;\\n    $container-01: var(\\n      --#{$custom-property-prefix}-container-01,\\n      map-get($theme, 'container-01')\\n    ) !global;\\n    $container-02: var(\\n      --#{$custom-property-prefix}-container-02,\\n      map-get($theme, 'container-02')\\n    ) !global;\\n    $container-03: var(\\n      --#{$custom-property-prefix}-container-03,\\n      map-get($theme, 'container-03')\\n    ) !global;\\n    $container-04: var(\\n      --#{$custom-property-prefix}-container-04,\\n      map-get($theme, 'container-04')\\n    ) !global;\\n    $container-05: var(\\n      --#{$custom-property-prefix}-container-05,\\n      map-get($theme, 'container-05')\\n    ) !global;\\n    $size-xsmall: var(\\n      --#{$custom-property-prefix}-size-xsmall,\\n      map-get($theme, 'size-xsmall')\\n    ) !global;\\n    $size-small: var(\\n      --#{$custom-property-prefix}-size-small,\\n      map-get($theme, 'size-small')\\n    ) !global;\\n    $size-medium: var(\\n      --#{$custom-property-prefix}-size-medium,\\n      map-get($theme, 'size-medium')\\n    ) !global;\\n    $size-large: var(\\n      --#{$custom-property-prefix}-size-large,\\n      map-get($theme, 'size-large')\\n    ) !global;\\n    $size-xlarge: var(\\n      --#{$custom-property-prefix}-size-xlarge,\\n      map-get($theme, 'size-xlarge')\\n    ) !global;\\n    $size-2XLarge: var(\\n      --#{$custom-property-prefix}-size-2XLarge,\\n      map-get($theme, 'size-2XLarge')\\n    ) !global;\\n    $icon-size-01: var(\\n      --#{$custom-property-prefix}-icon-size-01,\\n      map-get($theme, 'icon-size-01')\\n    ) !global;\\n    $icon-size-02: var(\\n      --#{$custom-property-prefix}-icon-size-02,\\n      map-get($theme, 'icon-size-02')\\n    ) !global;\\n  }\\n  @if $emit-custom-properties == true {\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-01',\\n        map-get($theme, 'interactive-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-02',\\n        map-get($theme, 'interactive-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-03',\\n        map-get($theme, 'interactive-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-04',\\n        map-get($theme, 'interactive-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'ui-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'ui-background',\\n        map-get($theme, 'ui-background')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-01', $emit-difference) {\\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-02', $emit-difference) {\\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-03', $emit-difference) {\\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-04', $emit-difference) {\\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-05', $emit-difference) {\\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-01', $emit-difference) {\\n      @include custom-property('text-01', map-get($theme, 'text-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-02', $emit-difference) {\\n      @include custom-property('text-02', map-get($theme, 'text-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-03', $emit-difference) {\\n      @include custom-property('text-03', map-get($theme, 'text-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-04', $emit-difference) {\\n      @include custom-property('text-04', map-get($theme, 'text-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-05', $emit-difference) {\\n      @include custom-property('text-05', map-get($theme, 'text-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-error', map-get($theme, 'text-error'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-01', $emit-difference) {\\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-02', $emit-difference) {\\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-03', $emit-difference) {\\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-01', $emit-difference) {\\n      @include custom-property('link-01', map-get($theme, 'link-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-02', $emit-difference) {\\n      @include custom-property('link-02', map-get($theme, 'link-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-01', $emit-difference)\\n    {\\n      @include custom-property('field-01', map-get($theme, 'field-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-02', $emit-difference)\\n    {\\n      @include custom-property('field-02', map-get($theme, 'field-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-01', map-get($theme, 'support-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-02', map-get($theme, 'support-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-03', map-get($theme, 'support-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-04', map-get($theme, 'support-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-01',\\n        map-get($theme, 'inverse-support-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-02',\\n        map-get($theme, 'inverse-support-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-03',\\n        map-get($theme, 'inverse-support-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-04',\\n        map-get($theme, 'inverse-support-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'overlay-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-01', $emit-difference)\\n    {\\n      @include custom-property('danger-01', map-get($theme, 'danger-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-02', $emit-difference)\\n    {\\n      @include custom-property('danger-02', map-get($theme, 'danger-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'focus', $emit-difference) {\\n      @include custom-property('focus', map-get($theme, 'focus'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-focus-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-focus-ui',\\n        map-get($theme, 'inverse-focus-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary',\\n        map-get($theme, 'hover-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-primary',\\n        map-get($theme, 'active-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary-text',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary-text',\\n        map-get($theme, 'hover-primary-text')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-secondary',\\n        map-get($theme, 'hover-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-secondary',\\n        map-get($theme, 'active-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-tertiary',\\n        map-get($theme, 'hover-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-tertiary',\\n        map-get($theme, 'active-tertiary')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-ui', $emit-difference)\\n    {\\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-light-ui',\\n        map-get($theme, 'hover-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-selected-ui',\\n        map-get($theme, 'hover-selected-ui')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-ui', $emit-difference)\\n    {\\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-light-ui',\\n        map-get($theme, 'active-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'selected-light-ui',\\n        map-get($theme, 'selected-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-hover-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-hover-ui',\\n        map-get($theme, 'inverse-hover-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-danger',\\n        map-get($theme, 'active-danger')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-row', $emit-difference)\\n    {\\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'visited-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'highlight', $emit-difference)\\n    {\\n      @include custom-property('highlight', map-get($theme, 'highlight'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'decorative-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'decorative-01',\\n        map-get($theme, 'decorative-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-separator',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-separator',\\n        map-get($theme, 'button-separator')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('background', map-get($theme, 'background'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layer', $emit-difference) {\\n      @include custom-property('layer', map-get($theme, 'layer'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-accent', map-get($theme, 'layer-accent'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-hover',\\n        map-get($theme, 'layer-accent-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-active',\\n        map-get($theme, 'layer-accent-active')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field', $emit-difference) {\\n      @include custom-property('field', map-get($theme, 'field'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse',\\n        map-get($theme, 'background-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-brand',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-brand',\\n        map-get($theme, 'background-brand')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('interactive', map-get($theme, 'interactive'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle',\\n        map-get($theme, 'border-subtle')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-strong',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-strong',\\n        map-get($theme, 'border-strong')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-inverse',\\n        map-get($theme, 'border-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-interactive',\\n        map-get($theme, 'border-interactive')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-primary', map-get($theme, 'text-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-secondary',\\n        map-get($theme, 'text-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-placeholder',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-placeholder',\\n        map-get($theme, 'text-placeholder')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-helper',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-helper', map-get($theme, 'text-helper'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color',\\n        map-get($theme, 'text-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-inverse', map-get($theme, 'text-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-primary', map-get($theme, 'link-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-secondary',\\n        map-get($theme, 'link-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-visited',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-visited', map-get($theme, 'link-visited'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-inverse', map-get($theme, 'link-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-primary', map-get($theme, 'icon-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-secondary',\\n        map-get($theme, 'icon-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color',\\n        map-get($theme, 'icon-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-inverse', map-get($theme, 'icon-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error',\\n        map-get($theme, 'support-error')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success',\\n        map-get($theme, 'support-success')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning',\\n        map-get($theme, 'support-warning')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-info', map-get($theme, 'support-info'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error-inverse',\\n        map-get($theme, 'support-error-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success-inverse',\\n        map-get($theme, 'support-success-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning-inverse',\\n        map-get($theme, 'support-warning-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-info-inverse',\\n        map-get($theme, 'support-info-inverse')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'overlay', $emit-difference) {\\n      @include custom-property('overlay', map-get($theme, 'overlay'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'toggle-off',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('toggle-off', map-get($theme, 'toggle-off'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary',\\n        map-get($theme, 'button-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary',\\n        map-get($theme, 'button-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary',\\n        map-get($theme, 'button-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-primary',\\n        map-get($theme, 'button-danger-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-secondary',\\n        map-get($theme, 'button-danger-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-active',\\n        map-get($theme, 'background-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-active', map-get($theme, 'layer-active'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-active',\\n        map-get($theme, 'button-danger-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-active',\\n        map-get($theme, 'button-primary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-active',\\n        map-get($theme, 'button-secondary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-active',\\n        map-get($theme, 'button-tertiary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inset',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('focus-inset', map-get($theme, 'focus-inset'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'focus-inverse',\\n        map-get($theme, 'focus-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-hover',\\n        map-get($theme, 'background-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-hover', map-get($theme, 'layer-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('field-hover', map-get($theme, 'field-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse-hover',\\n        map-get($theme, 'background-inverse-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-primary-hover',\\n        map-get($theme, 'link-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-hover',\\n        map-get($theme, 'button-danger-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-hover',\\n        map-get($theme, 'button-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-hover',\\n        map-get($theme, 'button-secondary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-hover',\\n        map-get($theme, 'button-tertiary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected',\\n        map-get($theme, 'background-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected-hover',\\n        map-get($theme, 'background-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected',\\n        map-get($theme, 'layer-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-hover',\\n        map-get($theme, 'layer-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-inverse',\\n        map-get($theme, 'layer-selected-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle-selected',\\n        map-get($theme, 'border-subtle-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-disabled',\\n        map-get($theme, 'layer-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'field-disabled',\\n        map-get($theme, 'field-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-disabled',\\n        map-get($theme, 'border-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-disabled',\\n        map-get($theme, 'text-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-disabled',\\n        map-get($theme, 'button-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-disabled',\\n        map-get($theme, 'icon-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color-disabled',\\n        map-get($theme, 'text-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color-disabled',\\n        map-get($theme, 'icon-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-disabled',\\n        map-get($theme, 'layer-selected-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-background',\\n        map-get($theme, 'skeleton-background')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-element',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-element',\\n        map-get($theme, 'skeleton-element')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-01', $emit-difference)\\n    {\\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-02', $emit-difference)\\n    {\\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-03', $emit-difference)\\n    {\\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-01', $emit-difference)\\n    {\\n      @include custom-property('active-01', map-get($theme, 'active-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-field',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger', $emit-difference) {\\n      @include custom-property('danger', map-get($theme, 'danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-02', map-get($theme, 'caption-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-01', $emit-difference)\\n    {\\n      @include custom-property('label-01', map-get($theme, 'label-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-02', $emit-difference)\\n    {\\n      @include custom-property('label-02', map-get($theme, 'label-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-01',\\n        map-get($theme, 'helper-text-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-02',\\n        map-get($theme, 'helper-text-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-01',\\n        map-get($theme, 'body-short-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-02',\\n        map-get($theme, 'body-short-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-01', $emit-difference) {\\n      @include custom-property('code-01', map-get($theme, 'code-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-02', $emit-difference) {\\n      @include custom-property('code-02', map-get($theme, 'code-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-01',\\n        map-get($theme, 'productive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-02',\\n        map-get($theme, 'productive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-03',\\n        map-get($theme, 'productive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-04',\\n        map-get($theme, 'productive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-05',\\n        map-get($theme, 'productive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-06',\\n        map-get($theme, 'productive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-07',\\n        map-get($theme, 'productive-heading-07')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-01',\\n        map-get($theme, 'expressive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-02',\\n        map-get($theme, 'expressive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-03',\\n        map-get($theme, 'expressive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-04',\\n        map-get($theme, 'expressive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-05',\\n        map-get($theme, 'expressive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-06',\\n        map-get($theme, 'expressive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-paragraph-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-paragraph-01',\\n        map-get($theme, 'expressive-paragraph-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-01', map-get($theme, 'display-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-02', map-get($theme, 'display-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-03', map-get($theme, 'display-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-04', map-get($theme, 'display-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-08',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-09',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-10',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-11',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-12',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-13',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-13', map-get($theme, 'spacing-13'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-01',\\n        map-get($theme, 'fluid-spacing-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-02',\\n        map-get($theme, 'fluid-spacing-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-03',\\n        map-get($theme, 'fluid-spacing-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-04',\\n        map-get($theme, 'fluid-spacing-04')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-01', $emit-difference)\\n    {\\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-02', $emit-difference)\\n    {\\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-03', $emit-difference)\\n    {\\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-04', $emit-difference)\\n    {\\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-05', $emit-difference)\\n    {\\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-06', $emit-difference)\\n    {\\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-07', $emit-difference)\\n    {\\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-01', map-get($theme, 'container-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-02', map-get($theme, 'container-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-03', map-get($theme, 'container-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-04', map-get($theme, 'container-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-05', map-get($theme, 'container-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xsmall',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xsmall', map-get($theme, 'size-xsmall'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-small',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-small', map-get($theme, 'size-small'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-medium',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-medium', map-get($theme, 'size-medium'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-large',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-large', map-get($theme, 'size-large'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xlarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xlarge', map-get($theme, 'size-xlarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-2XLarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-2XLarge', map-get($theme, 'size-2XLarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\\n    }\\n  }\\n\\n  @content;\\n\\n  // Reset to default theme after apply in content\\n  @if $carbon--theme != $parent-carbon-theme {\\n    $carbon--theme: $parent-carbon-theme !global;\\n\\n    @include carbon--theme();\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"header\": \"-esm-patient-chart__start-visit-component__header___BaG7P\",\n\t\"body\": \"-esm-patient-chart__start-visit-component__body___I8eqv\",\n\t\"footer\": \"-esm-patient-chart__start-visit-component__footer___HutaB\",\n\t\"skeleton\": \"-esm-patient-chart__start-visit-component__skeleton___2Zfjn\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{padding:0;border:0;margin:0;font:inherit;font-size:100%;vertical-align:baseline}button,select,input,textarea{border-radius:0;font-family:inherit}input[type=text]::-ms-clear{display:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}body{line-height:1}sup{vertical-align:super}sub{vertical-align:sub}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:\\\"\\\"}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}button{margin:0}html{font-size:100%}body{font-weight:400;font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility}code{font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace}strong{font-weight:600}@media screen and (-ms-high-contrast: active){svg{fill:ButtonText}}h1{font-size:2.625rem;font-weight:300;line-height:1.199;letter-spacing:0}h2{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}h3{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}h4{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}h5{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}h6{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}p{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}a{color:#0f62fe}em{font-style:italic}@keyframes -esm-patient-chart__context-workspace__skeleton___S4ASM{0%{opacity:.3;transform:scaleX(0);transform-origin:left}20%{opacity:1;transform:scaleX(1);transform-origin:left}28%{transform:scaleX(1);transform-origin:right}51%{transform:scaleX(0);transform-origin:right}58%{transform:scaleX(0);transform-origin:right}82%{transform:scaleX(1);transform-origin:right}83%{transform:scaleX(1);transform-origin:left}96%{transform:scaleX(0);transform-origin:left}100%{opacity:.3;transform:scaleX(0);transform-origin:left}}.-esm-patient-chart__context-workspace__patientChartWrapper___gQgKi{display:flex;position:relative}.-esm-patient-chart__context-workspace__productiveHeading01___-Y6sC{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.-esm-patient-chart__context-workspace__productiveHeading02___5xZMs{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-patient-chart__context-workspace__productiveHeading03___GBZHD{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-patient-chart__context-workspace__productiveHeading04___2nuAf{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-patient-chart__context-workspace__bodyLong01___gH4cn{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-patient-chart__context-workspace__header___ESjp6{background-color:#e0e0e0;top:3rem;border-bottom:1px solid #a8a8a8;z-index:1000}.-esm-patient-chart__context-workspace__header___ESjp6 a{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0;color:#161616}.-esm-patient-chart__context-workspace__header___ESjp6 a:hover{color:inherit}.-esm-patient-chart__context-workspace__header___ESjp6:not(.-esm-patient-chart__context-workspace__maximized___xm\\\\+3X){right:auto;left:auto}.-esm-patient-chart__context-workspace__hide___Ur7Ad{display:none}.-esm-patient-chart__context-workspace__show___Sktmo{display:inline-block}.-esm-patient-chart__context-workspace__fixed___xg0z7{position:fixed !important;top:6rem;right:auto;left:auto;overflow-y:auto;background-color:#fff}.-esm-patient-chart__context-workspace__fullWidth___AQ5ZL{width:calc(100% - 50px)}.-esm-patient-chart__context-workspace__dynamicWidth___0rcme{width:calc(50% - 9.6rem)}.omrs-breakpoint-gt-tablet .-esm-patient-chart__context-workspace__maximized___xm\\\\+3X{position:fixed;top:0;left:0;right:0;bottom:0;z-index:1000}.omrs-breakpoint-gt-tablet .-esm-patient-chart__context-workspace__container___9P6oI{margin-right:3rem;flex:1;height:100vh}.omrs-breakpoint-lt-desktop .-esm-patient-chart__context-workspace__container___9P6oI{background-color:#f4f4f4;position:fixed;top:3rem;left:0;right:0;bottom:0;z-index:1000}.omrs-breakpoint-lt-desktop .-esm-patient-chart__context-workspace__header___ESjp6{display:none}.omrs-breakpoint-lt-desktop .-esm-patient-chart__context-workspace__fixed___xg0z7{top:3rem;background-color:#f4f4f4}.omrs-breakpoint-lt-desktop .-esm-patient-chart__context-workspace__dynamicWidth___0rcme{width:100%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_css--reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_font-family.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/icons/mixins.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_helper-mixins.scss\",\"webpack://./src/root.scss\",\"webpack://./src/workspace/context-workspace.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCTE,2ZAiFE,SAAA,CACA,QAAA,CACA,QAAA,CACA,YAAA,CACA,cAAA,CACA,uBAAA,CAIF,6BAIE,eAAA,CACA,mBAAA,CAGF,4BACE,YAAA,CAIF,mFAYE,aAAA,CAGF,KACE,aAAA,CAGF,IACE,oBAAA,CAGF,IACE,kBAAA,CAGF,MAEE,eAAA,CAGF,aAEE,WAAA,CAGF,wDAIE,UAAA,CAGF,MACE,wBAAA,CACA,gBAAA,CAGF,EACE,qBAAA,CAIF,OACE,QAAA,CC3KJ,KACE,cAAA,CAGF,KC0CA,eAAA,CDvCE,gEAViB,CAWjB,iCAAA,CACA,kCAAA,CACA,iCAAA,CAGF,KACE,wGAhBiB,CAmBnB,OC6BA,eAAA,CCxDA,8CACE,IACE,eAAA,CAAA,CFkCJ,GGggBE,kBAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlrBxB,GG4fE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH9qBxB,GGwfE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH1qBxB,GGofE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CHtqBxB,GGgfE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlqBxB,GG4eE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CH9pBxB,EGweE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CH1pBxB,EAII,aAAA,CAMJ,GACE,iBAAA,CIkHF,mEACE,GACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,SAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,KACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAAA,CC3ON,oEACE,YAAA,CACA,iBAAA,CAGF,oEFuiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CEztB1B,oEFmiBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CErtB1B,oEF+hBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CEjtB1B,oEF2hBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CE7sB1B,2DFuhBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CGpuB1B,uDACE,wBC4CQ,CD3CR,QAAA,CACA,+BAAA,CACA,YAAA,CAEA,yDHwiBE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CG5tBtB,aCwCQ,CDtCR,+DACE,aAAA,CAIJ,uHACE,UAAA,CACA,SAAA,CAIJ,qDACE,YAAA,CAGF,qDACE,oBAAA,CAGF,sDACE,yBAAA,CACA,QAAA,CACA,UAAA,CACA,SAAA,CACA,eAAA,CACA,qBCSQ,CDNV,0DAEE,uBAAA,CAGF,6DACE,wBAAA,CAKA,sFACE,cAAA,CACA,KAAA,CACA,MAAA,CACA,OAAA,CACA,QAAA,CACA,YAAA,CAGF,qFACE,iBAAA,CACA,MAAA,CACA,YAAA,CAMF,sFACE,wBCzBM,CD0BN,cAAA,CACA,QAAA,CACA,MAAA,CACA,OAAA,CACA,QAAA,CACA,YAAA,CAGF,mFACE,YAAA,CAGF,kFACE,QAAA,CACA,wBCxCM,CD2CR,yFACE,UAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n@import './vendor/@carbon/elements/scss/type/reset';\\n@import './vendor/@carbon/elements/scss/icons/mixins';\\n\\n/// Resets default browser styling\\n/// @access public\\n/// @group global-reset\\n@mixin reset {\\n  @if variable-exists(css--reset) == false or $css--reset == false {\\n    box-sizing: border-box;\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    font-family: inherit;\\n    font-size: 100%;\\n    vertical-align: baseline;\\n\\n    *,\\n    *::before,\\n    *::after {\\n      box-sizing: inherit;\\n    }\\n  }\\n}\\n\\n@include exports('css--reset') {\\n  @if variable-exists(css--reset) == false or $css--reset == true {\\n    // http://cssreset.com/scripts/eric-meyer-reset-css/\\n    html,\\n    body,\\n    div,\\n    span,\\n    applet,\\n    object,\\n    iframe,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p,\\n    blockquote,\\n    pre,\\n    a,\\n    abbr,\\n    acronym,\\n    address,\\n    big,\\n    cite,\\n    code,\\n    del,\\n    dfn,\\n    em,\\n    img,\\n    ins,\\n    kbd,\\n    q,\\n    s,\\n    samp,\\n    small,\\n    strike,\\n    strong,\\n    sub,\\n    sup,\\n    tt,\\n    var,\\n    b,\\n    u,\\n    i,\\n    center,\\n    dl,\\n    dt,\\n    dd,\\n    ol,\\n    ul,\\n    li,\\n    fieldset,\\n    form,\\n    label,\\n    legend,\\n    table,\\n    caption,\\n    tbody,\\n    tfoot,\\n    thead,\\n    tr,\\n    th,\\n    td,\\n    article,\\n    aside,\\n    canvas,\\n    details,\\n    embed,\\n    figure,\\n    figcaption,\\n    footer,\\n    header,\\n    hgroup,\\n    menu,\\n    nav,\\n    output,\\n    ruby,\\n    section,\\n    summary,\\n    time,\\n    mark,\\n    audio,\\n    video {\\n      padding: 0;\\n      border: 0;\\n      margin: 0;\\n      font: inherit;\\n      font-size: 100%;\\n      vertical-align: baseline;\\n    }\\n\\n    // Chrome 62 fix\\n    button,\\n    select,\\n    input,\\n    textarea {\\n      border-radius: 0;\\n      font-family: inherit;\\n    }\\n\\n    input[type='text']::-ms-clear {\\n      display: none;\\n    }\\n\\n    /* HTML5 display-role reset for older browsers */\\n    article,\\n    aside,\\n    details,\\n    figcaption,\\n    figure,\\n    footer,\\n    header,\\n    hgroup,\\n    main,\\n    menu,\\n    nav,\\n    section {\\n      display: block;\\n    }\\n\\n    body {\\n      line-height: 1;\\n    }\\n\\n    sup {\\n      vertical-align: super;\\n    }\\n\\n    sub {\\n      vertical-align: sub;\\n    }\\n\\n    ol,\\n    ul {\\n      list-style: none;\\n    }\\n\\n    blockquote,\\n    q {\\n      quotes: none;\\n    }\\n\\n    blockquote::before,\\n    blockquote::after,\\n    q::before,\\n    q::after {\\n      content: '';\\n    }\\n\\n    table {\\n      border-collapse: collapse;\\n      border-spacing: 0;\\n    }\\n\\n    * {\\n      box-sizing: border-box;\\n    }\\n\\n    // Fix to remove added margins on buttons in safari (see #5155)\\n    button {\\n      margin: 0;\\n    }\\n\\n    @include carbon--type-reset;\\n    @include carbon--icons;\\n  }\\n}\\n\\n@include exports('css--default-type') {\\n  @if variable-exists(css--default-type) == false or $css--default-type == true\\n  {\\n    @include carbon--default-type;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/convert';\\n@import 'font-family';\\n@import 'styles';\\n\\n/// Include a type reset for a given body and mono font family\\n/// @param {String} $body-font-family [carbon--font-family('sans')] - The font family used on the `<body>` element\\n/// @param {String} $mono-font-family [carbon--font-family('mono')] - The font family used on elements that require mono fonts, like the `<code>` element\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-reset(\\n  // TODO: remove in next major release. This has been replaced with 100%\\n  $base-font-size: $carbon--base-font-size,\\n  $body-font-family: carbon--font-family('sans'),\\n  $mono-font-family: carbon--font-family('mono')\\n) {\\n  html {\\n    font-size: 100%;\\n  }\\n\\n  body {\\n    @include carbon--font-weight('regular');\\n\\n    font-family: $body-font-family;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-font-smoothing: antialiased;\\n    text-rendering: optimizeLegibility;\\n  }\\n\\n  code {\\n    font-family: $mono-font-family;\\n  }\\n\\n  strong {\\n    @include carbon--font-weight('semibold');\\n  }\\n}\\n\\n/// Include default type styles\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--default-type {\\n  h1 {\\n    @include carbon--type-style('productive-heading-06');\\n  }\\n\\n  h2 {\\n    @include carbon--type-style('productive-heading-05');\\n  }\\n\\n  h3 {\\n    @include carbon--type-style('productive-heading-04');\\n  }\\n\\n  h4 {\\n    @include carbon--type-style('productive-heading-03');\\n  }\\n\\n  h5 {\\n    @include carbon--type-style('productive-heading-02');\\n  }\\n\\n  h6 {\\n    @include carbon--type-style('productive-heading-01');\\n  }\\n\\n  p {\\n    @include carbon--type-style('body-long-02');\\n  }\\n\\n  a {\\n    @if global-variable-exists('carbon--theme') and\\n      map-has-key($carbon--theme, 'link-01')\\n    {\\n      color: map-get($carbon--theme, 'link-01');\\n    } @else {\\n      color: #0062fe;\\n    }\\n  }\\n\\n  em {\\n    font-style: italic;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\\n/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-families: (\\n  'mono':\\n    unquote(\\n      \\\"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\\\"\\n    ),\\n  'sans': unquote(\\\"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-condensed':\\n    unquote(\\\"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-hebrew':\\n    unquote(\\n      \\\"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\\\"\\n    ),\\n  'serif': unquote(\\\"'IBM Plex Serif', 'Georgia', Times, serif\\\"),\\n) !default;\\n\\n/// Get the font-family for an IBM Plex font\\n/// @param {String} $name\\n/// @return {String}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-family($name) {\\n  @return map-get($carbon--font-families, $name);\\n}\\n\\n/// Include the `font-family` definition for the given name in your selector\\n/// @param {String} $name\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-family($name) {\\n  font-family: carbon--font-family($name);\\n}\\n\\n/// Suggested font weights to be used in product\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-weights: (\\n  'light': 300,\\n  'regular': 400,\\n  'semibold': 600,\\n) !default;\\n\\n/// Retrieve the font-weight value for a given name\\n/// @param {String} $weight\\n/// @return {Number}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-weight($weight) {\\n  @return map-get($carbon--font-weights, $weight);\\n}\\n\\n/// Set the `font-weight` property with the value for a given name\\n/// @param {String} $weight\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-weight($weight) {\\n  font-weight: carbon--font-weight($weight);\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Makes SVGs accessible in high contrast mode\\n/// @link https://github.com/IBM/carbon-elements/issues/345#issuecomment-466577293 Carbon-elements #345\\n/// @access public\\n/// @group @carbon/icons\\n@mixin carbon--icons {\\n  @media screen and (-ms-high-contrast: active) {\\n    svg {\\n      fill: ButtonText;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n//----------------------------------------------\\n// Mixins\\n// ---------------------------------------------\\n//\\n//   Category             ||  Description\\n//   ===========================================\\n//   Misc                 ||  General helper @mixins\\n//   Deprecated           ||  Not used anymore\\n//   ===========================================\\n\\n//----------------------------------------------\\n// Misc\\n// ---------------------------------------------\\n\\n@import 'vars';\\n@import 'css--reset';\\n@import 'typography';\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n\\n/// Adds text overflow styling\\n/// @access public\\n/// @param {Number} $width [false] - Value of width if you want to set width, else nothing\\n/// @example @include text-overflow(300px);\\n/// @group global-helpers\\n@mixin text-overflow($width: false) {\\n  display: block;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n\\n  // apply a width if width parameter exists\\n  @if ($width) {\\n    width: $width;\\n  }\\n}\\n\\n/// Adds placeholder text color\\n/// @access public\\n/// @example @include placeholder-colors;\\n/// @group global-helpers\\n@mixin placeholder-colors {\\n  color: $text-05;\\n  opacity: 1;\\n}\\n\\n/// Adds box shadow\\n/// @access public\\n/// @example @include box-shadow;\\n/// @group global-helpers\\n@mixin box-shadow {\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\\n}\\n\\n/// Adds outline styles depending on specific type\\n/// @access public\\n/// @param {String} $type ['border'] - Type of outline from: `border`, `blurred`, `outline`, `invalid`, `reset`\\n/// @example @include focus-outline('outline');\\n/// @group global-helpers\\n@mixin focus-outline($type: 'border') {\\n  @if ($type == 'border') {\\n    outline: 1px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'blurred') {\\n    box-shadow: 0 0 0 3px $focus;\\n    outline: 1px solid transparent;\\n  }\\n\\n  @if ($type == 'outline') {\\n    outline: 2px solid $focus;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'outline-compat') {\\n    box-sizing: border-box;\\n    border: 2px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      border-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'invalid') {\\n    outline: 2px solid $support-01;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'reset') {\\n    outline: 2px solid transparent;\\n    outline-offset: -2px;\\n  }\\n}\\n\\n/// Adds rotational transformation\\n/// @access public\\n/// @param {Number} $deg - How many degrees to rotate\\n/// @param {Number} $speed - Speed of rotation\\n/// @param {Value} $origin [center] - `transform-origin`\\n/// @example @include rotate(90deg, 300ms);\\n/// @group global-helpers\\n@mixin rotate($deg, $speed, $origin: center) {\\n  transform: rotate($deg);\\n  transform-origin: $origin;\\n  transition: transform $speed;\\n}\\n\\n/// Adds styles to hide content\\n/// @access public\\n/// @group global-helpers\\n@mixin hidden {\\n  position: absolute;\\n  overflow: hidden;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  border: 0;\\n  margin: -1px;\\n  clip: rect(0, 0, 0, 0);\\n  visibility: inherit;\\n  white-space: nowrap;\\n}\\n\\n/// Resets button styles\\n/// @access public\\n/// @param {Bool} $width [true] - Sets width to 100% if true\\n/// @example @include button-reset($width: false);\\n/// @group global-helpers\\n@mixin button-reset($width: true) {\\n  @include reset;\\n\\n  display: inline-block;\\n  padding: 0;\\n  border: 0;\\n  appearance: none;\\n  background: none;\\n  cursor: pointer;\\n\\n  @if ($width == true) {\\n    width: 100%;\\n  }\\n\\n  &::-moz-focus-inner {\\n    border: 0;\\n  }\\n}\\n\\n/// Skeleton loading animation\\n/// @access public\\n/// @example @include skeleton;\\n/// @group global-helpers\\n@mixin skeleton {\\n  position: relative;\\n  padding: 0;\\n  border: none;\\n  background: $skeleton-01;\\n  box-shadow: none;\\n  pointer-events: none;\\n\\n  &:hover,\\n  &:focus,\\n  &:active {\\n    border: none;\\n    cursor: default;\\n    outline: none;\\n  }\\n\\n  &::before {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    animation: 3000ms ease-in-out skeleton infinite;\\n    background: $skeleton-02;\\n    content: '';\\n    will-change: transform-origin, transform, opacity;\\n\\n    @media (prefers-reduced-motion: reduce) {\\n      animation: none;\\n    }\\n  }\\n}\\n\\n@include exports('skeleton') {\\n  @keyframes skeleton {\\n    0% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    20% {\\n      opacity: 1;\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    28% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    51% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    58% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    82% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    83% {\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    96% {\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    100% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n  }\\n}\\n\\n/// Windows HCM Mixin\\n/// @access public\\n/// @example @include high-contrast-mode;\\n/// @group global-helpers\\n/// We should set HCM styles at the end of each file to ensure they are not overridden\\n@mixin high-contrast-mode($type: '') {\\n  @media screen and (-ms-high-contrast: active),\\n    (forced-colors: active),\\n    (prefers-contrast) {\\n    @if ($type == 'icon-fill') {\\n      fill: ButtonText;\\n    }\\n\\n    @if ($type == 'focus') {\\n      color: Highlight;\\n      outline: 1px solid Highlight;\\n    }\\n\\n    @if ($type == 'outline') {\\n      outline: 1px solid transparent;\\n    }\\n\\n    @if ($type == 'disabled') {\\n      color: GrayText;\\n      fill: GrayText;\\n    }\\n\\n    @content;\\n  }\\n}\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/mixins\\\";\\n\\n.patientChartWrapper {\\n  display: flex;\\n  position: relative;\\n}\\n\\n.productiveHeading01 {\\n  @include carbon--type-style(\\\"productive-heading-01\\\");\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n}\\n\\n.productiveHeading03 {\\n  @include carbon--type-style(\\\"productive-heading-03\\\");\\n}\\n\\n.productiveHeading04 {\\n  @include carbon--type-style(\\\"productive-heading-04\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\",\"@import \\\"../root.scss\\\";\\n\\n.header {\\n  background-color: $ui-03;\\n  top: 3rem;\\n  border-bottom: 1px solid $text-03;\\n  z-index: 1000;\\n\\n  a {\\n    @include carbon--type-style('productive-heading-02');\\n    color: $text-01;\\n\\n    &:hover {\\n      color: inherit;\\n    }\\n  }\\n\\n  &:not(.maximized) {\\n    right: auto;\\n    left: auto;\\n  }\\n}\\n\\n.hide {\\n  display: none;\\n}\\n\\n.show {\\n  display: inline-block;\\n}\\n\\n.fixed {\\n  position: fixed !important;\\n  top: 6rem;\\n  right: auto;\\n  left: auto;\\n  overflow-y: auto;\\n  background-color: $ui-02;\\n}\\n\\n.fullWidth {\\n  // Subtract side rail width\\n  width: calc(100% - 50px);\\n}\\n\\n.dynamicWidth {\\n  width: calc(50% - 9.6rem);\\n}\\n\\n/* Desktop */\\n:global(.omrs-breakpoint-gt-tablet) {\\n  .maximized {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    z-index: 1000;\\n  }\\n  \\n  .container {\\n    margin-right: 3rem;\\n    flex: 1;\\n    height: 100vh;\\n  }\\n}\\n\\n/* Tablet */\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .container {\\n    background-color: $ui-01;\\n    position: fixed;\\n    top: 3rem;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    z-index: 1000;\\n  }\\n\\n  .header {\\n    display: none;\\n  }\\n\\n  .fixed {\\n    top: 3rem;\\n    background-color: $ui-01;\\n  }\\n\\n  .dynamicWidth {\\n    width: 100%;\\n  }\\n}\\n\",\"// Code generated by @carbon/themes. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './themes';\\n\\n/// Define theme variables from a map of tokens\\n/// @access public\\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\\n///\\n/// @example scss\\n///   // Default usage\\n///   @include carbon--theme();\\n///\\n///   // Alternate styling (not white theme)\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     // declarations...\\n///   }\\n///\\n///   // Inline styling\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     .my-dark-theme {\\n///       // declarations...\\n///     }\\n///   }\\n///\\n/// @group @carbon/themes\\n@mixin carbon--theme(\\n  $theme: $carbon--theme,\\n  $emit-custom-properties: false,\\n  $emit-difference: false\\n) {\\n  $parent-carbon-theme: $carbon--theme;\\n  $carbon--theme: $theme !global;\\n  $interactive-01: map-get($theme, 'interactive-01') !global;\\n  $interactive-02: map-get($theme, 'interactive-02') !global;\\n  $interactive-03: map-get($theme, 'interactive-03') !global;\\n  $interactive-04: map-get($theme, 'interactive-04') !global;\\n  $ui-background: map-get($theme, 'ui-background') !global;\\n  $ui-01: map-get($theme, 'ui-01') !global;\\n  $ui-02: map-get($theme, 'ui-02') !global;\\n  $ui-03: map-get($theme, 'ui-03') !global;\\n  $ui-04: map-get($theme, 'ui-04') !global;\\n  $ui-05: map-get($theme, 'ui-05') !global;\\n  $text-01: map-get($theme, 'text-01') !global;\\n  $text-02: map-get($theme, 'text-02') !global;\\n  $text-03: map-get($theme, 'text-03') !global;\\n  $text-04: map-get($theme, 'text-04') !global;\\n  $text-05: map-get($theme, 'text-05') !global;\\n  $text-error: map-get($theme, 'text-error') !global;\\n  $icon-01: map-get($theme, 'icon-01') !global;\\n  $icon-02: map-get($theme, 'icon-02') !global;\\n  $icon-03: map-get($theme, 'icon-03') !global;\\n  $link-01: map-get($theme, 'link-01') !global;\\n  $link-02: map-get($theme, 'link-02') !global;\\n  $inverse-link: map-get($theme, 'inverse-link') !global;\\n  $field-01: map-get($theme, 'field-01') !global;\\n  $field-02: map-get($theme, 'field-02') !global;\\n  $inverse-01: map-get($theme, 'inverse-01') !global;\\n  $inverse-02: map-get($theme, 'inverse-02') !global;\\n  $support-01: map-get($theme, 'support-01') !global;\\n  $support-02: map-get($theme, 'support-02') !global;\\n  $support-03: map-get($theme, 'support-03') !global;\\n  $support-04: map-get($theme, 'support-04') !global;\\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\\n  $overlay-01: map-get($theme, 'overlay-01') !global;\\n  $danger-01: map-get($theme, 'danger-01') !global;\\n  $danger-02: map-get($theme, 'danger-02') !global;\\n  $focus: map-get($theme, 'focus') !global;\\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\\n  $hover-primary: map-get($theme, 'hover-primary') !global;\\n  $active-primary: map-get($theme, 'active-primary') !global;\\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\\n  $active-secondary: map-get($theme, 'active-secondary') !global;\\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\\n  $hover-ui: map-get($theme, 'hover-ui') !global;\\n  $hover-light-ui: map-get($theme, 'hover-light-ui') !global;\\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\\n  $active-ui: map-get($theme, 'active-ui') !global;\\n  $active-light-ui: map-get($theme, 'active-light-ui') !global;\\n  $selected-ui: map-get($theme, 'selected-ui') !global;\\n  $selected-light-ui: map-get($theme, 'selected-light-ui') !global;\\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\\n  $hover-danger: map-get($theme, 'hover-danger') !global;\\n  $active-danger: map-get($theme, 'active-danger') !global;\\n  $hover-row: map-get($theme, 'hover-row') !global;\\n  $visited-link: map-get($theme, 'visited-link') !global;\\n  $disabled-01: map-get($theme, 'disabled-01') !global;\\n  $disabled-02: map-get($theme, 'disabled-02') !global;\\n  $disabled-03: map-get($theme, 'disabled-03') !global;\\n  $highlight: map-get($theme, 'highlight') !global;\\n  $decorative-01: map-get($theme, 'decorative-01') !global;\\n  $button-separator: map-get($theme, 'button-separator') !global;\\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\\n  $background: map-get($theme, 'background') !global;\\n  $layer: map-get($theme, 'layer') !global;\\n  $layer-accent: map-get($theme, 'layer-accent') !global;\\n  $layer-accent-hover: map-get($theme, 'layer-accent-hover') !global;\\n  $layer-accent-active: map-get($theme, 'layer-accent-active') !global;\\n  $field: map-get($theme, 'field') !global;\\n  $background-inverse: map-get($theme, 'background-inverse') !global;\\n  $background-brand: map-get($theme, 'background-brand') !global;\\n  $interactive: map-get($theme, 'interactive') !global;\\n  $border-subtle: map-get($theme, 'border-subtle') !global;\\n  $border-strong: map-get($theme, 'border-strong') !global;\\n  $border-inverse: map-get($theme, 'border-inverse') !global;\\n  $border-interactive: map-get($theme, 'border-interactive') !global;\\n  $text-primary: map-get($theme, 'text-primary') !global;\\n  $text-secondary: map-get($theme, 'text-secondary') !global;\\n  $text-placeholder: map-get($theme, 'text-placeholder') !global;\\n  $text-helper: map-get($theme, 'text-helper') !global;\\n  $text-on-color: map-get($theme, 'text-on-color') !global;\\n  $text-inverse: map-get($theme, 'text-inverse') !global;\\n  $link-primary: map-get($theme, 'link-primary') !global;\\n  $link-secondary: map-get($theme, 'link-secondary') !global;\\n  $link-visited: map-get($theme, 'link-visited') !global;\\n  $link-inverse: map-get($theme, 'link-inverse') !global;\\n  $icon-primary: map-get($theme, 'icon-primary') !global;\\n  $icon-secondary: map-get($theme, 'icon-secondary') !global;\\n  $icon-on-color: map-get($theme, 'icon-on-color') !global;\\n  $icon-inverse: map-get($theme, 'icon-inverse') !global;\\n  $support-error: map-get($theme, 'support-error') !global;\\n  $support-success: map-get($theme, 'support-success') !global;\\n  $support-warning: map-get($theme, 'support-warning') !global;\\n  $support-info: map-get($theme, 'support-info') !global;\\n  $support-error-inverse: map-get($theme, 'support-error-inverse') !global;\\n  $support-success-inverse: map-get($theme, 'support-success-inverse') !global;\\n  $support-warning-inverse: map-get($theme, 'support-warning-inverse') !global;\\n  $support-info-inverse: map-get($theme, 'support-info-inverse') !global;\\n  $overlay: map-get($theme, 'overlay') !global;\\n  $toggle-off: map-get($theme, 'toggle-off') !global;\\n  $button-primary: map-get($theme, 'button-primary') !global;\\n  $button-secondary: map-get($theme, 'button-secondary') !global;\\n  $button-tertiary: map-get($theme, 'button-tertiary') !global;\\n  $button-danger-primary: map-get($theme, 'button-danger-primary') !global;\\n  $button-danger-secondary: map-get($theme, 'button-danger-secondary') !global;\\n  $background-active: map-get($theme, 'background-active') !global;\\n  $layer-active: map-get($theme, 'layer-active') !global;\\n  $button-danger-active: map-get($theme, 'button-danger-active') !global;\\n  $button-primary-active: map-get($theme, 'button-primary-active') !global;\\n  $button-secondary-active: map-get($theme, 'button-secondary-active') !global;\\n  $button-tertiary-active: map-get($theme, 'button-tertiary-active') !global;\\n  $focus-inset: map-get($theme, 'focus-inset') !global;\\n  $focus-inverse: map-get($theme, 'focus-inverse') !global;\\n  $background-hover: map-get($theme, 'background-hover') !global;\\n  $layer-hover: map-get($theme, 'layer-hover') !global;\\n  $field-hover: map-get($theme, 'field-hover') !global;\\n  $background-inverse-hover: map-get(\\n    $theme,\\n    'background-inverse-hover'\\n  ) !global;\\n  $link-primary-hover: map-get($theme, 'link-primary-hover') !global;\\n  $button-danger-hover: map-get($theme, 'button-danger-hover') !global;\\n  $button-primary-hover: map-get($theme, 'button-primary-hover') !global;\\n  $button-secondary-hover: map-get($theme, 'button-secondary-hover') !global;\\n  $button-tertiary-hover: map-get($theme, 'button-tertiary-hover') !global;\\n  $background-selected: map-get($theme, 'background-selected') !global;\\n  $background-selected-hover: map-get(\\n    $theme,\\n    'background-selected-hover'\\n  ) !global;\\n  $layer-selected: map-get($theme, 'layer-selected') !global;\\n  $layer-selected-hover: map-get($theme, 'layer-selected-hover') !global;\\n  $layer-selected-inverse: map-get($theme, 'layer-selected-inverse') !global;\\n  $border-subtle-selected: map-get($theme, 'border-subtle-selected') !global;\\n  $layer-disabled: map-get($theme, 'layer-disabled') !global;\\n  $field-disabled: map-get($theme, 'field-disabled') !global;\\n  $border-disabled: map-get($theme, 'border-disabled') !global;\\n  $text-disabled: map-get($theme, 'text-disabled') !global;\\n  $button-disabled: map-get($theme, 'button-disabled') !global;\\n  $icon-disabled: map-get($theme, 'icon-disabled') !global;\\n  $text-on-color-disabled: map-get($theme, 'text-on-color-disabled') !global;\\n  $icon-on-color-disabled: map-get($theme, 'icon-on-color-disabled') !global;\\n  $layer-selected-disabled: map-get($theme, 'layer-selected-disabled') !global;\\n  $skeleton-background: map-get($theme, 'skeleton-background') !global;\\n  $skeleton-element: map-get($theme, 'skeleton-element') !global;\\n  $brand-01: map-get($theme, 'brand-01') !global;\\n  $brand-02: map-get($theme, 'brand-02') !global;\\n  $brand-03: map-get($theme, 'brand-03') !global;\\n  $active-01: map-get($theme, 'active-01') !global;\\n  $hover-field: map-get($theme, 'hover-field') !global;\\n  $danger: map-get($theme, 'danger') !global;\\n  $caption-01: map-get($theme, 'caption-01') !global;\\n  $caption-02: map-get($theme, 'caption-02') !global;\\n  $label-01: map-get($theme, 'label-01') !global;\\n  $label-02: map-get($theme, 'label-02') !global;\\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\\n  $helper-text-02: map-get($theme, 'helper-text-02') !global;\\n  $body-short-01: map-get($theme, 'body-short-01') !global;\\n  $body-long-01: map-get($theme, 'body-long-01') !global;\\n  $body-short-02: map-get($theme, 'body-short-02') !global;\\n  $body-long-02: map-get($theme, 'body-long-02') !global;\\n  $code-01: map-get($theme, 'code-01') !global;\\n  $code-02: map-get($theme, 'code-02') !global;\\n  $heading-01: map-get($theme, 'heading-01') !global;\\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\\n  $heading-02: map-get($theme, 'heading-02') !global;\\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\\n  $quotation-01: map-get($theme, 'quotation-01') !global;\\n  $quotation-02: map-get($theme, 'quotation-02') !global;\\n  $display-01: map-get($theme, 'display-01') !global;\\n  $display-02: map-get($theme, 'display-02') !global;\\n  $display-03: map-get($theme, 'display-03') !global;\\n  $display-04: map-get($theme, 'display-04') !global;\\n  $spacing-01: map-get($theme, 'spacing-01') !global;\\n  $spacing-02: map-get($theme, 'spacing-02') !global;\\n  $spacing-03: map-get($theme, 'spacing-03') !global;\\n  $spacing-04: map-get($theme, 'spacing-04') !global;\\n  $spacing-05: map-get($theme, 'spacing-05') !global;\\n  $spacing-06: map-get($theme, 'spacing-06') !global;\\n  $spacing-07: map-get($theme, 'spacing-07') !global;\\n  $spacing-08: map-get($theme, 'spacing-08') !global;\\n  $spacing-09: map-get($theme, 'spacing-09') !global;\\n  $spacing-10: map-get($theme, 'spacing-10') !global;\\n  $spacing-11: map-get($theme, 'spacing-11') !global;\\n  $spacing-12: map-get($theme, 'spacing-12') !global;\\n  $spacing-13: map-get($theme, 'spacing-13') !global;\\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\\n  $layout-01: map-get($theme, 'layout-01') !global;\\n  $layout-02: map-get($theme, 'layout-02') !global;\\n  $layout-03: map-get($theme, 'layout-03') !global;\\n  $layout-04: map-get($theme, 'layout-04') !global;\\n  $layout-05: map-get($theme, 'layout-05') !global;\\n  $layout-06: map-get($theme, 'layout-06') !global;\\n  $layout-07: map-get($theme, 'layout-07') !global;\\n  $container-01: map-get($theme, 'container-01') !global;\\n  $container-02: map-get($theme, 'container-02') !global;\\n  $container-03: map-get($theme, 'container-03') !global;\\n  $container-04: map-get($theme, 'container-04') !global;\\n  $container-05: map-get($theme, 'container-05') !global;\\n  $size-xsmall: map-get($theme, 'size-xsmall') !global;\\n  $size-small: map-get($theme, 'size-small') !global;\\n  $size-medium: map-get($theme, 'size-medium') !global;\\n  $size-large: map-get($theme, 'size-large') !global;\\n  $size-xlarge: map-get($theme, 'size-xlarge') !global;\\n  $size-2XLarge: map-get($theme, 'size-2XLarge') !global;\\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\\n\\n  @if global-variable-exists('feature-flags') ==\\n    false or\\n    global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-v11-release') !=\\n    true\\n  {\\n    $background: $ui-background !global;\\n    $layer: $ui-01 !global;\\n    $layer-accent: $ui-03 !global;\\n    $field: $field-01 !global;\\n    $background-inverse: $inverse-02 !global;\\n    $background-brand: $interactive-01 !global;\\n    $interactive: $interactive-04 !global;\\n    $border-subtle: $ui-03 !global;\\n    $border-strong: $ui-04 !global;\\n    $border-inverse: $ui-05 !global;\\n    $border-interactive: $interactive-04 !global;\\n    $text-primary: $text-01 !global;\\n    $text-secondary: $text-02 !global;\\n    $text-placeholder: $text-03 !global;\\n    $text-helper: $text-05 !global;\\n    $text-on-color: $text-04 !global;\\n    $text-inverse: $inverse-01 !global;\\n    $link-primary: $link-01 !global;\\n    $link-secondary: $link-02 !global;\\n    $link-visited: $visited-link !global;\\n    $link-inverse: $inverse-link !global;\\n    $icon-primary: $icon-01 !global;\\n    $icon-secondary: $icon-02 !global;\\n    $icon-on-color: $icon-03 !global;\\n    $icon-inverse: $inverse-01 !global;\\n    $support-error: $support-01 !global;\\n    $support-success: $support-02 !global;\\n    $support-warning: $support-03 !global;\\n    $support-info: $support-04 !global;\\n    $support-error-inverse: $inverse-support-01 !global;\\n    $support-success-inverse: $inverse-support-02 !global;\\n    $support-warning-inverse: $inverse-support-03 !global;\\n    $support-info-inverse: $inverse-support-04 !global;\\n    $overlay: $overlay-01 !global;\\n    $toggle-off: $ui-04 !global;\\n    $button-primary: $interactive-01 !global;\\n    $button-secondary: $interactive-02 !global;\\n    $button-tertiary: $interactive-03 !global;\\n    $button-danger-primary: $danger-01 !global;\\n    $button-danger-secondary: $danger-02 !global;\\n    $background-active: $active-ui !global;\\n    $layer-active: $active-ui !global;\\n    $button-danger-active: $active-danger !global;\\n    $button-primary-active: $active-primary !global;\\n    $button-secondary-active: $active-secondary !global;\\n    $button-tertiary-active: $active-tertiary !global;\\n    $focus-inset: $inverse-01 !global;\\n    $focus-inverse: $inverse-focus-ui !global;\\n    $background-hover: $hover-ui !global;\\n    $layer-hover: $hover-ui !global;\\n    $field-hover: $hover-ui !global;\\n    $background-inverse-hover: $inverse-hover-ui !global;\\n    $link-primary-hover: $hover-primary-text !global;\\n    $button-danger-hover: $hover-danger !global;\\n    $button-primary-hover: $hover-primary !global;\\n    $button-secondary-hover: $hover-secondary !global;\\n    $button-tertiary-hover: $hover-tertiary !global;\\n    $background-selected: $selected-ui !global;\\n    $background-selected-hover: $hover-selected-ui !global;\\n    $layer-selected: $selected-ui !global;\\n    $layer-selected-hover: $hover-selected-ui !global;\\n    $layer-selected-inverse: $ui-05 !global;\\n    $border-subtle-selected: $active-ui !global;\\n    $layer-disabled: $disabled-01 !global;\\n    $field-disabled: $disabled-01 !global;\\n    $border-disabled: $disabled-01 !global;\\n    $text-disabled: $disabled-02 !global;\\n    $button-disabled: $disabled-02 !global;\\n    $icon-disabled: $disabled-02 !global;\\n    $text-on-color-disabled: $disabled-03 !global;\\n    $icon-on-color-disabled: $disabled-03 !global;\\n    $layer-selected-disabled: $disabled-03 !global;\\n    $skeleton-background: $skeleton-01 !global;\\n    $skeleton-element: $skeleton-02 !global;\\n  }\\n  @if global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-css-custom-properties')\\n  {\\n    $interactive-01: var(\\n      --#{$custom-property-prefix}-interactive-01,\\n      map-get($theme, 'interactive-01')\\n    ) !global;\\n    $interactive-02: var(\\n      --#{$custom-property-prefix}-interactive-02,\\n      map-get($theme, 'interactive-02')\\n    ) !global;\\n    $interactive-03: var(\\n      --#{$custom-property-prefix}-interactive-03,\\n      map-get($theme, 'interactive-03')\\n    ) !global;\\n    $interactive-04: var(\\n      --#{$custom-property-prefix}-interactive-04,\\n      map-get($theme, 'interactive-04')\\n    ) !global;\\n    $ui-background: var(\\n      --#{$custom-property-prefix}-ui-background,\\n      map-get($theme, 'ui-background')\\n    ) !global;\\n    $ui-01: var(\\n      --#{$custom-property-prefix}-ui-01,\\n      map-get($theme, 'ui-01')\\n    ) !global;\\n    $ui-02: var(\\n      --#{$custom-property-prefix}-ui-02,\\n      map-get($theme, 'ui-02')\\n    ) !global;\\n    $ui-03: var(\\n      --#{$custom-property-prefix}-ui-03,\\n      map-get($theme, 'ui-03')\\n    ) !global;\\n    $ui-04: var(\\n      --#{$custom-property-prefix}-ui-04,\\n      map-get($theme, 'ui-04')\\n    ) !global;\\n    $ui-05: var(\\n      --#{$custom-property-prefix}-ui-05,\\n      map-get($theme, 'ui-05')\\n    ) !global;\\n    $text-01: var(\\n      --#{$custom-property-prefix}-text-01,\\n      map-get($theme, 'text-01')\\n    ) !global;\\n    $text-02: var(\\n      --#{$custom-property-prefix}-text-02,\\n      map-get($theme, 'text-02')\\n    ) !global;\\n    $text-03: var(\\n      --#{$custom-property-prefix}-text-03,\\n      map-get($theme, 'text-03')\\n    ) !global;\\n    $text-04: var(\\n      --#{$custom-property-prefix}-text-04,\\n      map-get($theme, 'text-04')\\n    ) !global;\\n    $text-05: var(\\n      --#{$custom-property-prefix}-text-05,\\n      map-get($theme, 'text-05')\\n    ) !global;\\n    $text-error: var(\\n      --#{$custom-property-prefix}-text-error,\\n      map-get($theme, 'text-error')\\n    ) !global;\\n    $icon-01: var(\\n      --#{$custom-property-prefix}-icon-01,\\n      map-get($theme, 'icon-01')\\n    ) !global;\\n    $icon-02: var(\\n      --#{$custom-property-prefix}-icon-02,\\n      map-get($theme, 'icon-02')\\n    ) !global;\\n    $icon-03: var(\\n      --#{$custom-property-prefix}-icon-03,\\n      map-get($theme, 'icon-03')\\n    ) !global;\\n    $link-01: var(\\n      --#{$custom-property-prefix}-link-01,\\n      map-get($theme, 'link-01')\\n    ) !global;\\n    $link-02: var(\\n      --#{$custom-property-prefix}-link-02,\\n      map-get($theme, 'link-02')\\n    ) !global;\\n    $inverse-link: var(\\n      --#{$custom-property-prefix}-inverse-link,\\n      map-get($theme, 'inverse-link')\\n    ) !global;\\n    $field-01: var(\\n      --#{$custom-property-prefix}-field-01,\\n      map-get($theme, 'field-01')\\n    ) !global;\\n    $field-02: var(\\n      --#{$custom-property-prefix}-field-02,\\n      map-get($theme, 'field-02')\\n    ) !global;\\n    $inverse-01: var(\\n      --#{$custom-property-prefix}-inverse-01,\\n      map-get($theme, 'inverse-01')\\n    ) !global;\\n    $inverse-02: var(\\n      --#{$custom-property-prefix}-inverse-02,\\n      map-get($theme, 'inverse-02')\\n    ) !global;\\n    $support-01: var(\\n      --#{$custom-property-prefix}-support-01,\\n      map-get($theme, 'support-01')\\n    ) !global;\\n    $support-02: var(\\n      --#{$custom-property-prefix}-support-02,\\n      map-get($theme, 'support-02')\\n    ) !global;\\n    $support-03: var(\\n      --#{$custom-property-prefix}-support-03,\\n      map-get($theme, 'support-03')\\n    ) !global;\\n    $support-04: var(\\n      --#{$custom-property-prefix}-support-04,\\n      map-get($theme, 'support-04')\\n    ) !global;\\n    $inverse-support-01: var(\\n      --#{$custom-property-prefix}-inverse-support-01,\\n      map-get($theme, 'inverse-support-01')\\n    ) !global;\\n    $inverse-support-02: var(\\n      --#{$custom-property-prefix}-inverse-support-02,\\n      map-get($theme, 'inverse-support-02')\\n    ) !global;\\n    $inverse-support-03: var(\\n      --#{$custom-property-prefix}-inverse-support-03,\\n      map-get($theme, 'inverse-support-03')\\n    ) !global;\\n    $inverse-support-04: var(\\n      --#{$custom-property-prefix}-inverse-support-04,\\n      map-get($theme, 'inverse-support-04')\\n    ) !global;\\n    $overlay-01: var(\\n      --#{$custom-property-prefix}-overlay-01,\\n      map-get($theme, 'overlay-01')\\n    ) !global;\\n    $danger-01: var(\\n      --#{$custom-property-prefix}-danger-01,\\n      map-get($theme, 'danger-01')\\n    ) !global;\\n    $danger-02: var(\\n      --#{$custom-property-prefix}-danger-02,\\n      map-get($theme, 'danger-02')\\n    ) !global;\\n    $focus: var(\\n      --#{$custom-property-prefix}-focus,\\n      map-get($theme, 'focus')\\n    ) !global;\\n    $inverse-focus-ui: var(\\n      --#{$custom-property-prefix}-inverse-focus-ui,\\n      map-get($theme, 'inverse-focus-ui')\\n    ) !global;\\n    $hover-primary: var(\\n      --#{$custom-property-prefix}-hover-primary,\\n      map-get($theme, 'hover-primary')\\n    ) !global;\\n    $active-primary: var(\\n      --#{$custom-property-prefix}-active-primary,\\n      map-get($theme, 'active-primary')\\n    ) !global;\\n    $hover-primary-text: var(\\n      --#{$custom-property-prefix}-hover-primary-text,\\n      map-get($theme, 'hover-primary-text')\\n    ) !global;\\n    $hover-secondary: var(\\n      --#{$custom-property-prefix}-hover-secondary,\\n      map-get($theme, 'hover-secondary')\\n    ) !global;\\n    $active-secondary: var(\\n      --#{$custom-property-prefix}-active-secondary,\\n      map-get($theme, 'active-secondary')\\n    ) !global;\\n    $hover-tertiary: var(\\n      --#{$custom-property-prefix}-hover-tertiary,\\n      map-get($theme, 'hover-tertiary')\\n    ) !global;\\n    $active-tertiary: var(\\n      --#{$custom-property-prefix}-active-tertiary,\\n      map-get($theme, 'active-tertiary')\\n    ) !global;\\n    $hover-ui: var(\\n      --#{$custom-property-prefix}-hover-ui,\\n      map-get($theme, 'hover-ui')\\n    ) !global;\\n    $hover-light-ui: var(\\n      --#{$custom-property-prefix}-hover-light-ui,\\n      map-get($theme, 'hover-light-ui')\\n    ) !global;\\n    $hover-selected-ui: var(\\n      --#{$custom-property-prefix}-hover-selected-ui,\\n      map-get($theme, 'hover-selected-ui')\\n    ) !global;\\n    $active-ui: var(\\n      --#{$custom-property-prefix}-active-ui,\\n      map-get($theme, 'active-ui')\\n    ) !global;\\n    $active-light-ui: var(\\n      --#{$custom-property-prefix}-active-light-ui,\\n      map-get($theme, 'active-light-ui')\\n    ) !global;\\n    $selected-ui: var(\\n      --#{$custom-property-prefix}-selected-ui,\\n      map-get($theme, 'selected-ui')\\n    ) !global;\\n    $selected-light-ui: var(\\n      --#{$custom-property-prefix}-selected-light-ui,\\n      map-get($theme, 'selected-light-ui')\\n    ) !global;\\n    $inverse-hover-ui: var(\\n      --#{$custom-property-prefix}-inverse-hover-ui,\\n      map-get($theme, 'inverse-hover-ui')\\n    ) !global;\\n    $hover-danger: var(\\n      --#{$custom-property-prefix}-hover-danger,\\n      map-get($theme, 'hover-danger')\\n    ) !global;\\n    $active-danger: var(\\n      --#{$custom-property-prefix}-active-danger,\\n      map-get($theme, 'active-danger')\\n    ) !global;\\n    $hover-row: var(\\n      --#{$custom-property-prefix}-hover-row,\\n      map-get($theme, 'hover-row')\\n    ) !global;\\n    $visited-link: var(\\n      --#{$custom-property-prefix}-visited-link,\\n      map-get($theme, 'visited-link')\\n    ) !global;\\n    $disabled-01: var(\\n      --#{$custom-property-prefix}-disabled-01,\\n      map-get($theme, 'disabled-01')\\n    ) !global;\\n    $disabled-02: var(\\n      --#{$custom-property-prefix}-disabled-02,\\n      map-get($theme, 'disabled-02')\\n    ) !global;\\n    $disabled-03: var(\\n      --#{$custom-property-prefix}-disabled-03,\\n      map-get($theme, 'disabled-03')\\n    ) !global;\\n    $highlight: var(\\n      --#{$custom-property-prefix}-highlight,\\n      map-get($theme, 'highlight')\\n    ) !global;\\n    $decorative-01: var(\\n      --#{$custom-property-prefix}-decorative-01,\\n      map-get($theme, 'decorative-01')\\n    ) !global;\\n    $button-separator: var(\\n      --#{$custom-property-prefix}-button-separator,\\n      map-get($theme, 'button-separator')\\n    ) !global;\\n    $skeleton-01: var(\\n      --#{$custom-property-prefix}-skeleton-01,\\n      map-get($theme, 'skeleton-01')\\n    ) !global;\\n    $skeleton-02: var(\\n      --#{$custom-property-prefix}-skeleton-02,\\n      map-get($theme, 'skeleton-02')\\n    ) !global;\\n    $background: var(\\n      --#{$custom-property-prefix}-background,\\n      map-get($theme, 'background')\\n    ) !global;\\n    $layer: var(\\n      --#{$custom-property-prefix}-layer,\\n      map-get($theme, 'layer')\\n    ) !global;\\n    $layer-accent: var(\\n      --#{$custom-property-prefix}-layer-accent,\\n      map-get($theme, 'layer-accent')\\n    ) !global;\\n    $layer-accent-hover: var(\\n      --#{$custom-property-prefix}-layer-accent-hover,\\n      map-get($theme, 'layer-accent-hover')\\n    ) !global;\\n    $layer-accent-active: var(\\n      --#{$custom-property-prefix}-layer-accent-active,\\n      map-get($theme, 'layer-accent-active')\\n    ) !global;\\n    $field: var(\\n      --#{$custom-property-prefix}-field,\\n      map-get($theme, 'field')\\n    ) !global;\\n    $background-inverse: var(\\n      --#{$custom-property-prefix}-background-inverse,\\n      map-get($theme, 'background-inverse')\\n    ) !global;\\n    $background-brand: var(\\n      --#{$custom-property-prefix}-background-brand,\\n      map-get($theme, 'background-brand')\\n    ) !global;\\n    $interactive: var(\\n      --#{$custom-property-prefix}-interactive,\\n      map-get($theme, 'interactive')\\n    ) !global;\\n    $border-subtle: var(\\n      --#{$custom-property-prefix}-border-subtle,\\n      map-get($theme, 'border-subtle')\\n    ) !global;\\n    $border-strong: var(\\n      --#{$custom-property-prefix}-border-strong,\\n      map-get($theme, 'border-strong')\\n    ) !global;\\n    $border-inverse: var(\\n      --#{$custom-property-prefix}-border-inverse,\\n      map-get($theme, 'border-inverse')\\n    ) !global;\\n    $border-interactive: var(\\n      --#{$custom-property-prefix}-border-interactive,\\n      map-get($theme, 'border-interactive')\\n    ) !global;\\n    $text-primary: var(\\n      --#{$custom-property-prefix}-text-primary,\\n      map-get($theme, 'text-primary')\\n    ) !global;\\n    $text-secondary: var(\\n      --#{$custom-property-prefix}-text-secondary,\\n      map-get($theme, 'text-secondary')\\n    ) !global;\\n    $text-placeholder: var(\\n      --#{$custom-property-prefix}-text-placeholder,\\n      map-get($theme, 'text-placeholder')\\n    ) !global;\\n    $text-helper: var(\\n      --#{$custom-property-prefix}-text-helper,\\n      map-get($theme, 'text-helper')\\n    ) !global;\\n    $text-on-color: var(\\n      --#{$custom-property-prefix}-text-on-color,\\n      map-get($theme, 'text-on-color')\\n    ) !global;\\n    $text-inverse: var(\\n      --#{$custom-property-prefix}-text-inverse,\\n      map-get($theme, 'text-inverse')\\n    ) !global;\\n    $link-primary: var(\\n      --#{$custom-property-prefix}-link-primary,\\n      map-get($theme, 'link-primary')\\n    ) !global;\\n    $link-secondary: var(\\n      --#{$custom-property-prefix}-link-secondary,\\n      map-get($theme, 'link-secondary')\\n    ) !global;\\n    $link-visited: var(\\n      --#{$custom-property-prefix}-link-visited,\\n      map-get($theme, 'link-visited')\\n    ) !global;\\n    $link-inverse: var(\\n      --#{$custom-property-prefix}-link-inverse,\\n      map-get($theme, 'link-inverse')\\n    ) !global;\\n    $icon-primary: var(\\n      --#{$custom-property-prefix}-icon-primary,\\n      map-get($theme, 'icon-primary')\\n    ) !global;\\n    $icon-secondary: var(\\n      --#{$custom-property-prefix}-icon-secondary,\\n      map-get($theme, 'icon-secondary')\\n    ) !global;\\n    $icon-on-color: var(\\n      --#{$custom-property-prefix}-icon-on-color,\\n      map-get($theme, 'icon-on-color')\\n    ) !global;\\n    $icon-inverse: var(\\n      --#{$custom-property-prefix}-icon-inverse,\\n      map-get($theme, 'icon-inverse')\\n    ) !global;\\n    $support-error: var(\\n      --#{$custom-property-prefix}-support-error,\\n      map-get($theme, 'support-error')\\n    ) !global;\\n    $support-success: var(\\n      --#{$custom-property-prefix}-support-success,\\n      map-get($theme, 'support-success')\\n    ) !global;\\n    $support-warning: var(\\n      --#{$custom-property-prefix}-support-warning,\\n      map-get($theme, 'support-warning')\\n    ) !global;\\n    $support-info: var(\\n      --#{$custom-property-prefix}-support-info,\\n      map-get($theme, 'support-info')\\n    ) !global;\\n    $support-error-inverse: var(\\n      --#{$custom-property-prefix}-support-error-inverse,\\n      map-get($theme, 'support-error-inverse')\\n    ) !global;\\n    $support-success-inverse: var(\\n      --#{$custom-property-prefix}-support-success-inverse,\\n      map-get($theme, 'support-success-inverse')\\n    ) !global;\\n    $support-warning-inverse: var(\\n      --#{$custom-property-prefix}-support-warning-inverse,\\n      map-get($theme, 'support-warning-inverse')\\n    ) !global;\\n    $support-info-inverse: var(\\n      --#{$custom-property-prefix}-support-info-inverse,\\n      map-get($theme, 'support-info-inverse')\\n    ) !global;\\n    $overlay: var(\\n      --#{$custom-property-prefix}-overlay,\\n      map-get($theme, 'overlay')\\n    ) !global;\\n    $toggle-off: var(\\n      --#{$custom-property-prefix}-toggle-off,\\n      map-get($theme, 'toggle-off')\\n    ) !global;\\n    $button-primary: var(\\n      --#{$custom-property-prefix}-button-primary,\\n      map-get($theme, 'button-primary')\\n    ) !global;\\n    $button-secondary: var(\\n      --#{$custom-property-prefix}-button-secondary,\\n      map-get($theme, 'button-secondary')\\n    ) !global;\\n    $button-tertiary: var(\\n      --#{$custom-property-prefix}-button-tertiary,\\n      map-get($theme, 'button-tertiary')\\n    ) !global;\\n    $button-danger-primary: var(\\n      --#{$custom-property-prefix}-button-danger-primary,\\n      map-get($theme, 'button-danger-primary')\\n    ) !global;\\n    $button-danger-secondary: var(\\n      --#{$custom-property-prefix}-button-danger-secondary,\\n      map-get($theme, 'button-danger-secondary')\\n    ) !global;\\n    $background-active: var(\\n      --#{$custom-property-prefix}-background-active,\\n      map-get($theme, 'background-active')\\n    ) !global;\\n    $layer-active: var(\\n      --#{$custom-property-prefix}-layer-active,\\n      map-get($theme, 'layer-active')\\n    ) !global;\\n    $button-danger-active: var(\\n      --#{$custom-property-prefix}-button-danger-active,\\n      map-get($theme, 'button-danger-active')\\n    ) !global;\\n    $button-primary-active: var(\\n      --#{$custom-property-prefix}-button-primary-active,\\n      map-get($theme, 'button-primary-active')\\n    ) !global;\\n    $button-secondary-active: var(\\n      --#{$custom-property-prefix}-button-secondary-active,\\n      map-get($theme, 'button-secondary-active')\\n    ) !global;\\n    $button-tertiary-active: var(\\n      --#{$custom-property-prefix}-button-tertiary-active,\\n      map-get($theme, 'button-tertiary-active')\\n    ) !global;\\n    $focus-inset: var(\\n      --#{$custom-property-prefix}-focus-inset,\\n      map-get($theme, 'focus-inset')\\n    ) !global;\\n    $focus-inverse: var(\\n      --#{$custom-property-prefix}-focus-inverse,\\n      map-get($theme, 'focus-inverse')\\n    ) !global;\\n    $background-hover: var(\\n      --#{$custom-property-prefix}-background-hover,\\n      map-get($theme, 'background-hover')\\n    ) !global;\\n    $layer-hover: var(\\n      --#{$custom-property-prefix}-layer-hover,\\n      map-get($theme, 'layer-hover')\\n    ) !global;\\n    $field-hover: var(\\n      --#{$custom-property-prefix}-field-hover,\\n      map-get($theme, 'field-hover')\\n    ) !global;\\n    $background-inverse-hover: var(\\n      --#{$custom-property-prefix}-background-inverse-hover,\\n      map-get($theme, 'background-inverse-hover')\\n    ) !global;\\n    $link-primary-hover: var(\\n      --#{$custom-property-prefix}-link-primary-hover,\\n      map-get($theme, 'link-primary-hover')\\n    ) !global;\\n    $button-danger-hover: var(\\n      --#{$custom-property-prefix}-button-danger-hover,\\n      map-get($theme, 'button-danger-hover')\\n    ) !global;\\n    $button-primary-hover: var(\\n      --#{$custom-property-prefix}-button-primary-hover,\\n      map-get($theme, 'button-primary-hover')\\n    ) !global;\\n    $button-secondary-hover: var(\\n      --#{$custom-property-prefix}-button-secondary-hover,\\n      map-get($theme, 'button-secondary-hover')\\n    ) !global;\\n    $button-tertiary-hover: var(\\n      --#{$custom-property-prefix}-button-tertiary-hover,\\n      map-get($theme, 'button-tertiary-hover')\\n    ) !global;\\n    $background-selected: var(\\n      --#{$custom-property-prefix}-background-selected,\\n      map-get($theme, 'background-selected')\\n    ) !global;\\n    $background-selected-hover: var(\\n      --#{$custom-property-prefix}-background-selected-hover,\\n      map-get($theme, 'background-selected-hover')\\n    ) !global;\\n    $layer-selected: var(\\n      --#{$custom-property-prefix}-layer-selected,\\n      map-get($theme, 'layer-selected')\\n    ) !global;\\n    $layer-selected-hover: var(\\n      --#{$custom-property-prefix}-layer-selected-hover,\\n      map-get($theme, 'layer-selected-hover')\\n    ) !global;\\n    $layer-selected-inverse: var(\\n      --#{$custom-property-prefix}-layer-selected-inverse,\\n      map-get($theme, 'layer-selected-inverse')\\n    ) !global;\\n    $border-subtle-selected: var(\\n      --#{$custom-property-prefix}-border-subtle-selected,\\n      map-get($theme, 'border-subtle-selected')\\n    ) !global;\\n    $layer-disabled: var(\\n      --#{$custom-property-prefix}-layer-disabled,\\n      map-get($theme, 'layer-disabled')\\n    ) !global;\\n    $field-disabled: var(\\n      --#{$custom-property-prefix}-field-disabled,\\n      map-get($theme, 'field-disabled')\\n    ) !global;\\n    $border-disabled: var(\\n      --#{$custom-property-prefix}-border-disabled,\\n      map-get($theme, 'border-disabled')\\n    ) !global;\\n    $text-disabled: var(\\n      --#{$custom-property-prefix}-text-disabled,\\n      map-get($theme, 'text-disabled')\\n    ) !global;\\n    $button-disabled: var(\\n      --#{$custom-property-prefix}-button-disabled,\\n      map-get($theme, 'button-disabled')\\n    ) !global;\\n    $icon-disabled: var(\\n      --#{$custom-property-prefix}-icon-disabled,\\n      map-get($theme, 'icon-disabled')\\n    ) !global;\\n    $text-on-color-disabled: var(\\n      --#{$custom-property-prefix}-text-on-color-disabled,\\n      map-get($theme, 'text-on-color-disabled')\\n    ) !global;\\n    $icon-on-color-disabled: var(\\n      --#{$custom-property-prefix}-icon-on-color-disabled,\\n      map-get($theme, 'icon-on-color-disabled')\\n    ) !global;\\n    $layer-selected-disabled: var(\\n      --#{$custom-property-prefix}-layer-selected-disabled,\\n      map-get($theme, 'layer-selected-disabled')\\n    ) !global;\\n    $skeleton-background: var(\\n      --#{$custom-property-prefix}-skeleton-background,\\n      map-get($theme, 'skeleton-background')\\n    ) !global;\\n    $skeleton-element: var(\\n      --#{$custom-property-prefix}-skeleton-element,\\n      map-get($theme, 'skeleton-element')\\n    ) !global;\\n    $brand-01: var(\\n      --#{$custom-property-prefix}-brand-01,\\n      map-get($theme, 'brand-01')\\n    ) !global;\\n    $brand-02: var(\\n      --#{$custom-property-prefix}-brand-02,\\n      map-get($theme, 'brand-02')\\n    ) !global;\\n    $brand-03: var(\\n      --#{$custom-property-prefix}-brand-03,\\n      map-get($theme, 'brand-03')\\n    ) !global;\\n    $active-01: var(\\n      --#{$custom-property-prefix}-active-01,\\n      map-get($theme, 'active-01')\\n    ) !global;\\n    $hover-field: var(\\n      --#{$custom-property-prefix}-hover-field,\\n      map-get($theme, 'hover-field')\\n    ) !global;\\n    $danger: var(\\n      --#{$custom-property-prefix}-danger,\\n      map-get($theme, 'danger')\\n    ) !global;\\n    $spacing-01: var(\\n      --#{$custom-property-prefix}-spacing-01,\\n      map-get($theme, 'spacing-01')\\n    ) !global;\\n    $spacing-02: var(\\n      --#{$custom-property-prefix}-spacing-02,\\n      map-get($theme, 'spacing-02')\\n    ) !global;\\n    $spacing-03: var(\\n      --#{$custom-property-prefix}-spacing-03,\\n      map-get($theme, 'spacing-03')\\n    ) !global;\\n    $spacing-04: var(\\n      --#{$custom-property-prefix}-spacing-04,\\n      map-get($theme, 'spacing-04')\\n    ) !global;\\n    $spacing-05: var(\\n      --#{$custom-property-prefix}-spacing-05,\\n      map-get($theme, 'spacing-05')\\n    ) !global;\\n    $spacing-06: var(\\n      --#{$custom-property-prefix}-spacing-06,\\n      map-get($theme, 'spacing-06')\\n    ) !global;\\n    $spacing-07: var(\\n      --#{$custom-property-prefix}-spacing-07,\\n      map-get($theme, 'spacing-07')\\n    ) !global;\\n    $spacing-08: var(\\n      --#{$custom-property-prefix}-spacing-08,\\n      map-get($theme, 'spacing-08')\\n    ) !global;\\n    $spacing-09: var(\\n      --#{$custom-property-prefix}-spacing-09,\\n      map-get($theme, 'spacing-09')\\n    ) !global;\\n    $spacing-10: var(\\n      --#{$custom-property-prefix}-spacing-10,\\n      map-get($theme, 'spacing-10')\\n    ) !global;\\n    $spacing-11: var(\\n      --#{$custom-property-prefix}-spacing-11,\\n      map-get($theme, 'spacing-11')\\n    ) !global;\\n    $spacing-12: var(\\n      --#{$custom-property-prefix}-spacing-12,\\n      map-get($theme, 'spacing-12')\\n    ) !global;\\n    $spacing-13: var(\\n      --#{$custom-property-prefix}-spacing-13,\\n      map-get($theme, 'spacing-13')\\n    ) !global;\\n    $fluid-spacing-01: var(\\n      --#{$custom-property-prefix}-fluid-spacing-01,\\n      map-get($theme, 'fluid-spacing-01')\\n    ) !global;\\n    $fluid-spacing-02: var(\\n      --#{$custom-property-prefix}-fluid-spacing-02,\\n      map-get($theme, 'fluid-spacing-02')\\n    ) !global;\\n    $fluid-spacing-03: var(\\n      --#{$custom-property-prefix}-fluid-spacing-03,\\n      map-get($theme, 'fluid-spacing-03')\\n    ) !global;\\n    $fluid-spacing-04: var(\\n      --#{$custom-property-prefix}-fluid-spacing-04,\\n      map-get($theme, 'fluid-spacing-04')\\n    ) !global;\\n    $layout-01: var(\\n      --#{$custom-property-prefix}-layout-01,\\n      map-get($theme, 'layout-01')\\n    ) !global;\\n    $layout-02: var(\\n      --#{$custom-property-prefix}-layout-02,\\n      map-get($theme, 'layout-02')\\n    ) !global;\\n    $layout-03: var(\\n      --#{$custom-property-prefix}-layout-03,\\n      map-get($theme, 'layout-03')\\n    ) !global;\\n    $layout-04: var(\\n      --#{$custom-property-prefix}-layout-04,\\n      map-get($theme, 'layout-04')\\n    ) !global;\\n    $layout-05: var(\\n      --#{$custom-property-prefix}-layout-05,\\n      map-get($theme, 'layout-05')\\n    ) !global;\\n    $layout-06: var(\\n      --#{$custom-property-prefix}-layout-06,\\n      map-get($theme, 'layout-06')\\n    ) !global;\\n    $layout-07: var(\\n      --#{$custom-property-prefix}-layout-07,\\n      map-get($theme, 'layout-07')\\n    ) !global;\\n    $container-01: var(\\n      --#{$custom-property-prefix}-container-01,\\n      map-get($theme, 'container-01')\\n    ) !global;\\n    $container-02: var(\\n      --#{$custom-property-prefix}-container-02,\\n      map-get($theme, 'container-02')\\n    ) !global;\\n    $container-03: var(\\n      --#{$custom-property-prefix}-container-03,\\n      map-get($theme, 'container-03')\\n    ) !global;\\n    $container-04: var(\\n      --#{$custom-property-prefix}-container-04,\\n      map-get($theme, 'container-04')\\n    ) !global;\\n    $container-05: var(\\n      --#{$custom-property-prefix}-container-05,\\n      map-get($theme, 'container-05')\\n    ) !global;\\n    $size-xsmall: var(\\n      --#{$custom-property-prefix}-size-xsmall,\\n      map-get($theme, 'size-xsmall')\\n    ) !global;\\n    $size-small: var(\\n      --#{$custom-property-prefix}-size-small,\\n      map-get($theme, 'size-small')\\n    ) !global;\\n    $size-medium: var(\\n      --#{$custom-property-prefix}-size-medium,\\n      map-get($theme, 'size-medium')\\n    ) !global;\\n    $size-large: var(\\n      --#{$custom-property-prefix}-size-large,\\n      map-get($theme, 'size-large')\\n    ) !global;\\n    $size-xlarge: var(\\n      --#{$custom-property-prefix}-size-xlarge,\\n      map-get($theme, 'size-xlarge')\\n    ) !global;\\n    $size-2XLarge: var(\\n      --#{$custom-property-prefix}-size-2XLarge,\\n      map-get($theme, 'size-2XLarge')\\n    ) !global;\\n    $icon-size-01: var(\\n      --#{$custom-property-prefix}-icon-size-01,\\n      map-get($theme, 'icon-size-01')\\n    ) !global;\\n    $icon-size-02: var(\\n      --#{$custom-property-prefix}-icon-size-02,\\n      map-get($theme, 'icon-size-02')\\n    ) !global;\\n  }\\n  @if $emit-custom-properties == true {\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-01',\\n        map-get($theme, 'interactive-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-02',\\n        map-get($theme, 'interactive-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-03',\\n        map-get($theme, 'interactive-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-04',\\n        map-get($theme, 'interactive-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'ui-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'ui-background',\\n        map-get($theme, 'ui-background')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-01', $emit-difference) {\\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-02', $emit-difference) {\\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-03', $emit-difference) {\\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-04', $emit-difference) {\\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-05', $emit-difference) {\\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-01', $emit-difference) {\\n      @include custom-property('text-01', map-get($theme, 'text-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-02', $emit-difference) {\\n      @include custom-property('text-02', map-get($theme, 'text-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-03', $emit-difference) {\\n      @include custom-property('text-03', map-get($theme, 'text-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-04', $emit-difference) {\\n      @include custom-property('text-04', map-get($theme, 'text-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-05', $emit-difference) {\\n      @include custom-property('text-05', map-get($theme, 'text-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-error', map-get($theme, 'text-error'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-01', $emit-difference) {\\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-02', $emit-difference) {\\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-03', $emit-difference) {\\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-01', $emit-difference) {\\n      @include custom-property('link-01', map-get($theme, 'link-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-02', $emit-difference) {\\n      @include custom-property('link-02', map-get($theme, 'link-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-01', $emit-difference)\\n    {\\n      @include custom-property('field-01', map-get($theme, 'field-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-02', $emit-difference)\\n    {\\n      @include custom-property('field-02', map-get($theme, 'field-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-01', map-get($theme, 'support-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-02', map-get($theme, 'support-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-03', map-get($theme, 'support-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-04', map-get($theme, 'support-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-01',\\n        map-get($theme, 'inverse-support-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-02',\\n        map-get($theme, 'inverse-support-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-03',\\n        map-get($theme, 'inverse-support-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-04',\\n        map-get($theme, 'inverse-support-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'overlay-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-01', $emit-difference)\\n    {\\n      @include custom-property('danger-01', map-get($theme, 'danger-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-02', $emit-difference)\\n    {\\n      @include custom-property('danger-02', map-get($theme, 'danger-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'focus', $emit-difference) {\\n      @include custom-property('focus', map-get($theme, 'focus'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-focus-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-focus-ui',\\n        map-get($theme, 'inverse-focus-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary',\\n        map-get($theme, 'hover-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-primary',\\n        map-get($theme, 'active-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary-text',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary-text',\\n        map-get($theme, 'hover-primary-text')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-secondary',\\n        map-get($theme, 'hover-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-secondary',\\n        map-get($theme, 'active-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-tertiary',\\n        map-get($theme, 'hover-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-tertiary',\\n        map-get($theme, 'active-tertiary')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-ui', $emit-difference)\\n    {\\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-light-ui',\\n        map-get($theme, 'hover-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-selected-ui',\\n        map-get($theme, 'hover-selected-ui')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-ui', $emit-difference)\\n    {\\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-light-ui',\\n        map-get($theme, 'active-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'selected-light-ui',\\n        map-get($theme, 'selected-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-hover-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-hover-ui',\\n        map-get($theme, 'inverse-hover-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-danger',\\n        map-get($theme, 'active-danger')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-row', $emit-difference)\\n    {\\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'visited-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'highlight', $emit-difference)\\n    {\\n      @include custom-property('highlight', map-get($theme, 'highlight'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'decorative-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'decorative-01',\\n        map-get($theme, 'decorative-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-separator',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-separator',\\n        map-get($theme, 'button-separator')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('background', map-get($theme, 'background'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layer', $emit-difference) {\\n      @include custom-property('layer', map-get($theme, 'layer'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-accent', map-get($theme, 'layer-accent'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-hover',\\n        map-get($theme, 'layer-accent-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-active',\\n        map-get($theme, 'layer-accent-active')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field', $emit-difference) {\\n      @include custom-property('field', map-get($theme, 'field'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse',\\n        map-get($theme, 'background-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-brand',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-brand',\\n        map-get($theme, 'background-brand')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('interactive', map-get($theme, 'interactive'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle',\\n        map-get($theme, 'border-subtle')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-strong',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-strong',\\n        map-get($theme, 'border-strong')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-inverse',\\n        map-get($theme, 'border-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-interactive',\\n        map-get($theme, 'border-interactive')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-primary', map-get($theme, 'text-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-secondary',\\n        map-get($theme, 'text-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-placeholder',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-placeholder',\\n        map-get($theme, 'text-placeholder')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-helper',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-helper', map-get($theme, 'text-helper'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color',\\n        map-get($theme, 'text-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-inverse', map-get($theme, 'text-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-primary', map-get($theme, 'link-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-secondary',\\n        map-get($theme, 'link-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-visited',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-visited', map-get($theme, 'link-visited'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-inverse', map-get($theme, 'link-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-primary', map-get($theme, 'icon-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-secondary',\\n        map-get($theme, 'icon-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color',\\n        map-get($theme, 'icon-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-inverse', map-get($theme, 'icon-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error',\\n        map-get($theme, 'support-error')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success',\\n        map-get($theme, 'support-success')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning',\\n        map-get($theme, 'support-warning')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-info', map-get($theme, 'support-info'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error-inverse',\\n        map-get($theme, 'support-error-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success-inverse',\\n        map-get($theme, 'support-success-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning-inverse',\\n        map-get($theme, 'support-warning-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-info-inverse',\\n        map-get($theme, 'support-info-inverse')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'overlay', $emit-difference) {\\n      @include custom-property('overlay', map-get($theme, 'overlay'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'toggle-off',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('toggle-off', map-get($theme, 'toggle-off'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary',\\n        map-get($theme, 'button-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary',\\n        map-get($theme, 'button-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary',\\n        map-get($theme, 'button-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-primary',\\n        map-get($theme, 'button-danger-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-secondary',\\n        map-get($theme, 'button-danger-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-active',\\n        map-get($theme, 'background-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-active', map-get($theme, 'layer-active'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-active',\\n        map-get($theme, 'button-danger-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-active',\\n        map-get($theme, 'button-primary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-active',\\n        map-get($theme, 'button-secondary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-active',\\n        map-get($theme, 'button-tertiary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inset',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('focus-inset', map-get($theme, 'focus-inset'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'focus-inverse',\\n        map-get($theme, 'focus-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-hover',\\n        map-get($theme, 'background-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-hover', map-get($theme, 'layer-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('field-hover', map-get($theme, 'field-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse-hover',\\n        map-get($theme, 'background-inverse-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-primary-hover',\\n        map-get($theme, 'link-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-hover',\\n        map-get($theme, 'button-danger-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-hover',\\n        map-get($theme, 'button-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-hover',\\n        map-get($theme, 'button-secondary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-hover',\\n        map-get($theme, 'button-tertiary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected',\\n        map-get($theme, 'background-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected-hover',\\n        map-get($theme, 'background-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected',\\n        map-get($theme, 'layer-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-hover',\\n        map-get($theme, 'layer-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-inverse',\\n        map-get($theme, 'layer-selected-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle-selected',\\n        map-get($theme, 'border-subtle-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-disabled',\\n        map-get($theme, 'layer-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'field-disabled',\\n        map-get($theme, 'field-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-disabled',\\n        map-get($theme, 'border-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-disabled',\\n        map-get($theme, 'text-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-disabled',\\n        map-get($theme, 'button-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-disabled',\\n        map-get($theme, 'icon-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color-disabled',\\n        map-get($theme, 'text-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color-disabled',\\n        map-get($theme, 'icon-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-disabled',\\n        map-get($theme, 'layer-selected-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-background',\\n        map-get($theme, 'skeleton-background')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-element',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-element',\\n        map-get($theme, 'skeleton-element')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-01', $emit-difference)\\n    {\\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-02', $emit-difference)\\n    {\\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-03', $emit-difference)\\n    {\\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-01', $emit-difference)\\n    {\\n      @include custom-property('active-01', map-get($theme, 'active-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-field',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger', $emit-difference) {\\n      @include custom-property('danger', map-get($theme, 'danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-02', map-get($theme, 'caption-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-01', $emit-difference)\\n    {\\n      @include custom-property('label-01', map-get($theme, 'label-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-02', $emit-difference)\\n    {\\n      @include custom-property('label-02', map-get($theme, 'label-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-01',\\n        map-get($theme, 'helper-text-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-02',\\n        map-get($theme, 'helper-text-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-01',\\n        map-get($theme, 'body-short-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-02',\\n        map-get($theme, 'body-short-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-01', $emit-difference) {\\n      @include custom-property('code-01', map-get($theme, 'code-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-02', $emit-difference) {\\n      @include custom-property('code-02', map-get($theme, 'code-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-01',\\n        map-get($theme, 'productive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-02',\\n        map-get($theme, 'productive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-03',\\n        map-get($theme, 'productive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-04',\\n        map-get($theme, 'productive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-05',\\n        map-get($theme, 'productive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-06',\\n        map-get($theme, 'productive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-07',\\n        map-get($theme, 'productive-heading-07')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-01',\\n        map-get($theme, 'expressive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-02',\\n        map-get($theme, 'expressive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-03',\\n        map-get($theme, 'expressive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-04',\\n        map-get($theme, 'expressive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-05',\\n        map-get($theme, 'expressive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-06',\\n        map-get($theme, 'expressive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-paragraph-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-paragraph-01',\\n        map-get($theme, 'expressive-paragraph-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-01', map-get($theme, 'display-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-02', map-get($theme, 'display-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-03', map-get($theme, 'display-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-04', map-get($theme, 'display-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-08',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-09',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-10',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-11',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-12',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-13',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-13', map-get($theme, 'spacing-13'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-01',\\n        map-get($theme, 'fluid-spacing-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-02',\\n        map-get($theme, 'fluid-spacing-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-03',\\n        map-get($theme, 'fluid-spacing-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-04',\\n        map-get($theme, 'fluid-spacing-04')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-01', $emit-difference)\\n    {\\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-02', $emit-difference)\\n    {\\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-03', $emit-difference)\\n    {\\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-04', $emit-difference)\\n    {\\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-05', $emit-difference)\\n    {\\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-06', $emit-difference)\\n    {\\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-07', $emit-difference)\\n    {\\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-01', map-get($theme, 'container-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-02', map-get($theme, 'container-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-03', map-get($theme, 'container-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-04', map-get($theme, 'container-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-05', map-get($theme, 'container-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xsmall',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xsmall', map-get($theme, 'size-xsmall'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-small',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-small', map-get($theme, 'size-small'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-medium',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-medium', map-get($theme, 'size-medium'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-large',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-large', map-get($theme, 'size-large'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xlarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xlarge', map-get($theme, 'size-xlarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-2XLarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-2XLarge', map-get($theme, 'size-2XLarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\\n    }\\n  }\\n\\n  @content;\\n\\n  // Reset to default theme after apply in content\\n  @if $carbon--theme != $parent-carbon-theme {\\n    $carbon--theme: $parent-carbon-theme !global;\\n\\n    @include carbon--theme();\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"patientChartWrapper\": \"-esm-patient-chart__context-workspace__patientChartWrapper___gQgKi\",\n\t\"productiveHeading01\": \"-esm-patient-chart__context-workspace__productiveHeading01___-Y6sC\",\n\t\"productiveHeading02\": \"-esm-patient-chart__context-workspace__productiveHeading02___5xZMs\",\n\t\"productiveHeading03\": \"-esm-patient-chart__context-workspace__productiveHeading03___GBZHD\",\n\t\"productiveHeading04\": \"-esm-patient-chart__context-workspace__productiveHeading04___2nuAf\",\n\t\"bodyLong01\": \"-esm-patient-chart__context-workspace__bodyLong01___gH4cn\",\n\t\"header\": \"-esm-patient-chart__context-workspace__header___ESjp6\",\n\t\"maximized\": \"-esm-patient-chart__context-workspace__maximized___xm+3X\",\n\t\"hide\": \"-esm-patient-chart__context-workspace__hide___Ur7Ad\",\n\t\"show\": \"-esm-patient-chart__context-workspace__show___Sktmo\",\n\t\"fixed\": \"-esm-patient-chart__context-workspace__fixed___xg0z7\",\n\t\"fullWidth\": \"-esm-patient-chart__context-workspace__fullWidth___AQ5ZL\",\n\t\"dynamicWidth\": \"-esm-patient-chart__context-workspace__dynamicWidth___0rcme\",\n\t\"container\": \"-esm-patient-chart__context-workspace__container___9P6oI\",\n\t\"skeleton\": \"-esm-patient-chart__context-workspace__skeleton___S4ASM\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["useWorkspace","extensions","useAssignedExtensionIds","patientChartWorkspaceSlot","title","useMemo","length","state","extensionStore","getTitle","windowState","WorkspaceWindowState","determineWindowState","closeWorkspace","useCallback","detachAll","active","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","match","useTranslation","layout","useLayoutType","isTablet","patientUuid","params","windowSize","updateWindowSize","useWorkspaceWindow","size","hidden","maximized","normal","props","React","isWorkspaceOpen","setIsWorkspaceOpen","useState","useEffect","useBodyScrollLock","isDesktop","className","styles","Header","HeaderName","prefix","HeaderGlobalBar","ExtensionSlot","extensionSlotName","patientChartWorkspaceHeaderSlot","Button","iconDescription","t","hasIconOnly","kind","onClick","renderIcon","Minimize16","Maximize16","tooltipPosition","ArrowRight16","tooltipAlignment","InlineLoading","description","CustomView","slot","patient","url","useRouteMatch","basePath","key","GridView","store","useExtensionStore","wrapItem","extension","columnSpan","extensionId","meta","style","gridColumn","gridTemplateColumns","repeat","columns","trimRight","getColumnsLayoutStyle","Extension","wrap","ShowTabs","view","fullPath","defaultExtension","navigate","to","map","id","ConfigurableLink","name","tab","window","spaBase","select","filter","ext","makePath","target","parts","split","Object","keys","forEach","i","indexOf","join","subview","useExtensionSlotMeta","dashboards","values","defaultDashboard","dashboard","find","config","type","Redirect","isModalOpen","closeModal","handleEditPastVisit","launchPatientWorkspace","handleStartNewVisit","modalHeaderText","modalBodyText","ComposedModal","open","onClose","i18n","locale","language","toLowerCase","replace","currentVisit","useVisit","Date","startDatetime","toLocaleDateString","dateStyle","visitType","display","location","endVisitPayload","uuid","parseDate","stopDatetime","abortController","AbortController","updateVisit","pipe","first","subscribe","response","status","getStartedVisit","showToast","error","showNotification","critical","message","visitDialogType","setVisitDialogType","handler","ev","detail","addEventListener","removeEventListener","useVisitDialog","dispatchEvent","CustomEvent","screenMode","openWindows","menu","HeaderPanel","expanded","setIsModalOpen","setExtensionSlotName","formName","toggleActive","prevState","attach","label","Trans","i18nKey","isLoading","usePatientOrOfflineRegisteredPatient","sessionUser","useSessionUser","mainClassName","useOfflineVisitForPatient","sessionLocation","detach","SideNav","swrConfiguration","errorRetryCount","Root","value","BrowserRouter","basename","spaRoot","WorkspaceWindowSizeProvider","Route","path","dashboardPath","component","PatientChart","ContextWorkspace","translateFrom","moduleName","default","screenSize","___CSS_LOADER_EXPORT___","push","module","locals"],"sourceRoot":""}