{"version":3,"file":"307.js","mappings":"8RAQe,SAASA,GAAiB,WACvCC,IAEA,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,kBACd,OACE,4BACEC,QAAS,KACPC,EAAAA,GAAAA,SAA+B,CAAEC,sBAAuBL,MAGzDC,EAAE,OAAQ,SChBjB,SAASK,IACP,MACMC,EAAU,CACdC,YAAa,oBACbC,WAHiB,sCAMnB,MAAO,CACLC,MAAO,CACL,CACEC,MAAO,KAAM,EACbC,MAAMC,EAAAA,EAAAA,oBACJ,IAAM,kFACNN,KAINO,WAAY,CACV,CACEC,KAAM,2BACNC,KAAM,uBACNJ,MAAMC,EAAAA,EAAAA,oBACJ,IAAM,gEACNN,MAOV,MAAMU,EAAoBC,EAAAA,O,gECZnB,MAAMd,GACXe,E,QAAAA,mBAAkB,oBAAqB,CACrCC,2BAAuBC,EACvBhB,sBAAuB,KACvBiB,OAAQC,IACRC,UAAU,EACVC,aAAc,EACdC,oBAAqBC,IACrBC,kBAAmBC,MAUVC,GAPc1B,EAAsB2B,QAC/C,CAACC,EAAOC,KAAR,IACKD,EACHR,SAAUS,MAIa7B,EAAsB2B,QAAQC,IAAD,IACnDA,EACHV,QAASU,EAAMV,YAGJY,EAAwB9B,EAAsB2B,QAAQC,IAAD,IAC7DA,EACHV,QAAQ,EACRG,aAAc,MAKhB,IAAIU,EAAoBZ,IACpBa,EAA+BT,IAC/BU,EAA+BR,IAiBnC,SAASN,IAAqC,MAC5C,iBACEe,KAAKC,MACHC,aAAaC,QAAQ,2CAA6C,gBAFtE,SAcF,SAASd,IAAkC,MACzC,iBACEW,KAAKC,MACHC,aAAaC,QAAQ,8CACnB,eAHN,SAeF,SAASZ,IAAgC,MACvC,iBACES,KAAKC,MAAMC,aAAaC,QAAQ,8BAAgC,gBADlE,SA/CFrC,EAAsBsC,WAAWV,IAuBjC,IAAmCC,EA8BLU,EApDxBX,EAAMV,QAAUa,IAsBaF,EArBLD,EAAMV,OAsBlCkB,aAAaI,QACX,yCACAN,KAAKO,UAAUZ,IAvBfE,EAAoBH,EAAMV,QAExBU,EAAMJ,mBAAqBS,IAgDHM,EA/CLX,EAAMJ,kBAgD7BY,aAAaI,QAAQ,4BAA6BN,KAAKO,UAAUF,IA/C/DN,EAA+BL,EAAMJ,mBAEnCI,EAAMN,qBAAuBU,IA8BnC,SAAgCH,GAC9BO,aAAaI,QACX,4CACAN,KAAKO,UAAUZ,IAhCfa,CAAuBd,EAAMN,qBAC7BU,EAA+BJ,EAAMN,yB,eClEzC,IAAIqB,EAAM,CACT,YAAa,CACZ,KACA,KAED,YAAa,CACZ,KACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,IAClCJ,EAAoBS,KAG7BX,EAAoBY,KAAO,IAAOC,OAAOD,KAAKb,GAC9CC,EAAoBW,GAAK,KACzBG,EAAOC,QAAUf","sources":["webpack://@openmrs/esm-implementer-tools-app/./src/config-edit-button/config-edit-button.component.tsx","webpack://@openmrs/esm-implementer-tools-app/./src/index.ts","webpack://@openmrs/esm-implementer-tools-app/./src/store.ts","webpack://@openmrs/esm-implementer-tools-app//home/runner/work/openmrs-esm-core/openmrs-esm-core/packages/apps/esm-implementer-tools-app/translations|lazy|nonrecursive|/.json$/"],"sourcesContent":["import React from \"react\";\nimport { implementerToolsStore } from \"../store\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface ConfigEditButtonProps {\n  configPath: string[];\n}\n\nexport default function ConfigEditButton({\n  configPath,\n}: ConfigEditButtonProps) {\n  const { t } = useTranslation();\n  return (\n    <button\n      onClick={() => {\n        implementerToolsStore.setState({ configPathBeingEdited: configPath });\n      }}\n    >\n      {t(\"edit\", \"Edit\")}\n    </button>\n  );\n}\n","import { getAsyncLifecycle } from \"@openmrs/esm-framework\";\n\nfunction setupOpenMRS() {\n  const moduleName = \"@openmrs/esm-implementer-tools-app\";\n  const options = {\n    featureName: \"Implementer Tools\",\n    moduleName,\n  };\n\n  return {\n    pages: [\n      {\n        route: () => true,\n        load: getAsyncLifecycle(\n          () => import(\"./implementer-tools.component\"),\n          options\n        ),\n      },\n    ],\n    extensions: [\n      {\n        name: \"implementer-tools-button\",\n        slot: \"top-nav-actions-slot\",\n        load: getAsyncLifecycle(\n          () => import(\"./implementer-tools.button\"),\n          options\n        ),\n      },\n    ],\n  };\n}\n\nconst importTranslation = require.context(\n  \"../translations\",\n  false,\n  /.json$/,\n  \"lazy\"\n);\n\nexport { setupOpenMRS, importTranslation };\n\nexport { default as ConfigEditButton } from \"./config-edit-button/config-edit-button.component\";\n","import { createGlobalStore } from \"@openmrs/esm-framework\";\nimport { Store } from \"unistore\";\n\nexport interface ImplementerToolsStore {\n  activeItemDescription?: ActiveItemDescription;\n  configPathBeingEdited: null | Array<string>;\n  isOpen: boolean;\n  hasAlert: boolean;\n  openTabIndex: number;\n  isConfigToolbarOpen: boolean;\n  isUIEditorEnabled: boolean;\n}\n\nexport interface ActiveItemDescription {\n  path: Array<string>;\n  description?: string;\n  value?: string | Array<string>;\n  source?: string;\n}\n\nexport const implementerToolsStore: Store<ImplementerToolsStore> =\n  createGlobalStore(\"implementer-tools\", {\n    activeItemDescription: undefined,\n    configPathBeingEdited: null,\n    isOpen: getIsImplementerToolsOpen(),\n    hasAlert: false,\n    openTabIndex: 0,\n    isConfigToolbarOpen: getIsConfigToolbarOpen(),\n    isUIEditorEnabled: getIsUIEditorEnabled(),\n  });\n\nexport const setHasAlert = implementerToolsStore.action(\n  (state, value: boolean) => ({\n    ...state,\n    hasAlert: value,\n  })\n);\n\nexport const togglePopup = implementerToolsStore.action((state) => ({\n  ...state,\n  isOpen: !state.isOpen,\n}));\n\nexport const showModuleDiagnostics = implementerToolsStore.action((state) => ({\n  ...state,\n  isOpen: true,\n  openTabIndex: 1,\n}));\n\n/* Set up localStorage-serialized state elements */\n\nlet lastValueOfIsOpen = getIsImplementerToolsOpen();\nlet lastValueOfConfigToolbarOpen = getIsConfigToolbarOpen();\nlet lastValueOfIsUiEditorEnabled = getIsUIEditorEnabled();\n\nimplementerToolsStore.subscribe((state) => {\n  if (state.isOpen != lastValueOfIsOpen) {\n    setIsImplementerToolsOpen(state.isOpen);\n    lastValueOfIsOpen = state.isOpen;\n  }\n  if (state.isUIEditorEnabled != lastValueOfIsUiEditorEnabled) {\n    setIsUIEditorEnabled(state.isUIEditorEnabled);\n    lastValueOfIsUiEditorEnabled = state.isUIEditorEnabled;\n  }\n  if (state.isConfigToolbarOpen != lastValueOfConfigToolbarOpen) {\n    setIsConfigToolbarOpen(state.isConfigToolbarOpen);\n    lastValueOfConfigToolbarOpen = state.isConfigToolbarOpen;\n  }\n});\n\nfunction getIsImplementerToolsOpen(): boolean {\n  return (\n    JSON.parse(\n      localStorage.getItem(\"openmrs:openmrsImplementerToolsAreOpen\") || \"false\"\n    ) ?? false\n  );\n}\n\nfunction setIsImplementerToolsOpen(value: boolean): void {\n  localStorage.setItem(\n    \"openmrs:openmrsImplementerToolsAreOpen\",\n    JSON.stringify(value)\n  );\n}\n\nfunction getIsConfigToolbarOpen(): boolean {\n  return (\n    JSON.parse(\n      localStorage.getItem(\"openmrs:openmrsImplementerToolsConfigOpen\") ||\n        \"true\"\n    ) ?? true\n  );\n}\n\nfunction setIsConfigToolbarOpen(value: boolean): void {\n  localStorage.setItem(\n    \"openmrs:openmrsImplementerToolsConfigOpen\",\n    JSON.stringify(value)\n  );\n}\n\nfunction getIsUIEditorEnabled(): boolean {\n  return (\n    JSON.parse(localStorage.getItem(\"openmrs:isUIEditorEnabled\") || \"false\") ??\n    false\n  );\n}\n\nfunction setIsUIEditorEnabled(enabled: boolean) {\n  localStorage.setItem(\"openmrs:isUIEditorEnabled\", JSON.stringify(enabled));\n}\n","var map = {\n\t\"./en.json\": [\n\t\t3574,\n\t\t574\n\t],\n\t\"./es.json\": [\n\t\t8319,\n\t\t319\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3979;\nmodule.exports = webpackAsyncContext;"],"names":["ConfigEditButton","configPath","t","useTranslation","onClick","implementerToolsStore","configPathBeingEdited","setupOpenMRS","options","featureName","moduleName","pages","route","load","getAsyncLifecycle","extensions","name","slot","importTranslation","require","createGlobalStore","activeItemDescription","undefined","isOpen","getIsImplementerToolsOpen","hasAlert","openTabIndex","isConfigToolbarOpen","getIsConfigToolbarOpen","isUIEditorEnabled","getIsUIEditorEnabled","togglePopup","action","state","value","showModuleDiagnostics","lastValueOfIsOpen","lastValueOfConfigToolbarOpen","lastValueOfIsUiEditorEnabled","JSON","parse","localStorage","getItem","subscribe","enabled","setItem","stringify","setIsConfigToolbarOpen","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports"],"sourceRoot":""}