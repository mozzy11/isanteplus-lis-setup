{"version":3,"file":"745.js","mappings":"4OACO,MAAMA,EAAe,GCEtBC,EAAoBC,EAAAA,MAEpBC,EAAsB,CAC1B,mBAAoB,UAGtB,SAASC,IACP,MAAMC,EAAa,8BAEbC,EAAU,CACdC,YAAa,aACbF,WAAAA,GAKF,OAFAG,EAAAA,EAAAA,oBAAmBH,EAAYL,GAExB,CACLS,MAAO,CACL,CACEC,MAAO,aACPC,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,yEAA4BN,GAC1DO,QAAQ,EACRC,SAAS,IAGbC,WAAY,CACV,CACEC,GAAI,kBACJC,KAAM,gBACNN,MAAMC,EAAAA,EAAAA,oBAAkB,IAAM,gEAA6BN,GAC3DO,QAAQ,EACRC,SAAS,O,eClCjB,IAAII,EAAM,CACT,YAAa,CACZ,KACA,KAED,YAAa,CACZ,KACA,MAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMJ,EAAKa,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,IAClCJ,EAAoBL,KAG7BG,EAAoBW,KAAO,IAAOC,OAAOD,KAAKZ,GAC9CC,EAAoBH,GAAK,KACzBgB,EAAOC,QAAUd","sources":["webpack://@openmrs/esm-outpatient-app/./src/config-schema.ts","webpack://@openmrs/esm-outpatient-app/./src/index.ts","webpack://@openmrs/esm-outpatient-app//home/runner/work/openmrs-esm-patient-management/openmrs-esm-patient-management/packages/esm-outpatient-app/translations|lazy|nonrecursive|/.json$/"],"sourcesContent":["import { Type, validators } from '@openmrs/esm-framework';\nexport const configSchema = {};\n","import { defineConfigSchema, getAsyncLifecycle } from '@openmrs/esm-framework';\nimport { configSchema } from './config-schema';\n\nconst importTranslation = require.context('../translations', false, /.json$/, 'lazy');\n\nconst backendDependencies = {\n  'webservices.rest': '^2.2.0',\n};\n\nfunction setupOpenMRS() {\n  const moduleName = '@openmrs/esm-outpatient-app';\n\n  const options = {\n    featureName: 'outpatient',\n    moduleName,\n  };\n\n  defineConfigSchema(moduleName, configSchema);\n\n  return {\n    pages: [\n      {\n        route: 'outpatient',\n        load: getAsyncLifecycle(() => import('./root.component'), options),\n        online: true,\n        offline: true,\n      },\n    ],\n    extensions: [\n      {\n        id: 'outpatient-link',\n        slot: 'app-menu-slot',\n        load: getAsyncLifecycle(() => import('./outpatient-link'), options),\n        online: true,\n        offline: false,\n      },\n    ],\n  };\n}\n\nexport { backendDependencies, importTranslation, setupOpenMRS };\n","var map = {\n\t\"./en.json\": [\n\t\t3574,\n\t\t574\n\t],\n\t\"./es.json\": [\n\t\t8319,\n\t\t319\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 3979;\nmodule.exports = webpackAsyncContext;"],"names":["configSchema","importTranslation","require","backendDependencies","setupOpenMRS","moduleName","options","featureName","defineConfigSchema","pages","route","load","getAsyncLifecycle","online","offline","extensions","id","slot","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","keys","Object","module","exports"],"sourceRoot":""}