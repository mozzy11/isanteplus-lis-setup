{"version":3,"file":"625.js","mappings":"sWAWIA,EAAU,GAEdA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKnB,QAAe,KAAW,WAAiB,gBAAiBM,ECSnE,EAzBoD,IAAqB,IAApB,YAAEC,GAAkB,EACvE,MAAM,IAAQC,EAAAA,EAAAA,mBACR,UAAEC,EAAF,UAAaC,IAAcC,EAAAA,EAAAA,IAAaJ,GAE9C,OAAIG,EACK,kBAACE,EAAA,EAAD,CAAeC,KAAK,cAAcC,YAAc,GAAEC,EAAE,UAAW,mBAEpEN,GAAWO,OAEX,6BACE,uBAAGC,UAAWC,EAAAA,OAAeH,EAAE,YAAa,cAC5C,uBAAGE,UAAWC,EAAAA,SACZ,0BAAMD,UAAWC,EAAAA,OAAeT,GAAWU,KAAKC,GAAYA,GAASC,UAASC,KAAK,SAMzF,6BACE,uBAAGL,UAAWC,EAAAA,OAAeH,EAAE,YAAa,cAC5C,uBAAGE,UAAWC,EAAAA,SAAd,S,mECFC,SAASP,EAAaJ,GAC3B,MAAM,KAAEgB,EAAF,MAAQC,EAAR,aAAeC,IAAiBC,EAAAA,EAAAA,IACnC,GAAEC,EAAAA,0CAA0CpB,IAC7CqB,EAAAA,cAGIC,EACJN,GAAMA,MAAMO,MAAQ,EAChBP,GAAMA,KAAKQ,MACRZ,KAAKY,GAAUA,EAAMC,UAAY,KACjCb,IAAIc,GACJC,MAAK,CAACC,EAAGC,IAAOA,EAAEC,YAAcF,EAAEE,YAAc,GAAK,IACxD,KAEN,MAAO,CACL5B,UAAWc,EAAOM,EAAqB,KACvCS,QAASd,EACTd,WAAYa,IAASC,EACrBC,aAAAA,GAIJ,SAASQ,EAAqBb,GAC5B,MAAMmB,EAAiBnB,GAASoB,SAAS,IAAIC,eAAetB,KAAKuB,GAAWA,EAAOA,OAAO,IAAIrB,UAC9F,MAAO,CACLsB,GAAIvB,GAASuB,GACbC,eAAgBxB,GAASwB,gBAAgBF,OAAO,IAAIrB,QACpDwB,YAAazB,GAASyB,YACtBxB,QAASD,GAAS0B,MAAMJ,OAAO,IAAIrB,QACnC0B,aAAc3B,GAAS2B,aACvBC,WAAY5B,GAAS6B,UAAU5B,QAC/B6B,aAAc9B,GAAS6B,UAAUE,KACjCC,KAAMhC,GAASgC,OAAO,IAAIC,KAC1BC,oBAAqBlC,GAASoB,SAAS,IAAIe,WAAWb,OAAO,IAAIrB,QACjEmC,uBAAwBjB,EACxBkB,kBAAkBC,EAAAA,EAAAA,GAAWtC,GAASoB,SAAS,IAAImB,UACnDtB,YAAajB,GAASwC,MAAMvB,e,iEC7D5BwB,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOpB,GAAI,45FAA65F,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,wEAAwE,qFAAqF,kHAAkH,wHAAwH,mHAAmH,mHAAmH,wFAAwF,0DAA0D,gIAAgI,MAAQ,GAAG,SAAW,88CAA88C,eAAiB,CAAC,8xCAA8xC,4sGAA4sG,6mEAA6mE,uiEAAuiE,igBAAigB,srnBAAsrnB,0mMAA0mM,8aAA8a,0z1FAA0z1F,WAAa,MAE1+mIkB,EAAwBG,OAAS,CAChC,MAAS,kEACT,QAAW,oEACX,MAAS,kEACT,SAAY,sEAEb","sources":["webpack://@openmrs/esm-patient-allergies-app/./src/allergies/allergies-tile.component.scss?1352","webpack://@openmrs/esm-patient-allergies-app/./src/allergies/allergies-tile.component.tsx","webpack://@openmrs/esm-patient-allergies-app/./src/allergies/allergy-intolerance.resource.ts","webpack://@openmrs/esm-patient-allergies-app/./src/allergies/allergies-tile.component.scss"],"sourcesContent":["\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./allergies-tile.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./allergies-tile.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { InlineLoading } from 'carbon-components-react';\nimport { useAllergies } from './allergy-intolerance.resource';\nimport styles from './allergies-tile.component.scss';\n\ninterface AllergyTileInterface {\n  patientUuid: string;\n}\n\nconst AllergyTile: React.FC<AllergyTileInterface> = ({ patientUuid }) => {\n  const { t } = useTranslation();\n  const { allergies, isLoading } = useAllergies(patientUuid);\n\n  if (isLoading) {\n    return <InlineLoading role=\"progressbar\" description={`${t('loading', 'Loading')} ...`} />;\n  }\n  if (allergies?.length) {\n    return (\n      <div>\n        <p className={styles.label}>{t('allergies', 'Allergies')}</p>\n        <p className={styles.content}>\n          <span className={styles.value}>{allergies?.map((allergy) => allergy?.display).join(', ')}</span>\n        </p>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <p className={styles.label}>{t('allergies', 'Allergies')}</p>\n      <p className={styles.content}>--</p>\n    </div>\n  );\n};\n\nexport default AllergyTile;\n","import useSWR from 'swr';\nimport { map } from 'rxjs/operators';\nimport capitalize from 'lodash-es/capitalize';\nimport { fhirBaseUrl, openmrsFetch, openmrsObservableFetch } from '@openmrs/esm-framework';\nimport { FHIRAllergy, FHIRAllergyResponse } from '../types';\n\nexport type Allergy = {\n  id: string;\n  clinicalStatus: string;\n  criticality: string;\n  display: string;\n  recordedDate: string;\n  recordedBy: string;\n  recorderType: string;\n  note: string;\n  reactionToSubstance: string;\n  reactionManifestations: Array<string>;\n  reactionSeverity: string;\n  lastUpdated: string;\n};\n\ntype UseAllergies = {\n  allergies: Array<Allergy>;\n  isError: Error | null;\n  isLoading: boolean;\n  isValidating: boolean;\n};\n\nexport function useAllergies(patientUuid: string): UseAllergies {\n  const { data, error, isValidating } = useSWR<{ data: FHIRAllergyResponse }, Error>(\n    `${fhirBaseUrl}/AllergyIntolerance?patient=${patientUuid}`,\n    openmrsFetch,\n  );\n\n  const formattedAllergies =\n    data?.data?.total > 0\n      ? data?.data.entry\n          .map((entry) => entry.resource ?? [])\n          .map(mapAllergyProperties)\n          .sort((a, b) => (b.lastUpdated > a.lastUpdated ? 1 : -1))\n      : null;\n\n  return {\n    allergies: data ? formattedAllergies : null,\n    isError: error,\n    isLoading: !data && !error,\n    isValidating,\n  };\n}\n\nfunction mapAllergyProperties(allergy: FHIRAllergy): Allergy {\n  const manifestations = allergy?.reaction[0]?.manifestation?.map((coding) => coding.coding[0]?.display);\n  return {\n    id: allergy?.id,\n    clinicalStatus: allergy?.clinicalStatus?.coding[0]?.display,\n    criticality: allergy?.criticality,\n    display: allergy?.code?.coding[0]?.display,\n    recordedDate: allergy?.recordedDate,\n    recordedBy: allergy?.recorder?.display,\n    recorderType: allergy?.recorder?.type,\n    note: allergy?.note?.[0]?.text,\n    reactionToSubstance: allergy?.reaction[0]?.substance?.coding[1]?.display,\n    reactionManifestations: manifestations,\n    reactionSeverity: capitalize(allergy?.reaction[0]?.severity),\n    lastUpdated: allergy?.meta?.lastUpdated,\n  };\n}\n\nexport function fetchAllergyByUuid(allergyUuid: string) {\n  return openmrsObservableFetch<FHIRAllergy>(`${fhirBaseUrl}/AllergyIntolerance/${allergyUuid}`).pipe(\n    map(({ data }) => mapAllergyProperties(data)),\n  );\n}\n\nexport function saveAllergy(patientAllergy: any, patientUuid: string, abortController: AbortController) {\n  const reactions = patientAllergy.reactionUuids.map((reaction: any) => {\n    return {\n      reaction: {\n        uuid: reaction.uuid,\n      },\n    };\n  });\n\n  return openmrsFetch(`/ws/rest/v1/patient/${patientUuid}/allergy`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    body: {\n      allergen: {\n        allergenType: patientAllergy?.allergenType,\n        codedAllergen: {\n          uuid: patientAllergy?.codedAllergenUuid,\n        },\n      },\n      severity: {\n        uuid: patientAllergy?.severityUuid,\n      },\n      comment: patientAllergy?.comment,\n      reactions: reactions,\n    },\n    signal: abortController.signal,\n  });\n}\n\nexport function updatePatientAllergy(\n  patientAllergy: any,\n  patientUuid: string,\n  allergyUuid: any,\n  abortController: AbortController,\n) {\n  const reactions = patientAllergy.reactionUuids.map((reaction: any) => {\n    return {\n      reaction: {\n        uuid: reaction.uuid,\n      },\n    };\n  });\n\n  return openmrsFetch(`/ws/rest/v1/patient/${patientUuid}/allergy/${allergyUuid.allergyUuid}`, {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    body: {\n      allergen: {\n        allergenType: patientAllergy.allergenType,\n        codedAllergen: {\n          uuid: patientAllergy.codedAllergenUuid,\n        },\n      },\n      severity: {\n        uuid: patientAllergy.severityUuid,\n      },\n      comment: patientAllergy.comment,\n      reactions: reactions,\n    },\n    signal: abortController.signal,\n  });\n}\n\nexport function deletePatientAllergy(patientUuid: string, allergyUuid: any, abortController: AbortController) {\n  return openmrsFetch(`/ws/rest/v1/patient/${patientUuid}/allergy/${allergyUuid.allergyUuid}`, {\n    method: 'DELETE',\n    signal: abortController.signal,\n  });\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{padding:0;border:0;margin:0;font:inherit;font-size:100%;vertical-align:baseline}button,select,input,textarea{border-radius:0;font-family:inherit}input[type=text]::-ms-clear{display:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}body{line-height:1}sup{vertical-align:super}sub{vertical-align:sub}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote::before,blockquote::after,q::before,q::after{content:\\\"\\\"}table{border-collapse:collapse;border-spacing:0}*{box-sizing:border-box}button{margin:0}html{font-size:100%}body{font-weight:400;font-family:'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility}code{font-family:'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace}strong{font-weight:600}@media screen and (-ms-high-contrast: active){svg{fill:ButtonText}}h1{font-size:2.625rem;font-weight:300;line-height:1.199;letter-spacing:0}h2{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}h3{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}h4{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}h5{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}h6{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}p{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}a{color:#0f62fe}em{font-style:italic}@keyframes -esm-patient-allergies__allergies-tile-component__skeleton___AtVxR{0%{opacity:.3;transform:scaleX(0);transform-origin:left}20%{opacity:1;transform:scaleX(1);transform-origin:left}28%{transform:scaleX(1);transform-origin:right}51%{transform:scaleX(0);transform-origin:right}58%{transform:scaleX(0);transform-origin:right}82%{transform:scaleX(1);transform-origin:right}83%{transform:scaleX(1);transform-origin:left}96%{transform:scaleX(0);transform-origin:left}100%{opacity:.3;transform:scaleX(0);transform-origin:left}}.-esm-patient-allergies__allergies-tile-component__label___ItLi6{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px;color:#525252}.-esm-patient-allergies__allergies-tile-component__content___pD\\\\+lR{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px;color:#525252;margin-top:5px}.-esm-patient-allergies__allergies-tile-component__value___xkxSY{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px;color:#161616}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_css--reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_reset.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_font-family.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/icons/mixins.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/_helper-mixins.scss\",\"webpack://./src/allergies/allergies-tile.component.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCTE,2ZAiFE,SAAA,CACA,QAAA,CACA,QAAA,CACA,YAAA,CACA,cAAA,CACA,uBAAA,CAIF,6BAIE,eAAA,CACA,mBAAA,CAGF,4BACE,YAAA,CAIF,mFAYE,aAAA,CAGF,KACE,aAAA,CAGF,IACE,oBAAA,CAGF,IACE,kBAAA,CAGF,MAEE,eAAA,CAGF,aAEE,WAAA,CAGF,wDAIE,UAAA,CAGF,MACE,wBAAA,CACA,gBAAA,CAGF,EACE,qBAAA,CAIF,OACE,QAAA,CC3KJ,KACE,cAAA,CAGF,KC0CA,eAAA,CDvCE,gEAViB,CAWjB,iCAAA,CACA,kCAAA,CACA,iCAAA,CAGF,KACE,wGAhBiB,CAmBnB,OC6BA,eAAA,CCxDA,8CACE,IACE,eAAA,CAAA,CFkCJ,GGggBE,kBAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlrBxB,GG4fE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH9qBxB,GGwfE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CH1qBxB,GGofE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CHtqBxB,GGgfE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CHlqBxB,GG4eE,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CH9pBxB,EGweE,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CH1pBxB,EAII,aAAA,CAMJ,GACE,iBAAA,CIkHF,8EACE,GACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,SAAA,CACA,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,sBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,IACE,mBAAA,CACA,qBAAA,CAEF,KACE,UAAA,CACA,mBAAA,CACA,qBAAA,CAAA,CC3ON,iEF4iBI,gBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CEhuBxB,aC6CU,CD1CZ,oEFuiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CE3tBxB,aCwCU,CDvCV,cAAA,CAGF,iEFiiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CErtBxB,aCiCU\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n@import './vendor/@carbon/elements/scss/type/reset';\\n@import './vendor/@carbon/elements/scss/icons/mixins';\\n\\n/// Resets default browser styling\\n/// @access public\\n/// @group global-reset\\n@mixin reset {\\n  @if variable-exists(css--reset) == false or $css--reset == false {\\n    box-sizing: border-box;\\n    padding: 0;\\n    border: 0;\\n    margin: 0;\\n    font-family: inherit;\\n    font-size: 100%;\\n    vertical-align: baseline;\\n\\n    *,\\n    *::before,\\n    *::after {\\n      box-sizing: inherit;\\n    }\\n  }\\n}\\n\\n@include exports('css--reset') {\\n  @if variable-exists(css--reset) == false or $css--reset == true {\\n    // http://cssreset.com/scripts/eric-meyer-reset-css/\\n    html,\\n    body,\\n    div,\\n    span,\\n    applet,\\n    object,\\n    iframe,\\n    h1,\\n    h2,\\n    h3,\\n    h4,\\n    h5,\\n    h6,\\n    p,\\n    blockquote,\\n    pre,\\n    a,\\n    abbr,\\n    acronym,\\n    address,\\n    big,\\n    cite,\\n    code,\\n    del,\\n    dfn,\\n    em,\\n    img,\\n    ins,\\n    kbd,\\n    q,\\n    s,\\n    samp,\\n    small,\\n    strike,\\n    strong,\\n    sub,\\n    sup,\\n    tt,\\n    var,\\n    b,\\n    u,\\n    i,\\n    center,\\n    dl,\\n    dt,\\n    dd,\\n    ol,\\n    ul,\\n    li,\\n    fieldset,\\n    form,\\n    label,\\n    legend,\\n    table,\\n    caption,\\n    tbody,\\n    tfoot,\\n    thead,\\n    tr,\\n    th,\\n    td,\\n    article,\\n    aside,\\n    canvas,\\n    details,\\n    embed,\\n    figure,\\n    figcaption,\\n    footer,\\n    header,\\n    hgroup,\\n    menu,\\n    nav,\\n    output,\\n    ruby,\\n    section,\\n    summary,\\n    time,\\n    mark,\\n    audio,\\n    video {\\n      padding: 0;\\n      border: 0;\\n      margin: 0;\\n      font: inherit;\\n      font-size: 100%;\\n      vertical-align: baseline;\\n    }\\n\\n    // Chrome 62 fix\\n    button,\\n    select,\\n    input,\\n    textarea {\\n      border-radius: 0;\\n      font-family: inherit;\\n    }\\n\\n    input[type='text']::-ms-clear {\\n      display: none;\\n    }\\n\\n    /* HTML5 display-role reset for older browsers */\\n    article,\\n    aside,\\n    details,\\n    figcaption,\\n    figure,\\n    footer,\\n    header,\\n    hgroup,\\n    main,\\n    menu,\\n    nav,\\n    section {\\n      display: block;\\n    }\\n\\n    body {\\n      line-height: 1;\\n    }\\n\\n    sup {\\n      vertical-align: super;\\n    }\\n\\n    sub {\\n      vertical-align: sub;\\n    }\\n\\n    ol,\\n    ul {\\n      list-style: none;\\n    }\\n\\n    blockquote,\\n    q {\\n      quotes: none;\\n    }\\n\\n    blockquote::before,\\n    blockquote::after,\\n    q::before,\\n    q::after {\\n      content: '';\\n    }\\n\\n    table {\\n      border-collapse: collapse;\\n      border-spacing: 0;\\n    }\\n\\n    * {\\n      box-sizing: border-box;\\n    }\\n\\n    // Fix to remove added margins on buttons in safari (see #5155)\\n    button {\\n      margin: 0;\\n    }\\n\\n    @include carbon--type-reset;\\n    @include carbon--icons;\\n  }\\n}\\n\\n@include exports('css--default-type') {\\n  @if variable-exists(css--default-type) == false or $css--default-type == true\\n  {\\n    @include carbon--default-type;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/convert';\\n@import 'font-family';\\n@import 'styles';\\n\\n/// Include a type reset for a given body and mono font family\\n/// @param {String} $body-font-family [carbon--font-family('sans')] - The font family used on the `<body>` element\\n/// @param {String} $mono-font-family [carbon--font-family('mono')] - The font family used on elements that require mono fonts, like the `<code>` element\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-reset(\\n  // TODO: remove in next major release. This has been replaced with 100%\\n  $base-font-size: $carbon--base-font-size,\\n  $body-font-family: carbon--font-family('sans'),\\n  $mono-font-family: carbon--font-family('mono')\\n) {\\n  html {\\n    font-size: 100%;\\n  }\\n\\n  body {\\n    @include carbon--font-weight('regular');\\n\\n    font-family: $body-font-family;\\n    -moz-osx-font-smoothing: grayscale;\\n    -webkit-font-smoothing: antialiased;\\n    text-rendering: optimizeLegibility;\\n  }\\n\\n  code {\\n    font-family: $mono-font-family;\\n  }\\n\\n  strong {\\n    @include carbon--font-weight('semibold');\\n  }\\n}\\n\\n/// Include default type styles\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--default-type {\\n  h1 {\\n    @include carbon--type-style('productive-heading-06');\\n  }\\n\\n  h2 {\\n    @include carbon--type-style('productive-heading-05');\\n  }\\n\\n  h3 {\\n    @include carbon--type-style('productive-heading-04');\\n  }\\n\\n  h4 {\\n    @include carbon--type-style('productive-heading-03');\\n  }\\n\\n  h5 {\\n    @include carbon--type-style('productive-heading-02');\\n  }\\n\\n  h6 {\\n    @include carbon--type-style('productive-heading-01');\\n  }\\n\\n  p {\\n    @include carbon--type-style('body-long-02');\\n  }\\n\\n  a {\\n    @if global-variable-exists('carbon--theme') and\\n      map-has-key($carbon--theme, 'link-01')\\n    {\\n      color: map-get($carbon--theme, 'link-01');\\n    } @else {\\n      color: #0062fe;\\n    }\\n  }\\n\\n  em {\\n    font-style: italic;\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Font family fallbacks for: IBM Plex Mono, IBM Plex Sans, IBM Plex Sans\\n/// Condensed, IBM Plex Sans Hebrew, and IBM Plex Serif\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-families: (\\n  'mono':\\n    unquote(\\n      \\\"'IBM Plex Mono', 'Menlo', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', Courier, monospace\\\"\\n    ),\\n  'sans': unquote(\\\"'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-condensed':\\n    unquote(\\\"'IBM Plex Sans Condensed', 'Helvetica Neue', Arial, sans-serif\\\"),\\n  'sans-hebrew':\\n    unquote(\\n      \\\"'IBM Plex Sans Hebrew', 'Helvetica Hebrew', 'Arial Hebrew', sans-serif\\\"\\n    ),\\n  'serif': unquote(\\\"'IBM Plex Serif', 'Georgia', Times, serif\\\"),\\n) !default;\\n\\n/// Get the font-family for an IBM Plex font\\n/// @param {String} $name\\n/// @return {String}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-family($name) {\\n  @return map-get($carbon--font-families, $name);\\n}\\n\\n/// Include the `font-family` definition for the given name in your selector\\n/// @param {String} $name\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-family($name) {\\n  font-family: carbon--font-family($name);\\n}\\n\\n/// Suggested font weights to be used in product\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$carbon--font-weights: (\\n  'light': 300,\\n  'regular': 400,\\n  'semibold': 600,\\n) !default;\\n\\n/// Retrieve the font-weight value for a given name\\n/// @param {String} $weight\\n/// @return {Number}\\n/// @access public\\n/// @group @carbon/type\\n@function carbon--font-weight($weight) {\\n  @return map-get($carbon--font-weights, $weight);\\n}\\n\\n/// Set the `font-weight` property with the value for a given name\\n/// @param {String} $weight\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--font-weight($weight) {\\n  font-weight: carbon--font-weight($weight);\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// Makes SVGs accessible in high contrast mode\\n/// @link https://github.com/IBM/carbon-elements/issues/345#issuecomment-466577293 Carbon-elements #345\\n/// @access public\\n/// @group @carbon/icons\\n@mixin carbon--icons {\\n  @media screen and (-ms-high-contrast: active) {\\n    svg {\\n      fill: ButtonText;\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"//\\n// Copyright IBM Corp. 2016, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n//----------------------------------------------\\n// Mixins\\n// ---------------------------------------------\\n//\\n//   Category             ||  Description\\n//   ===========================================\\n//   Misc                 ||  General helper @mixins\\n//   Deprecated           ||  Not used anymore\\n//   ===========================================\\n\\n//----------------------------------------------\\n// Misc\\n// ---------------------------------------------\\n\\n@import 'vars';\\n@import 'css--reset';\\n@import 'typography';\\n@import './vendor/@carbon/elements/scss/import-once/import-once';\\n\\n/// Adds text overflow styling\\n/// @access public\\n/// @param {Number} $width [false] - Value of width if you want to set width, else nothing\\n/// @example @include text-overflow(300px);\\n/// @group global-helpers\\n@mixin text-overflow($width: false) {\\n  display: block;\\n  overflow-x: hidden;\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n\\n  // apply a width if width parameter exists\\n  @if ($width) {\\n    width: $width;\\n  }\\n}\\n\\n/// Adds placeholder text color\\n/// @access public\\n/// @example @include placeholder-colors;\\n/// @group global-helpers\\n@mixin placeholder-colors {\\n  color: $text-05;\\n  opacity: 1;\\n}\\n\\n/// Adds box shadow\\n/// @access public\\n/// @example @include box-shadow;\\n/// @group global-helpers\\n@mixin box-shadow {\\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);\\n}\\n\\n/// Adds outline styles depending on specific type\\n/// @access public\\n/// @param {String} $type ['border'] - Type of outline from: `border`, `blurred`, `outline`, `invalid`, `reset`\\n/// @example @include focus-outline('outline');\\n/// @group global-helpers\\n@mixin focus-outline($type: 'border') {\\n  @if ($type == 'border') {\\n    outline: 1px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'blurred') {\\n    box-shadow: 0 0 0 3px $focus;\\n    outline: 1px solid transparent;\\n  }\\n\\n  @if ($type == 'outline') {\\n    outline: 2px solid $focus;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'outline-compat') {\\n    box-sizing: border-box;\\n    border: 2px solid $focus;\\n\\n    @media screen and (prefers-contrast) {\\n      border-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'invalid') {\\n    outline: 2px solid $support-01;\\n    outline-offset: -2px;\\n\\n    @media screen and (prefers-contrast) {\\n      outline-style: dotted;\\n    }\\n  }\\n\\n  @if ($type == 'reset') {\\n    outline: 2px solid transparent;\\n    outline-offset: -2px;\\n  }\\n}\\n\\n/// Adds rotational transformation\\n/// @access public\\n/// @param {Number} $deg - How many degrees to rotate\\n/// @param {Number} $speed - Speed of rotation\\n/// @param {Value} $origin [center] - `transform-origin`\\n/// @example @include rotate(90deg, 300ms);\\n/// @group global-helpers\\n@mixin rotate($deg, $speed, $origin: center) {\\n  transform: rotate($deg);\\n  transform-origin: $origin;\\n  transition: transform $speed;\\n}\\n\\n/// Adds styles to hide content\\n/// @access public\\n/// @group global-helpers\\n@mixin hidden {\\n  position: absolute;\\n  overflow: hidden;\\n  width: 1px;\\n  height: 1px;\\n  padding: 0;\\n  border: 0;\\n  margin: -1px;\\n  clip: rect(0, 0, 0, 0);\\n  visibility: inherit;\\n  white-space: nowrap;\\n}\\n\\n/// Resets button styles\\n/// @access public\\n/// @param {Bool} $width [true] - Sets width to 100% if true\\n/// @example @include button-reset($width: false);\\n/// @group global-helpers\\n@mixin button-reset($width: true) {\\n  @include reset;\\n\\n  display: inline-block;\\n  padding: 0;\\n  border: 0;\\n  appearance: none;\\n  background: none;\\n  cursor: pointer;\\n\\n  @if ($width == true) {\\n    width: 100%;\\n  }\\n\\n  &::-moz-focus-inner {\\n    border: 0;\\n  }\\n}\\n\\n/// Skeleton loading animation\\n/// @access public\\n/// @example @include skeleton;\\n/// @group global-helpers\\n@mixin skeleton {\\n  position: relative;\\n  padding: 0;\\n  border: none;\\n  background: $skeleton-01;\\n  box-shadow: none;\\n  pointer-events: none;\\n\\n  &:hover,\\n  &:focus,\\n  &:active {\\n    border: none;\\n    cursor: default;\\n    outline: none;\\n  }\\n\\n  &::before {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    animation: 3000ms ease-in-out skeleton infinite;\\n    background: $skeleton-02;\\n    content: '';\\n    will-change: transform-origin, transform, opacity;\\n\\n    @media (prefers-reduced-motion: reduce) {\\n      animation: none;\\n    }\\n  }\\n}\\n\\n@include exports('skeleton') {\\n  @keyframes skeleton {\\n    0% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    20% {\\n      opacity: 1;\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    28% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    51% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    58% {\\n      transform: scaleX(0);\\n      transform-origin: right;\\n    }\\n    82% {\\n      transform: scaleX(1);\\n      transform-origin: right;\\n    }\\n    83% {\\n      transform: scaleX(1);\\n      transform-origin: left;\\n    }\\n    96% {\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n    100% {\\n      opacity: 0.3;\\n      transform: scaleX(0);\\n      transform-origin: left;\\n    }\\n  }\\n}\\n\\n/// Windows HCM Mixin\\n/// @access public\\n/// @example @include high-contrast-mode;\\n/// @group global-helpers\\n/// We should set HCM styles at the end of each file to ensure they are not overridden\\n@mixin high-contrast-mode($type: '') {\\n  @media screen and (-ms-high-contrast: active),\\n    (forced-colors: active),\\n    (prefers-contrast) {\\n    @if ($type == 'icon-fill') {\\n      fill: ButtonText;\\n    }\\n\\n    @if ($type == 'focus') {\\n      color: Highlight;\\n      outline: 1px solid Highlight;\\n    }\\n\\n    @if ($type == 'outline') {\\n      outline: 1px solid transparent;\\n    }\\n\\n    @if ($type == 'disabled') {\\n      color: GrayText;\\n      fill: GrayText;\\n    }\\n\\n    @content;\\n  }\\n}\\n\",\"@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/vars\\\";\\n@import \\\"~carbon-components/src/globals/scss/mixins\\\";\\n\\n.label {\\n  @include carbon--type-style('label-01');\\n  color: $text-02;\\n}\\n\\n.content {\\n  @include carbon--type-style('body-short-01');\\n  color: $text-02;\\n  margin-top: 5px;\\n}\\n\\n.value {\\n  @include carbon--type-style('body-short-01');\\n  color: $text-01;\\n}\",\"// Code generated by @carbon/themes. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import './themes';\\n\\n/// Define theme variables from a map of tokens\\n/// @access public\\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\\n///\\n/// @example scss\\n///   // Default usage\\n///   @include carbon--theme();\\n///\\n///   // Alternate styling (not white theme)\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     // declarations...\\n///   }\\n///\\n///   // Inline styling\\n///   @include carbon--theme($carbon--theme--g90) {\\n///     .my-dark-theme {\\n///       // declarations...\\n///     }\\n///   }\\n///\\n/// @group @carbon/themes\\n@mixin carbon--theme(\\n  $theme: $carbon--theme,\\n  $emit-custom-properties: false,\\n  $emit-difference: false\\n) {\\n  $parent-carbon-theme: $carbon--theme;\\n  $carbon--theme: $theme !global;\\n  $interactive-01: map-get($theme, 'interactive-01') !global;\\n  $interactive-02: map-get($theme, 'interactive-02') !global;\\n  $interactive-03: map-get($theme, 'interactive-03') !global;\\n  $interactive-04: map-get($theme, 'interactive-04') !global;\\n  $ui-background: map-get($theme, 'ui-background') !global;\\n  $ui-01: map-get($theme, 'ui-01') !global;\\n  $ui-02: map-get($theme, 'ui-02') !global;\\n  $ui-03: map-get($theme, 'ui-03') !global;\\n  $ui-04: map-get($theme, 'ui-04') !global;\\n  $ui-05: map-get($theme, 'ui-05') !global;\\n  $text-01: map-get($theme, 'text-01') !global;\\n  $text-02: map-get($theme, 'text-02') !global;\\n  $text-03: map-get($theme, 'text-03') !global;\\n  $text-04: map-get($theme, 'text-04') !global;\\n  $text-05: map-get($theme, 'text-05') !global;\\n  $text-error: map-get($theme, 'text-error') !global;\\n  $icon-01: map-get($theme, 'icon-01') !global;\\n  $icon-02: map-get($theme, 'icon-02') !global;\\n  $icon-03: map-get($theme, 'icon-03') !global;\\n  $link-01: map-get($theme, 'link-01') !global;\\n  $link-02: map-get($theme, 'link-02') !global;\\n  $inverse-link: map-get($theme, 'inverse-link') !global;\\n  $field-01: map-get($theme, 'field-01') !global;\\n  $field-02: map-get($theme, 'field-02') !global;\\n  $inverse-01: map-get($theme, 'inverse-01') !global;\\n  $inverse-02: map-get($theme, 'inverse-02') !global;\\n  $support-01: map-get($theme, 'support-01') !global;\\n  $support-02: map-get($theme, 'support-02') !global;\\n  $support-03: map-get($theme, 'support-03') !global;\\n  $support-04: map-get($theme, 'support-04') !global;\\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\\n  $overlay-01: map-get($theme, 'overlay-01') !global;\\n  $danger-01: map-get($theme, 'danger-01') !global;\\n  $danger-02: map-get($theme, 'danger-02') !global;\\n  $focus: map-get($theme, 'focus') !global;\\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\\n  $hover-primary: map-get($theme, 'hover-primary') !global;\\n  $active-primary: map-get($theme, 'active-primary') !global;\\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\\n  $active-secondary: map-get($theme, 'active-secondary') !global;\\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\\n  $hover-ui: map-get($theme, 'hover-ui') !global;\\n  $hover-light-ui: map-get($theme, 'hover-light-ui') !global;\\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\\n  $active-ui: map-get($theme, 'active-ui') !global;\\n  $active-light-ui: map-get($theme, 'active-light-ui') !global;\\n  $selected-ui: map-get($theme, 'selected-ui') !global;\\n  $selected-light-ui: map-get($theme, 'selected-light-ui') !global;\\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\\n  $hover-danger: map-get($theme, 'hover-danger') !global;\\n  $active-danger: map-get($theme, 'active-danger') !global;\\n  $hover-row: map-get($theme, 'hover-row') !global;\\n  $visited-link: map-get($theme, 'visited-link') !global;\\n  $disabled-01: map-get($theme, 'disabled-01') !global;\\n  $disabled-02: map-get($theme, 'disabled-02') !global;\\n  $disabled-03: map-get($theme, 'disabled-03') !global;\\n  $highlight: map-get($theme, 'highlight') !global;\\n  $decorative-01: map-get($theme, 'decorative-01') !global;\\n  $button-separator: map-get($theme, 'button-separator') !global;\\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\\n  $background: map-get($theme, 'background') !global;\\n  $layer: map-get($theme, 'layer') !global;\\n  $layer-accent: map-get($theme, 'layer-accent') !global;\\n  $layer-accent-hover: map-get($theme, 'layer-accent-hover') !global;\\n  $layer-accent-active: map-get($theme, 'layer-accent-active') !global;\\n  $field: map-get($theme, 'field') !global;\\n  $background-inverse: map-get($theme, 'background-inverse') !global;\\n  $background-brand: map-get($theme, 'background-brand') !global;\\n  $interactive: map-get($theme, 'interactive') !global;\\n  $border-subtle: map-get($theme, 'border-subtle') !global;\\n  $border-strong: map-get($theme, 'border-strong') !global;\\n  $border-inverse: map-get($theme, 'border-inverse') !global;\\n  $border-interactive: map-get($theme, 'border-interactive') !global;\\n  $text-primary: map-get($theme, 'text-primary') !global;\\n  $text-secondary: map-get($theme, 'text-secondary') !global;\\n  $text-placeholder: map-get($theme, 'text-placeholder') !global;\\n  $text-helper: map-get($theme, 'text-helper') !global;\\n  $text-on-color: map-get($theme, 'text-on-color') !global;\\n  $text-inverse: map-get($theme, 'text-inverse') !global;\\n  $link-primary: map-get($theme, 'link-primary') !global;\\n  $link-secondary: map-get($theme, 'link-secondary') !global;\\n  $link-visited: map-get($theme, 'link-visited') !global;\\n  $link-inverse: map-get($theme, 'link-inverse') !global;\\n  $icon-primary: map-get($theme, 'icon-primary') !global;\\n  $icon-secondary: map-get($theme, 'icon-secondary') !global;\\n  $icon-on-color: map-get($theme, 'icon-on-color') !global;\\n  $icon-inverse: map-get($theme, 'icon-inverse') !global;\\n  $support-error: map-get($theme, 'support-error') !global;\\n  $support-success: map-get($theme, 'support-success') !global;\\n  $support-warning: map-get($theme, 'support-warning') !global;\\n  $support-info: map-get($theme, 'support-info') !global;\\n  $support-error-inverse: map-get($theme, 'support-error-inverse') !global;\\n  $support-success-inverse: map-get($theme, 'support-success-inverse') !global;\\n  $support-warning-inverse: map-get($theme, 'support-warning-inverse') !global;\\n  $support-info-inverse: map-get($theme, 'support-info-inverse') !global;\\n  $overlay: map-get($theme, 'overlay') !global;\\n  $toggle-off: map-get($theme, 'toggle-off') !global;\\n  $button-primary: map-get($theme, 'button-primary') !global;\\n  $button-secondary: map-get($theme, 'button-secondary') !global;\\n  $button-tertiary: map-get($theme, 'button-tertiary') !global;\\n  $button-danger-primary: map-get($theme, 'button-danger-primary') !global;\\n  $button-danger-secondary: map-get($theme, 'button-danger-secondary') !global;\\n  $background-active: map-get($theme, 'background-active') !global;\\n  $layer-active: map-get($theme, 'layer-active') !global;\\n  $button-danger-active: map-get($theme, 'button-danger-active') !global;\\n  $button-primary-active: map-get($theme, 'button-primary-active') !global;\\n  $button-secondary-active: map-get($theme, 'button-secondary-active') !global;\\n  $button-tertiary-active: map-get($theme, 'button-tertiary-active') !global;\\n  $focus-inset: map-get($theme, 'focus-inset') !global;\\n  $focus-inverse: map-get($theme, 'focus-inverse') !global;\\n  $background-hover: map-get($theme, 'background-hover') !global;\\n  $layer-hover: map-get($theme, 'layer-hover') !global;\\n  $field-hover: map-get($theme, 'field-hover') !global;\\n  $background-inverse-hover: map-get(\\n    $theme,\\n    'background-inverse-hover'\\n  ) !global;\\n  $link-primary-hover: map-get($theme, 'link-primary-hover') !global;\\n  $button-danger-hover: map-get($theme, 'button-danger-hover') !global;\\n  $button-primary-hover: map-get($theme, 'button-primary-hover') !global;\\n  $button-secondary-hover: map-get($theme, 'button-secondary-hover') !global;\\n  $button-tertiary-hover: map-get($theme, 'button-tertiary-hover') !global;\\n  $background-selected: map-get($theme, 'background-selected') !global;\\n  $background-selected-hover: map-get(\\n    $theme,\\n    'background-selected-hover'\\n  ) !global;\\n  $layer-selected: map-get($theme, 'layer-selected') !global;\\n  $layer-selected-hover: map-get($theme, 'layer-selected-hover') !global;\\n  $layer-selected-inverse: map-get($theme, 'layer-selected-inverse') !global;\\n  $border-subtle-selected: map-get($theme, 'border-subtle-selected') !global;\\n  $layer-disabled: map-get($theme, 'layer-disabled') !global;\\n  $field-disabled: map-get($theme, 'field-disabled') !global;\\n  $border-disabled: map-get($theme, 'border-disabled') !global;\\n  $text-disabled: map-get($theme, 'text-disabled') !global;\\n  $button-disabled: map-get($theme, 'button-disabled') !global;\\n  $icon-disabled: map-get($theme, 'icon-disabled') !global;\\n  $text-on-color-disabled: map-get($theme, 'text-on-color-disabled') !global;\\n  $icon-on-color-disabled: map-get($theme, 'icon-on-color-disabled') !global;\\n  $layer-selected-disabled: map-get($theme, 'layer-selected-disabled') !global;\\n  $skeleton-background: map-get($theme, 'skeleton-background') !global;\\n  $skeleton-element: map-get($theme, 'skeleton-element') !global;\\n  $brand-01: map-get($theme, 'brand-01') !global;\\n  $brand-02: map-get($theme, 'brand-02') !global;\\n  $brand-03: map-get($theme, 'brand-03') !global;\\n  $active-01: map-get($theme, 'active-01') !global;\\n  $hover-field: map-get($theme, 'hover-field') !global;\\n  $danger: map-get($theme, 'danger') !global;\\n  $caption-01: map-get($theme, 'caption-01') !global;\\n  $caption-02: map-get($theme, 'caption-02') !global;\\n  $label-01: map-get($theme, 'label-01') !global;\\n  $label-02: map-get($theme, 'label-02') !global;\\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\\n  $helper-text-02: map-get($theme, 'helper-text-02') !global;\\n  $body-short-01: map-get($theme, 'body-short-01') !global;\\n  $body-long-01: map-get($theme, 'body-long-01') !global;\\n  $body-short-02: map-get($theme, 'body-short-02') !global;\\n  $body-long-02: map-get($theme, 'body-long-02') !global;\\n  $code-01: map-get($theme, 'code-01') !global;\\n  $code-02: map-get($theme, 'code-02') !global;\\n  $heading-01: map-get($theme, 'heading-01') !global;\\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\\n  $heading-02: map-get($theme, 'heading-02') !global;\\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\\n  $quotation-01: map-get($theme, 'quotation-01') !global;\\n  $quotation-02: map-get($theme, 'quotation-02') !global;\\n  $display-01: map-get($theme, 'display-01') !global;\\n  $display-02: map-get($theme, 'display-02') !global;\\n  $display-03: map-get($theme, 'display-03') !global;\\n  $display-04: map-get($theme, 'display-04') !global;\\n  $spacing-01: map-get($theme, 'spacing-01') !global;\\n  $spacing-02: map-get($theme, 'spacing-02') !global;\\n  $spacing-03: map-get($theme, 'spacing-03') !global;\\n  $spacing-04: map-get($theme, 'spacing-04') !global;\\n  $spacing-05: map-get($theme, 'spacing-05') !global;\\n  $spacing-06: map-get($theme, 'spacing-06') !global;\\n  $spacing-07: map-get($theme, 'spacing-07') !global;\\n  $spacing-08: map-get($theme, 'spacing-08') !global;\\n  $spacing-09: map-get($theme, 'spacing-09') !global;\\n  $spacing-10: map-get($theme, 'spacing-10') !global;\\n  $spacing-11: map-get($theme, 'spacing-11') !global;\\n  $spacing-12: map-get($theme, 'spacing-12') !global;\\n  $spacing-13: map-get($theme, 'spacing-13') !global;\\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\\n  $layout-01: map-get($theme, 'layout-01') !global;\\n  $layout-02: map-get($theme, 'layout-02') !global;\\n  $layout-03: map-get($theme, 'layout-03') !global;\\n  $layout-04: map-get($theme, 'layout-04') !global;\\n  $layout-05: map-get($theme, 'layout-05') !global;\\n  $layout-06: map-get($theme, 'layout-06') !global;\\n  $layout-07: map-get($theme, 'layout-07') !global;\\n  $container-01: map-get($theme, 'container-01') !global;\\n  $container-02: map-get($theme, 'container-02') !global;\\n  $container-03: map-get($theme, 'container-03') !global;\\n  $container-04: map-get($theme, 'container-04') !global;\\n  $container-05: map-get($theme, 'container-05') !global;\\n  $size-xsmall: map-get($theme, 'size-xsmall') !global;\\n  $size-small: map-get($theme, 'size-small') !global;\\n  $size-medium: map-get($theme, 'size-medium') !global;\\n  $size-large: map-get($theme, 'size-large') !global;\\n  $size-xlarge: map-get($theme, 'size-xlarge') !global;\\n  $size-2XLarge: map-get($theme, 'size-2XLarge') !global;\\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\\n\\n  @if global-variable-exists('feature-flags') ==\\n    false or\\n    global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-v11-release') !=\\n    true\\n  {\\n    $background: $ui-background !global;\\n    $layer: $ui-01 !global;\\n    $layer-accent: $ui-03 !global;\\n    $field: $field-01 !global;\\n    $background-inverse: $inverse-02 !global;\\n    $background-brand: $interactive-01 !global;\\n    $interactive: $interactive-04 !global;\\n    $border-subtle: $ui-03 !global;\\n    $border-strong: $ui-04 !global;\\n    $border-inverse: $ui-05 !global;\\n    $border-interactive: $interactive-04 !global;\\n    $text-primary: $text-01 !global;\\n    $text-secondary: $text-02 !global;\\n    $text-placeholder: $text-03 !global;\\n    $text-helper: $text-05 !global;\\n    $text-on-color: $text-04 !global;\\n    $text-inverse: $inverse-01 !global;\\n    $link-primary: $link-01 !global;\\n    $link-secondary: $link-02 !global;\\n    $link-visited: $visited-link !global;\\n    $link-inverse: $inverse-link !global;\\n    $icon-primary: $icon-01 !global;\\n    $icon-secondary: $icon-02 !global;\\n    $icon-on-color: $icon-03 !global;\\n    $icon-inverse: $inverse-01 !global;\\n    $support-error: $support-01 !global;\\n    $support-success: $support-02 !global;\\n    $support-warning: $support-03 !global;\\n    $support-info: $support-04 !global;\\n    $support-error-inverse: $inverse-support-01 !global;\\n    $support-success-inverse: $inverse-support-02 !global;\\n    $support-warning-inverse: $inverse-support-03 !global;\\n    $support-info-inverse: $inverse-support-04 !global;\\n    $overlay: $overlay-01 !global;\\n    $toggle-off: $ui-04 !global;\\n    $button-primary: $interactive-01 !global;\\n    $button-secondary: $interactive-02 !global;\\n    $button-tertiary: $interactive-03 !global;\\n    $button-danger-primary: $danger-01 !global;\\n    $button-danger-secondary: $danger-02 !global;\\n    $background-active: $active-ui !global;\\n    $layer-active: $active-ui !global;\\n    $button-danger-active: $active-danger !global;\\n    $button-primary-active: $active-primary !global;\\n    $button-secondary-active: $active-secondary !global;\\n    $button-tertiary-active: $active-tertiary !global;\\n    $focus-inset: $inverse-01 !global;\\n    $focus-inverse: $inverse-focus-ui !global;\\n    $background-hover: $hover-ui !global;\\n    $layer-hover: $hover-ui !global;\\n    $field-hover: $hover-ui !global;\\n    $background-inverse-hover: $inverse-hover-ui !global;\\n    $link-primary-hover: $hover-primary-text !global;\\n    $button-danger-hover: $hover-danger !global;\\n    $button-primary-hover: $hover-primary !global;\\n    $button-secondary-hover: $hover-secondary !global;\\n    $button-tertiary-hover: $hover-tertiary !global;\\n    $background-selected: $selected-ui !global;\\n    $background-selected-hover: $hover-selected-ui !global;\\n    $layer-selected: $selected-ui !global;\\n    $layer-selected-hover: $hover-selected-ui !global;\\n    $layer-selected-inverse: $ui-05 !global;\\n    $border-subtle-selected: $active-ui !global;\\n    $layer-disabled: $disabled-01 !global;\\n    $field-disabled: $disabled-01 !global;\\n    $border-disabled: $disabled-01 !global;\\n    $text-disabled: $disabled-02 !global;\\n    $button-disabled: $disabled-02 !global;\\n    $icon-disabled: $disabled-02 !global;\\n    $text-on-color-disabled: $disabled-03 !global;\\n    $icon-on-color-disabled: $disabled-03 !global;\\n    $layer-selected-disabled: $disabled-03 !global;\\n    $skeleton-background: $skeleton-01 !global;\\n    $skeleton-element: $skeleton-02 !global;\\n  }\\n  @if global-variable-exists('feature-flags') and\\n    map-get($feature-flags, 'enable-css-custom-properties')\\n  {\\n    $interactive-01: var(\\n      --#{$custom-property-prefix}-interactive-01,\\n      map-get($theme, 'interactive-01')\\n    ) !global;\\n    $interactive-02: var(\\n      --#{$custom-property-prefix}-interactive-02,\\n      map-get($theme, 'interactive-02')\\n    ) !global;\\n    $interactive-03: var(\\n      --#{$custom-property-prefix}-interactive-03,\\n      map-get($theme, 'interactive-03')\\n    ) !global;\\n    $interactive-04: var(\\n      --#{$custom-property-prefix}-interactive-04,\\n      map-get($theme, 'interactive-04')\\n    ) !global;\\n    $ui-background: var(\\n      --#{$custom-property-prefix}-ui-background,\\n      map-get($theme, 'ui-background')\\n    ) !global;\\n    $ui-01: var(\\n      --#{$custom-property-prefix}-ui-01,\\n      map-get($theme, 'ui-01')\\n    ) !global;\\n    $ui-02: var(\\n      --#{$custom-property-prefix}-ui-02,\\n      map-get($theme, 'ui-02')\\n    ) !global;\\n    $ui-03: var(\\n      --#{$custom-property-prefix}-ui-03,\\n      map-get($theme, 'ui-03')\\n    ) !global;\\n    $ui-04: var(\\n      --#{$custom-property-prefix}-ui-04,\\n      map-get($theme, 'ui-04')\\n    ) !global;\\n    $ui-05: var(\\n      --#{$custom-property-prefix}-ui-05,\\n      map-get($theme, 'ui-05')\\n    ) !global;\\n    $text-01: var(\\n      --#{$custom-property-prefix}-text-01,\\n      map-get($theme, 'text-01')\\n    ) !global;\\n    $text-02: var(\\n      --#{$custom-property-prefix}-text-02,\\n      map-get($theme, 'text-02')\\n    ) !global;\\n    $text-03: var(\\n      --#{$custom-property-prefix}-text-03,\\n      map-get($theme, 'text-03')\\n    ) !global;\\n    $text-04: var(\\n      --#{$custom-property-prefix}-text-04,\\n      map-get($theme, 'text-04')\\n    ) !global;\\n    $text-05: var(\\n      --#{$custom-property-prefix}-text-05,\\n      map-get($theme, 'text-05')\\n    ) !global;\\n    $text-error: var(\\n      --#{$custom-property-prefix}-text-error,\\n      map-get($theme, 'text-error')\\n    ) !global;\\n    $icon-01: var(\\n      --#{$custom-property-prefix}-icon-01,\\n      map-get($theme, 'icon-01')\\n    ) !global;\\n    $icon-02: var(\\n      --#{$custom-property-prefix}-icon-02,\\n      map-get($theme, 'icon-02')\\n    ) !global;\\n    $icon-03: var(\\n      --#{$custom-property-prefix}-icon-03,\\n      map-get($theme, 'icon-03')\\n    ) !global;\\n    $link-01: var(\\n      --#{$custom-property-prefix}-link-01,\\n      map-get($theme, 'link-01')\\n    ) !global;\\n    $link-02: var(\\n      --#{$custom-property-prefix}-link-02,\\n      map-get($theme, 'link-02')\\n    ) !global;\\n    $inverse-link: var(\\n      --#{$custom-property-prefix}-inverse-link,\\n      map-get($theme, 'inverse-link')\\n    ) !global;\\n    $field-01: var(\\n      --#{$custom-property-prefix}-field-01,\\n      map-get($theme, 'field-01')\\n    ) !global;\\n    $field-02: var(\\n      --#{$custom-property-prefix}-field-02,\\n      map-get($theme, 'field-02')\\n    ) !global;\\n    $inverse-01: var(\\n      --#{$custom-property-prefix}-inverse-01,\\n      map-get($theme, 'inverse-01')\\n    ) !global;\\n    $inverse-02: var(\\n      --#{$custom-property-prefix}-inverse-02,\\n      map-get($theme, 'inverse-02')\\n    ) !global;\\n    $support-01: var(\\n      --#{$custom-property-prefix}-support-01,\\n      map-get($theme, 'support-01')\\n    ) !global;\\n    $support-02: var(\\n      --#{$custom-property-prefix}-support-02,\\n      map-get($theme, 'support-02')\\n    ) !global;\\n    $support-03: var(\\n      --#{$custom-property-prefix}-support-03,\\n      map-get($theme, 'support-03')\\n    ) !global;\\n    $support-04: var(\\n      --#{$custom-property-prefix}-support-04,\\n      map-get($theme, 'support-04')\\n    ) !global;\\n    $inverse-support-01: var(\\n      --#{$custom-property-prefix}-inverse-support-01,\\n      map-get($theme, 'inverse-support-01')\\n    ) !global;\\n    $inverse-support-02: var(\\n      --#{$custom-property-prefix}-inverse-support-02,\\n      map-get($theme, 'inverse-support-02')\\n    ) !global;\\n    $inverse-support-03: var(\\n      --#{$custom-property-prefix}-inverse-support-03,\\n      map-get($theme, 'inverse-support-03')\\n    ) !global;\\n    $inverse-support-04: var(\\n      --#{$custom-property-prefix}-inverse-support-04,\\n      map-get($theme, 'inverse-support-04')\\n    ) !global;\\n    $overlay-01: var(\\n      --#{$custom-property-prefix}-overlay-01,\\n      map-get($theme, 'overlay-01')\\n    ) !global;\\n    $danger-01: var(\\n      --#{$custom-property-prefix}-danger-01,\\n      map-get($theme, 'danger-01')\\n    ) !global;\\n    $danger-02: var(\\n      --#{$custom-property-prefix}-danger-02,\\n      map-get($theme, 'danger-02')\\n    ) !global;\\n    $focus: var(\\n      --#{$custom-property-prefix}-focus,\\n      map-get($theme, 'focus')\\n    ) !global;\\n    $inverse-focus-ui: var(\\n      --#{$custom-property-prefix}-inverse-focus-ui,\\n      map-get($theme, 'inverse-focus-ui')\\n    ) !global;\\n    $hover-primary: var(\\n      --#{$custom-property-prefix}-hover-primary,\\n      map-get($theme, 'hover-primary')\\n    ) !global;\\n    $active-primary: var(\\n      --#{$custom-property-prefix}-active-primary,\\n      map-get($theme, 'active-primary')\\n    ) !global;\\n    $hover-primary-text: var(\\n      --#{$custom-property-prefix}-hover-primary-text,\\n      map-get($theme, 'hover-primary-text')\\n    ) !global;\\n    $hover-secondary: var(\\n      --#{$custom-property-prefix}-hover-secondary,\\n      map-get($theme, 'hover-secondary')\\n    ) !global;\\n    $active-secondary: var(\\n      --#{$custom-property-prefix}-active-secondary,\\n      map-get($theme, 'active-secondary')\\n    ) !global;\\n    $hover-tertiary: var(\\n      --#{$custom-property-prefix}-hover-tertiary,\\n      map-get($theme, 'hover-tertiary')\\n    ) !global;\\n    $active-tertiary: var(\\n      --#{$custom-property-prefix}-active-tertiary,\\n      map-get($theme, 'active-tertiary')\\n    ) !global;\\n    $hover-ui: var(\\n      --#{$custom-property-prefix}-hover-ui,\\n      map-get($theme, 'hover-ui')\\n    ) !global;\\n    $hover-light-ui: var(\\n      --#{$custom-property-prefix}-hover-light-ui,\\n      map-get($theme, 'hover-light-ui')\\n    ) !global;\\n    $hover-selected-ui: var(\\n      --#{$custom-property-prefix}-hover-selected-ui,\\n      map-get($theme, 'hover-selected-ui')\\n    ) !global;\\n    $active-ui: var(\\n      --#{$custom-property-prefix}-active-ui,\\n      map-get($theme, 'active-ui')\\n    ) !global;\\n    $active-light-ui: var(\\n      --#{$custom-property-prefix}-active-light-ui,\\n      map-get($theme, 'active-light-ui')\\n    ) !global;\\n    $selected-ui: var(\\n      --#{$custom-property-prefix}-selected-ui,\\n      map-get($theme, 'selected-ui')\\n    ) !global;\\n    $selected-light-ui: var(\\n      --#{$custom-property-prefix}-selected-light-ui,\\n      map-get($theme, 'selected-light-ui')\\n    ) !global;\\n    $inverse-hover-ui: var(\\n      --#{$custom-property-prefix}-inverse-hover-ui,\\n      map-get($theme, 'inverse-hover-ui')\\n    ) !global;\\n    $hover-danger: var(\\n      --#{$custom-property-prefix}-hover-danger,\\n      map-get($theme, 'hover-danger')\\n    ) !global;\\n    $active-danger: var(\\n      --#{$custom-property-prefix}-active-danger,\\n      map-get($theme, 'active-danger')\\n    ) !global;\\n    $hover-row: var(\\n      --#{$custom-property-prefix}-hover-row,\\n      map-get($theme, 'hover-row')\\n    ) !global;\\n    $visited-link: var(\\n      --#{$custom-property-prefix}-visited-link,\\n      map-get($theme, 'visited-link')\\n    ) !global;\\n    $disabled-01: var(\\n      --#{$custom-property-prefix}-disabled-01,\\n      map-get($theme, 'disabled-01')\\n    ) !global;\\n    $disabled-02: var(\\n      --#{$custom-property-prefix}-disabled-02,\\n      map-get($theme, 'disabled-02')\\n    ) !global;\\n    $disabled-03: var(\\n      --#{$custom-property-prefix}-disabled-03,\\n      map-get($theme, 'disabled-03')\\n    ) !global;\\n    $highlight: var(\\n      --#{$custom-property-prefix}-highlight,\\n      map-get($theme, 'highlight')\\n    ) !global;\\n    $decorative-01: var(\\n      --#{$custom-property-prefix}-decorative-01,\\n      map-get($theme, 'decorative-01')\\n    ) !global;\\n    $button-separator: var(\\n      --#{$custom-property-prefix}-button-separator,\\n      map-get($theme, 'button-separator')\\n    ) !global;\\n    $skeleton-01: var(\\n      --#{$custom-property-prefix}-skeleton-01,\\n      map-get($theme, 'skeleton-01')\\n    ) !global;\\n    $skeleton-02: var(\\n      --#{$custom-property-prefix}-skeleton-02,\\n      map-get($theme, 'skeleton-02')\\n    ) !global;\\n    $background: var(\\n      --#{$custom-property-prefix}-background,\\n      map-get($theme, 'background')\\n    ) !global;\\n    $layer: var(\\n      --#{$custom-property-prefix}-layer,\\n      map-get($theme, 'layer')\\n    ) !global;\\n    $layer-accent: var(\\n      --#{$custom-property-prefix}-layer-accent,\\n      map-get($theme, 'layer-accent')\\n    ) !global;\\n    $layer-accent-hover: var(\\n      --#{$custom-property-prefix}-layer-accent-hover,\\n      map-get($theme, 'layer-accent-hover')\\n    ) !global;\\n    $layer-accent-active: var(\\n      --#{$custom-property-prefix}-layer-accent-active,\\n      map-get($theme, 'layer-accent-active')\\n    ) !global;\\n    $field: var(\\n      --#{$custom-property-prefix}-field,\\n      map-get($theme, 'field')\\n    ) !global;\\n    $background-inverse: var(\\n      --#{$custom-property-prefix}-background-inverse,\\n      map-get($theme, 'background-inverse')\\n    ) !global;\\n    $background-brand: var(\\n      --#{$custom-property-prefix}-background-brand,\\n      map-get($theme, 'background-brand')\\n    ) !global;\\n    $interactive: var(\\n      --#{$custom-property-prefix}-interactive,\\n      map-get($theme, 'interactive')\\n    ) !global;\\n    $border-subtle: var(\\n      --#{$custom-property-prefix}-border-subtle,\\n      map-get($theme, 'border-subtle')\\n    ) !global;\\n    $border-strong: var(\\n      --#{$custom-property-prefix}-border-strong,\\n      map-get($theme, 'border-strong')\\n    ) !global;\\n    $border-inverse: var(\\n      --#{$custom-property-prefix}-border-inverse,\\n      map-get($theme, 'border-inverse')\\n    ) !global;\\n    $border-interactive: var(\\n      --#{$custom-property-prefix}-border-interactive,\\n      map-get($theme, 'border-interactive')\\n    ) !global;\\n    $text-primary: var(\\n      --#{$custom-property-prefix}-text-primary,\\n      map-get($theme, 'text-primary')\\n    ) !global;\\n    $text-secondary: var(\\n      --#{$custom-property-prefix}-text-secondary,\\n      map-get($theme, 'text-secondary')\\n    ) !global;\\n    $text-placeholder: var(\\n      --#{$custom-property-prefix}-text-placeholder,\\n      map-get($theme, 'text-placeholder')\\n    ) !global;\\n    $text-helper: var(\\n      --#{$custom-property-prefix}-text-helper,\\n      map-get($theme, 'text-helper')\\n    ) !global;\\n    $text-on-color: var(\\n      --#{$custom-property-prefix}-text-on-color,\\n      map-get($theme, 'text-on-color')\\n    ) !global;\\n    $text-inverse: var(\\n      --#{$custom-property-prefix}-text-inverse,\\n      map-get($theme, 'text-inverse')\\n    ) !global;\\n    $link-primary: var(\\n      --#{$custom-property-prefix}-link-primary,\\n      map-get($theme, 'link-primary')\\n    ) !global;\\n    $link-secondary: var(\\n      --#{$custom-property-prefix}-link-secondary,\\n      map-get($theme, 'link-secondary')\\n    ) !global;\\n    $link-visited: var(\\n      --#{$custom-property-prefix}-link-visited,\\n      map-get($theme, 'link-visited')\\n    ) !global;\\n    $link-inverse: var(\\n      --#{$custom-property-prefix}-link-inverse,\\n      map-get($theme, 'link-inverse')\\n    ) !global;\\n    $icon-primary: var(\\n      --#{$custom-property-prefix}-icon-primary,\\n      map-get($theme, 'icon-primary')\\n    ) !global;\\n    $icon-secondary: var(\\n      --#{$custom-property-prefix}-icon-secondary,\\n      map-get($theme, 'icon-secondary')\\n    ) !global;\\n    $icon-on-color: var(\\n      --#{$custom-property-prefix}-icon-on-color,\\n      map-get($theme, 'icon-on-color')\\n    ) !global;\\n    $icon-inverse: var(\\n      --#{$custom-property-prefix}-icon-inverse,\\n      map-get($theme, 'icon-inverse')\\n    ) !global;\\n    $support-error: var(\\n      --#{$custom-property-prefix}-support-error,\\n      map-get($theme, 'support-error')\\n    ) !global;\\n    $support-success: var(\\n      --#{$custom-property-prefix}-support-success,\\n      map-get($theme, 'support-success')\\n    ) !global;\\n    $support-warning: var(\\n      --#{$custom-property-prefix}-support-warning,\\n      map-get($theme, 'support-warning')\\n    ) !global;\\n    $support-info: var(\\n      --#{$custom-property-prefix}-support-info,\\n      map-get($theme, 'support-info')\\n    ) !global;\\n    $support-error-inverse: var(\\n      --#{$custom-property-prefix}-support-error-inverse,\\n      map-get($theme, 'support-error-inverse')\\n    ) !global;\\n    $support-success-inverse: var(\\n      --#{$custom-property-prefix}-support-success-inverse,\\n      map-get($theme, 'support-success-inverse')\\n    ) !global;\\n    $support-warning-inverse: var(\\n      --#{$custom-property-prefix}-support-warning-inverse,\\n      map-get($theme, 'support-warning-inverse')\\n    ) !global;\\n    $support-info-inverse: var(\\n      --#{$custom-property-prefix}-support-info-inverse,\\n      map-get($theme, 'support-info-inverse')\\n    ) !global;\\n    $overlay: var(\\n      --#{$custom-property-prefix}-overlay,\\n      map-get($theme, 'overlay')\\n    ) !global;\\n    $toggle-off: var(\\n      --#{$custom-property-prefix}-toggle-off,\\n      map-get($theme, 'toggle-off')\\n    ) !global;\\n    $button-primary: var(\\n      --#{$custom-property-prefix}-button-primary,\\n      map-get($theme, 'button-primary')\\n    ) !global;\\n    $button-secondary: var(\\n      --#{$custom-property-prefix}-button-secondary,\\n      map-get($theme, 'button-secondary')\\n    ) !global;\\n    $button-tertiary: var(\\n      --#{$custom-property-prefix}-button-tertiary,\\n      map-get($theme, 'button-tertiary')\\n    ) !global;\\n    $button-danger-primary: var(\\n      --#{$custom-property-prefix}-button-danger-primary,\\n      map-get($theme, 'button-danger-primary')\\n    ) !global;\\n    $button-danger-secondary: var(\\n      --#{$custom-property-prefix}-button-danger-secondary,\\n      map-get($theme, 'button-danger-secondary')\\n    ) !global;\\n    $background-active: var(\\n      --#{$custom-property-prefix}-background-active,\\n      map-get($theme, 'background-active')\\n    ) !global;\\n    $layer-active: var(\\n      --#{$custom-property-prefix}-layer-active,\\n      map-get($theme, 'layer-active')\\n    ) !global;\\n    $button-danger-active: var(\\n      --#{$custom-property-prefix}-button-danger-active,\\n      map-get($theme, 'button-danger-active')\\n    ) !global;\\n    $button-primary-active: var(\\n      --#{$custom-property-prefix}-button-primary-active,\\n      map-get($theme, 'button-primary-active')\\n    ) !global;\\n    $button-secondary-active: var(\\n      --#{$custom-property-prefix}-button-secondary-active,\\n      map-get($theme, 'button-secondary-active')\\n    ) !global;\\n    $button-tertiary-active: var(\\n      --#{$custom-property-prefix}-button-tertiary-active,\\n      map-get($theme, 'button-tertiary-active')\\n    ) !global;\\n    $focus-inset: var(\\n      --#{$custom-property-prefix}-focus-inset,\\n      map-get($theme, 'focus-inset')\\n    ) !global;\\n    $focus-inverse: var(\\n      --#{$custom-property-prefix}-focus-inverse,\\n      map-get($theme, 'focus-inverse')\\n    ) !global;\\n    $background-hover: var(\\n      --#{$custom-property-prefix}-background-hover,\\n      map-get($theme, 'background-hover')\\n    ) !global;\\n    $layer-hover: var(\\n      --#{$custom-property-prefix}-layer-hover,\\n      map-get($theme, 'layer-hover')\\n    ) !global;\\n    $field-hover: var(\\n      --#{$custom-property-prefix}-field-hover,\\n      map-get($theme, 'field-hover')\\n    ) !global;\\n    $background-inverse-hover: var(\\n      --#{$custom-property-prefix}-background-inverse-hover,\\n      map-get($theme, 'background-inverse-hover')\\n    ) !global;\\n    $link-primary-hover: var(\\n      --#{$custom-property-prefix}-link-primary-hover,\\n      map-get($theme, 'link-primary-hover')\\n    ) !global;\\n    $button-danger-hover: var(\\n      --#{$custom-property-prefix}-button-danger-hover,\\n      map-get($theme, 'button-danger-hover')\\n    ) !global;\\n    $button-primary-hover: var(\\n      --#{$custom-property-prefix}-button-primary-hover,\\n      map-get($theme, 'button-primary-hover')\\n    ) !global;\\n    $button-secondary-hover: var(\\n      --#{$custom-property-prefix}-button-secondary-hover,\\n      map-get($theme, 'button-secondary-hover')\\n    ) !global;\\n    $button-tertiary-hover: var(\\n      --#{$custom-property-prefix}-button-tertiary-hover,\\n      map-get($theme, 'button-tertiary-hover')\\n    ) !global;\\n    $background-selected: var(\\n      --#{$custom-property-prefix}-background-selected,\\n      map-get($theme, 'background-selected')\\n    ) !global;\\n    $background-selected-hover: var(\\n      --#{$custom-property-prefix}-background-selected-hover,\\n      map-get($theme, 'background-selected-hover')\\n    ) !global;\\n    $layer-selected: var(\\n      --#{$custom-property-prefix}-layer-selected,\\n      map-get($theme, 'layer-selected')\\n    ) !global;\\n    $layer-selected-hover: var(\\n      --#{$custom-property-prefix}-layer-selected-hover,\\n      map-get($theme, 'layer-selected-hover')\\n    ) !global;\\n    $layer-selected-inverse: var(\\n      --#{$custom-property-prefix}-layer-selected-inverse,\\n      map-get($theme, 'layer-selected-inverse')\\n    ) !global;\\n    $border-subtle-selected: var(\\n      --#{$custom-property-prefix}-border-subtle-selected,\\n      map-get($theme, 'border-subtle-selected')\\n    ) !global;\\n    $layer-disabled: var(\\n      --#{$custom-property-prefix}-layer-disabled,\\n      map-get($theme, 'layer-disabled')\\n    ) !global;\\n    $field-disabled: var(\\n      --#{$custom-property-prefix}-field-disabled,\\n      map-get($theme, 'field-disabled')\\n    ) !global;\\n    $border-disabled: var(\\n      --#{$custom-property-prefix}-border-disabled,\\n      map-get($theme, 'border-disabled')\\n    ) !global;\\n    $text-disabled: var(\\n      --#{$custom-property-prefix}-text-disabled,\\n      map-get($theme, 'text-disabled')\\n    ) !global;\\n    $button-disabled: var(\\n      --#{$custom-property-prefix}-button-disabled,\\n      map-get($theme, 'button-disabled')\\n    ) !global;\\n    $icon-disabled: var(\\n      --#{$custom-property-prefix}-icon-disabled,\\n      map-get($theme, 'icon-disabled')\\n    ) !global;\\n    $text-on-color-disabled: var(\\n      --#{$custom-property-prefix}-text-on-color-disabled,\\n      map-get($theme, 'text-on-color-disabled')\\n    ) !global;\\n    $icon-on-color-disabled: var(\\n      --#{$custom-property-prefix}-icon-on-color-disabled,\\n      map-get($theme, 'icon-on-color-disabled')\\n    ) !global;\\n    $layer-selected-disabled: var(\\n      --#{$custom-property-prefix}-layer-selected-disabled,\\n      map-get($theme, 'layer-selected-disabled')\\n    ) !global;\\n    $skeleton-background: var(\\n      --#{$custom-property-prefix}-skeleton-background,\\n      map-get($theme, 'skeleton-background')\\n    ) !global;\\n    $skeleton-element: var(\\n      --#{$custom-property-prefix}-skeleton-element,\\n      map-get($theme, 'skeleton-element')\\n    ) !global;\\n    $brand-01: var(\\n      --#{$custom-property-prefix}-brand-01,\\n      map-get($theme, 'brand-01')\\n    ) !global;\\n    $brand-02: var(\\n      --#{$custom-property-prefix}-brand-02,\\n      map-get($theme, 'brand-02')\\n    ) !global;\\n    $brand-03: var(\\n      --#{$custom-property-prefix}-brand-03,\\n      map-get($theme, 'brand-03')\\n    ) !global;\\n    $active-01: var(\\n      --#{$custom-property-prefix}-active-01,\\n      map-get($theme, 'active-01')\\n    ) !global;\\n    $hover-field: var(\\n      --#{$custom-property-prefix}-hover-field,\\n      map-get($theme, 'hover-field')\\n    ) !global;\\n    $danger: var(\\n      --#{$custom-property-prefix}-danger,\\n      map-get($theme, 'danger')\\n    ) !global;\\n    $spacing-01: var(\\n      --#{$custom-property-prefix}-spacing-01,\\n      map-get($theme, 'spacing-01')\\n    ) !global;\\n    $spacing-02: var(\\n      --#{$custom-property-prefix}-spacing-02,\\n      map-get($theme, 'spacing-02')\\n    ) !global;\\n    $spacing-03: var(\\n      --#{$custom-property-prefix}-spacing-03,\\n      map-get($theme, 'spacing-03')\\n    ) !global;\\n    $spacing-04: var(\\n      --#{$custom-property-prefix}-spacing-04,\\n      map-get($theme, 'spacing-04')\\n    ) !global;\\n    $spacing-05: var(\\n      --#{$custom-property-prefix}-spacing-05,\\n      map-get($theme, 'spacing-05')\\n    ) !global;\\n    $spacing-06: var(\\n      --#{$custom-property-prefix}-spacing-06,\\n      map-get($theme, 'spacing-06')\\n    ) !global;\\n    $spacing-07: var(\\n      --#{$custom-property-prefix}-spacing-07,\\n      map-get($theme, 'spacing-07')\\n    ) !global;\\n    $spacing-08: var(\\n      --#{$custom-property-prefix}-spacing-08,\\n      map-get($theme, 'spacing-08')\\n    ) !global;\\n    $spacing-09: var(\\n      --#{$custom-property-prefix}-spacing-09,\\n      map-get($theme, 'spacing-09')\\n    ) !global;\\n    $spacing-10: var(\\n      --#{$custom-property-prefix}-spacing-10,\\n      map-get($theme, 'spacing-10')\\n    ) !global;\\n    $spacing-11: var(\\n      --#{$custom-property-prefix}-spacing-11,\\n      map-get($theme, 'spacing-11')\\n    ) !global;\\n    $spacing-12: var(\\n      --#{$custom-property-prefix}-spacing-12,\\n      map-get($theme, 'spacing-12')\\n    ) !global;\\n    $spacing-13: var(\\n      --#{$custom-property-prefix}-spacing-13,\\n      map-get($theme, 'spacing-13')\\n    ) !global;\\n    $fluid-spacing-01: var(\\n      --#{$custom-property-prefix}-fluid-spacing-01,\\n      map-get($theme, 'fluid-spacing-01')\\n    ) !global;\\n    $fluid-spacing-02: var(\\n      --#{$custom-property-prefix}-fluid-spacing-02,\\n      map-get($theme, 'fluid-spacing-02')\\n    ) !global;\\n    $fluid-spacing-03: var(\\n      --#{$custom-property-prefix}-fluid-spacing-03,\\n      map-get($theme, 'fluid-spacing-03')\\n    ) !global;\\n    $fluid-spacing-04: var(\\n      --#{$custom-property-prefix}-fluid-spacing-04,\\n      map-get($theme, 'fluid-spacing-04')\\n    ) !global;\\n    $layout-01: var(\\n      --#{$custom-property-prefix}-layout-01,\\n      map-get($theme, 'layout-01')\\n    ) !global;\\n    $layout-02: var(\\n      --#{$custom-property-prefix}-layout-02,\\n      map-get($theme, 'layout-02')\\n    ) !global;\\n    $layout-03: var(\\n      --#{$custom-property-prefix}-layout-03,\\n      map-get($theme, 'layout-03')\\n    ) !global;\\n    $layout-04: var(\\n      --#{$custom-property-prefix}-layout-04,\\n      map-get($theme, 'layout-04')\\n    ) !global;\\n    $layout-05: var(\\n      --#{$custom-property-prefix}-layout-05,\\n      map-get($theme, 'layout-05')\\n    ) !global;\\n    $layout-06: var(\\n      --#{$custom-property-prefix}-layout-06,\\n      map-get($theme, 'layout-06')\\n    ) !global;\\n    $layout-07: var(\\n      --#{$custom-property-prefix}-layout-07,\\n      map-get($theme, 'layout-07')\\n    ) !global;\\n    $container-01: var(\\n      --#{$custom-property-prefix}-container-01,\\n      map-get($theme, 'container-01')\\n    ) !global;\\n    $container-02: var(\\n      --#{$custom-property-prefix}-container-02,\\n      map-get($theme, 'container-02')\\n    ) !global;\\n    $container-03: var(\\n      --#{$custom-property-prefix}-container-03,\\n      map-get($theme, 'container-03')\\n    ) !global;\\n    $container-04: var(\\n      --#{$custom-property-prefix}-container-04,\\n      map-get($theme, 'container-04')\\n    ) !global;\\n    $container-05: var(\\n      --#{$custom-property-prefix}-container-05,\\n      map-get($theme, 'container-05')\\n    ) !global;\\n    $size-xsmall: var(\\n      --#{$custom-property-prefix}-size-xsmall,\\n      map-get($theme, 'size-xsmall')\\n    ) !global;\\n    $size-small: var(\\n      --#{$custom-property-prefix}-size-small,\\n      map-get($theme, 'size-small')\\n    ) !global;\\n    $size-medium: var(\\n      --#{$custom-property-prefix}-size-medium,\\n      map-get($theme, 'size-medium')\\n    ) !global;\\n    $size-large: var(\\n      --#{$custom-property-prefix}-size-large,\\n      map-get($theme, 'size-large')\\n    ) !global;\\n    $size-xlarge: var(\\n      --#{$custom-property-prefix}-size-xlarge,\\n      map-get($theme, 'size-xlarge')\\n    ) !global;\\n    $size-2XLarge: var(\\n      --#{$custom-property-prefix}-size-2XLarge,\\n      map-get($theme, 'size-2XLarge')\\n    ) !global;\\n    $icon-size-01: var(\\n      --#{$custom-property-prefix}-icon-size-01,\\n      map-get($theme, 'icon-size-01')\\n    ) !global;\\n    $icon-size-02: var(\\n      --#{$custom-property-prefix}-icon-size-02,\\n      map-get($theme, 'icon-size-02')\\n    ) !global;\\n  }\\n  @if $emit-custom-properties == true {\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-01',\\n        map-get($theme, 'interactive-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-02',\\n        map-get($theme, 'interactive-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-03',\\n        map-get($theme, 'interactive-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'interactive-04',\\n        map-get($theme, 'interactive-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'ui-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'ui-background',\\n        map-get($theme, 'ui-background')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-01', $emit-difference) {\\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-02', $emit-difference) {\\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-03', $emit-difference) {\\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-04', $emit-difference) {\\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'ui-05', $emit-difference) {\\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-01', $emit-difference) {\\n      @include custom-property('text-01', map-get($theme, 'text-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-02', $emit-difference) {\\n      @include custom-property('text-02', map-get($theme, 'text-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-03', $emit-difference) {\\n      @include custom-property('text-03', map-get($theme, 'text-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-04', $emit-difference) {\\n      @include custom-property('text-04', map-get($theme, 'text-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'text-05', $emit-difference) {\\n      @include custom-property('text-05', map-get($theme, 'text-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-error', map-get($theme, 'text-error'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-01', $emit-difference) {\\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-02', $emit-difference) {\\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'icon-03', $emit-difference) {\\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-01', $emit-difference) {\\n      @include custom-property('link-01', map-get($theme, 'link-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'link-02', $emit-difference) {\\n      @include custom-property('link-02', map-get($theme, 'link-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-01', $emit-difference)\\n    {\\n      @include custom-property('field-01', map-get($theme, 'field-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field-02', $emit-difference)\\n    {\\n      @include custom-property('field-02', map-get($theme, 'field-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-01', map-get($theme, 'support-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-02', map-get($theme, 'support-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-03', map-get($theme, 'support-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-04', map-get($theme, 'support-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-01',\\n        map-get($theme, 'inverse-support-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-02',\\n        map-get($theme, 'inverse-support-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-03',\\n        map-get($theme, 'inverse-support-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-support-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-support-04',\\n        map-get($theme, 'inverse-support-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'overlay-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-01', $emit-difference)\\n    {\\n      @include custom-property('danger-01', map-get($theme, 'danger-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger-02', $emit-difference)\\n    {\\n      @include custom-property('danger-02', map-get($theme, 'danger-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'focus', $emit-difference) {\\n      @include custom-property('focus', map-get($theme, 'focus'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-focus-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-focus-ui',\\n        map-get($theme, 'inverse-focus-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary',\\n        map-get($theme, 'hover-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-primary',\\n        map-get($theme, 'active-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-primary-text',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-primary-text',\\n        map-get($theme, 'hover-primary-text')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-secondary',\\n        map-get($theme, 'hover-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-secondary',\\n        map-get($theme, 'active-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-tertiary',\\n        map-get($theme, 'hover-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-tertiary',\\n        map-get($theme, 'active-tertiary')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-ui', $emit-difference)\\n    {\\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-light-ui',\\n        map-get($theme, 'hover-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'hover-selected-ui',\\n        map-get($theme, 'hover-selected-ui')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-ui', $emit-difference)\\n    {\\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-light-ui',\\n        map-get($theme, 'active-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'selected-light-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'selected-light-ui',\\n        map-get($theme, 'selected-light-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'inverse-hover-ui',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'inverse-hover-ui',\\n        map-get($theme, 'inverse-hover-ui')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'active-danger',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'active-danger',\\n        map-get($theme, 'active-danger')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'hover-row', $emit-difference)\\n    {\\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'visited-link',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'disabled-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'highlight', $emit-difference)\\n    {\\n      @include custom-property('highlight', map-get($theme, 'highlight'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'decorative-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'decorative-01',\\n        map-get($theme, 'decorative-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-separator',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-separator',\\n        map-get($theme, 'button-separator')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('background', map-get($theme, 'background'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layer', $emit-difference) {\\n      @include custom-property('layer', map-get($theme, 'layer'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-accent', map-get($theme, 'layer-accent'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-hover',\\n        map-get($theme, 'layer-accent-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-accent-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-accent-active',\\n        map-get($theme, 'layer-accent-active')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'field', $emit-difference) {\\n      @include custom-property('field', map-get($theme, 'field'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse',\\n        map-get($theme, 'background-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-brand',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-brand',\\n        map-get($theme, 'background-brand')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('interactive', map-get($theme, 'interactive'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle',\\n        map-get($theme, 'border-subtle')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-strong',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-strong',\\n        map-get($theme, 'border-strong')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-inverse',\\n        map-get($theme, 'border-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-interactive',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-interactive',\\n        map-get($theme, 'border-interactive')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-primary', map-get($theme, 'text-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-secondary',\\n        map-get($theme, 'text-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-placeholder',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-placeholder',\\n        map-get($theme, 'text-placeholder')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-helper',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-helper', map-get($theme, 'text-helper'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color',\\n        map-get($theme, 'text-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('text-inverse', map-get($theme, 'text-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-primary', map-get($theme, 'link-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-secondary',\\n        map-get($theme, 'link-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-visited',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-visited', map-get($theme, 'link-visited'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('link-inverse', map-get($theme, 'link-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-primary', map-get($theme, 'icon-primary'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-secondary',\\n        map-get($theme, 'icon-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color',\\n        map-get($theme, 'icon-on-color')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-inverse', map-get($theme, 'icon-inverse'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error',\\n        map-get($theme, 'support-error')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success',\\n        map-get($theme, 'support-success')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning',\\n        map-get($theme, 'support-warning')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('support-info', map-get($theme, 'support-info'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-error-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-error-inverse',\\n        map-get($theme, 'support-error-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-success-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-success-inverse',\\n        map-get($theme, 'support-success-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-warning-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-warning-inverse',\\n        map-get($theme, 'support-warning-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'support-info-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'support-info-inverse',\\n        map-get($theme, 'support-info-inverse')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'overlay', $emit-difference) {\\n      @include custom-property('overlay', map-get($theme, 'overlay'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'toggle-off',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('toggle-off', map-get($theme, 'toggle-off'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary',\\n        map-get($theme, 'button-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary',\\n        map-get($theme, 'button-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary',\\n        map-get($theme, 'button-tertiary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-primary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-primary',\\n        map-get($theme, 'button-danger-primary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-secondary',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-secondary',\\n        map-get($theme, 'button-danger-secondary')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-active',\\n        map-get($theme, 'background-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-active', map-get($theme, 'layer-active'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-active',\\n        map-get($theme, 'button-danger-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-active',\\n        map-get($theme, 'button-primary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-active',\\n        map-get($theme, 'button-secondary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-active',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-active',\\n        map-get($theme, 'button-tertiary-active')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inset',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('focus-inset', map-get($theme, 'focus-inset'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'focus-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'focus-inverse',\\n        map-get($theme, 'focus-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-hover',\\n        map-get($theme, 'background-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('layer-hover', map-get($theme, 'layer-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('field-hover', map-get($theme, 'field-hover'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-inverse-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-inverse-hover',\\n        map-get($theme, 'background-inverse-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'link-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'link-primary-hover',\\n        map-get($theme, 'link-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-danger-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-danger-hover',\\n        map-get($theme, 'button-danger-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-primary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-primary-hover',\\n        map-get($theme, 'button-primary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-secondary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-secondary-hover',\\n        map-get($theme, 'button-secondary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-tertiary-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-tertiary-hover',\\n        map-get($theme, 'button-tertiary-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected',\\n        map-get($theme, 'background-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'background-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'background-selected-hover',\\n        map-get($theme, 'background-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected',\\n        map-get($theme, 'layer-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-hover',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-hover',\\n        map-get($theme, 'layer-selected-hover')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-inverse',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-inverse',\\n        map-get($theme, 'layer-selected-inverse')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-subtle-selected',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-subtle-selected',\\n        map-get($theme, 'border-subtle-selected')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-disabled',\\n        map-get($theme, 'layer-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'field-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'field-disabled',\\n        map-get($theme, 'field-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'border-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'border-disabled',\\n        map-get($theme, 'border-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-disabled',\\n        map-get($theme, 'text-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'button-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'button-disabled',\\n        map-get($theme, 'button-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-disabled',\\n        map-get($theme, 'icon-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'text-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'text-on-color-disabled',\\n        map-get($theme, 'text-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-on-color-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'icon-on-color-disabled',\\n        map-get($theme, 'icon-on-color-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'layer-selected-disabled',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'layer-selected-disabled',\\n        map-get($theme, 'layer-selected-disabled')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-background',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-background',\\n        map-get($theme, 'skeleton-background')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'skeleton-element',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'skeleton-element',\\n        map-get($theme, 'skeleton-element')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-01', $emit-difference)\\n    {\\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-02', $emit-difference)\\n    {\\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'brand-03', $emit-difference)\\n    {\\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'active-01', $emit-difference)\\n    {\\n      @include custom-property('active-01', map-get($theme, 'active-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'hover-field',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'danger', $emit-difference) {\\n      @include custom-property('danger', map-get($theme, 'danger'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'caption-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('caption-02', map-get($theme, 'caption-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-01', $emit-difference)\\n    {\\n      @include custom-property('label-01', map-get($theme, 'label-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'label-02', $emit-difference)\\n    {\\n      @include custom-property('label-02', map-get($theme, 'label-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-01',\\n        map-get($theme, 'helper-text-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'helper-text-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'helper-text-02',\\n        map-get($theme, 'helper-text-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-01',\\n        map-get($theme, 'body-short-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-short-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'body-short-02',\\n        map-get($theme, 'body-short-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'body-long-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-01', $emit-difference) {\\n      @include custom-property('code-01', map-get($theme, 'code-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'code-02', $emit-difference) {\\n      @include custom-property('code-02', map-get($theme, 'code-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-01',\\n        map-get($theme, 'productive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-02',\\n        map-get($theme, 'productive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-03',\\n        map-get($theme, 'productive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-04',\\n        map-get($theme, 'productive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-05',\\n        map-get($theme, 'productive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-06',\\n        map-get($theme, 'productive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'productive-heading-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'productive-heading-07',\\n        map-get($theme, 'productive-heading-07')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-01',\\n        map-get($theme, 'expressive-heading-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-02',\\n        map-get($theme, 'expressive-heading-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-03',\\n        map-get($theme, 'expressive-heading-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-04',\\n        map-get($theme, 'expressive-heading-04')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-05',\\n        map-get($theme, 'expressive-heading-05')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-heading-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-heading-06',\\n        map-get($theme, 'expressive-heading-06')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'expressive-paragraph-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'expressive-paragraph-01',\\n        map-get($theme, 'expressive-paragraph-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'quotation-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-01', map-get($theme, 'display-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-02', map-get($theme, 'display-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-03', map-get($theme, 'display-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'display-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('display-04', map-get($theme, 'display-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-06',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-07',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-08',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-09',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-10',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-11',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-12',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'spacing-13',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('spacing-13', map-get($theme, 'spacing-13'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-01',\\n        map-get($theme, 'fluid-spacing-01')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-02',\\n        map-get($theme, 'fluid-spacing-02')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-03',\\n        map-get($theme, 'fluid-spacing-03')\\n      );\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'fluid-spacing-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property(\\n        'fluid-spacing-04',\\n        map-get($theme, 'fluid-spacing-04')\\n      );\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-01', $emit-difference)\\n    {\\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-02', $emit-difference)\\n    {\\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-03', $emit-difference)\\n    {\\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-04', $emit-difference)\\n    {\\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-05', $emit-difference)\\n    {\\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-06', $emit-difference)\\n    {\\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\\n    }\\n\\n    @if should-emit($theme, $parent-carbon-theme, 'layout-07', $emit-difference)\\n    {\\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-01', map-get($theme, 'container-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-02', map-get($theme, 'container-02'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-03',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-03', map-get($theme, 'container-03'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-04',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-04', map-get($theme, 'container-04'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'container-05',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('container-05', map-get($theme, 'container-05'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xsmall',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xsmall', map-get($theme, 'size-xsmall'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-small',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-small', map-get($theme, 'size-small'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-medium',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-medium', map-get($theme, 'size-medium'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-large',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-large', map-get($theme, 'size-large'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-xlarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-xlarge', map-get($theme, 'size-xlarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'size-2XLarge',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('size-2XLarge', map-get($theme, 'size-2XLarge'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-01',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\\n    }\\n\\n    @if should-emit(\\n      $theme,\\n      $parent-carbon-theme,\\n      'icon-size-02',\\n      $emit-difference\\n    )\\n    {\\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\\n    }\\n  }\\n\\n  @content;\\n\\n  // Reset to default theme after apply in content\\n  @if $carbon--theme != $parent-carbon-theme {\\n    $carbon--theme: $parent-carbon-theme !global;\\n\\n    @include carbon--theme();\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"label\": \"-esm-patient-allergies__allergies-tile-component__label___ItLi6\",\n\t\"content\": \"-esm-patient-allergies__allergies-tile-component__content___pD+lR\",\n\t\"value\": \"-esm-patient-allergies__allergies-tile-component__value___xkxSY\",\n\t\"skeleton\": \"-esm-patient-allergies__allergies-tile-component__skeleton___AtVxR\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","patientUuid","useTranslation","allergies","isLoading","useAllergies","InlineLoading","role","description","t","length","className","styles","map","allergy","display","join","data","error","isValidating","useSWR","fhirBaseUrl","openmrsFetch","formattedAllergies","total","entry","resource","mapAllergyProperties","sort","a","b","lastUpdated","isError","manifestations","reaction","manifestation","coding","id","clinicalStatus","criticality","code","recordedDate","recordedBy","recorder","recorderType","type","note","text","reactionToSubstance","substance","reactionManifestations","reactionSeverity","capitalize","severity","meta","___CSS_LOADER_EXPORT___","push","module","locals"],"sourceRoot":""}