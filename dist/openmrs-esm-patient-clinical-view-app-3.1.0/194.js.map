{"version":3,"file":"194.js","mappings":"gVAWIA,EAAU,GAEdA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKnB,QAAe,KAAW,WAAiB,gBAAiBM,E,2HCtB5D,MC2IP,EA3H0D,IAAkB,IAAjB,SAAEC,GAAe,EAC1E,MAAM,IAAQC,EAAAA,EAAAA,mBACR,MAAEC,EAAF,cAASC,GDlBc,MAC7B,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,sBACZ,cAAEF,IAAkBG,EAAAA,EAAAA,aAkB1B,OAjBoBC,EAAAA,EAAAA,UAAQ,KACnB,CACLL,MAAOE,EACHI,OAAOC,KAAKL,GACTM,QAAQC,IAAkC,IAAzBA,EAAKC,OAAO,UAC7BC,KAAKF,IACG,CACLG,UAAUC,EAAAA,EAAAA,GAAUJ,EAAKK,QAAQ,KAAM,KAAKA,QAAQ,OAAQ,KAC5DL,KAAMA,EACNM,QAASd,GAAee,MAAMC,GAASA,EAAKL,WAAaH,QAG/D,GACJR,cAAAA,KAED,CAACA,EAAeC,KCAcgB,GAC3BC,EAAa,yCACbC,GAAOf,EAAAA,EAAAA,UAAQ,IAAM,CAACc,EAAY,kBAAkB,KACnDE,EAAYC,GAAiBC,IAAAA,SAAuB,KACpDC,EAAeC,GAAmBF,IAAAA,SAA4B,KAC9DG,EAAYC,IAAiBC,EAAAA,EAAAA,UAA+B,OAC5DC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAkB,GAEpDL,IAAAA,WAAgB,MACTQ,EAAAA,EAAAA,GAAQ/B,KACXyB,EAAgBzB,GAChB8B,GAAa,MAEd,CAAC9B,IAEJuB,IAAAA,WAAgB,KACd,MAAMS,EAAUhC,EAAMQ,QACnBS,IAAuF,IAA9EA,EAAKL,SAASqB,oBAAoBvB,OAAOW,EAAWY,uBAEhER,EAAgBO,KACf,CAACX,EAAYrB,IAEhB,MAAMkC,GAAe7B,EAAAA,EAAAA,UAAQ,KAAM8B,EAAAA,EAAAA,IAAUd,GAAeC,EAAcD,IAAa,MAAM,IAEvFe,GAAwBC,EAAAA,EAAAA,cAAY,MACxCC,EAAAA,EAAAA,QAAO,+BAAgC,0CACtC,IAEGC,GAAkBF,EAAAA,EAAAA,cACtB,CAAC5B,EAAcG,KACb,MAAMoB,EAAUR,EAAcb,KAAKM,GAAUA,EAAKR,OAASG,EAAW,IAAKK,EAAMF,SAAS,GAASE,IACnGQ,EAAgBO,GAEhB,MACMQ,EAAsB,IADTd,EAAaA,EAAWe,OAAOtB,GAAYlB,cAAgBA,EAClC,CAAEQ,KAAMA,EAAMG,SAAUA,IAC9D8B,GAAmBC,EAAAA,EAAAA,IACvBC,EAAAA,EAAAA,GAAUC,EAAAA,qBAAAA,YACV,CAAC,YAAazB,GACdoB,GAEFb,EAAce,KAEhB,CAACzC,EAAemB,EAAMI,EAAeE,IAGjCoB,GAAqBT,EAAAA,EAAAA,cACzB,CAAC5B,EAAcG,KACb,MAAMmC,EAAY9C,EAAc+C,WAAW/B,GAAeA,EAAKL,WAAaA,IAC5EX,EAAcgD,OAAOF,EAAW,GAChC,MAAML,GAAmBC,EAAAA,EAAAA,IAAIC,EAAAA,EAAAA,GAAUC,EAAAA,qBAAAA,YAAkC,CAAC,YAAazB,GAAOnB,GAC9F0B,EAAce,GACd,MAAMV,EAAUR,EAAcb,KAAKM,GAAUA,EAAKR,OAASG,EAAW,IAAKK,EAAMF,SAAS,GAAUE,IACpGQ,EAAgBO,KAElB,CAAC/B,EAAemB,EAAMI,IAGlB0B,GAAeb,EAAAA,EAAAA,cACnB,CAAC5B,EAAcG,EAAkBG,KAC/BA,EAAUwB,EAAgB9B,EAAMG,GAAYkC,EAAmBrC,EAAMG,KAEvE,CAAC2B,EAAiBO,IAGdK,GAAad,EAAAA,EAAAA,cAAY,KAC7BQ,EAAAA,qBAAAA,SAA8BnB,GAC9BU,MACC,CAACV,EAAYU,IAEVgB,GAAcf,EAAAA,EAAAA,cAAY,KAC9B,MAAMK,GAAmBC,EAAAA,EAAAA,IAAIC,EAAAA,EAAAA,GAAUC,EAAAA,qBAAAA,YAAkC,CAAC,YAAazB,GAAOnB,GAC9F0B,EAAce,GACdjB,EAAgBzB,KACf,CAACC,EAAemB,EAAMpB,IAEzB,OACE,oCACG6B,GAAa,kBAAC,IAAD,OACZA,GACA,yBAAKwB,UAAWC,EAAAA,eACd,6BACE,yBAAKD,UAAWC,EAAAA,iBACd,kBAACC,EAAA,EAAD,CACEC,YAAaC,EAAE,gBAAiB,qBAChCC,GAAG,SACHC,SAAWC,GAAU1B,EAAa0B,EAAMC,OAAOC,OAC/CC,UAAU,GACVC,MAAOlE,EACPmE,KAAK,OAEP,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAShB,GAC3BK,EAAE,QAAS,WAGhB,6BAASJ,UAAWC,EAAAA,mBACjB9B,GAAeb,KAAKM,GACnB,kBAACoD,EAAA,EAAD,CACEC,IAAKrD,EAAKR,KACViD,GAAIzC,EAAKR,KACTsD,UAAW9C,EAAKL,SAChByC,UAAWC,EAAAA,SACXvC,QAASE,EAAKF,QACd4C,SAAW5C,GAAYmC,EAAajC,EAAKL,SAAUK,EAAKR,KAAMM,SAKtE,kBAACwD,EAAA,EAAD,CAAWlB,UAAWvD,EAAWwD,EAAAA,OAAgBA,EAAAA,SAC/C,kBAACY,EAAA,EAAD,CAAQb,UAAWC,EAAAA,OAAea,KAAK,YAAYC,QAAShC,GACzDqB,EAAE,SAAU,WAEf,kBAACS,EAAA,EAAD,CAAQb,UAAWC,EAAAA,OAAea,KAAK,UAAUC,QAASjB,GACvDM,EAAE,eAAgB,sB,iECnI7Be,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOhB,GAAI,0/FAA2/F,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,wEAAwE,4BAA4B,oHAAoH,uEAAuE,wHAAwH,MAAQ,GAAG,SAAW,slCAAslC,eAAiB,CAAC,8xCAA8xC,6jCAAylC,srnBAAsrnB,26BAA+6B,6wHAA6wH,WAAa,MAE10+Bc,EAAwBG,OAAS,CAChC,oBAAuB,wFACvB,oBAAuB,wFACvB,oBAAuB,wFACvB,oBAAuB,wFACvB,oBAAuB,wFACvB,oBAAuB,wFACvB,YAAe,gFACf,YAAe,gFACf,WAAc,+EACd,WAAc,+EACd,QAAW,4EACX,cAAiB,kFACjB,kBAAqB,sFACrB,SAAY,6EACZ,gBAAmB,oFACnB,OAAU,2EACV,OAAU,2EACV,QAAW,6EAEZ","sources":["webpack://@openmrs/esm-patient-clinical-view-app/./src/clinical-view-form/clinical-view-form.component.scss?3391","webpack://@openmrs/esm-patient-clinical-view-app/./src/store.ts","webpack://@openmrs/esm-patient-clinical-view-app/./src/clinical-view-form/clinical-view-form.component.tsx","webpack://@openmrs/esm-patient-clinical-view-app/./src/clinical-view-form/clinical-view-form.component.scss"],"sourcesContent":["\n      import API from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/openmrs/node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./clinical-view-form.component.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./clinical-view-form.component.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import { useExtensionStore, useConfig } from '@openmrs/esm-framework';\nimport startCase from 'lodash-es/startCase';\nimport { useMemo } from 'react';\n\nexport const useClinicalView = () => {\n  const { slots } = useExtensionStore();\n  const { clinicalViews } = useConfig();\n  const viewResults = useMemo(() => {\n    return {\n      views: slots\n        ? Object.keys(slots)\n            .filter((slot) => slot.search('slot') !== -1)\n            .map((slot) => {\n              return {\n                slotName: startCase(slot.replace(/-/g, ' ').replace('slot', '')),\n                slot: slot,\n                checked: clinicalViews?.some((view) => view.slotName === slot),\n              };\n            })\n        : [],\n      clinicalViews,\n    };\n  }, [clinicalViews, slots]);\n\n  return viewResults;\n};\n","import React, { useState, useCallback, useMemo } from 'react';\nimport styles from './clinical-view-form.component.scss';\nimport debounce from 'lodash-es/debounce';\nimport isEmpty from 'lodash-es/isEmpty';\nimport cloneDeep from 'lodash-es/cloneDeep';\nimport set from 'lodash-es/set';\nimport { Search, Checkbox, Button, StructuredListSkeleton, ButtonSet } from 'carbon-components-react';\nimport { useTranslation } from 'react-i18next';\nimport { detach, temporaryConfigStore, TemporaryConfigStore } from '@openmrs/esm-framework';\nimport { useClinicalView } from '../store';\n\ninterface ClinicalViewFormProps {\n  isTablet: boolean;\n}\ninterface View {\n  slotName: string;\n  slot: string;\n  checked: boolean;\n}\n\nconst ClinicalViewForm: React.FC<ClinicalViewFormProps> = ({ isTablet }) => {\n  const { t } = useTranslation();\n  const { views, clinicalViews } = useClinicalView();\n  const moduleName = '@openmrs/esm-patient-clinical-view-app';\n  const path = useMemo(() => [moduleName, 'clinicalViews'], []);\n  const [searchTerm, setSearchTerm] = React.useState<string>('');\n  const [searchResults, setSearchResult] = React.useState<Array<View>>([]);\n  const [tempConfig, setTempConfig] = useState<TemporaryConfigStore>(null);\n  const [isPending, setIsPending] = useState<boolean>(true);\n\n  React.useEffect(() => {\n    if (!isEmpty(views)) {\n      setSearchResult(views);\n      setIsPending(false);\n    }\n  }, [views]);\n\n  React.useEffect(() => {\n    const results = views.filter(\n      (view) => view.slotName.toLocaleLowerCase().search(searchTerm.toLocaleLowerCase()) !== -1,\n    );\n    setSearchResult(results);\n  }, [searchTerm, views]);\n\n  const handleSearch = useMemo(() => debounce((searchTerm) => setSearchTerm(searchTerm), 300), []);\n\n  const closeClinicalViewForm = useCallback(() => {\n    detach('patient-chart-workspace-slot', 'patient-clinical-view-form-workspace');\n  }, []);\n\n  const addClinicalView = useCallback(\n    (slot: string, slotName: string) => {\n      const results = searchResults.map((view) => (view.slot === slotName ? { ...view, checked: true } : view));\n      setSearchResult(results);\n\n      const viewConfig = tempConfig ? tempConfig.config[moduleName].clinicalViews : clinicalViews;\n      const updateClinicalViews = [...viewConfig, { slot: slot, slotName: slotName }];\n      const tempConfigUpdate = set(\n        cloneDeep(temporaryConfigStore.getState()),\n        ['config', ...path],\n        updateClinicalViews,\n      );\n      setTempConfig(tempConfigUpdate);\n    },\n    [clinicalViews, path, searchResults, tempConfig],\n  );\n\n  const removeClinicalView = useCallback(\n    (slot: string, slotName: string) => {\n      const slotIndex = clinicalViews.findIndex((view: View) => view.slotName === slotName);\n      clinicalViews.splice(slotIndex, 1);\n      const tempConfigUpdate = set(cloneDeep(temporaryConfigStore.getState()), ['config', ...path], clinicalViews);\n      setTempConfig(tempConfigUpdate);\n      const results = searchResults.map((view) => (view.slot === slotName ? { ...view, checked: false } : view));\n      setSearchResult(results);\n    },\n    [clinicalViews, path, searchResults],\n  );\n\n  const handleChange = useCallback(\n    (slot: string, slotName: string, checked: boolean) => {\n      checked ? addClinicalView(slot, slotName) : removeClinicalView(slot, slotName);\n    },\n    [addClinicalView, removeClinicalView],\n  );\n\n  const handleSave = useCallback(() => {\n    temporaryConfigStore.setState(tempConfig);\n    closeClinicalViewForm();\n  }, [tempConfig, closeClinicalViewForm]);\n\n  const handleReset = useCallback(() => {\n    const tempConfigUpdate = set(cloneDeep(temporaryConfigStore.getState()), ['config', ...path], clinicalViews);\n    setTempConfig(tempConfigUpdate);\n    setSearchResult(views);\n  }, [clinicalViews, path, views]);\n\n  return (\n    <>\n      {isPending && <StructuredListSkeleton />}\n      {!isPending && (\n        <div className={styles.formContainer}>\n          <div>\n            <div className={styles.searchContainer}>\n              <Search\n                placeholder={t('searchForView', 'Search for a view')}\n                id=\"search\"\n                onChange={(event) => handleSearch(event.target.value)}\n                labelText=\"\"\n                light={isTablet}\n                size=\"xl\"\n              />\n              <Button kind=\"ghost\" onClick={handleReset}>\n                {t('reset', 'Reset')}\n              </Button>\n            </div>\n            <section className={styles.checkboxContainer}>\n              {searchResults?.map((view) => (\n                <Checkbox\n                  key={view.slot}\n                  id={view.slot}\n                  labelText={view.slotName}\n                  className={styles.checkBox}\n                  checked={view.checked}\n                  onChange={(checked) => handleChange(view.slotName, view.slot, checked)}\n                />\n              ))}\n            </section>\n          </div>\n          <ButtonSet className={isTablet ? styles.tablet : styles.desktop}>\n            <Button className={styles.button} kind=\"secondary\" onClick={closeClinicalViewForm}>\n              {t('cancel', 'Cancel')}\n            </Button>\n            <Button className={styles.button} kind=\"primary\" onClick={handleSave}>\n              {t('saveAndClose', 'Save & Close')}\n            </Button>\n          </ButtonSet>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ClinicalViewForm;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-clinical-view__clinical-view-form-component__productiveHeading01___OogZL{font-size:.875rem;font-weight:600;line-height:1.29;letter-spacing:.16px}.-esm-patient-clinical-view__clinical-view-form-component__productiveHeading02___GMgxh{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-patient-clinical-view__clinical-view-form-component__productiveHeading03___Bc2rG{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-patient-clinical-view__clinical-view-form-component__productiveHeading04___4PP8H{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-patient-clinical-view__clinical-view-form-component__productiveHeading05___\\\\+3Kjs{font-size:2rem;font-weight:400;line-height:1.25;letter-spacing:0}.-esm-patient-clinical-view__clinical-view-form-component__productiveHeading06___miT5o{font-size:2rem;font-weight:300;line-height:1.199;letter-spacing:0}.-esm-patient-clinical-view__clinical-view-form-component__bodyShort01___lIZiL{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.-esm-patient-clinical-view__clinical-view-form-component__bodyShort02___Otyb4{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.-esm-patient-clinical-view__clinical-view-form-component__bodyLong01___gJJ4m{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-patient-clinical-view__clinical-view-form-component__bodyLong02___3sd7C{font-size:1rem;font-weight:400;line-height:1.5;letter-spacing:0}.-esm-patient-clinical-view__clinical-view-form-component__label01___Zn0uG{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}:root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-clinical-view__clinical-view-form-component__formContainer___b9\\\\+NX{display:flex;flex-direction:column;justify-content:space-between}.-esm-patient-clinical-view__clinical-view-form-component__checkboxContainer___sTReu{display:flex;flex-flow:row wrap;margin:1rem 0rem 0rem 1rem}.-esm-patient-clinical-view__clinical-view-form-component__checkBox___Ppoa3{height:3rem;width:16rem}.-esm-patient-clinical-view__clinical-view-form-component__searchContainer___h9ITQ{display:flex;border-bottom:.125px solid #8d8d8d}.-esm-patient-clinical-view__clinical-view-form-component__searchContainer___h9ITQ input{border-bottom:none}.-esm-patient-clinical-view__clinical-view-form-component__button___kkau0{height:4rem;display:flex;align-content:flex-start;align-items:baseline;min-width:50%}.-esm-patient-clinical-view__clinical-view-form-component__tablet___p-a6X{padding:1.5rem 1rem;background-color:#fff}.-esm-patient-clinical-view__clinical-view-form-component__desktop___oUnG\\\\+{padding:0rem}.omrs-breakpoint-gt-tablet .-esm-patient-clinical-view__clinical-view-form-component__formContainer___b9\\\\+NX{height:calc(100vh - 6rem)}.omrs-breakpoint-lt-desktop .-esm-patient-clinical-view__clinical-view-form-component__formContainer___b9\\\\+NX{height:calc(100vh - 3rem)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/root.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./src/clinical-view-form/clinical-view-form.component.scss\",\"webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,uFC4iBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CD9tB1B,uFCwiBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CD1tB1B,uFCoiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CDttB1B,uFCgiBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CDltB1B,wFC4hBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,gBAsLsB,CD9sB1B,uFCwhBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CD1sB1B,+ECohBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CDtsB1B,+ECghBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,iBAsLsB,CAtLtB,gBAsLsB,CDlsB1B,8EC4gBI,iBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CD9rB1B,8ECwgBI,cAsLsB,CAtLtB,eAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CD1rB1B,2ECogBI,gBAsLsB,CAtLtB,eAsLsB,CAtLtB,gBAsLsB,CAtLtB,oBAsLsB,CF7rB1B,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CGzCF,kFACE,YAAA,CACA,qBAAA,CACA,6BAAA,CAGF,qFACE,YAAA,CACA,kBAAA,CACA,0BAAA,CAGF,4EACE,WCmCmB,CDlCnB,WAAA,CAGF,mFACE,YAAA,CACA,kCAAA,CAGF,yFACE,kBAAA,CAGF,0EACE,WAAA,CACA,YAAA,CACA,wBAAA,CACA,oBAAA,CACA,aAAA,CAGF,0EACE,mBAAA,CACA,qBHtCM,CGyCR,4EACE,YAAA,CAMA,6GACE,yBAAA,CAMF,8GACE,yBAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import \\\"~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles\\\";\\n@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing\\\";\\n@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n\\n.productiveHeading01 {\\n  @include carbon--type-style(\\\"productive-heading-01\\\");\\n}\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n}\\n\\n.productiveHeading03 {\\n  @include carbon--type-style(\\\"productive-heading-03\\\");\\n}\\n\\n.productiveHeading04 {\\n  @include carbon--type-style(\\\"productive-heading-04\\\");\\n}\\n\\n.productiveHeading05 {\\n  @include carbon--type-style(\\\"productive-heading-05\\\");\\n}\\n\\n.productiveHeading06 {\\n  @include carbon--type-style(\\\"productive-heading-06\\\");\\n}\\n\\n.bodyShort01 {\\n  @include carbon--type-style(\\\"body-short-01\\\");\\n}\\n\\n.bodyShort02 {\\n  @include carbon--type-style(\\\"body-short-02\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\\n.bodyLong02 {\\n  @include carbon--type-style(\\\"body-long-02\\\");\\n}\\n\\n.label01 {\\n  @include carbon--type-style(\\\"label-01\\\");\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-02: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  caption-02: $caption-02,\\n  label-01: $label-01,\\n  label-02: $label-02,\\n  helper-text-01: $helper-text-01,\\n  helper-text-02: $helper-text-02,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  // Otherwise remove token breakpoints\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, map-remove($token, 'breakpoints'));\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"@import \\\"../root.scss\\\";\\n@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n\\n.formContainer {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n}\\n\\n.checkboxContainer {\\n  display: flex;\\n  flex-flow: row wrap;\\n  margin: 1rem 0rem 0rem 1rem;\\n}\\n\\n.checkBox {\\n  height: $spacing-09;\\n  width: 16rem;\\n}\\n\\n.searchContainer {\\n  display: flex;\\n  border-bottom: 0.125px solid $ui-04;\\n}\\n\\n.searchContainer input{\\n  border-bottom: none;\\n}\\n\\n.button {\\n  height: 4rem;\\n  display: flex;\\n  align-content: flex-start;\\n  align-items: baseline;\\n  min-width: 50%;\\n}\\n\\n.tablet {\\n  padding: 1.5rem 1rem;\\n  background-color: $ui-02;\\n}\\n\\n.desktop {\\n  padding: 0rem;\\n}\\n\\n\\n/* Desktop */\\n:global(.omrs-breakpoint-gt-tablet) {\\n  .formContainer {\\n    height: calc(100vh - 6rem);\\n  }\\n}\\n\\n/* Tablet */\\n:global(.omrs-breakpoint-lt-desktop) {\\n  .formContainer {\\n    height: calc(100vh - 3rem);\\n  }\\n}\",\"// Code generated by @carbon/layout. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2019\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-01: 0.125rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-02: 0.25rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-03: 0.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-04: 0.75rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-05: 1rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-06: 1.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-07: 2rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-08: 2.5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-09: 3rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-10: 4rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-11: 5rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-12: 6rem !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing-13: 10rem !default;\\n\\n/// @type List\\n/// @access public\\n/// @group @carbon/layout\\n$carbon--spacing: (\\n  $carbon--spacing-01,\\n  $carbon--spacing-02,\\n  $carbon--spacing-03,\\n  $carbon--spacing-04,\\n  $carbon--spacing-05,\\n  $carbon--spacing-06,\\n  $carbon--spacing-07,\\n  $carbon--spacing-08,\\n  $carbon--spacing-09,\\n  $carbon--spacing-10,\\n  $carbon--spacing-11,\\n  $carbon--spacing-12,\\n  $carbon--spacing-13\\n);\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-01\\n$spacing-01: $carbon--spacing-01 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-02\\n$spacing-02: $carbon--spacing-02 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-03\\n$spacing-03: $carbon--spacing-03 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-04\\n$spacing-04: $carbon--spacing-04 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-05\\n$spacing-05: $carbon--spacing-05 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-06\\n$spacing-06: $carbon--spacing-06 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-07\\n$spacing-07: $carbon--spacing-07 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-08\\n$spacing-08: $carbon--spacing-08 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-09\\n$spacing-09: $carbon--spacing-09 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-10\\n$spacing-10: $carbon--spacing-10 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-11\\n$spacing-11: $carbon--spacing-11 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-12\\n$spacing-12: $carbon--spacing-12 !default;\\n\\n/// @type Number\\n/// @access public\\n/// @group @carbon/layout\\n/// @alias carbon--spacing-13\\n$spacing-13: $carbon--spacing-13 !default;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"productiveHeading01\": \"-esm-patient-clinical-view__clinical-view-form-component__productiveHeading01___OogZL\",\n\t\"productiveHeading02\": \"-esm-patient-clinical-view__clinical-view-form-component__productiveHeading02___GMgxh\",\n\t\"productiveHeading03\": \"-esm-patient-clinical-view__clinical-view-form-component__productiveHeading03___Bc2rG\",\n\t\"productiveHeading04\": \"-esm-patient-clinical-view__clinical-view-form-component__productiveHeading04___4PP8H\",\n\t\"productiveHeading05\": \"-esm-patient-clinical-view__clinical-view-form-component__productiveHeading05___+3Kjs\",\n\t\"productiveHeading06\": \"-esm-patient-clinical-view__clinical-view-form-component__productiveHeading06___miT5o\",\n\t\"bodyShort01\": \"-esm-patient-clinical-view__clinical-view-form-component__bodyShort01___lIZiL\",\n\t\"bodyShort02\": \"-esm-patient-clinical-view__clinical-view-form-component__bodyShort02___Otyb4\",\n\t\"bodyLong01\": \"-esm-patient-clinical-view__clinical-view-form-component__bodyLong01___gJJ4m\",\n\t\"bodyLong02\": \"-esm-patient-clinical-view__clinical-view-form-component__bodyLong02___3sd7C\",\n\t\"label01\": \"-esm-patient-clinical-view__clinical-view-form-component__label01___Zn0uG\",\n\t\"formContainer\": \"-esm-patient-clinical-view__clinical-view-form-component__formContainer___b9+NX\",\n\t\"checkboxContainer\": \"-esm-patient-clinical-view__clinical-view-form-component__checkboxContainer___sTReu\",\n\t\"checkBox\": \"-esm-patient-clinical-view__clinical-view-form-component__checkBox___Ppoa3\",\n\t\"searchContainer\": \"-esm-patient-clinical-view__clinical-view-form-component__searchContainer___h9ITQ\",\n\t\"button\": \"-esm-patient-clinical-view__clinical-view-form-component__button___kkau0\",\n\t\"tablet\": \"-esm-patient-clinical-view__clinical-view-form-component__tablet___p-a6X\",\n\t\"desktop\": \"-esm-patient-clinical-view__clinical-view-form-component__desktop___oUnG+\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","isTablet","useTranslation","views","clinicalViews","slots","useExtensionStore","useConfig","useMemo","Object","keys","filter","slot","search","map","slotName","startCase","replace","checked","some","view","useClinicalView","moduleName","path","searchTerm","setSearchTerm","React","searchResults","setSearchResult","tempConfig","setTempConfig","useState","isPending","setIsPending","isEmpty","results","toLocaleLowerCase","handleSearch","debounce","closeClinicalViewForm","useCallback","detach","addClinicalView","updateClinicalViews","config","tempConfigUpdate","set","cloneDeep","temporaryConfigStore","removeClinicalView","slotIndex","findIndex","splice","handleChange","handleSave","handleReset","className","styles","Search","placeholder","t","id","onChange","event","target","value","labelText","light","size","Button","kind","onClick","Checkbox","key","ButtonSet","___CSS_LOADER_EXPORT___","push","module","locals"],"sourceRoot":""}