"use strict";(self.webpackChunk_openmrs_esm_patient_list_app=self.webpackChunk_openmrs_esm_patient_list_app||[]).push([[295],{2295:(e,n,t)=>{t.d(n,{Z:()=>Fe});var a=t(9902),i=t.n(a),o=t(7896),r=t(6666),s=t(9740),l=t(3980),p=t.n(l),c=t(2779),d=t.n(c),b=t(8479),g=["small","className"],u=b.settings.prefix,f=function(e){var n,t=e.small,a=e.className,l=(0,s.Z)(e,g),p=d()(a,(n={},(0,r.Z)(n,"".concat(u,"--skeleton"),!0),(0,r.Z)(n,"".concat(u,"--search--xl"),!t),(0,r.Z)(n,"".concat(u,"--search--sm"),t),n));return i().createElement("div",(0,o.Z)({className:p},l),i().createElement("span",{className:"".concat(u,"--label")}),i().createElement("div",{className:"".concat(u,"--search-input")}))};f.propTypes={className:p().string,small:p().bool},f.defaultProps={small:!1};const h=f;var y=t(1248),m=t(160),$=t(5300),_=t(7030),A=t(364),v=t(7500),w=t(8804),x=t(1747),k=t(7004),C=t(2427),z=t(3441),B=t(3783),L=t(5787),E=t(8580),M=t(9035),q=t(4924),N=t(5191),T=t(2237);const H=function(e,n,t){var a=e.length;return t=void 0===t?a:t,!n&&t>=a?e:function(e,n,t){var a=-1,i=e.length;n<0&&(n=-n>i?0:i+n),(t=t>i?i:t)<0&&(t+=i),i=n>t?0:t-n>>>0,n>>>=0;for(var o=Array(i);++a<i;)o[a]=e[a+n];return o}(e,n,t)};var S=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");const I=function(e){return S.test(e)};var Z="[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",D="\\ud83c[\\udffb-\\udfff]",P="[^\\ud800-\\udfff]",F="(?:\\ud83c[\\udde6-\\uddff]){2}",O="[\\ud800-\\udbff][\\udc00-\\udfff]",U="(?:"+Z+"|"+D+")?",j="[\\ufe0e\\ufe0f]?",R=j+U+"(?:\\u200d(?:"+[P,F,O].join("|")+")"+j+U+")*",G="(?:"+[P+Z+"?",Z,F,O,"[\\ud800-\\udfff]"].join("|")+")",K=RegExp(D+"(?="+D+")|"+G+R,"g");const W=function(e){return I(e)?function(e){return e.match(K)||[]}(e):function(e){return e.split("")}(e)},V=function(e){e=(0,T.Z)(e);var n=I(e)?W(e):void 0,t=n?n[0]:e.charAt(0),a=n?H(n,1).join(""):e.slice(1);return t.toUpperCase()+a};var Y,J,X,Q,ee,ne,te,ae=t(5495),ie=["children"],oe=i().forwardRef((function(e,n){var t=e.children,a=(0,ae._)(e,ie);return i().createElement(ae.I,(0,ae.a)({width:16,height:16,viewBox:"0 0 32 32",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",ref:n},a),Y||(Y=i().createElement("path",{d:"M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2ZM8,18a2,2,0,1,1,2-2A2,2,0,0,1,8,18Zm8,0a2,2,0,1,1,2-2A2,2,0,0,1,16,18Zm8,0a2,2,0,1,1,2-2A2,2,0,0,1,24,18Z"})),J||(J=i().createElement("path",{fill:"none",d:"M10,16a2,2,0,1,1-2-2A2,2,0,0,1,10,16Zm6-2a2,2,0,1,0,2,2A2,2,0,0,0,16,14Zm8,0a2,2,0,1,0,2,2A2,2,0,0,0,24,14Z","data-icon-path":"inner-path"})),t)})),re=["children"],se=i().forwardRef((function(e,n){var t=e.children,a=(0,ae._)(e,re);return i().createElement(ae.I,(0,ae.a)({width:16,height:16,viewBox:"0 0 32 32",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",ref:n},a),X||(X=i().createElement("path",{fill:"none",d:"M16,26a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,26Zm-1.125-5h2.25V12h-2.25Z","data-icon-path":"inner-path"})),Q||(Q=i().createElement("path",{d:"M16.002,6.1714h-.004L4.6487,27.9966,4.6506,28H27.3494l.0019-.0034ZM14.875,12h2.25v9h-2.25ZM16,26a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,16,26Z"})),ee||(ee=i().createElement("path",{d:"M29,30H3a1,1,0,0,1-.8872-1.4614l13-25a1,1,0,0,1,1.7744,0l13,25A1,1,0,0,1,29,30ZM4.6507,28H27.3493l.002-.0033L16.002,6.1714h-.004L4.6487,27.9967Z"})),t)})),le=["children"],pe=i().forwardRef((function(e,n){var t=e.children,a=(0,ae._)(e,le);return i().createElement(ae.I,(0,ae.a)({width:16,height:16,viewBox:"0 0 32 32",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",ref:n},a),ne||(ne=i().createElement("path",{d:"M14 21.414L9 16.413 10.413 15 14 18.586 21.585 11 23 12.415 14 21.414z"})),te||(te=i().createElement("path",{d:"M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm0,26A12,12,0,1,1,28,16,12,12,0,0,1,16,28Z"})),t)})),ce=t(6062),de=t.n(ce),be=t(4036),ge=t.n(be),ue=t(6793),fe=t.n(ue),he=t(7892),ye=t.n(he),me=t(1173),$e=t.n(me),_e=t(2464),Ae=t.n(_e),ve=t(4802),we={};we.styleTagTransform=Ae(),we.setAttributes=ye(),we.insert=fe().bind(null,"head"),we.domAPI=ge(),we.insertStyleElement=$e(),de()(ve.Z,we);const xe=ve.Z&&ve.Z.locals?ve.Z.locals:void 0;var ke=t(330),Ce=["children","className","href","disabled","inline","visited","renderIcon","size"],ze=function(e){var n,t=e.children,a=e.className,l=e.href,p=e.disabled,c=e.inline,b=e.visited,g=e.renderIcon,u=e.size,f=(0,s.Z)(e,Ce),h=(0,ke.A)(),y=d()("".concat(h,"--link"),a,(n={},(0,r.Z)(n,"".concat(h,"--link--disabled"),p),(0,r.Z)(n,"".concat(h,"--link--inline"),c),(0,r.Z)(n,"".concat(h,"--link--visited"),b),(0,r.Z)(n,"".concat(h,"--link--").concat(u),u),n)),m=p?"p":"a",$="_blank"===f.target?"noopener":null;return i().createElement(m,(0,o.Z)({href:p?null:l,className:y,rel:$},f),t,!c&&g&&i().createElement("div",{className:"".concat(h,"--link__icon")},i().createElement(g,null)))};ze.propTypes={children:p().node,className:p().string,disabled:p().bool,href:p().string,inline:p().bool,renderIcon:p().oneOfType([p().func,p().object]),size:p().oneOf(["sm","md","lg"]),visited:p().bool};const Be=ze,Le=e=>{let{patientUuid:n,syncState:t}=e;const{t:a}=(0,q.useTranslation)(),o=(0,M.useStore)((0,M.getOfflinePatientDataStore)()),r=()=>t?function(e,n){if(!n)return!1;const t=[...n.syncingHandlers,...n.syncedHandlers,...n.failedHandlers];return Object.keys(e.handlers).some((e=>!t.includes(e)))}(o,t)?i().createElement(i().Fragment,null,i().createElement(se,{className:xe.errorIcon}),a("offlinePatientsTableLastUpdatedOutdatedData","Outdated data")):t.syncingHandlers.length>0?i().createElement(i().Fragment,null,i().createElement(oe,{className:xe.pendingIcon}),a("offlinePatientsTableLastUpdatedDownloading","Downloading...")):t.failedHandlers.length>0?i().createElement(i().Fragment,null,i().createElement(se,{className:xe.errorIcon}),i().createElement(Be,{onClick:()=>(0,M.navigate)({to:`${window.getOpenmrsSpaBase()}offline-tools/patients/${n}/offline-data`})},t.failedHandlers.length," ",1===t.failedHandlers.length?a("offlinePatientsTableLastUpdatedError","error"):a("offlinePatientsTableLastUpdatedErrors","errors"))):i().createElement(i().Fragment,null,i().createElement(pe,null),t.timestamp.toLocaleDateString()):i().createElement(i().Fragment,null,i().createElement(se,{className:xe.errorIcon}),a("offlinePatientsTableLastUpdatedNotYetSynchronized","Not synchronized"));return i().createElement(B.Z,null,i().createElement("div",{className:xe.cellContainer},i().createElement(r,null)))};var Ee=t(7347),Me={};Me.styleTagTransform=Ae(),Me.setAttributes=ye(),Me.insert=fe().bind(null,"head"),Me.domAPI=ge(),Me.insertStyleElement=$e(),de()(Ee.Z,Me);const qe=Ee.Z&&Ee.Z.locals?Ee.Z.locals:void 0,Ne=e=>{let{patient:n}=e;const t=`${n.name[0].given.join(" ")} ${n.name[0].family}`;return i().createElement(B.Z,null,i().createElement(Be,{onClick:()=>(0,M.navigate)({to:`${window.getOpenmrsSpaBase()}patient/${n.id}/chart`})},t))};var Te,He=["children"],Se=i().forwardRef((function(e,n){var t=e.children,a=(0,ae._)(e,He);return i().createElement(ae.I,(0,ae.a)({width:32,height:32,viewBox:"0 0 32 32",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",ref:n},a),Te||(Te=i().createElement("path",{d:"M12 10H6.78A11 11 0 0127 16h2A13 13 0 006 7.68V4H4v8h8zM20 22h5.22A11 11 0 015 16H3a13 13 0 0023 8.32V28h2V20H20z"})),t)})),Ie=t(2690);function Ze(){return Ze=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},Ze.apply(this,arguments)}const De=e=>{let{showHeader:n}=e;return i().createElement(m.Z,{className:qe.tableContainer},i().createElement("div",{className:qe.tableHeaderContainer},n&&i().createElement(L.Z,{heading:!0,width:"20%",className:qe.tableHeader}),i().createElement(h,{className:qe.tableSearch})),i().createElement(E.Z,{showToolbar:!1,showHeader:!1}))};function Pe(e){let{rowIds:n,headers:t,cellsById:a,inputValue:i,getCellId:o}=e;return n.filter((e=>t.some((n=>{let{key:t}=n;const r=o(e,t);return JSON.stringify(a[r].value).toLowerCase().includes(i.toLowerCase())}))))}const Fe=e=>{let{isInteractive:n,showHeader:t}=e;const{t:a}=(0,q.useTranslation)(),o=(0,M.useStore)((0,M.getOfflinePatientDataStore)()),r=(0,M.useSessionUser)()?.user.uuid,s=(0,M.useLayoutType)(),{isFetching:l,data:p,refetch:c}=(0,N.HH)(r),d=(0,Ie.r)((e=>Promise.all(e.map((e=>(0,M.syncOfflinePatientData)(e)))))),b=(0,N.$g)(),g="desktop"===s?"sm":void 0,u=[{key:"name",header:a("offlinePatientsTableHeaderName","Name")},{key:"lastUpdated",header:a("offlinePatientsTableHeaderLastUpdated","Last updated")},{key:"gender",header:a("offlinePatientsTableHeaderGender","Gender")},{key:"age",header:a("offlinePatientsTableHeaderAge","Age")}],f=p?.map((e=>{const n=o.offlinePatientDataSyncState?.[e.id];return{id:e.id,name:e,lastUpdated:n,gender:(t=e.gender,V((0,T.Z)(t).toLowerCase())),age:e.birthDate?(0,M.age)(e.birthDate):""};var t}))??[];return l?i().createElement(De,{showHeader:t}):i().createElement(i().Fragment,null,i().createElement(y.ZP,{rows:f,headers:u,filterRows:Pe},(e=>{let{rows:o,headers:s,getTableProps:l,getHeaderProps:p,getRowProps:u,getTableContainerProps:f,getSelectionProps:h,onInputChange:y,selectedRows:L}=e;return i().createElement(m.Z,Ze({className:qe.tableContainer},f()),i().createElement("div",{className:qe.tableHeaderContainer},t&&i().createElement("h4",{className:qe.tableHeader},a("offlinePatientsTableTitle","Offline patients")),0===L.length&&i().createElement($.Z,{className:qe.tableSearch,labelText:a("offlinePatientsTableSearchLabel","Search this list"),placeholder:a("offlinePatientsTableSearchPlaceholder","Search this list"),size:g,onChange:y,light:!0}),L.length>0&&i().createElement(i().Fragment,null,i().createElement(_.Z,{className:qe.tableSecondaryAction,kind:"ghost",size:g,renderIcon:Se,disabled:d.isFetching,onClick:()=>(e=>d.refetch(e.map((e=>e.id))))(L)},1===L.length?a("offlinePatientsTableUpdatePatient","Update patient"):a("offlinePatientsTableUpdatePatients","Update patients")),i().createElement(_.Z,{className:qe.tablePrimaryAction,kind:"danger",size:g,disabled:b.isFetching,onClick:()=>(async e=>{const n=(0,M.showModal)("offline-tools-confirmation-modal",{title:a("offlinePatientsTableDeleteConfirmationModalTitle","Remove offline patients"),children:a("offlinePatientsTableDeleteConfirmationModalContent","Are you sure that you want to remove all selected patients from the offline list? The charts will no longer be available in offline mode."),confirmText:a("offlinePatientsTableDeleteConfirmationModalConfirm","Remove patients"),cancelText:a("offlinePatientsTableDeleteConfirmationModalCancel","Cancel"),closeModal:()=>n(),onConfirm:async()=>{await b.refetch({userId:r,patientUuids:e.map((e=>e.id))}),c()}})})(L)},a("offlinePatientsTableRemoveFromOfflineList","Remove from list")))),i().createElement(A.Z,Ze({},l(),{isSortable:!0,useZebraStyles:!0}),i().createElement(v.Z,null,i().createElement(w.Z,null,n&&i().createElement(x.Z,h()),s.map((e=>i().createElement(k.Z,Ze({},p({header:e}),{isSortable:!0}),e.header))))),i().createElement(C.Z,null,o.map((e=>i().createElement(w.Z,u({row:e}),n&&i().createElement(z.Z,h({row:e})),e.cells.map((n=>{switch(n.info.header){case"name":return i().createElement(Ne,{key:n.id,patient:n.value});case"lastUpdated":return i().createElement(Le,{key:n.id,syncState:n.value,patientUuid:e.id});default:return i().createElement(B.Z,{key:n.id},n.value)}}))))))))})))}},5787:(e,n,t)=>{t.d(n,{Z:()=>y});var a=t(7896),i=t(6666),o=t(9740),r=t(3980),s=t.n(r),l=t(9902),p=t.n(l),c=t(2779),d=t.n(c),b=t(330),g=["paragraph","lineCount","width","heading","className"],u=[.973051493507435,.15334737213558558,.5671034553053769];function f(e,n,t){return Math.floor(u[t%3]*(n-e+1))+e}var h=function(e){var n,t=e.paragraph,r=e.lineCount,s=e.width,l=e.heading,c=e.className,u=(0,o.Z)(e,g),h=(0,b.A)(),y=d()((n={},(0,i.Z)(n,"".concat(h,"--skeleton__text"),!0),(0,i.Z)(n,"".concat(h,"--skeleton__heading"),l),(0,i.Z)(n,c,c),n)),m=parseInt(s,10),$=s.includes("px");if(s.includes("%")&&t){for(var _=[],A=0;A<r;A++){var v=f(0,75,A)+"px";_.push(p().createElement("p",(0,a.Z)({className:y,style:{width:"calc(".concat(s," - ").concat(v,")")},key:A},u)))}return p().createElement("div",null,_)}if($&&t){for(var w=[],x=0;x<r;x++){var k=f(m-75,m,x)+"px";w.push(p().createElement("p",(0,a.Z)({className:y,style:{width:k},key:x},u)))}return p().createElement("div",null,w)}return p().createElement("p",(0,a.Z)({className:y,style:{width:s}},u))};h.propTypes={className:s().string,heading:s().bool,lineCount:s().number,paragraph:s().bool,width:s().string},h.defaultProps={paragraph:!1,width:"100%",heading:!1,lineCount:3};const y=h},4802:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(1799),i=t.n(a),o=t(2609),r=t.n(o)()(i());r.push([e.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-list__last-updated-table-cell__productiveHeading02___1D26F{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-patient-list__last-updated-table-cell__productiveHeading03___x\\+LAL{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-patient-list__last-updated-table-cell__productiveHeading04___LRvu0{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-patient-list__last-updated-table-cell__bodyLong01___sTrJO{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-patient-list__last-updated-table-cell__bodyShort01___N0rpt{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.-esm-patient-list__last-updated-table-cell__bodyShort02___uEE7\\+{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.-esm-patient-list__last-updated-table-cell__text02___MxlxS{color:#525252}.-esm-patient-list__last-updated-table-cell__label01___DeP8v{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-patient-list__last-updated-table-cell__modal___WW-FB{position:fixed;width:100vw;height:100vh;display:grid;background-color:rgba(0,0,0,.5);z-index:9000;justify-items:center;align-items:center}.-esm-patient-list__last-updated-table-cell__errorIcon___j3Bg6{color:#da1e28}.-esm-patient-list__last-updated-table-cell__pendingIcon___O8nVj{color:#ff832b}.-esm-patient-list__last-updated-table-cell__cellContainer___K8LbA{display:flex;align-items:center;gap:.25rem}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/style.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./src/offline-patient-table/last-updated-table-cell.scss","webpack://./../../node_modules/carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/_spacing.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,yEC2gBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD5rB1B,0ECugBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CDxrB1B,yECmgBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,gBAqLsB,CDprB1B,gEC+fI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDhrB1B,iEC2fI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD5qB1B,kECufI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CDxqB1B,4DACE,aDxBQ,CC2BV,6DC+eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDhqB1B,2DACE,cAAA,CACA,WAAA,CACA,YAAA,CACA,YAAA,CACA,+BAAA,CACA,YAAA,CACA,oBAAA,CACA,kBAAA,CE1CF,+DACE,aHiBO,CGdT,iEACE,aAAA,CAGF,mEACE,YAAA,CACA,kBAAA,CACA,UCGmB",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n",'@import "~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles";\n@import "~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing";\n@import "~@openmrs/esm-styleguide/src/vars";\n\n.productiveHeading02 {\n  @include carbon--type-style("productive-heading-02");\n}\n\n.productiveHeading03 {\n  @include carbon--type-style("productive-heading-03");\n}\n\n.productiveHeading04 {\n  @include carbon--type-style("productive-heading-04");\n}\n\n.bodyLong01 {\n  @include carbon--type-style("body-long-01");\n}\n\n.bodyShort01 {\n  @include carbon--type-style("body-short-01");\n}\n\n.bodyShort02 {\n  @include carbon--type-style("body-short-02");\n}\n\n.text02 {\n  color: $text-02;\n}\n\n.label01 {\n  @include carbon--type-style("label-01")\n}\n\n.modal {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  display: grid;\n  background-color: rgba(0,0,0,0.5);\n  z-index: 9000;\n  justify-items: center;\n  align-items: center;\n}\n',"//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n",'@import "../style.scss";\n\n.errorIcon {\n  color: $danger;\n}\n\n.pendingIcon {\n  color: #ff832b;\n}\n\n.cellContainer {\n  display: flex;\n  align-items: center;\n  gap: $spacing-02;\n}\n',"// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n"],sourceRoot:""}]),r.locals={productiveHeading02:"-esm-patient-list__last-updated-table-cell__productiveHeading02___1D26F",productiveHeading03:"-esm-patient-list__last-updated-table-cell__productiveHeading03___x+LAL",productiveHeading04:"-esm-patient-list__last-updated-table-cell__productiveHeading04___LRvu0",bodyLong01:"-esm-patient-list__last-updated-table-cell__bodyLong01___sTrJO",bodyShort01:"-esm-patient-list__last-updated-table-cell__bodyShort01___N0rpt",bodyShort02:"-esm-patient-list__last-updated-table-cell__bodyShort02___uEE7+",text02:"-esm-patient-list__last-updated-table-cell__text02___MxlxS",label01:"-esm-patient-list__last-updated-table-cell__label01___DeP8v",modal:"-esm-patient-list__last-updated-table-cell__modal___WW-FB",errorIcon:"-esm-patient-list__last-updated-table-cell__errorIcon___j3Bg6",pendingIcon:"-esm-patient-list__last-updated-table-cell__pendingIcon___O8nVj",cellContainer:"-esm-patient-list__last-updated-table-cell__cellContainer___K8LbA"};const s=r},7347:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(1799),i=t.n(a),o=t(2609),r=t.n(o)()(i());r.push([e.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-list__offline-patient-table__productiveHeading02___reZqw{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-patient-list__offline-patient-table__productiveHeading03___xNRXW{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-patient-list__offline-patient-table__productiveHeading04___j-Fua{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-patient-list__offline-patient-table__bodyLong01___ZNeb1{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-patient-list__offline-patient-table__bodyShort01___0uSDe{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.-esm-patient-list__offline-patient-table__bodyShort02___RhP0b{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.-esm-patient-list__offline-patient-table__text02___0-K8j{color:#525252}.-esm-patient-list__offline-patient-table__label01___hLFky{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-patient-list__offline-patient-table__modal___-EXTd{position:fixed;width:100vw;height:100vh;display:grid;background-color:rgba(0,0,0,.5);z-index:9000;justify-items:center;align-items:center}.-esm-patient-list__offline-patient-table__tableContainer___Si\\+tT{background-color:transparent}.-esm-patient-list__offline-patient-table__tableHeaderContainer___KwaMq{display:grid;grid-template-rows:auto auto;grid-template-columns:1fr 1fr auto auto}.-esm-patient-list__offline-patient-table__tableHeaderContainer___KwaMq .-esm-patient-list__offline-patient-table__tableHeader___9xNix{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0;color:#525252;padding:.75rem 0 .75rem .75rem;grid-row:1;grid-column:1/span 4}.-esm-patient-list__offline-patient-table__tableHeaderContainer___KwaMq .-esm-patient-list__offline-patient-table__tableSearch___sh9wm{grid-row:2;grid-column:2;align-self:end}.-esm-patient-list__offline-patient-table__tableHeaderContainer___KwaMq .-esm-patient-list__offline-patient-table__tablePrimaryAction___xITIC{grid-row:2;grid-column:4;align-self:end}.-esm-patient-list__offline-patient-table__tableHeaderContainer___KwaMq .-esm-patient-list__offline-patient-table__tableSecondaryAction___Tp\\+BG{grid-row:2;grid-column:3;align-self:end}.omrs-breakpoint-gt-tablet .-esm-patient-list__offline-patient-table__tableHeaderContainer___KwaMq{grid-template-columns:1fr 20% 250px auto auto}.omrs-breakpoint-gt-tablet .-esm-patient-list__offline-patient-table__tableHeaderContainer___KwaMq .-esm-patient-list__offline-patient-table__tableHeader___9xNix{grid-column:1;padding:.75rem 0 .25rem .75rem}.omrs-breakpoint-gt-tablet .-esm-patient-list__offline-patient-table__tableHeaderContainer___KwaMq .-esm-patient-list__offline-patient-table__tableSearch___sh9wm{grid-row:1;grid-column:3}.omrs-breakpoint-gt-tablet .-esm-patient-list__offline-patient-table__tableHeaderContainer___KwaMq .-esm-patient-list__offline-patient-table__tablePrimaryAction___xITIC{grid-row:1;grid-column:5}.omrs-breakpoint-gt-tablet .-esm-patient-list__offline-patient-table__tableHeaderContainer___KwaMq .-esm-patient-list__offline-patient-table__tableSecondaryAction___Tp\\+BG{grid-row:1;grid-column:4}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/style.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./src/offline-patient-table/offline-patient-table.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,uEC2gBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD5rB1B,uECugBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CDxrB1B,uECmgBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,gBAqLsB,CDprB1B,8DC+fI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDhrB1B,+DC2fI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD5qB1B,+DCufI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CDxqB1B,0DACE,aDxBQ,CC2BV,2DC+eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDhqB1B,yDACE,cAAA,CACA,WAAA,CACA,YAAA,CACA,YAAA,CACA,+BAAA,CACA,YAAA,CACA,oBAAA,CACA,kBAAA,CE1CF,mEACE,4BAAA,CAGF,wEACE,YAAA,CACA,4BAAA,CACA,uCAAA,CAEA,uIDogBE,iBAqLsB,CArLtB,eAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CCvrBtB,aHRM,CGSN,8BAAA,CACA,UAAA,CACA,oBAAA,CAGF,uIACE,UAAA,CACA,aAAA,CACA,cAAA,CAGF,8IACE,UAAA,CACA,aAAA,CACA,cAAA,CAGF,iJACE,UAAA,CACA,aAAA,CACA,cAAA,CAIJ,mGACE,6CAAA,CAEA,kKACE,aAAA,CACA,8BAAA,CAGF,kKACE,UAAA,CACA,aAAA,CAGF,yKACE,UAAA,CACA,aAAA,CAGF,4KACE,UAAA,CACA,aAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n",'@import "~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles";\n@import "~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing";\n@import "~@openmrs/esm-styleguide/src/vars";\n\n.productiveHeading02 {\n  @include carbon--type-style("productive-heading-02");\n}\n\n.productiveHeading03 {\n  @include carbon--type-style("productive-heading-03");\n}\n\n.productiveHeading04 {\n  @include carbon--type-style("productive-heading-04");\n}\n\n.bodyLong01 {\n  @include carbon--type-style("body-long-01");\n}\n\n.bodyShort01 {\n  @include carbon--type-style("body-short-01");\n}\n\n.bodyShort02 {\n  @include carbon--type-style("body-short-02");\n}\n\n.text02 {\n  color: $text-02;\n}\n\n.label01 {\n  @include carbon--type-style("label-01")\n}\n\n.modal {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  display: grid;\n  background-color: rgba(0,0,0,0.5);\n  z-index: 9000;\n  justify-items: center;\n  align-items: center;\n}\n',"//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n",'@import "../style.scss";\n\n.tableContainer {\n  background-color: transparent;\n}\n\n.tableHeaderContainer {\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr 1fr auto auto;\n\n  .tableHeader {\n    @include carbon--type-style("productive-heading-03");\n    color: $text-02;\n    padding: $spacing-04 0 $spacing-04 $spacing-04;\n    grid-row: 1;\n    grid-column: 1 / span 4;\n  }\n\n  .tableSearch {\n    grid-row: 2;\n    grid-column: 2;\n    align-self: end;\n  }\n\n  .tablePrimaryAction {\n    grid-row: 2;\n    grid-column: 4;\n    align-self: end;\n  }\n\n  .tableSecondaryAction {\n    grid-row: 2;\n    grid-column: 3;\n    align-self: end;\n  }\n}\n\n:global(.omrs-breakpoint-gt-tablet) .tableHeaderContainer {\n  grid-template-columns: 1fr 20% 250px auto auto;\n\n  .tableHeader {\n    grid-column: 1;\n    padding: $spacing-04 0 $spacing-02 $spacing-04;\n  }\n\n  .tableSearch {\n    grid-row: 1;\n    grid-column: 3;\n  }\n\n  .tablePrimaryAction {\n    grid-row: 1;\n    grid-column: 5;\n  }\n\n  .tableSecondaryAction {\n    grid-row: 1;\n    grid-column: 4;\n  }\n}\n'],sourceRoot:""}]),r.locals={productiveHeading02:"-esm-patient-list__offline-patient-table__productiveHeading02___reZqw",productiveHeading03:"-esm-patient-list__offline-patient-table__productiveHeading03___xNRXW",productiveHeading04:"-esm-patient-list__offline-patient-table__productiveHeading04___j-Fua",bodyLong01:"-esm-patient-list__offline-patient-table__bodyLong01___ZNeb1",bodyShort01:"-esm-patient-list__offline-patient-table__bodyShort01___0uSDe",bodyShort02:"-esm-patient-list__offline-patient-table__bodyShort02___RhP0b",text02:"-esm-patient-list__offline-patient-table__text02___0-K8j",label01:"-esm-patient-list__offline-patient-table__label01___hLFky",modal:"-esm-patient-list__offline-patient-table__modal___-EXTd",tableContainer:"-esm-patient-list__offline-patient-table__tableContainer___Si+tT",tableHeaderContainer:"-esm-patient-list__offline-patient-table__tableHeaderContainer___KwaMq",tableHeader:"-esm-patient-list__offline-patient-table__tableHeader___9xNix",tableSearch:"-esm-patient-list__offline-patient-table__tableSearch___sh9wm",tablePrimaryAction:"-esm-patient-list__offline-patient-table__tablePrimaryAction___xITIC",tableSecondaryAction:"-esm-patient-list__offline-patient-table__tableSecondaryAction___Tp+BG"};const s=r}}]);
//# sourceMappingURL=295.js.map