{"version":3,"file":"515.js","mappings":"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","sources":["webpack://@openmrs/esm-patient-list-app/../../node_modules/carbon-components-react/es/components/Checkbox/Checkbox.js","webpack://@openmrs/esm-patient-list-app/./src/add-patient/add-patient.scss?3023","webpack://@openmrs/esm-patient-list-app/./src/add-patient/add-patient.component.tsx","webpack://@openmrs/esm-patient-list-app/../../node_modules/carbon-components-react/es/components/SkeletonText/SkeletonText.js","webpack://@openmrs/esm-patient-list-app/./src/add-patient/add-patient.scss"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"id\", \"labelText\", \"onChange\", \"indeterminate\", \"hideLabel\", \"wrapperClassName\", \"title\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Text } from '../Text';\nimport { useFeatureFlag } from '../FeatureFlags';\nimport deprecate from '../../prop-types/deprecate';\nimport { usePrefix } from '../../internal/usePrefix';\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(_ref, _ref2) {\n  var className = _ref.className,\n      id = _ref.id,\n      labelText = _ref.labelText,\n      _onChange = _ref.onChange,\n      indeterminate = _ref.indeterminate,\n      hideLabel = _ref.hideLabel,\n      wrapperClassName = _ref.wrapperClassName,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? '' : _ref$title,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var enabled = useFeatureFlag('enable-v11-release');\n  var prefix = usePrefix();\n  var labelClasses = classNames(\"\".concat(prefix, \"--checkbox-label\"), [enabled ? null : className]);\n  var innerLabelClasses = classNames(\"\".concat(prefix, \"--checkbox-label-text\"), _defineProperty({}, \"\".concat(prefix, \"--visually-hidden\"), hideLabel));\n  var wrapperClasses = classNames(\"\".concat(prefix, \"--form-item\"), \"\".concat(prefix, \"--checkbox-wrapper\"), [enabled ? className : wrapperClassName]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClasses\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({}, other, {\n    type: \"checkbox\",\n    onChange: function onChange(evt) {\n      if (enabled) {\n        _onChange(evt, {\n          checked: evt.target.checked,\n          id: id\n        });\n      } else {\n        _onChange(evt.target.checked, id, evt);\n      }\n    },\n    className: \"\".concat(prefix, \"--checkbox\"),\n    id: id,\n    ref: function ref(el) {\n      if (el) {\n        el.indeterminate = indeterminate;\n      }\n\n      if (typeof _ref2 === 'function') {\n        _ref2(el);\n      } else if (Object(_ref2) === _ref2) {\n        _ref2.current = el;\n      }\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses,\n    title: title || null\n  }, /*#__PURE__*/React.createElement(Text, {\n    className: innerLabelClasses\n  }, labelText)));\n});\nCheckbox.propTypes = {\n  /**\n   * Specify whether the underlying input should be checked\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Specify an optional className to be applied to the <label> node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify whether the underlying input should be checked by default\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * Specify whether the Checkbox should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specify whether the label should be hidden, or not\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Provide an `id` to uniquely identify the Checkbox input\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether the Checkbox is in an indeterminate state\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * Provide a label to provide a description of the Checkbox input that you are\n   * exposing to the user\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * Receives three arguments: true/false, the checkbox's id, and the dom event.\n   * `(value, id, event) => console.log({value, id, event})`\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Specify a title for the <label> node for the Checkbox\n   */\n  title: PropTypes.string,\n\n  /**\n   * The CSS class name to be placed on the wrapping element\n   */\n  wrapperClassName: deprecate(PropTypes.string, \"\\nThe prop `wrapperClassName` for Checkbox will be deprecated in V11 in favor of `className`. `className` will then be placed on the outer wrapper.\")\n};\nCheckbox.defaultProps = {\n  onChange: function onChange() {},\n  indeterminate: false\n};\nCheckbox.displayName = 'Checkbox';\nexport default Checkbox;","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./add-patient.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!../../../../node_modules/openmrs/node_modules/sass-loader/dist/cjs.js!./add-patient.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { toOmrsIsoString, showToast, usePagination, useSessionUser } from '@openmrs/esm-framework';\nimport { addPatientToLocalOrRemotePatientList, useGetAllPatientListsWithoutPatientQuery } from '../api';\nimport { Button, Checkbox, Pagination, Search, SkeletonText } from 'carbon-components-react';\nimport styles from './add-patient.scss';\n\ninterface AddPatientProps {\n  closeModal: () => void;\n  patientUuid: string;\n}\n\ninterface PatientListProp {\n  name: string;\n  visible: boolean;\n  selected: boolean;\n}\n\ntype PatientListObj = Record<string, PatientListProp>;\n\nconst AddPatient: React.FC<AddPatientProps> = ({ closeModal, patientUuid }) => {\n  const { t } = useTranslation();\n  const [searchValue, setSearchValue] = useState('');\n  const userId = useSessionUser()?.user.uuid;\n  const { data, isFetching } = useGetAllPatientListsWithoutPatientQuery(userId, patientUuid);\n  const [patientListsObj, setPatientListsObj] = useState<PatientListObj | null>(null);\n\n  useEffect(() => {\n    if (data) {\n      const newPatientListsObj: PatientListObj = {};\n\n      for (const patientList of data) {\n        newPatientListsObj[patientList.id] = {\n          visible: true,\n          selected: false,\n          name: patientList?.display,\n        };\n      }\n\n      setPatientListsObj(newPatientListsObj);\n    }\n  }, [data]);\n\n  const handleChange = useCallback((uuid, e) => {\n    setPatientListsObj((patientListsObj) => ({\n      ...patientListsObj,\n      [uuid]: {\n        ...patientListsObj[uuid],\n        selected: e,\n      },\n    }));\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeModal();\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    Object.keys(patientListsObj).forEach((patientListUuid) => {\n      if (patientListsObj[patientListUuid].selected) {\n        addPatientToLocalOrRemotePatientList(userId, {\n          patient: patientUuid,\n          cohort: patientListUuid,\n          startDate: toOmrsIsoString(new Date()),\n        })\n          .then(() =>\n            showToast({\n              title: t('successfullyAdded', 'Successfully added'),\n              kind: 'success',\n              description: `${t('successAddPatientToList', 'Patient added to list')}: ${\n                patientListsObj[patientListUuid].name\n              }`,\n            }),\n          )\n          .catch(() =>\n            showToast({\n              title: t('error', 'Error'),\n              kind: 'error',\n              description: `${t('errorAddPatientToList', 'Patient not added to list')}: ${\n                patientListsObj[patientListUuid].name\n              }`,\n            }),\n          );\n      }\n    });\n    handleClose();\n  }, [patientListsObj]);\n\n  const searchResults = useMemo(() => {\n    if (data && patientListsObj) {\n      if (searchValue && searchValue.trim() !== '') {\n        const search = searchValue.toLowerCase();\n        return data.filter(\n          (patientList) =>\n            patientListsObj[patientList.id]?.visible && patientList.display.toLowerCase().includes(search),\n        );\n      } else {\n        return data.filter((patientList) => patientListsObj[patientList.id]?.visible);\n      }\n    } else {\n      return [];\n    }\n  }, [searchValue, data, patientListsObj]);\n  const { results, goTo, currentPage, paginated } = usePagination(searchResults, 5);\n\n  useEffect(() => {\n    if (currentPage !== 1) {\n      goTo(1);\n    }\n  }, [searchValue]);\n\n  return (\n    <div className={styles.modalContent}>\n      <div className={styles.modalHeader}>\n        <h1 className={styles.productiveHeading03}>{t('addPatientToList', 'Add patient to list')}</h1>\n        <h3 className={styles.bodyLong01} style={{ margin: '1rem 0' }}>\n          {t('searchForAListToAddThisPatientTo', 'Search for a list to add this patient to.')}\n        </h3>\n      </div>\n      <div style={{ marginBottom: '0.875rem' }}>\n        <Search\n          style={{ backgroundColor: 'white', borderBottom: '1px solid #e0e0e0' }}\n          labelText={t('searchForList', 'Search for a list')}\n          placeholder=\"Filter list\"\n          onChange={({ target }) => {\n            setSearchValue(target.value);\n          }}\n          value={searchValue}\n        />\n      </div>\n      <div className={styles.patientListList}>\n        <fieldset className=\"bx--fieldset\">\n          <p className=\"bx--label\">Patient Lists</p>\n          {!isFetching && patientListsObj && results ? (\n            results.length > 0 ? (\n              results.map((patientList, ind) => (\n                <div key={ind} className={styles.checkbox}>\n                  <Checkbox\n                    key={ind}\n                    onChange={(e) => handleChange(patientList.id, e)}\n                    checked={patientListsObj[patientList.id]?.selected}\n                    labelText={patientList.display}\n                    id={patientList.id}\n                  />\n                </div>\n              ))\n            ) : (\n              <p className={styles.bodyLong01}>{t('noPatientListFound', 'No patient list found')}</p>\n            )\n          ) : (\n            <SkeletonText />\n          )}\n        </fieldset>\n      </div>\n      {paginated && (\n        <div className={styles.paginationContainer}>\n          <span className={`${styles.itemsCountDisplay} ${styles.bodyLong01}`}>\n            {results.length * currentPage} / {searchResults.length} {t('items', 'items')}\n          </span>\n          <Pagination\n            className={styles.pagination}\n            forwardText=\"\"\n            backwardText=\"\"\n            page={currentPage}\n            pageSize={5}\n            pageSizes={[5]}\n            totalItems={searchResults.length}\n            onChange={({ page }) => goTo(page)}\n          />\n        </div>\n      )}\n      <div className={styles.buttonSet}>\n        <Button kind=\"ghost\">{t('createNewPatientList', 'Create new patient list')}</Button>\n        <div>\n          <Button kind=\"secondary\" className={styles.largeButtons} onClick={handleClose}>\n            {t('cancel', 'Cancel')}\n          </Button>\n          <Button onClick={handleSubmit} className={styles.largeButtons}>\n            {t('addToList', 'Add to list')}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddPatient;\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"paragraph\", \"lineCount\", \"width\", \"heading\", \"className\"];\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { usePrefix } from '../../internal/usePrefix';\nvar randoms = [0.973051493507435, 0.15334737213558558, 0.5671034553053769];\n\nfunction getRandomInt(min, max, n) {\n  return Math.floor(randoms[n % 3] * (max - min + 1)) + min;\n}\n\nvar SkeletonText = function SkeletonText(_ref) {\n  var _classNames;\n\n  var paragraph = _ref.paragraph,\n      lineCount = _ref.lineCount,\n      width = _ref.width,\n      heading = _ref.heading,\n      className = _ref.className,\n      other = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = usePrefix();\n  var skeletonTextClasses = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton__text\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton__heading\"), heading), _defineProperty(_classNames, className, className), _classNames));\n  var widthNum = parseInt(width, 10);\n  var widthPx = width.includes('px');\n  var widthPercent = width.includes('%');\n\n  if (widthPercent && paragraph) {\n    var lines = [];\n\n    for (var i = 0; i < lineCount; i++) {\n      var randomWidth = getRandomInt(0, 75, i) + 'px';\n      lines.push( /*#__PURE__*/React.createElement(\"p\", _extends({\n        className: skeletonTextClasses,\n        style: {\n          width: \"calc(\".concat(width, \" - \").concat(randomWidth, \")\")\n        },\n        key: i\n      }, other)));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", null, lines);\n  }\n\n  if (widthPx && paragraph) {\n    var _lines = [];\n\n    for (var j = 0; j < lineCount; j++) {\n      var _randomWidth = getRandomInt(widthNum - 75, widthNum, j) + 'px';\n\n      _lines.push( /*#__PURE__*/React.createElement(\"p\", _extends({\n        className: skeletonTextClasses,\n        style: {\n          width: _randomWidth\n        },\n        key: j\n      }, other)));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", null, _lines);\n  }\n\n  return /*#__PURE__*/React.createElement(\"p\", _extends({\n    className: skeletonTextClasses,\n    style: {\n      width: width\n    }\n  }, other));\n};\n\nSkeletonText.propTypes = {\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string,\n\n  /**\n   * generates skeleton text at a larger size\n   */\n  heading: PropTypes.bool,\n\n  /**\n   * the number of lines in a paragraph\n   */\n  lineCount: PropTypes.number,\n\n  /**\n   * will generate multiple lines of text\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * width (in px or %) of single line of text or max-width of paragraph lines\n   */\n  width: PropTypes.string\n};\nSkeletonText.defaultProps = {\n  paragraph: false,\n  width: '100%',\n  heading: false,\n  lineCount: 3\n};\nexport default SkeletonText;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-list__add-patient__productiveHeading02___pqPL2{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-patient-list__add-patient__productiveHeading03___tEmC1{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-patient-list__add-patient__productiveHeading04___UU262{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-patient-list__add-patient__bodyLong01___lHVdb{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-patient-list__add-patient__bodyShort01___U\\\\+zw6{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.-esm-patient-list__add-patient__bodyShort02___9tG7c{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.-esm-patient-list__add-patient__text02___mcxkW{color:#525252}.-esm-patient-list__add-patient__label01___g4Hyx{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-patient-list__add-patient__modal___Q2\\\\+K8{position:fixed;width:100vw;height:100vh;display:grid;background-color:rgba(0,0,0,.5);z-index:9000;justify-items:center;align-items:center}.-esm-patient-list__add-patient__modalContent___LO\\\\+sA{width:100%;background-color:#f4f4f4}.-esm-patient-list__add-patient__modalHeader___fqvlA{margin:1rem}.-esm-patient-list__add-patient__patientListList___Z12QR{padding:0 1rem}.-esm-patient-list__add-patient__largeButtons___Hs4Fz{padding-bottom:2rem}.-esm-patient-list__add-patient__checkbox___73-sG{padding-bottom:.875rem}.-esm-patient-list__add-patient__pagination___P\\\\+zJC{width:100%;overflow:hidden}.-esm-patient-list__add-patient__paginationContainer___-XK-g{display:flex;justify-content:space-between;align-items:center;position:relative}.-esm-patient-list__add-patient__itemsCountDisplay___dlKde{position:absolute;top:0;left:1rem;height:3rem;display:flex;align-items:center;color:#525252}.-esm-patient-list__add-patient__pagination___P\\\\+zJC>div:first-child{visibility:hidden;width:0}.-esm-patient-list__add-patient__buttonSet___ybKNb{display:flex;justify-content:space-between;align-items:flex-start}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss\",\"webpack://./src/style.scss\",\"webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss\",\"webpack://./src/add-patient/add-patient.scss\"],\"names\":[],\"mappings\":\"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,6DC2gBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD5rB1B,6DCugBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CDxrB1B,6DCmgBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,gBAqLsB,CDprB1B,oDC+fI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDhrB1B,sDC2fI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD5qB1B,qDCufI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CDxqB1B,gDACE,aDxBQ,CC2BV,iDC+eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDhqB1B,gDACE,cAAA,CACA,WAAA,CACA,YAAA,CACA,YAAA,CACA,+BAAA,CACA,YAAA,CACA,oBAAA,CACA,kBAAA,CE1CF,uDACE,UAAA,CACA,wBAAA,CAGF,qDACE,WAAA,CAGF,yDACE,cAAA,CAGF,sDACE,mBAAA,CAGF,kDACE,sBAAA,CAGF,qDACE,UAAA,CACA,eAAA,CAGF,6DACE,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,iBAAA,CAGF,2DACE,iBAAA,CACA,KAAA,CACA,SAAA,CACA,WAAA,CACA,YAAA,CACA,kBAAA,CACA,aAAA,CAGF,qEACE,iBAAA,CACA,OAAA,CAGF,mDACE,YAAA,CACA,6BAAA,CACA,sBAAA\",\"sourcesContent\":[\"$ui-01: #f4f4f4;\\n$ui-02: #ffffff;\\n$ui-03: #e0e0e0;\\n$ui-04: #8d8d8d;\\n$ui-05: #161616;\\n$text-02: #525252;\\n$text-03: #a8a8a8;\\n$ui-background: #ffffff;\\n$color-gray-30: #c6c6c6;\\n$color-gray-70: #525252;\\n$color-gray-100: #161616;\\n$color-blue-60-2: #0f62fe;\\n$color-blue-10: #edf5ff;\\n$color-yellow-50: #feecae;\\n$carbon--red-50: #fa4d56;\\n$inverse-link: #78a9ff;\\n$support-02: #24a148;\\n$inverse-support-03: #f1c21b;\\n$warning-background: #fff8e1;\\n$openmrs-background-grey: #f4f4f4;\\n$danger: #da1e28;\\n$interactive-01: #0f62fe;\\n$field-01: #f4f4f4;\\n$grey-2: #e0e0e0;\\n$labeldropdown: #c6c6c6;\\n\\n@mixin brand-01($property) {\\n  #{$property}: #005d5d;\\n  #{$property}: var(--brand-01);\\n}\\n\\n@mixin brand-02($property) {\\n  #{$property}: #004144;\\n  #{$property}: var(--brand-02);\\n}\\n\\n@mixin brand-03($property) {\\n  #{$property}: #007d79;\\n  #{$property}: var(--brand-03);\\n}\\n\\n:root {\\n  --brand-01: #005d5d;\\n  --brand-02: #004144;\\n  --brand-03: #007d79;\\n}\\n\\n$breakpoint-phone-min: 0px;\\n$breakpoint-phone-max: 600px;\\n$breakpoint-tablet-min: 601px;\\n$breakpoint-tablet-max: 1200px;\\n$breakpoint-desktop-min: 1201px;\\n$breakpoint-desktop-max: 99999999px;\\n\\n/* These color variables will be removed in a future release */\\n$brand-teal-01: #007d79;\\n$brand-01: #005d5d;\\n$brand-02: #004144;\\n\",\"@import \\\"~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles\\\";\\n@import \\\"~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing\\\";\\n@import \\\"~@openmrs/esm-styleguide/src/vars\\\";\\n\\n.productiveHeading02 {\\n  @include carbon--type-style(\\\"productive-heading-02\\\");\\n}\\n\\n.productiveHeading03 {\\n  @include carbon--type-style(\\\"productive-heading-03\\\");\\n}\\n\\n.productiveHeading04 {\\n  @include carbon--type-style(\\\"productive-heading-04\\\");\\n}\\n\\n.bodyLong01 {\\n  @include carbon--type-style(\\\"body-long-01\\\");\\n}\\n\\n.bodyShort01 {\\n  @include carbon--type-style(\\\"body-short-01\\\");\\n}\\n\\n.bodyShort02 {\\n  @include carbon--type-style(\\\"body-short-02\\\");\\n}\\n\\n.text02 {\\n  color: $text-02;\\n}\\n\\n.label01 {\\n  @include carbon--type-style(\\\"label-01\\\")\\n}\\n\\n.modal {\\n  position: fixed;\\n  width: 100vw;\\n  height: 100vh;\\n  display: grid;\\n  background-color: rgba(0,0,0,0.5);\\n  z-index: 9000;\\n  justify-items: center;\\n  align-items: center;\\n}\\n\",\"//\\n// Copyright IBM Corp. 2018, 2018\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n@import '../layout/breakpoint';\\n@import 'font-family';\\n@import 'scale';\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$caption-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$label-01: (\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$helper-text-01: (\\n  font-size: carbon--type-scale(1),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-short-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$body-long-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.5,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-01: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(1),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.34,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$code-02: (\\n  font-family: carbon--font-family('mono'),\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.43,\\n  letter-spacing: 0.32px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-01: (\\n  font-size: carbon--type-scale(2),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.29,\\n  letter-spacing: 0.16px,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-01: $heading-01 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$heading-02: (\\n  font-size: carbon--type-scale(3),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.375,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-02: $heading-02 !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  // Extra digit needed for precision in Chrome\\n  line-height: 1.199,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$productive-heading-07: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-01: map-merge(\\n  $heading-01,\\n  (\\n    line-height: 1.25,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-02: map-merge(\\n  $heading-02,\\n  (\\n    line-height: 1.5,\\n  )\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-03: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.4,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(5),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-04: (\\n  font-size: carbon--type-scale(7),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.29,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.25,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-05: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      font-weight: carbon--font-weight('light'),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-heading-06: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$expressive-paragraph-01: (\\n  font-size: carbon--type-scale(6),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.334,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    lg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n);\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-01: (\\n  font-size: carbon--type-scale(5),\\n  font-weight: carbon--font-weight('regular'),\\n  line-height: 1.3,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(5),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(6),\\n      line-height: 1.334,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(7),\\n      line-height: 1.29,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(8),\\n      line-height: 1.25,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$quotation-02: (\\n  font-size: carbon--type-scale(8),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.25,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(9),\\n      line-height: 1.22,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(10),\\n      line-height: 1.19,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(11),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(13),\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-01: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.17,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-02: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(10),\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(12),\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(13),\\n      line-height: 1.16,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(15),\\n      line-height: 1.13,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-03: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('light'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$display-04: (\\n  font-size: carbon--type-scale(10),\\n  font-weight: carbon--font-weight('semibold'),\\n  line-height: 1.19,\\n  letter-spacing: 0,\\n  breakpoints: (\\n    md: (\\n      font-size: carbon--type-scale(14),\\n      line-height: 1.15,\\n    ),\\n    lg: (\\n      font-size: carbon--type-scale(17),\\n      line-height: 1.11,\\n      letter-spacing: -0.64px,\\n    ),\\n    xlg: (\\n      font-size: carbon--type-scale(20),\\n      line-height: 1.07,\\n      letter-spacing: -0.64px,\\n    ),\\n    max: (\\n      font-size: carbon--type-scale(23),\\n      line-height: 1.05,\\n      letter-spacing: -0.96px,\\n    ),\\n  ),\\n) !default;\\n\\n/// @type Map\\n/// @access public\\n/// @group @carbon/type\\n$tokens: (\\n  caption-01: $caption-01,\\n  label-01: $label-01,\\n  helper-text-01: $helper-text-01,\\n  body-short-01: $body-short-01,\\n  body-short-02: $body-short-02,\\n  body-long-01: $body-long-01,\\n  body-long-02: $body-long-02,\\n  code-01: $code-01,\\n  code-02: $code-02,\\n  heading-01: $heading-01,\\n  heading-02: $heading-02,\\n  productive-heading-01: $productive-heading-01,\\n  productive-heading-02: $productive-heading-02,\\n  productive-heading-03: $productive-heading-03,\\n  productive-heading-04: $productive-heading-04,\\n  productive-heading-05: $productive-heading-05,\\n  productive-heading-06: $productive-heading-06,\\n  productive-heading-07: $productive-heading-07,\\n  expressive-paragraph-01: $expressive-paragraph-01,\\n  expressive-heading-01: $expressive-heading-01,\\n  expressive-heading-02: $expressive-heading-02,\\n  expressive-heading-03: $expressive-heading-03,\\n  expressive-heading-04: $expressive-heading-04,\\n  expressive-heading-05: $expressive-heading-05,\\n  expressive-heading-06: $expressive-heading-06,\\n  quotation-01: $quotation-01,\\n  quotation-02: $quotation-02,\\n  display-01: $display-01,\\n  display-02: $display-02,\\n  display-03: $display-03,\\n  display-04: $display-04,\\n);\\n\\n/// @param {Map} $map\\n/// @access public\\n/// @group @carbon/type\\n@mixin properties($map) {\\n  @each $name, $value in $map {\\n    #{$name}: $value;\\n  }\\n}\\n\\n/// @param {Number} $value - Number with units\\n/// @return {Number} Without units\\n/// @access public\\n/// @group @carbon/type\\n@function strip-unit($value) {\\n  @return $value / ($value * 0 + 1);\\n}\\n\\n/// This helper includes fluid type styles for the given token value. Fluid type\\n/// means that the `font-size` is computed using `calc()` in order to be\\n/// determined by the screen size instead of a breakpoint. As a result, fluid\\n/// styles should be used with caution in fixed width contexts.\\n///\\n/// In addition, we make use of %-based line-heights so that the line-height of\\n/// each type style is computed correctly due to the dynamic nature of the\\n/// `font-size`.\\n///\\n/// Most of the logic for this work comes from CSS Tricks:\\n/// https://css-tricks.com/snippets/css/fluid-typography/\\n///\\n/// @param {Map} $type-styles - The value of a given type token\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\\n  // Include the initial styles for the given token by default without any\\n  // media query guard. This includes `font-size` as a fallback in the case\\n  // that a browser does not support `calc()`\\n  @include properties(map-remove($type-styles, breakpoints));\\n  // We also need to include the `sm` styles by default since they don't\\n  // appear in the fluid styles for tokens\\n  @include fluid-type-size($type-styles, sm, $breakpoints);\\n\\n  // Finally, we need to go through all the breakpoints defined in the type\\n  // token and apply the properties and fluid type size for that given\\n  // breakpoint\\n  @each $name, $values in map-get($type-styles, breakpoints) {\\n    @include carbon--breakpoint($name) {\\n      @include properties($values);\\n      @include fluid-type-size($type-styles, $name, $breakpoints);\\n    }\\n  }\\n}\\n\\n/// Computes the fluid `font-size` for a given type style and breakpoint\\n/// @param {Map} $type-styles - The styles for a given token\\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\\n/// @access public\\n/// @group @carbon/type\\n@mixin fluid-type-size(\\n  $type-styles,\\n  $name,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  // Get the information about the breakpoint we're currently working in. Useful\\n  // for getting initial width information\\n  $breakpoint: map-get($breakpoints, $name);\\n\\n  // Our fluid styles are captured under the 'breakpoints' property in our type\\n  // styles map. These define what values to treat as `max-` variables below\\n  $fluid-sizes: map-get($type-styles, breakpoints);\\n  $fluid-breakpoint: ();\\n  // Special case for `sm` because the styles for small are on the type style\\n  // directly\\n  @if $name == sm {\\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\\n  } @else {\\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\\n  }\\n\\n  // Initialize our font-sizes to the default size for the type style\\n  $max-font-size: map-get($type-styles, font-size);\\n  $min-font-size: map-get($type-styles, font-size);\\n  @if map-has-key($fluid-breakpoint, font-size) {\\n    $min-font-size: map-get($fluid-breakpoint, font-size);\\n  }\\n\\n  // Initialize our min and max width to the width of the current breakpoint\\n  $max-vw: map-get($breakpoint, width);\\n  $min-vw: map-get($breakpoint, width);\\n\\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\\n  // use to update `max-font-size` and `max-vw` with larger values\\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\\n  $next-fluid-breakpoint-name: null;\\n\\n  // We need to figure out what the next available fluid breakpoint is for our\\n  // given $type-styles. In this loop we try and iterate through breakpoints\\n  // until we either manually set $next-breakpoint-available to null or\\n  // `breakpoint-next` returns null.\\n  @while $next-breakpoint-available {\\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\\n      $next-breakpoint-available: null;\\n    } @else {\\n      $next-breakpoint-available: carbon--breakpoint-next(\\n        $next-breakpoint-available,\\n        $breakpoints\\n      );\\n    }\\n  }\\n\\n  // If we have found the next available fluid breakpoint name, then we know\\n  // that we have values that we can use to set max-font-size and max-vw as both\\n  // values derive from the next breakpoint\\n  @if $next-fluid-breakpoint-name {\\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\\n    $max-font-size: map-get(\\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\\n      font-size\\n    );\\n    $max-vw: map-get($next-fluid-breakpoint, width);\\n\\n    // prettier-ignore\\n    font-size: calc(#{$min-font-size} +\\n      #{strip-unit($max-font-size - $min-font-size)} *\\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\\n    );\\n  } @else {\\n    // Otherwise, just default to setting the font size found from the type\\n    // style or the given fluid breakpoint in the type style\\n    font-size: $min-font-size;\\n  }\\n}\\n\\n// TODO move following variable and `custom-property` mixin into shared file for\\n// both `@carbon/type` and `@carbon/themes`\\n\\n/// @access private\\n/// @group @carbon/type\\n$custom-property-prefix: 'cds' !default;\\n\\n/// @access private\\n/// @group @carbon/type\\n@mixin custom-properties($name, $value) {\\n  @each $property, $value in $value {\\n    #{$property}: var(\\n      --#{$custom-property-prefix}-#{$name}-#{$property},\\n      #{$value}\\n    );\\n  }\\n}\\n\\n/// Helper mixin to include the styles for a given token in any selector in your\\n/// project. Also includes an optional fluid option that will enable fluid\\n/// styles for the token if they are defined. Fluid styles will cause the\\n/// token's font-size to be computed based on the viewport size. As a result, use\\n/// with caution in fixed contexts.\\n/// @param {String} $name - The name of the token to get the styles for\\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\\n/// @access public\\n/// @group @carbon/type\\n@mixin carbon--type-style(\\n  $name,\\n  $fluid: false,\\n  $breakpoints: $carbon--grid-breakpoints\\n) {\\n  @if not map-has-key($tokens, $name) {\\n    @error 'Unable to find a token with the name: `#{$name}`';\\n  }\\n\\n  $token: map-get($tokens, $name);\\n\\n  // If $fluid is set to true and the token has breakpoints defined for fluid\\n  // styles, delegate to the fluid-type helper for the given token\\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\\n    @include fluid-type($token, $breakpoints);\\n  } @else {\\n    @if global-variable-exists('feature-flags') and\\n      map-get($feature-flags, 'enable-css-custom-properties')\\n    {\\n      @include custom-properties($name, $token);\\n    } @else {\\n      // Otherwise, we just include all the property declarations directly on the\\n      // selector\\n      @include properties(map-remove($token, 'breakpoints'));\\n    }\\n  }\\n}\\n\",\"@import \\\"../style.scss\\\";\\n\\n.modalContent {\\n  width: 100%;\\n  background-color: #f4f4f4;\\n}\\n\\n.modalHeader {\\n  margin: 1rem;\\n}\\n\\n.patientListList {\\n  padding: 0 1rem;\\n}\\n\\n.largeButtons {\\n  padding-bottom: 2rem;\\n}\\n\\n.checkbox {\\n  padding-bottom: 0.875rem;\\n}\\n\\n.pagination {\\n  width: 100%;\\n  overflow: hidden;\\n}\\n\\n.paginationContainer {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  position: relative;\\n}\\n\\n.itemsCountDisplay {\\n  position: absolute;\\n  top: 0;\\n  left: 1rem;\\n  height: 3rem;\\n  display: flex;\\n  align-items: center;\\n  color: #525252\\n}\\n\\n.pagination > div:first-child {\\n  visibility: hidden;\\n  width: 0;\\n}\\n\\n.buttonSet {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: flex-start;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"productiveHeading02\": \"-esm-patient-list__add-patient__productiveHeading02___pqPL2\",\n\t\"productiveHeading03\": \"-esm-patient-list__add-patient__productiveHeading03___tEmC1\",\n\t\"productiveHeading04\": \"-esm-patient-list__add-patient__productiveHeading04___UU262\",\n\t\"bodyLong01\": \"-esm-patient-list__add-patient__bodyLong01___lHVdb\",\n\t\"bodyShort01\": \"-esm-patient-list__add-patient__bodyShort01___U+zw6\",\n\t\"bodyShort02\": \"-esm-patient-list__add-patient__bodyShort02___9tG7c\",\n\t\"text02\": \"-esm-patient-list__add-patient__text02___mcxkW\",\n\t\"label01\": \"-esm-patient-list__add-patient__label01___g4Hyx\",\n\t\"modal\": \"-esm-patient-list__add-patient__modal___Q2+K8\",\n\t\"modalContent\": \"-esm-patient-list__add-patient__modalContent___LO+sA\",\n\t\"modalHeader\": \"-esm-patient-list__add-patient__modalHeader___fqvlA\",\n\t\"patientListList\": \"-esm-patient-list__add-patient__patientListList___Z12QR\",\n\t\"largeButtons\": \"-esm-patient-list__add-patient__largeButtons___Hs4Fz\",\n\t\"checkbox\": \"-esm-patient-list__add-patient__checkbox___73-sG\",\n\t\"pagination\": \"-esm-patient-list__add-patient__pagination___P+zJC\",\n\t\"paginationContainer\": \"-esm-patient-list__add-patient__paginationContainer___-XK-g\",\n\t\"itemsCountDisplay\": \"-esm-patient-list__add-patient__itemsCountDisplay___dlKde\",\n\t\"buttonSet\": \"-esm-patient-list__add-patient__buttonSet___ybKNb\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["_excluded","Checkbox","_ref","_ref2","className","id","labelText","_onChange","onChange","indeterminate","hideLabel","wrapperClassName","_ref$title","title","other","enabled","prefix","usePrefix","labelClasses","concat","innerLabelClasses","wrapperClasses","type","evt","checked","target","ref","el","Object","current","htmlFor","Text","propTypes","defaultChecked","disabled","deprecate","defaultProps","displayName","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","undefined","closeModal","patientUuid","t","useTranslation","searchValue","setSearchValue","useState","userId","useSessionUser","user","uuid","data","isFetching","useGetAllPatientListsWithoutPatientQuery","patientListsObj","setPatientListsObj","useEffect","newPatientListsObj","patientList","visible","selected","name","display","handleChange","useCallback","e","handleClose","handleSubmit","keys","forEach","patientListUuid","addPatientToLocalOrRemotePatientList","patient","cohort","startDate","toOmrsIsoString","Date","then","showToast","kind","description","catch","searchResults","useMemo","trim","search","toLowerCase","filter","includes","results","goTo","currentPage","paginated","usePagination","styles","style","margin","marginBottom","Search","backgroundColor","borderBottom","placeholder","value","length","map","ind","key","SkeletonText","Pagination","forwardText","backwardText","page","pageSize","pageSizes","totalItems","Button","onClick","randoms","getRandomInt","min","max","n","Math","floor","_classNames","paragraph","lineCount","width","heading","skeletonTextClasses","widthNum","parseInt","widthPx","lines","i","randomWidth","push","_lines","j","_randomWidth","___CSS_LOADER_EXPORT___","module","locals"],"sourceRoot":""}