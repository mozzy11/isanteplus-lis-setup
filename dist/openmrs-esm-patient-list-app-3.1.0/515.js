"use strict";(self.webpackChunk_openmrs_esm_patient_list_app=self.webpackChunk_openmrs_esm_patient_list_app||[]).push([[515],{7515:(e,n,t)=>{t.r(n),t.d(n,{default:()=>P});var a=t(9902),i=t.n(a),o=t(4924),s=t(9035),r=t(5191),l=t(7896),p=t(6666),c=t(9740),d=t(3980),g=t.n(d),h=t(2779),b=t.n(h),u=t(3467),f=t(309),m=t(3597),y=t(330),_=["className","id","labelText","onChange","indeterminate","hideLabel","wrapperClassName","title"],A=i().forwardRef((function(e,n){var t=e.className,a=e.id,o=e.labelText,s=e.onChange,r=e.indeterminate,d=e.hideLabel,g=e.wrapperClassName,h=e.title,m=void 0===h?"":h,A=(0,c.Z)(e,_),$=(0,f.ye)("enable-v11-release"),k=(0,y.A)(),v=b()("".concat(k,"--checkbox-label"),[$?null:t]),x=b()("".concat(k,"--checkbox-label-text"),(0,p.Z)({},"".concat(k,"--visually-hidden"),d)),C=b()("".concat(k,"--form-item"),"".concat(k,"--checkbox-wrapper"),[$?t:g]);return i().createElement("div",{className:C},i().createElement("input",(0,l.Z)({},A,{type:"checkbox",onChange:function(e){$?s(e,{checked:e.target.checked,id:a}):s(e.target.checked,a,e)},className:"".concat(k,"--checkbox"),id:a,ref:function(e){e&&(e.indeterminate=r),"function"==typeof n?n(e):Object(n)===n&&(n.current=e)}})),i().createElement("label",{htmlFor:a,className:v,title:m||null},i().createElement(u.x,{className:x},o)))}));A.propTypes={checked:g().bool,className:g().string,defaultChecked:g().bool,disabled:g().bool,hideLabel:g().bool,id:g().string.isRequired,indeterminate:g().bool,labelText:g().node.isRequired,onChange:g().func,title:g().string,wrapperClassName:(0,m.Z)(g().string,"\nThe prop `wrapperClassName` for Checkbox will be deprecated in V11 in favor of `className`. `className` will then be placed on the outer wrapper.")},A.defaultProps={onChange:function(){},indeterminate:!1},A.displayName="Checkbox";const $=A;var k=t(5300),v=t(5787),x=t(7975),C=t(7030),w=t(6062),z=t.n(w),B=t(4036),L=t.n(B),E=t(6793),q=t.n(E),M=t(7892),N=t.n(M),T=t(1173),D=t.n(T),S=t(2464),H=t.n(S),Z=t(2265),F={};F.styleTagTransform=H(),F.setAttributes=N(),F.insert=q().bind(null,"head"),F.domAPI=L(),F.insertStyleElement=D(),z()(Z.Z,F);const I=Z.Z&&Z.Z.locals?Z.Z.locals:void 0,P=e=>{let{closeModal:n,patientUuid:t}=e;const{t:l}=(0,o.useTranslation)(),[p,c]=(0,a.useState)(""),d=(0,s.useSessionUser)()?.user.uuid,{data:g,isFetching:h}=(0,r.CF)(d,t),[b,u]=(0,a.useState)(null);(0,a.useEffect)((()=>{if(g){const e={};for(const n of g)e[n.id]={visible:!0,selected:!1,name:n?.display};u(e)}}),[g]);const f=(0,a.useCallback)(((e,n)=>{u((t=>({...t,[e]:{...t[e],selected:n}})))}),[]),m=(0,a.useCallback)((()=>{n()}),[]),y=(0,a.useCallback)((()=>{Object.keys(b).forEach((e=>{b[e].selected&&(0,r.UK)(d,{patient:t,cohort:e,startDate:(0,s.toOmrsIsoString)(new Date)}).then((()=>(0,s.showToast)({title:l("successfullyAdded","Successfully added"),kind:"success",description:`${l("successAddPatientToList","Patient added to list")}: ${b[e].name}`}))).catch((()=>(0,s.showToast)({title:l("error","Error"),kind:"error",description:`${l("errorAddPatientToList","Patient not added to list")}: ${b[e].name}`})))})),m()}),[b]),_=(0,a.useMemo)((()=>{if(g&&b){if(p&&""!==p.trim()){const e=p.toLowerCase();return g.filter((n=>b[n.id]?.visible&&n.display.toLowerCase().includes(e)))}return g.filter((e=>b[e.id]?.visible))}return[]}),[p,g,b]),{results:A,goTo:w,currentPage:z,paginated:B}=(0,s.usePagination)(_,5);return(0,a.useEffect)((()=>{1!==z&&w(1)}),[p]),i().createElement("div",{className:I.modalContent},i().createElement("div",{className:I.modalHeader},i().createElement("h1",{className:I.productiveHeading03},l("addPatientToList","Add patient to list")),i().createElement("h3",{className:I.bodyLong01,style:{margin:"1rem 0"}},l("searchForAListToAddThisPatientTo","Search for a list to add this patient to."))),i().createElement("div",{style:{marginBottom:"0.875rem"}},i().createElement(k.Z,{style:{backgroundColor:"white",borderBottom:"1px solid #e0e0e0"},labelText:l("searchForList","Search for a list"),placeholder:"Filter list",onChange:e=>{let{target:n}=e;c(n.value)},value:p})),i().createElement("div",{className:I.patientListList},i().createElement("fieldset",{className:"bx--fieldset"},i().createElement("p",{className:"bx--label"},"Patient Lists"),!h&&b&&A?A.length>0?A.map(((e,n)=>i().createElement("div",{key:n,className:I.checkbox},i().createElement($,{key:n,onChange:n=>f(e.id,n),checked:b[e.id]?.selected,labelText:e.display,id:e.id})))):i().createElement("p",{className:I.bodyLong01},l("noPatientListFound","No patient list found")):i().createElement(v.Z,null))),B&&i().createElement("div",{className:I.paginationContainer},i().createElement("span",{className:`${I.itemsCountDisplay} ${I.bodyLong01}`},A.length*z," / ",_.length," ",l("items","items")),i().createElement(x.Z,{className:I.pagination,forwardText:"",backwardText:"",page:z,pageSize:5,pageSizes:[5],totalItems:_.length,onChange:e=>{let{page:n}=e;return w(n)}})),i().createElement("div",{className:I.buttonSet},i().createElement(C.Z,{kind:"ghost"},l("createNewPatientList","Create new patient list")),i().createElement("div",null,i().createElement(C.Z,{kind:"secondary",className:I.largeButtons,onClick:m},l("cancel","Cancel")),i().createElement(C.Z,{onClick:y,className:I.largeButtons},l("addToList","Add to list")))))}},5787:(e,n,t)=>{t.d(n,{Z:()=>m});var a=t(7896),i=t(6666),o=t(9740),s=t(3980),r=t.n(s),l=t(9902),p=t.n(l),c=t(2779),d=t.n(c),g=t(330),h=["paragraph","lineCount","width","heading","className"],b=[.973051493507435,.15334737213558558,.5671034553053769];function u(e,n,t){return Math.floor(b[t%3]*(n-e+1))+e}var f=function(e){var n,t=e.paragraph,s=e.lineCount,r=e.width,l=e.heading,c=e.className,b=(0,o.Z)(e,h),f=(0,g.A)(),m=d()((n={},(0,i.Z)(n,"".concat(f,"--skeleton__text"),!0),(0,i.Z)(n,"".concat(f,"--skeleton__heading"),l),(0,i.Z)(n,c,c),n)),y=parseInt(r,10),_=r.includes("px");if(r.includes("%")&&t){for(var A=[],$=0;$<s;$++){var k=u(0,75,$)+"px";A.push(p().createElement("p",(0,a.Z)({className:m,style:{width:"calc(".concat(r," - ").concat(k,")")},key:$},b)))}return p().createElement("div",null,A)}if(_&&t){for(var v=[],x=0;x<s;x++){var C=u(y-75,y,x)+"px";v.push(p().createElement("p",(0,a.Z)({className:m,style:{width:C},key:x},b)))}return p().createElement("div",null,v)}return p().createElement("p",(0,a.Z)({className:m,style:{width:r}},b))};f.propTypes={className:r().string,heading:r().bool,lineCount:r().number,paragraph:r().bool,width:r().string},f.defaultProps={paragraph:!1,width:"100%",heading:!1,lineCount:3};const m=f},2265:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(1799),i=t.n(a),o=t(2609),s=t.n(o)()(i());s.push([e.id,":root{--brand-01: #005d5d;--brand-02: #004144;--brand-03: #007d79}.-esm-patient-list__add-patient__productiveHeading02___pqPL2{font-size:1rem;font-weight:600;line-height:1.375;letter-spacing:0}.-esm-patient-list__add-patient__productiveHeading03___tEmC1{font-size:1.25rem;font-weight:400;line-height:1.4;letter-spacing:0}.-esm-patient-list__add-patient__productiveHeading04___UU262{font-size:1.75rem;font-weight:400;line-height:1.29;letter-spacing:0}.-esm-patient-list__add-patient__bodyLong01___lHVdb{font-size:.875rem;font-weight:400;line-height:1.43;letter-spacing:.16px}.-esm-patient-list__add-patient__bodyShort01___U\\+zw6{font-size:.875rem;font-weight:400;line-height:1.29;letter-spacing:.16px}.-esm-patient-list__add-patient__bodyShort02___9tG7c{font-size:1rem;font-weight:400;line-height:1.375;letter-spacing:0}.-esm-patient-list__add-patient__text02___mcxkW{color:#525252}.-esm-patient-list__add-patient__label01___g4Hyx{font-size:.75rem;font-weight:400;line-height:1.34;letter-spacing:.32px}.-esm-patient-list__add-patient__modal___Q2\\+K8{position:fixed;width:100vw;height:100vh;display:grid;background-color:rgba(0,0,0,.5);z-index:9000;justify-items:center;align-items:center}.-esm-patient-list__add-patient__modalContent___LO\\+sA{width:100%;background-color:#f4f4f4}.-esm-patient-list__add-patient__modalHeader___fqvlA{margin:1rem}.-esm-patient-list__add-patient__patientListList___Z12QR{padding:0 1rem}.-esm-patient-list__add-patient__largeButtons___Hs4Fz{padding-bottom:2rem}.-esm-patient-list__add-patient__checkbox___73-sG{padding-bottom:.875rem}.-esm-patient-list__add-patient__pagination___P\\+zJC{width:100%;overflow:hidden}.-esm-patient-list__add-patient__paginationContainer___-XK-g{display:flex;justify-content:space-between;align-items:center;position:relative}.-esm-patient-list__add-patient__itemsCountDisplay___dlKde{position:absolute;top:0;left:1rem;height:3rem;display:flex;align-items:center;color:#525252}.-esm-patient-list__add-patient__pagination___P\\+zJC>div:first-child{visibility:hidden;width:0}.-esm-patient-list__add-patient__buttonSet___ybKNb{display:flex;justify-content:space-between;align-items:flex-start}","",{version:3,sources:["webpack://./../../node_modules/@openmrs/esm-styleguide/src/_vars.scss","webpack://./src/style.scss","webpack://./../../node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","webpack://./src/add-patient/add-patient.scss"],names:[],mappings:"AAyCA,MACE,mBAAA,CACA,mBAAA,CACA,mBAAA,CCxCF,6DC2gBI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CD5rB1B,6DCugBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CDxrB1B,6DCmgBI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,gBAqLsB,CDprB1B,oDC+fI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDhrB1B,sDC2fI,iBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CD5qB1B,qDCufI,cAqLsB,CArLtB,eAqLsB,CArLtB,iBAqLsB,CArLtB,gBAqLsB,CDxqB1B,gDACE,aDxBQ,CC2BV,iDC+eI,gBAqLsB,CArLtB,eAqLsB,CArLtB,gBAqLsB,CArLtB,oBAqLsB,CDhqB1B,gDACE,cAAA,CACA,WAAA,CACA,YAAA,CACA,YAAA,CACA,+BAAA,CACA,YAAA,CACA,oBAAA,CACA,kBAAA,CE1CF,uDACE,UAAA,CACA,wBAAA,CAGF,qDACE,WAAA,CAGF,yDACE,cAAA,CAGF,sDACE,mBAAA,CAGF,kDACE,sBAAA,CAGF,qDACE,UAAA,CACA,eAAA,CAGF,6DACE,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,iBAAA,CAGF,2DACE,iBAAA,CACA,KAAA,CACA,SAAA,CACA,WAAA,CACA,YAAA,CACA,kBAAA,CACA,aAAA,CAGF,qEACE,iBAAA,CACA,OAAA,CAGF,mDACE,YAAA,CACA,6BAAA,CACA,sBAAA",sourcesContent:["$ui-01: #f4f4f4;\n$ui-02: #ffffff;\n$ui-03: #e0e0e0;\n$ui-04: #8d8d8d;\n$ui-05: #161616;\n$text-02: #525252;\n$text-03: #a8a8a8;\n$ui-background: #ffffff;\n$color-gray-30: #c6c6c6;\n$color-gray-70: #525252;\n$color-gray-100: #161616;\n$color-blue-60-2: #0f62fe;\n$color-blue-10: #edf5ff;\n$color-yellow-50: #feecae;\n$carbon--red-50: #fa4d56;\n$inverse-link: #78a9ff;\n$support-02: #24a148;\n$inverse-support-03: #f1c21b;\n$warning-background: #fff8e1;\n$openmrs-background-grey: #f4f4f4;\n$danger: #da1e28;\n$interactive-01: #0f62fe;\n$field-01: #f4f4f4;\n$grey-2: #e0e0e0;\n$labeldropdown: #c6c6c6;\n\n@mixin brand-01($property) {\n  #{$property}: #005d5d;\n  #{$property}: var(--brand-01);\n}\n\n@mixin brand-02($property) {\n  #{$property}: #004144;\n  #{$property}: var(--brand-02);\n}\n\n@mixin brand-03($property) {\n  #{$property}: #007d79;\n  #{$property}: var(--brand-03);\n}\n\n:root {\n  --brand-01: #005d5d;\n  --brand-02: #004144;\n  --brand-03: #007d79;\n}\n\n$breakpoint-phone-min: 0px;\n$breakpoint-phone-max: 600px;\n$breakpoint-tablet-min: 601px;\n$breakpoint-tablet-max: 1200px;\n$breakpoint-desktop-min: 1201px;\n$breakpoint-desktop-max: 99999999px;\n\n/* These color variables will be removed in a future release */\n$brand-teal-01: #007d79;\n$brand-01: #005d5d;\n$brand-02: #004144;\n",'@import "~carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/styles";\n@import "~carbon-components/src/globals/scss/vendor/@carbon/layout/scss/generated/spacing";\n@import "~@openmrs/esm-styleguide/src/vars";\n\n.productiveHeading02 {\n  @include carbon--type-style("productive-heading-02");\n}\n\n.productiveHeading03 {\n  @include carbon--type-style("productive-heading-03");\n}\n\n.productiveHeading04 {\n  @include carbon--type-style("productive-heading-04");\n}\n\n.bodyLong01 {\n  @include carbon--type-style("body-long-01");\n}\n\n.bodyShort01 {\n  @include carbon--type-style("body-short-01");\n}\n\n.bodyShort02 {\n  @include carbon--type-style("body-short-02");\n}\n\n.text02 {\n  color: $text-02;\n}\n\n.label01 {\n  @include carbon--type-style("label-01")\n}\n\n.modal {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  display: grid;\n  background-color: rgba(0,0,0,0.5);\n  z-index: 9000;\n  justify-items: center;\n  align-items: center;\n}\n',"//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.5,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.34,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.43,\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.29,\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.375,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  // Extra digit needed for precision in Chrome\n  line-height: 1.199,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: 1.25,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: 1.5,\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.4,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.29,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.25,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      font-weight: carbon--font-weight('light'),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.334,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 1.3,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 1.334,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 1.29,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 1.25,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.25,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 1.22,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 1.19,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.17,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 1.16,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 1.13,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 1.19,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 1.15,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 1.11,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 1.07,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 1.05,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n",'@import "../style.scss";\n\n.modalContent {\n  width: 100%;\n  background-color: #f4f4f4;\n}\n\n.modalHeader {\n  margin: 1rem;\n}\n\n.patientListList {\n  padding: 0 1rem;\n}\n\n.largeButtons {\n  padding-bottom: 2rem;\n}\n\n.checkbox {\n  padding-bottom: 0.875rem;\n}\n\n.pagination {\n  width: 100%;\n  overflow: hidden;\n}\n\n.paginationContainer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n}\n\n.itemsCountDisplay {\n  position: absolute;\n  top: 0;\n  left: 1rem;\n  height: 3rem;\n  display: flex;\n  align-items: center;\n  color: #525252\n}\n\n.pagination > div:first-child {\n  visibility: hidden;\n  width: 0;\n}\n\n.buttonSet {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n'],sourceRoot:""}]),s.locals={productiveHeading02:"-esm-patient-list__add-patient__productiveHeading02___pqPL2",productiveHeading03:"-esm-patient-list__add-patient__productiveHeading03___tEmC1",productiveHeading04:"-esm-patient-list__add-patient__productiveHeading04___UU262",bodyLong01:"-esm-patient-list__add-patient__bodyLong01___lHVdb",bodyShort01:"-esm-patient-list__add-patient__bodyShort01___U+zw6",bodyShort02:"-esm-patient-list__add-patient__bodyShort02___9tG7c",text02:"-esm-patient-list__add-patient__text02___mcxkW",label01:"-esm-patient-list__add-patient__label01___g4Hyx",modal:"-esm-patient-list__add-patient__modal___Q2+K8",modalContent:"-esm-patient-list__add-patient__modalContent___LO+sA",modalHeader:"-esm-patient-list__add-patient__modalHeader___fqvlA",patientListList:"-esm-patient-list__add-patient__patientListList___Z12QR",largeButtons:"-esm-patient-list__add-patient__largeButtons___Hs4Fz",checkbox:"-esm-patient-list__add-patient__checkbox___73-sG",pagination:"-esm-patient-list__add-patient__pagination___P+zJC",paginationContainer:"-esm-patient-list__add-patient__paginationContainer___-XK-g",itemsCountDisplay:"-esm-patient-list__add-patient__itemsCountDisplay___dlKde",buttonSet:"-esm-patient-list__add-patient__buttonSet___ybKNb"};const r=s}}]);
//# sourceMappingURL=515.js.map